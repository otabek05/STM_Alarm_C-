
Project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00015f30  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000c64  080160c0  080160c0  000260c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08016d24  08016d24  0003022c  2**0
                  CONTENTS
  4 .ARM          00000008  08016d24  08016d24  00026d24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08016d2c  08016d2c  0003022c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08016d2c  08016d2c  00026d2c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  08016d34  08016d34  00026d34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000022c  20000000  08016d3c  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0003022c  2**0
                  CONTENTS
 10 .bss          00002ef0  2000022c  2000022c  0003022c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000311c  2000311c  0003022c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0003022c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0003025c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00059bf3  00000000  00000000  0003029f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000080ff  00000000  00000000  00089e92  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00002010  00000000  00000000  00091f98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000194e  00000000  00000000  00093fa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0002ce80  00000000  00000000  000958f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0002b108  00000000  00000000  000c2776  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000f75e8  00000000  00000000  000ed87e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000b484  00000000  00000000  001e4e68  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000053  00000000  00000000  001f02ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000022c 	.word	0x2000022c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080160a8 	.word	0x080160a8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000230 	.word	0x20000230
 80001cc:	080160a8 	.word	0x080160a8

080001d0 <strcmp>:
 80001d0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001d4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001d8:	2a01      	cmp	r2, #1
 80001da:	bf28      	it	cs
 80001dc:	429a      	cmpcs	r2, r3
 80001de:	d0f7      	beq.n	80001d0 <strcmp>
 80001e0:	1ad0      	subs	r0, r2, r3
 80001e2:	4770      	bx	lr
	...

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_d2uiz>:
 8000bc8:	004a      	lsls	r2, r1, #1
 8000bca:	d211      	bcs.n	8000bf0 <__aeabi_d2uiz+0x28>
 8000bcc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bd0:	d211      	bcs.n	8000bf6 <__aeabi_d2uiz+0x2e>
 8000bd2:	d50d      	bpl.n	8000bf0 <__aeabi_d2uiz+0x28>
 8000bd4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bd8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bdc:	d40e      	bmi.n	8000bfc <__aeabi_d2uiz+0x34>
 8000bde:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000be2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000be6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bea:	fa23 f002 	lsr.w	r0, r3, r2
 8000bee:	4770      	bx	lr
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bfa:	d102      	bne.n	8000c02 <__aeabi_d2uiz+0x3a>
 8000bfc:	f04f 30ff 	mov.w	r0, #4294967295
 8000c00:	4770      	bx	lr
 8000c02:	f04f 0000 	mov.w	r0, #0
 8000c06:	4770      	bx	lr

08000c08 <__aeabi_uldivmod>:
 8000c08:	b953      	cbnz	r3, 8000c20 <__aeabi_uldivmod+0x18>
 8000c0a:	b94a      	cbnz	r2, 8000c20 <__aeabi_uldivmod+0x18>
 8000c0c:	2900      	cmp	r1, #0
 8000c0e:	bf08      	it	eq
 8000c10:	2800      	cmpeq	r0, #0
 8000c12:	bf1c      	itt	ne
 8000c14:	f04f 31ff 	movne.w	r1, #4294967295
 8000c18:	f04f 30ff 	movne.w	r0, #4294967295
 8000c1c:	f000 b9a6 	b.w	8000f6c <__aeabi_idiv0>
 8000c20:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c24:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c28:	f000 f83c 	bl	8000ca4 <__udivmoddi4>
 8000c2c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c30:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c34:	b004      	add	sp, #16
 8000c36:	4770      	bx	lr

08000c38 <__aeabi_d2lz>:
 8000c38:	b538      	push	{r3, r4, r5, lr}
 8000c3a:	2200      	movs	r2, #0
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	4604      	mov	r4, r0
 8000c40:	460d      	mov	r5, r1
 8000c42:	f7ff ff5b 	bl	8000afc <__aeabi_dcmplt>
 8000c46:	b928      	cbnz	r0, 8000c54 <__aeabi_d2lz+0x1c>
 8000c48:	4620      	mov	r0, r4
 8000c4a:	4629      	mov	r1, r5
 8000c4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c50:	f000 b80a 	b.w	8000c68 <__aeabi_d2ulz>
 8000c54:	4620      	mov	r0, r4
 8000c56:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000c5a:	f000 f805 	bl	8000c68 <__aeabi_d2ulz>
 8000c5e:	4240      	negs	r0, r0
 8000c60:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c64:	bd38      	pop	{r3, r4, r5, pc}
 8000c66:	bf00      	nop

08000c68 <__aeabi_d2ulz>:
 8000c68:	b5d0      	push	{r4, r6, r7, lr}
 8000c6a:	4b0c      	ldr	r3, [pc, #48]	; (8000c9c <__aeabi_d2ulz+0x34>)
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	4606      	mov	r6, r0
 8000c70:	460f      	mov	r7, r1
 8000c72:	f7ff fcd1 	bl	8000618 <__aeabi_dmul>
 8000c76:	f7ff ffa7 	bl	8000bc8 <__aeabi_d2uiz>
 8000c7a:	4604      	mov	r4, r0
 8000c7c:	f7ff fc52 	bl	8000524 <__aeabi_ui2d>
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <__aeabi_d2ulz+0x38>)
 8000c82:	2200      	movs	r2, #0
 8000c84:	f7ff fcc8 	bl	8000618 <__aeabi_dmul>
 8000c88:	4602      	mov	r2, r0
 8000c8a:	460b      	mov	r3, r1
 8000c8c:	4630      	mov	r0, r6
 8000c8e:	4639      	mov	r1, r7
 8000c90:	f7ff fb0a 	bl	80002a8 <__aeabi_dsub>
 8000c94:	f7ff ff98 	bl	8000bc8 <__aeabi_d2uiz>
 8000c98:	4621      	mov	r1, r4
 8000c9a:	bdd0      	pop	{r4, r6, r7, pc}
 8000c9c:	3df00000 	.word	0x3df00000
 8000ca0:	41f00000 	.word	0x41f00000

08000ca4 <__udivmoddi4>:
 8000ca4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ca8:	9e08      	ldr	r6, [sp, #32]
 8000caa:	460d      	mov	r5, r1
 8000cac:	4604      	mov	r4, r0
 8000cae:	460f      	mov	r7, r1
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d14a      	bne.n	8000d4a <__udivmoddi4+0xa6>
 8000cb4:	428a      	cmp	r2, r1
 8000cb6:	4694      	mov	ip, r2
 8000cb8:	d965      	bls.n	8000d86 <__udivmoddi4+0xe2>
 8000cba:	fab2 f382 	clz	r3, r2
 8000cbe:	b143      	cbz	r3, 8000cd2 <__udivmoddi4+0x2e>
 8000cc0:	fa02 fc03 	lsl.w	ip, r2, r3
 8000cc4:	f1c3 0220 	rsb	r2, r3, #32
 8000cc8:	409f      	lsls	r7, r3
 8000cca:	fa20 f202 	lsr.w	r2, r0, r2
 8000cce:	4317      	orrs	r7, r2
 8000cd0:	409c      	lsls	r4, r3
 8000cd2:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000cd6:	fa1f f58c 	uxth.w	r5, ip
 8000cda:	fbb7 f1fe 	udiv	r1, r7, lr
 8000cde:	0c22      	lsrs	r2, r4, #16
 8000ce0:	fb0e 7711 	mls	r7, lr, r1, r7
 8000ce4:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000ce8:	fb01 f005 	mul.w	r0, r1, r5
 8000cec:	4290      	cmp	r0, r2
 8000cee:	d90a      	bls.n	8000d06 <__udivmoddi4+0x62>
 8000cf0:	eb1c 0202 	adds.w	r2, ip, r2
 8000cf4:	f101 37ff 	add.w	r7, r1, #4294967295
 8000cf8:	f080 811c 	bcs.w	8000f34 <__udivmoddi4+0x290>
 8000cfc:	4290      	cmp	r0, r2
 8000cfe:	f240 8119 	bls.w	8000f34 <__udivmoddi4+0x290>
 8000d02:	3902      	subs	r1, #2
 8000d04:	4462      	add	r2, ip
 8000d06:	1a12      	subs	r2, r2, r0
 8000d08:	b2a4      	uxth	r4, r4
 8000d0a:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d0e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d12:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d16:	fb00 f505 	mul.w	r5, r0, r5
 8000d1a:	42a5      	cmp	r5, r4
 8000d1c:	d90a      	bls.n	8000d34 <__udivmoddi4+0x90>
 8000d1e:	eb1c 0404 	adds.w	r4, ip, r4
 8000d22:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d26:	f080 8107 	bcs.w	8000f38 <__udivmoddi4+0x294>
 8000d2a:	42a5      	cmp	r5, r4
 8000d2c:	f240 8104 	bls.w	8000f38 <__udivmoddi4+0x294>
 8000d30:	4464      	add	r4, ip
 8000d32:	3802      	subs	r0, #2
 8000d34:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d38:	1b64      	subs	r4, r4, r5
 8000d3a:	2100      	movs	r1, #0
 8000d3c:	b11e      	cbz	r6, 8000d46 <__udivmoddi4+0xa2>
 8000d3e:	40dc      	lsrs	r4, r3
 8000d40:	2300      	movs	r3, #0
 8000d42:	e9c6 4300 	strd	r4, r3, [r6]
 8000d46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d4a:	428b      	cmp	r3, r1
 8000d4c:	d908      	bls.n	8000d60 <__udivmoddi4+0xbc>
 8000d4e:	2e00      	cmp	r6, #0
 8000d50:	f000 80ed 	beq.w	8000f2e <__udivmoddi4+0x28a>
 8000d54:	2100      	movs	r1, #0
 8000d56:	e9c6 0500 	strd	r0, r5, [r6]
 8000d5a:	4608      	mov	r0, r1
 8000d5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d60:	fab3 f183 	clz	r1, r3
 8000d64:	2900      	cmp	r1, #0
 8000d66:	d149      	bne.n	8000dfc <__udivmoddi4+0x158>
 8000d68:	42ab      	cmp	r3, r5
 8000d6a:	d302      	bcc.n	8000d72 <__udivmoddi4+0xce>
 8000d6c:	4282      	cmp	r2, r0
 8000d6e:	f200 80f8 	bhi.w	8000f62 <__udivmoddi4+0x2be>
 8000d72:	1a84      	subs	r4, r0, r2
 8000d74:	eb65 0203 	sbc.w	r2, r5, r3
 8000d78:	2001      	movs	r0, #1
 8000d7a:	4617      	mov	r7, r2
 8000d7c:	2e00      	cmp	r6, #0
 8000d7e:	d0e2      	beq.n	8000d46 <__udivmoddi4+0xa2>
 8000d80:	e9c6 4700 	strd	r4, r7, [r6]
 8000d84:	e7df      	b.n	8000d46 <__udivmoddi4+0xa2>
 8000d86:	b902      	cbnz	r2, 8000d8a <__udivmoddi4+0xe6>
 8000d88:	deff      	udf	#255	; 0xff
 8000d8a:	fab2 f382 	clz	r3, r2
 8000d8e:	2b00      	cmp	r3, #0
 8000d90:	f040 8090 	bne.w	8000eb4 <__udivmoddi4+0x210>
 8000d94:	1a8a      	subs	r2, r1, r2
 8000d96:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d9a:	fa1f fe8c 	uxth.w	lr, ip
 8000d9e:	2101      	movs	r1, #1
 8000da0:	fbb2 f5f7 	udiv	r5, r2, r7
 8000da4:	fb07 2015 	mls	r0, r7, r5, r2
 8000da8:	0c22      	lsrs	r2, r4, #16
 8000daa:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000dae:	fb0e f005 	mul.w	r0, lr, r5
 8000db2:	4290      	cmp	r0, r2
 8000db4:	d908      	bls.n	8000dc8 <__udivmoddi4+0x124>
 8000db6:	eb1c 0202 	adds.w	r2, ip, r2
 8000dba:	f105 38ff 	add.w	r8, r5, #4294967295
 8000dbe:	d202      	bcs.n	8000dc6 <__udivmoddi4+0x122>
 8000dc0:	4290      	cmp	r0, r2
 8000dc2:	f200 80cb 	bhi.w	8000f5c <__udivmoddi4+0x2b8>
 8000dc6:	4645      	mov	r5, r8
 8000dc8:	1a12      	subs	r2, r2, r0
 8000dca:	b2a4      	uxth	r4, r4
 8000dcc:	fbb2 f0f7 	udiv	r0, r2, r7
 8000dd0:	fb07 2210 	mls	r2, r7, r0, r2
 8000dd4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000dd8:	fb0e fe00 	mul.w	lr, lr, r0
 8000ddc:	45a6      	cmp	lr, r4
 8000dde:	d908      	bls.n	8000df2 <__udivmoddi4+0x14e>
 8000de0:	eb1c 0404 	adds.w	r4, ip, r4
 8000de4:	f100 32ff 	add.w	r2, r0, #4294967295
 8000de8:	d202      	bcs.n	8000df0 <__udivmoddi4+0x14c>
 8000dea:	45a6      	cmp	lr, r4
 8000dec:	f200 80bb 	bhi.w	8000f66 <__udivmoddi4+0x2c2>
 8000df0:	4610      	mov	r0, r2
 8000df2:	eba4 040e 	sub.w	r4, r4, lr
 8000df6:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000dfa:	e79f      	b.n	8000d3c <__udivmoddi4+0x98>
 8000dfc:	f1c1 0720 	rsb	r7, r1, #32
 8000e00:	408b      	lsls	r3, r1
 8000e02:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e06:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e0a:	fa05 f401 	lsl.w	r4, r5, r1
 8000e0e:	fa20 f307 	lsr.w	r3, r0, r7
 8000e12:	40fd      	lsrs	r5, r7
 8000e14:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e18:	4323      	orrs	r3, r4
 8000e1a:	fbb5 f8f9 	udiv	r8, r5, r9
 8000e1e:	fa1f fe8c 	uxth.w	lr, ip
 8000e22:	fb09 5518 	mls	r5, r9, r8, r5
 8000e26:	0c1c      	lsrs	r4, r3, #16
 8000e28:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000e2c:	fb08 f50e 	mul.w	r5, r8, lr
 8000e30:	42a5      	cmp	r5, r4
 8000e32:	fa02 f201 	lsl.w	r2, r2, r1
 8000e36:	fa00 f001 	lsl.w	r0, r0, r1
 8000e3a:	d90b      	bls.n	8000e54 <__udivmoddi4+0x1b0>
 8000e3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000e40:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e44:	f080 8088 	bcs.w	8000f58 <__udivmoddi4+0x2b4>
 8000e48:	42a5      	cmp	r5, r4
 8000e4a:	f240 8085 	bls.w	8000f58 <__udivmoddi4+0x2b4>
 8000e4e:	f1a8 0802 	sub.w	r8, r8, #2
 8000e52:	4464      	add	r4, ip
 8000e54:	1b64      	subs	r4, r4, r5
 8000e56:	b29d      	uxth	r5, r3
 8000e58:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e5c:	fb09 4413 	mls	r4, r9, r3, r4
 8000e60:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000e64:	fb03 fe0e 	mul.w	lr, r3, lr
 8000e68:	45a6      	cmp	lr, r4
 8000e6a:	d908      	bls.n	8000e7e <__udivmoddi4+0x1da>
 8000e6c:	eb1c 0404 	adds.w	r4, ip, r4
 8000e70:	f103 35ff 	add.w	r5, r3, #4294967295
 8000e74:	d26c      	bcs.n	8000f50 <__udivmoddi4+0x2ac>
 8000e76:	45a6      	cmp	lr, r4
 8000e78:	d96a      	bls.n	8000f50 <__udivmoddi4+0x2ac>
 8000e7a:	3b02      	subs	r3, #2
 8000e7c:	4464      	add	r4, ip
 8000e7e:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000e82:	fba3 9502 	umull	r9, r5, r3, r2
 8000e86:	eba4 040e 	sub.w	r4, r4, lr
 8000e8a:	42ac      	cmp	r4, r5
 8000e8c:	46c8      	mov	r8, r9
 8000e8e:	46ae      	mov	lr, r5
 8000e90:	d356      	bcc.n	8000f40 <__udivmoddi4+0x29c>
 8000e92:	d053      	beq.n	8000f3c <__udivmoddi4+0x298>
 8000e94:	b156      	cbz	r6, 8000eac <__udivmoddi4+0x208>
 8000e96:	ebb0 0208 	subs.w	r2, r0, r8
 8000e9a:	eb64 040e 	sbc.w	r4, r4, lr
 8000e9e:	fa04 f707 	lsl.w	r7, r4, r7
 8000ea2:	40ca      	lsrs	r2, r1
 8000ea4:	40cc      	lsrs	r4, r1
 8000ea6:	4317      	orrs	r7, r2
 8000ea8:	e9c6 7400 	strd	r7, r4, [r6]
 8000eac:	4618      	mov	r0, r3
 8000eae:	2100      	movs	r1, #0
 8000eb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000eb4:	f1c3 0120 	rsb	r1, r3, #32
 8000eb8:	fa02 fc03 	lsl.w	ip, r2, r3
 8000ebc:	fa20 f201 	lsr.w	r2, r0, r1
 8000ec0:	fa25 f101 	lsr.w	r1, r5, r1
 8000ec4:	409d      	lsls	r5, r3
 8000ec6:	432a      	orrs	r2, r5
 8000ec8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ecc:	fa1f fe8c 	uxth.w	lr, ip
 8000ed0:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ed4:	fb07 1510 	mls	r5, r7, r0, r1
 8000ed8:	0c11      	lsrs	r1, r2, #16
 8000eda:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000ede:	fb00 f50e 	mul.w	r5, r0, lr
 8000ee2:	428d      	cmp	r5, r1
 8000ee4:	fa04 f403 	lsl.w	r4, r4, r3
 8000ee8:	d908      	bls.n	8000efc <__udivmoddi4+0x258>
 8000eea:	eb1c 0101 	adds.w	r1, ip, r1
 8000eee:	f100 38ff 	add.w	r8, r0, #4294967295
 8000ef2:	d22f      	bcs.n	8000f54 <__udivmoddi4+0x2b0>
 8000ef4:	428d      	cmp	r5, r1
 8000ef6:	d92d      	bls.n	8000f54 <__udivmoddi4+0x2b0>
 8000ef8:	3802      	subs	r0, #2
 8000efa:	4461      	add	r1, ip
 8000efc:	1b49      	subs	r1, r1, r5
 8000efe:	b292      	uxth	r2, r2
 8000f00:	fbb1 f5f7 	udiv	r5, r1, r7
 8000f04:	fb07 1115 	mls	r1, r7, r5, r1
 8000f08:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f0c:	fb05 f10e 	mul.w	r1, r5, lr
 8000f10:	4291      	cmp	r1, r2
 8000f12:	d908      	bls.n	8000f26 <__udivmoddi4+0x282>
 8000f14:	eb1c 0202 	adds.w	r2, ip, r2
 8000f18:	f105 38ff 	add.w	r8, r5, #4294967295
 8000f1c:	d216      	bcs.n	8000f4c <__udivmoddi4+0x2a8>
 8000f1e:	4291      	cmp	r1, r2
 8000f20:	d914      	bls.n	8000f4c <__udivmoddi4+0x2a8>
 8000f22:	3d02      	subs	r5, #2
 8000f24:	4462      	add	r2, ip
 8000f26:	1a52      	subs	r2, r2, r1
 8000f28:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000f2c:	e738      	b.n	8000da0 <__udivmoddi4+0xfc>
 8000f2e:	4631      	mov	r1, r6
 8000f30:	4630      	mov	r0, r6
 8000f32:	e708      	b.n	8000d46 <__udivmoddi4+0xa2>
 8000f34:	4639      	mov	r1, r7
 8000f36:	e6e6      	b.n	8000d06 <__udivmoddi4+0x62>
 8000f38:	4610      	mov	r0, r2
 8000f3a:	e6fb      	b.n	8000d34 <__udivmoddi4+0x90>
 8000f3c:	4548      	cmp	r0, r9
 8000f3e:	d2a9      	bcs.n	8000e94 <__udivmoddi4+0x1f0>
 8000f40:	ebb9 0802 	subs.w	r8, r9, r2
 8000f44:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000f48:	3b01      	subs	r3, #1
 8000f4a:	e7a3      	b.n	8000e94 <__udivmoddi4+0x1f0>
 8000f4c:	4645      	mov	r5, r8
 8000f4e:	e7ea      	b.n	8000f26 <__udivmoddi4+0x282>
 8000f50:	462b      	mov	r3, r5
 8000f52:	e794      	b.n	8000e7e <__udivmoddi4+0x1da>
 8000f54:	4640      	mov	r0, r8
 8000f56:	e7d1      	b.n	8000efc <__udivmoddi4+0x258>
 8000f58:	46d0      	mov	r8, sl
 8000f5a:	e77b      	b.n	8000e54 <__udivmoddi4+0x1b0>
 8000f5c:	3d02      	subs	r5, #2
 8000f5e:	4462      	add	r2, ip
 8000f60:	e732      	b.n	8000dc8 <__udivmoddi4+0x124>
 8000f62:	4608      	mov	r0, r1
 8000f64:	e70a      	b.n	8000d7c <__udivmoddi4+0xd8>
 8000f66:	4464      	add	r4, ip
 8000f68:	3802      	subs	r0, #2
 8000f6a:	e742      	b.n	8000df2 <__udivmoddi4+0x14e>

08000f6c <__aeabi_idiv0>:
 8000f6c:	4770      	bx	lr
 8000f6e:	bf00      	nop

08000f70 <default_ip_assign>:
 8000f70:	b580      	push	{r7, lr}
 8000f72:	af00      	add	r7, sp, #0
 8000f74:	2204      	movs	r2, #4
 8000f76:	4909      	ldr	r1, [pc, #36]	; (8000f9c <default_ip_assign+0x2c>)
 8000f78:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8000f7c:	f001 fc72 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8000f80:	2204      	movs	r2, #4
 8000f82:	4907      	ldr	r1, [pc, #28]	; (8000fa0 <default_ip_assign+0x30>)
 8000f84:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8000f88:	f001 fc6c 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8000f8c:	2204      	movs	r2, #4
 8000f8e:	4905      	ldr	r1, [pc, #20]	; (8000fa4 <default_ip_assign+0x34>)
 8000f90:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000f94:	f001 fc66 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8000f98:	bf00      	nop
 8000f9a:	bd80      	pop	{r7, pc}
 8000f9c:	20000254 	.word	0x20000254
 8000fa0:	2000025c 	.word	0x2000025c
 8000fa4:	20000258 	.word	0x20000258

08000fa8 <default_ip_update>:
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	af00      	add	r7, sp, #0
 8000fac:	2180      	movs	r1, #128	; 0x80
 8000fae:	2000      	movs	r0, #0
 8000fb0:	f001 fbaa 	bl	8002708 <WIZCHIP_WRITE>
 8000fb4:	2000      	movs	r0, #0
 8000fb6:	f001 fb5b 	bl	8002670 <WIZCHIP_READ>
 8000fba:	f7ff ffd9 	bl	8000f70 <default_ip_assign>
 8000fbe:	2206      	movs	r2, #6
 8000fc0:	4903      	ldr	r1, [pc, #12]	; (8000fd0 <default_ip_update+0x28>)
 8000fc2:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8000fc6:	f001 fc4d 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8000fca:	bf00      	nop
 8000fcc:	bd80      	pop	{r7, pc}
 8000fce:	bf00      	nop
 8000fd0:	20000274 	.word	0x20000274

08000fd4 <default_ip_conflict>:
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	af00      	add	r7, sp, #0
 8000fd8:	2180      	movs	r1, #128	; 0x80
 8000fda:	2000      	movs	r0, #0
 8000fdc:	f001 fb94 	bl	8002708 <WIZCHIP_WRITE>
 8000fe0:	2000      	movs	r0, #0
 8000fe2:	f001 fb45 	bl	8002670 <WIZCHIP_READ>
 8000fe6:	2206      	movs	r2, #6
 8000fe8:	4903      	ldr	r1, [pc, #12]	; (8000ff8 <default_ip_conflict+0x24>)
 8000fea:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8000fee:	f001 fc39 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8000ff2:	bf00      	nop
 8000ff4:	bd80      	pop	{r7, pc}
 8000ff6:	bf00      	nop
 8000ff8:	20000274 	.word	0x20000274

08000ffc <reg_dhcp_cbfunc>:
 8000ffc:	b480      	push	{r7}
 8000ffe:	b085      	sub	sp, #20
 8001000:	af00      	add	r7, sp, #0
 8001002:	60f8      	str	r0, [r7, #12]
 8001004:	60b9      	str	r1, [r7, #8]
 8001006:	607a      	str	r2, [r7, #4]
 8001008:	4b10      	ldr	r3, [pc, #64]	; (800104c <reg_dhcp_cbfunc+0x50>)
 800100a:	4a11      	ldr	r2, [pc, #68]	; (8001050 <reg_dhcp_cbfunc+0x54>)
 800100c:	601a      	str	r2, [r3, #0]
 800100e:	4b11      	ldr	r3, [pc, #68]	; (8001054 <reg_dhcp_cbfunc+0x58>)
 8001010:	4a11      	ldr	r2, [pc, #68]	; (8001058 <reg_dhcp_cbfunc+0x5c>)
 8001012:	601a      	str	r2, [r3, #0]
 8001014:	4b11      	ldr	r3, [pc, #68]	; (800105c <reg_dhcp_cbfunc+0x60>)
 8001016:	4a12      	ldr	r2, [pc, #72]	; (8001060 <reg_dhcp_cbfunc+0x64>)
 8001018:	601a      	str	r2, [r3, #0]
 800101a:	68fb      	ldr	r3, [r7, #12]
 800101c:	2b00      	cmp	r3, #0
 800101e:	d002      	beq.n	8001026 <reg_dhcp_cbfunc+0x2a>
 8001020:	4a0a      	ldr	r2, [pc, #40]	; (800104c <reg_dhcp_cbfunc+0x50>)
 8001022:	68fb      	ldr	r3, [r7, #12]
 8001024:	6013      	str	r3, [r2, #0]
 8001026:	68bb      	ldr	r3, [r7, #8]
 8001028:	2b00      	cmp	r3, #0
 800102a:	d002      	beq.n	8001032 <reg_dhcp_cbfunc+0x36>
 800102c:	4a09      	ldr	r2, [pc, #36]	; (8001054 <reg_dhcp_cbfunc+0x58>)
 800102e:	68bb      	ldr	r3, [r7, #8]
 8001030:	6013      	str	r3, [r2, #0]
 8001032:	687b      	ldr	r3, [r7, #4]
 8001034:	2b00      	cmp	r3, #0
 8001036:	d002      	beq.n	800103e <reg_dhcp_cbfunc+0x42>
 8001038:	4a08      	ldr	r2, [pc, #32]	; (800105c <reg_dhcp_cbfunc+0x60>)
 800103a:	687b      	ldr	r3, [r7, #4]
 800103c:	6013      	str	r3, [r2, #0]
 800103e:	bf00      	nop
 8001040:	3714      	adds	r7, #20
 8001042:	46bd      	mov	sp, r7
 8001044:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001048:	4770      	bx	lr
 800104a:	bf00      	nop
 800104c:	20000010 	.word	0x20000010
 8001050:	08000f71 	.word	0x08000f71
 8001054:	20000014 	.word	0x20000014
 8001058:	08000fa9 	.word	0x08000fa9
 800105c:	20000018 	.word	0x20000018
 8001060:	08000fd5 	.word	0x08000fd5

08001064 <makeDHCPMSG>:
 8001064:	b580      	push	{r7, lr}
 8001066:	b084      	sub	sp, #16
 8001068:	af00      	add	r7, sp, #0
 800106a:	463b      	mov	r3, r7
 800106c:	2206      	movs	r2, #6
 800106e:	4619      	mov	r1, r3
 8001070:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8001074:	f001 fb96 	bl	80027a4 <WIZCHIP_READ_BUF>
 8001078:	4b72      	ldr	r3, [pc, #456]	; (8001244 <makeDHCPMSG+0x1e0>)
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	2201      	movs	r2, #1
 800107e:	701a      	strb	r2, [r3, #0]
 8001080:	4b70      	ldr	r3, [pc, #448]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	2201      	movs	r2, #1
 8001086:	705a      	strb	r2, [r3, #1]
 8001088:	4b6e      	ldr	r3, [pc, #440]	; (8001244 <makeDHCPMSG+0x1e0>)
 800108a:	681b      	ldr	r3, [r3, #0]
 800108c:	2206      	movs	r2, #6
 800108e:	709a      	strb	r2, [r3, #2]
 8001090:	4b6c      	ldr	r3, [pc, #432]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001092:	681b      	ldr	r3, [r3, #0]
 8001094:	2200      	movs	r2, #0
 8001096:	70da      	strb	r2, [r3, #3]
 8001098:	4b6a      	ldr	r3, [pc, #424]	; (8001244 <makeDHCPMSG+0x1e0>)
 800109a:	681b      	ldr	r3, [r3, #0]
 800109c:	3304      	adds	r3, #4
 800109e:	60bb      	str	r3, [r7, #8]
 80010a0:	4b69      	ldr	r3, [pc, #420]	; (8001248 <makeDHCPMSG+0x1e4>)
 80010a2:	681b      	ldr	r3, [r3, #0]
 80010a4:	0e1b      	lsrs	r3, r3, #24
 80010a6:	b2da      	uxtb	r2, r3
 80010a8:	68bb      	ldr	r3, [r7, #8]
 80010aa:	701a      	strb	r2, [r3, #0]
 80010ac:	4b66      	ldr	r3, [pc, #408]	; (8001248 <makeDHCPMSG+0x1e4>)
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	0c1a      	lsrs	r2, r3, #16
 80010b2:	68bb      	ldr	r3, [r7, #8]
 80010b4:	3301      	adds	r3, #1
 80010b6:	b2d2      	uxtb	r2, r2
 80010b8:	701a      	strb	r2, [r3, #0]
 80010ba:	4b63      	ldr	r3, [pc, #396]	; (8001248 <makeDHCPMSG+0x1e4>)
 80010bc:	681b      	ldr	r3, [r3, #0]
 80010be:	0a1a      	lsrs	r2, r3, #8
 80010c0:	68bb      	ldr	r3, [r7, #8]
 80010c2:	3302      	adds	r3, #2
 80010c4:	b2d2      	uxtb	r2, r2
 80010c6:	701a      	strb	r2, [r3, #0]
 80010c8:	4b5f      	ldr	r3, [pc, #380]	; (8001248 <makeDHCPMSG+0x1e4>)
 80010ca:	681a      	ldr	r2, [r3, #0]
 80010cc:	68bb      	ldr	r3, [r7, #8]
 80010ce:	3303      	adds	r3, #3
 80010d0:	b2d2      	uxtb	r2, r2
 80010d2:	701a      	strb	r2, [r3, #0]
 80010d4:	4b5b      	ldr	r3, [pc, #364]	; (8001244 <makeDHCPMSG+0x1e0>)
 80010d6:	681b      	ldr	r3, [r3, #0]
 80010d8:	2200      	movs	r2, #0
 80010da:	811a      	strh	r2, [r3, #8]
 80010dc:	4b59      	ldr	r3, [pc, #356]	; (8001244 <makeDHCPMSG+0x1e0>)
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	330a      	adds	r3, #10
 80010e2:	60bb      	str	r3, [r7, #8]
 80010e4:	68bb      	ldr	r3, [r7, #8]
 80010e6:	2280      	movs	r2, #128	; 0x80
 80010e8:	701a      	strb	r2, [r3, #0]
 80010ea:	68bb      	ldr	r3, [r7, #8]
 80010ec:	3301      	adds	r3, #1
 80010ee:	2200      	movs	r2, #0
 80010f0:	701a      	strb	r2, [r3, #0]
 80010f2:	4b54      	ldr	r3, [pc, #336]	; (8001244 <makeDHCPMSG+0x1e0>)
 80010f4:	681b      	ldr	r3, [r3, #0]
 80010f6:	2200      	movs	r2, #0
 80010f8:	731a      	strb	r2, [r3, #12]
 80010fa:	4b52      	ldr	r3, [pc, #328]	; (8001244 <makeDHCPMSG+0x1e0>)
 80010fc:	681b      	ldr	r3, [r3, #0]
 80010fe:	2200      	movs	r2, #0
 8001100:	735a      	strb	r2, [r3, #13]
 8001102:	4b50      	ldr	r3, [pc, #320]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001104:	681b      	ldr	r3, [r3, #0]
 8001106:	2200      	movs	r2, #0
 8001108:	739a      	strb	r2, [r3, #14]
 800110a:	4b4e      	ldr	r3, [pc, #312]	; (8001244 <makeDHCPMSG+0x1e0>)
 800110c:	681b      	ldr	r3, [r3, #0]
 800110e:	2200      	movs	r2, #0
 8001110:	73da      	strb	r2, [r3, #15]
 8001112:	4b4c      	ldr	r3, [pc, #304]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001114:	681b      	ldr	r3, [r3, #0]
 8001116:	2200      	movs	r2, #0
 8001118:	741a      	strb	r2, [r3, #16]
 800111a:	4b4a      	ldr	r3, [pc, #296]	; (8001244 <makeDHCPMSG+0x1e0>)
 800111c:	681b      	ldr	r3, [r3, #0]
 800111e:	2200      	movs	r2, #0
 8001120:	745a      	strb	r2, [r3, #17]
 8001122:	4b48      	ldr	r3, [pc, #288]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	2200      	movs	r2, #0
 8001128:	749a      	strb	r2, [r3, #18]
 800112a:	4b46      	ldr	r3, [pc, #280]	; (8001244 <makeDHCPMSG+0x1e0>)
 800112c:	681b      	ldr	r3, [r3, #0]
 800112e:	2200      	movs	r2, #0
 8001130:	74da      	strb	r2, [r3, #19]
 8001132:	4b44      	ldr	r3, [pc, #272]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001134:	681b      	ldr	r3, [r3, #0]
 8001136:	2200      	movs	r2, #0
 8001138:	751a      	strb	r2, [r3, #20]
 800113a:	4b42      	ldr	r3, [pc, #264]	; (8001244 <makeDHCPMSG+0x1e0>)
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	2200      	movs	r2, #0
 8001140:	755a      	strb	r2, [r3, #21]
 8001142:	4b40      	ldr	r3, [pc, #256]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001144:	681b      	ldr	r3, [r3, #0]
 8001146:	2200      	movs	r2, #0
 8001148:	759a      	strb	r2, [r3, #22]
 800114a:	4b3e      	ldr	r3, [pc, #248]	; (8001244 <makeDHCPMSG+0x1e0>)
 800114c:	681b      	ldr	r3, [r3, #0]
 800114e:	2200      	movs	r2, #0
 8001150:	75da      	strb	r2, [r3, #23]
 8001152:	4b3c      	ldr	r3, [pc, #240]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	2200      	movs	r2, #0
 8001158:	761a      	strb	r2, [r3, #24]
 800115a:	4b3a      	ldr	r3, [pc, #232]	; (8001244 <makeDHCPMSG+0x1e0>)
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	2200      	movs	r2, #0
 8001160:	765a      	strb	r2, [r3, #25]
 8001162:	4b38      	ldr	r3, [pc, #224]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001164:	681b      	ldr	r3, [r3, #0]
 8001166:	2200      	movs	r2, #0
 8001168:	769a      	strb	r2, [r3, #26]
 800116a:	4b36      	ldr	r3, [pc, #216]	; (8001244 <makeDHCPMSG+0x1e0>)
 800116c:	681b      	ldr	r3, [r3, #0]
 800116e:	2200      	movs	r2, #0
 8001170:	76da      	strb	r2, [r3, #27]
 8001172:	4b34      	ldr	r3, [pc, #208]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	4a35      	ldr	r2, [pc, #212]	; (800124c <makeDHCPMSG+0x1e8>)
 8001178:	7812      	ldrb	r2, [r2, #0]
 800117a:	771a      	strb	r2, [r3, #28]
 800117c:	4b31      	ldr	r3, [pc, #196]	; (8001244 <makeDHCPMSG+0x1e0>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	4a32      	ldr	r2, [pc, #200]	; (800124c <makeDHCPMSG+0x1e8>)
 8001182:	7852      	ldrb	r2, [r2, #1]
 8001184:	775a      	strb	r2, [r3, #29]
 8001186:	4b2f      	ldr	r3, [pc, #188]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001188:	681b      	ldr	r3, [r3, #0]
 800118a:	4a30      	ldr	r2, [pc, #192]	; (800124c <makeDHCPMSG+0x1e8>)
 800118c:	7892      	ldrb	r2, [r2, #2]
 800118e:	779a      	strb	r2, [r3, #30]
 8001190:	4b2c      	ldr	r3, [pc, #176]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	4a2d      	ldr	r2, [pc, #180]	; (800124c <makeDHCPMSG+0x1e8>)
 8001196:	78d2      	ldrb	r2, [r2, #3]
 8001198:	77da      	strb	r2, [r3, #31]
 800119a:	4b2a      	ldr	r3, [pc, #168]	; (8001244 <makeDHCPMSG+0x1e0>)
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	4a2b      	ldr	r2, [pc, #172]	; (800124c <makeDHCPMSG+0x1e8>)
 80011a0:	7912      	ldrb	r2, [r2, #4]
 80011a2:	f883 2020 	strb.w	r2, [r3, #32]
 80011a6:	4b27      	ldr	r3, [pc, #156]	; (8001244 <makeDHCPMSG+0x1e0>)
 80011a8:	681b      	ldr	r3, [r3, #0]
 80011aa:	4a28      	ldr	r2, [pc, #160]	; (800124c <makeDHCPMSG+0x1e8>)
 80011ac:	7952      	ldrb	r2, [r2, #5]
 80011ae:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80011b2:	2306      	movs	r3, #6
 80011b4:	73fb      	strb	r3, [r7, #15]
 80011b6:	e008      	b.n	80011ca <makeDHCPMSG+0x166>
 80011b8:	4b22      	ldr	r3, [pc, #136]	; (8001244 <makeDHCPMSG+0x1e0>)
 80011ba:	681a      	ldr	r2, [r3, #0]
 80011bc:	7bfb      	ldrb	r3, [r7, #15]
 80011be:	4413      	add	r3, r2
 80011c0:	2200      	movs	r2, #0
 80011c2:	771a      	strb	r2, [r3, #28]
 80011c4:	7bfb      	ldrb	r3, [r7, #15]
 80011c6:	3301      	adds	r3, #1
 80011c8:	73fb      	strb	r3, [r7, #15]
 80011ca:	7bfb      	ldrb	r3, [r7, #15]
 80011cc:	2b0f      	cmp	r3, #15
 80011ce:	d9f3      	bls.n	80011b8 <makeDHCPMSG+0x154>
 80011d0:	2300      	movs	r3, #0
 80011d2:	73fb      	strb	r3, [r7, #15]
 80011d4:	e009      	b.n	80011ea <makeDHCPMSG+0x186>
 80011d6:	4b1b      	ldr	r3, [pc, #108]	; (8001244 <makeDHCPMSG+0x1e0>)
 80011d8:	681a      	ldr	r2, [r3, #0]
 80011da:	7bfb      	ldrb	r3, [r7, #15]
 80011dc:	4413      	add	r3, r2
 80011de:	2200      	movs	r2, #0
 80011e0:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 80011e4:	7bfb      	ldrb	r3, [r7, #15]
 80011e6:	3301      	adds	r3, #1
 80011e8:	73fb      	strb	r3, [r7, #15]
 80011ea:	7bfb      	ldrb	r3, [r7, #15]
 80011ec:	2b3f      	cmp	r3, #63	; 0x3f
 80011ee:	d9f2      	bls.n	80011d6 <makeDHCPMSG+0x172>
 80011f0:	2300      	movs	r3, #0
 80011f2:	73fb      	strb	r3, [r7, #15]
 80011f4:	e009      	b.n	800120a <makeDHCPMSG+0x1a6>
 80011f6:	4b13      	ldr	r3, [pc, #76]	; (8001244 <makeDHCPMSG+0x1e0>)
 80011f8:	681a      	ldr	r2, [r3, #0]
 80011fa:	7bfb      	ldrb	r3, [r7, #15]
 80011fc:	4413      	add	r3, r2
 80011fe:	2200      	movs	r2, #0
 8001200:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001204:	7bfb      	ldrb	r3, [r7, #15]
 8001206:	3301      	adds	r3, #1
 8001208:	73fb      	strb	r3, [r7, #15]
 800120a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800120e:	2b00      	cmp	r3, #0
 8001210:	daf1      	bge.n	80011f6 <makeDHCPMSG+0x192>
 8001212:	4b0c      	ldr	r3, [pc, #48]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001214:	681b      	ldr	r3, [r3, #0]
 8001216:	2263      	movs	r2, #99	; 0x63
 8001218:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800121c:	4b09      	ldr	r3, [pc, #36]	; (8001244 <makeDHCPMSG+0x1e0>)
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	2282      	movs	r2, #130	; 0x82
 8001222:	f883 20ed 	strb.w	r2, [r3, #237]	; 0xed
 8001226:	4b07      	ldr	r3, [pc, #28]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001228:	681b      	ldr	r3, [r3, #0]
 800122a:	2253      	movs	r2, #83	; 0x53
 800122c:	f883 20ee 	strb.w	r2, [r3, #238]	; 0xee
 8001230:	4b04      	ldr	r3, [pc, #16]	; (8001244 <makeDHCPMSG+0x1e0>)
 8001232:	681b      	ldr	r3, [r3, #0]
 8001234:	2263      	movs	r2, #99	; 0x63
 8001236:	f883 20ef 	strb.w	r2, [r3, #239]	; 0xef
 800123a:	bf00      	nop
 800123c:	3710      	adds	r7, #16
 800123e:	46bd      	mov	sp, r7
 8001240:	bd80      	pop	{r7, pc}
 8001242:	bf00      	nop
 8001244:	20000270 	.word	0x20000270
 8001248:	2000026c 	.word	0x2000026c
 800124c:	20000274 	.word	0x20000274

08001250 <send_DHCP_DISCOVER>:
 8001250:	b580      	push	{r7, lr}
 8001252:	b084      	sub	sp, #16
 8001254:	af02      	add	r7, sp, #8
 8001256:	2300      	movs	r3, #0
 8001258:	80bb      	strh	r3, [r7, #4]
 800125a:	f7ff ff03 	bl	8001064 <makeDHCPMSG>
 800125e:	2304      	movs	r3, #4
 8001260:	80bb      	strh	r3, [r7, #4]
 8001262:	4ba9      	ldr	r3, [pc, #676]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001264:	681a      	ldr	r2, [r3, #0]
 8001266:	88bb      	ldrh	r3, [r7, #4]
 8001268:	1c59      	adds	r1, r3, #1
 800126a:	80b9      	strh	r1, [r7, #4]
 800126c:	4413      	add	r3, r2
 800126e:	2235      	movs	r2, #53	; 0x35
 8001270:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001274:	4ba4      	ldr	r3, [pc, #656]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001276:	681a      	ldr	r2, [r3, #0]
 8001278:	88bb      	ldrh	r3, [r7, #4]
 800127a:	1c59      	adds	r1, r3, #1
 800127c:	80b9      	strh	r1, [r7, #4]
 800127e:	4413      	add	r3, r2
 8001280:	2201      	movs	r2, #1
 8001282:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001286:	4ba0      	ldr	r3, [pc, #640]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001288:	681a      	ldr	r2, [r3, #0]
 800128a:	88bb      	ldrh	r3, [r7, #4]
 800128c:	1c59      	adds	r1, r3, #1
 800128e:	80b9      	strh	r1, [r7, #4]
 8001290:	4413      	add	r3, r2
 8001292:	2201      	movs	r2, #1
 8001294:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001298:	4b9b      	ldr	r3, [pc, #620]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 800129a:	681a      	ldr	r2, [r3, #0]
 800129c:	88bb      	ldrh	r3, [r7, #4]
 800129e:	1c59      	adds	r1, r3, #1
 80012a0:	80b9      	strh	r1, [r7, #4]
 80012a2:	4413      	add	r3, r2
 80012a4:	223d      	movs	r2, #61	; 0x3d
 80012a6:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80012aa:	4b97      	ldr	r3, [pc, #604]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80012ac:	681a      	ldr	r2, [r3, #0]
 80012ae:	88bb      	ldrh	r3, [r7, #4]
 80012b0:	1c59      	adds	r1, r3, #1
 80012b2:	80b9      	strh	r1, [r7, #4]
 80012b4:	4413      	add	r3, r2
 80012b6:	2207      	movs	r2, #7
 80012b8:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80012bc:	4b92      	ldr	r3, [pc, #584]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80012be:	681a      	ldr	r2, [r3, #0]
 80012c0:	88bb      	ldrh	r3, [r7, #4]
 80012c2:	1c59      	adds	r1, r3, #1
 80012c4:	80b9      	strh	r1, [r7, #4]
 80012c6:	4413      	add	r3, r2
 80012c8:	2201      	movs	r2, #1
 80012ca:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80012ce:	4b8e      	ldr	r3, [pc, #568]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80012d0:	681a      	ldr	r2, [r3, #0]
 80012d2:	88bb      	ldrh	r3, [r7, #4]
 80012d4:	1c59      	adds	r1, r3, #1
 80012d6:	80b9      	strh	r1, [r7, #4]
 80012d8:	4618      	mov	r0, r3
 80012da:	4b8c      	ldr	r3, [pc, #560]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 80012dc:	7819      	ldrb	r1, [r3, #0]
 80012de:	1813      	adds	r3, r2, r0
 80012e0:	460a      	mov	r2, r1
 80012e2:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80012e6:	4b88      	ldr	r3, [pc, #544]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80012e8:	681a      	ldr	r2, [r3, #0]
 80012ea:	88bb      	ldrh	r3, [r7, #4]
 80012ec:	1c59      	adds	r1, r3, #1
 80012ee:	80b9      	strh	r1, [r7, #4]
 80012f0:	4618      	mov	r0, r3
 80012f2:	4b86      	ldr	r3, [pc, #536]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 80012f4:	7859      	ldrb	r1, [r3, #1]
 80012f6:	1813      	adds	r3, r2, r0
 80012f8:	460a      	mov	r2, r1
 80012fa:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80012fe:	4b82      	ldr	r3, [pc, #520]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001300:	681a      	ldr	r2, [r3, #0]
 8001302:	88bb      	ldrh	r3, [r7, #4]
 8001304:	1c59      	adds	r1, r3, #1
 8001306:	80b9      	strh	r1, [r7, #4]
 8001308:	4618      	mov	r0, r3
 800130a:	4b80      	ldr	r3, [pc, #512]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 800130c:	7899      	ldrb	r1, [r3, #2]
 800130e:	1813      	adds	r3, r2, r0
 8001310:	460a      	mov	r2, r1
 8001312:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001316:	4b7c      	ldr	r3, [pc, #496]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001318:	681a      	ldr	r2, [r3, #0]
 800131a:	88bb      	ldrh	r3, [r7, #4]
 800131c:	1c59      	adds	r1, r3, #1
 800131e:	80b9      	strh	r1, [r7, #4]
 8001320:	4618      	mov	r0, r3
 8001322:	4b7a      	ldr	r3, [pc, #488]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 8001324:	78d9      	ldrb	r1, [r3, #3]
 8001326:	1813      	adds	r3, r2, r0
 8001328:	460a      	mov	r2, r1
 800132a:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800132e:	4b76      	ldr	r3, [pc, #472]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001330:	681a      	ldr	r2, [r3, #0]
 8001332:	88bb      	ldrh	r3, [r7, #4]
 8001334:	1c59      	adds	r1, r3, #1
 8001336:	80b9      	strh	r1, [r7, #4]
 8001338:	4618      	mov	r0, r3
 800133a:	4b74      	ldr	r3, [pc, #464]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 800133c:	7919      	ldrb	r1, [r3, #4]
 800133e:	1813      	adds	r3, r2, r0
 8001340:	460a      	mov	r2, r1
 8001342:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001346:	4b70      	ldr	r3, [pc, #448]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001348:	681a      	ldr	r2, [r3, #0]
 800134a:	88bb      	ldrh	r3, [r7, #4]
 800134c:	1c59      	adds	r1, r3, #1
 800134e:	80b9      	strh	r1, [r7, #4]
 8001350:	4618      	mov	r0, r3
 8001352:	4b6e      	ldr	r3, [pc, #440]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 8001354:	7959      	ldrb	r1, [r3, #5]
 8001356:	1813      	adds	r3, r2, r0
 8001358:	460a      	mov	r2, r1
 800135a:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800135e:	4b6a      	ldr	r3, [pc, #424]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001360:	681a      	ldr	r2, [r3, #0]
 8001362:	88bb      	ldrh	r3, [r7, #4]
 8001364:	1c59      	adds	r1, r3, #1
 8001366:	80b9      	strh	r1, [r7, #4]
 8001368:	4413      	add	r3, r2
 800136a:	220c      	movs	r2, #12
 800136c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001370:	4b65      	ldr	r3, [pc, #404]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001372:	681a      	ldr	r2, [r3, #0]
 8001374:	88bb      	ldrh	r3, [r7, #4]
 8001376:	1c59      	adds	r1, r3, #1
 8001378:	80b9      	strh	r1, [r7, #4]
 800137a:	4413      	add	r3, r2
 800137c:	2200      	movs	r2, #0
 800137e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001382:	2300      	movs	r3, #0
 8001384:	80fb      	strh	r3, [r7, #6]
 8001386:	e00f      	b.n	80013a8 <send_DHCP_DISCOVER+0x158>
 8001388:	88f9      	ldrh	r1, [r7, #6]
 800138a:	4b5f      	ldr	r3, [pc, #380]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 800138c:	681a      	ldr	r2, [r3, #0]
 800138e:	88bb      	ldrh	r3, [r7, #4]
 8001390:	1c58      	adds	r0, r3, #1
 8001392:	80b8      	strh	r0, [r7, #4]
 8001394:	4618      	mov	r0, r3
 8001396:	4b5e      	ldr	r3, [pc, #376]	; (8001510 <send_DHCP_DISCOVER+0x2c0>)
 8001398:	5c59      	ldrb	r1, [r3, r1]
 800139a:	1813      	adds	r3, r2, r0
 800139c:	460a      	mov	r2, r1
 800139e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80013a2:	88fb      	ldrh	r3, [r7, #6]
 80013a4:	3301      	adds	r3, #1
 80013a6:	80fb      	strh	r3, [r7, #6]
 80013a8:	88fb      	ldrh	r3, [r7, #6]
 80013aa:	4a59      	ldr	r2, [pc, #356]	; (8001510 <send_DHCP_DISCOVER+0x2c0>)
 80013ac:	5cd3      	ldrb	r3, [r2, r3]
 80013ae:	2b00      	cmp	r3, #0
 80013b0:	d1ea      	bne.n	8001388 <send_DHCP_DISCOVER+0x138>
 80013b2:	4b55      	ldr	r3, [pc, #340]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80013b4:	681a      	ldr	r2, [r3, #0]
 80013b6:	88bb      	ldrh	r3, [r7, #4]
 80013b8:	1c59      	adds	r1, r3, #1
 80013ba:	80b9      	strh	r1, [r7, #4]
 80013bc:	4618      	mov	r0, r3
 80013be:	4b53      	ldr	r3, [pc, #332]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 80013c0:	78d9      	ldrb	r1, [r3, #3]
 80013c2:	1813      	adds	r3, r2, r0
 80013c4:	460a      	mov	r2, r1
 80013c6:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80013ca:	4b4f      	ldr	r3, [pc, #316]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80013cc:	681a      	ldr	r2, [r3, #0]
 80013ce:	88bb      	ldrh	r3, [r7, #4]
 80013d0:	1c59      	adds	r1, r3, #1
 80013d2:	80b9      	strh	r1, [r7, #4]
 80013d4:	4618      	mov	r0, r3
 80013d6:	4b4d      	ldr	r3, [pc, #308]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 80013d8:	7919      	ldrb	r1, [r3, #4]
 80013da:	1813      	adds	r3, r2, r0
 80013dc:	460a      	mov	r2, r1
 80013de:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80013e2:	4b49      	ldr	r3, [pc, #292]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80013e4:	681a      	ldr	r2, [r3, #0]
 80013e6:	88bb      	ldrh	r3, [r7, #4]
 80013e8:	1c59      	adds	r1, r3, #1
 80013ea:	80b9      	strh	r1, [r7, #4]
 80013ec:	4618      	mov	r0, r3
 80013ee:	4b47      	ldr	r3, [pc, #284]	; (800150c <send_DHCP_DISCOVER+0x2bc>)
 80013f0:	7959      	ldrb	r1, [r3, #5]
 80013f2:	1813      	adds	r3, r2, r0
 80013f4:	460a      	mov	r2, r1
 80013f6:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80013fa:	88fb      	ldrh	r3, [r7, #6]
 80013fc:	b2d9      	uxtb	r1, r3
 80013fe:	4b42      	ldr	r3, [pc, #264]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001400:	681a      	ldr	r2, [r3, #0]
 8001402:	88b8      	ldrh	r0, [r7, #4]
 8001404:	88fb      	ldrh	r3, [r7, #6]
 8001406:	3304      	adds	r3, #4
 8001408:	1ac3      	subs	r3, r0, r3
 800140a:	3103      	adds	r1, #3
 800140c:	b2c9      	uxtb	r1, r1
 800140e:	4413      	add	r3, r2
 8001410:	460a      	mov	r2, r1
 8001412:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001416:	4b3c      	ldr	r3, [pc, #240]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001418:	681a      	ldr	r2, [r3, #0]
 800141a:	88bb      	ldrh	r3, [r7, #4]
 800141c:	1c59      	adds	r1, r3, #1
 800141e:	80b9      	strh	r1, [r7, #4]
 8001420:	4413      	add	r3, r2
 8001422:	2237      	movs	r2, #55	; 0x37
 8001424:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001428:	4b37      	ldr	r3, [pc, #220]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 800142a:	681a      	ldr	r2, [r3, #0]
 800142c:	88bb      	ldrh	r3, [r7, #4]
 800142e:	1c59      	adds	r1, r3, #1
 8001430:	80b9      	strh	r1, [r7, #4]
 8001432:	4413      	add	r3, r2
 8001434:	2206      	movs	r2, #6
 8001436:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800143a:	4b33      	ldr	r3, [pc, #204]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 800143c:	681a      	ldr	r2, [r3, #0]
 800143e:	88bb      	ldrh	r3, [r7, #4]
 8001440:	1c59      	adds	r1, r3, #1
 8001442:	80b9      	strh	r1, [r7, #4]
 8001444:	4413      	add	r3, r2
 8001446:	2201      	movs	r2, #1
 8001448:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800144c:	4b2e      	ldr	r3, [pc, #184]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 800144e:	681a      	ldr	r2, [r3, #0]
 8001450:	88bb      	ldrh	r3, [r7, #4]
 8001452:	1c59      	adds	r1, r3, #1
 8001454:	80b9      	strh	r1, [r7, #4]
 8001456:	4413      	add	r3, r2
 8001458:	2203      	movs	r2, #3
 800145a:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800145e:	4b2a      	ldr	r3, [pc, #168]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001460:	681a      	ldr	r2, [r3, #0]
 8001462:	88bb      	ldrh	r3, [r7, #4]
 8001464:	1c59      	adds	r1, r3, #1
 8001466:	80b9      	strh	r1, [r7, #4]
 8001468:	4413      	add	r3, r2
 800146a:	2206      	movs	r2, #6
 800146c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001470:	4b25      	ldr	r3, [pc, #148]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001472:	681a      	ldr	r2, [r3, #0]
 8001474:	88bb      	ldrh	r3, [r7, #4]
 8001476:	1c59      	adds	r1, r3, #1
 8001478:	80b9      	strh	r1, [r7, #4]
 800147a:	4413      	add	r3, r2
 800147c:	220f      	movs	r2, #15
 800147e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001482:	4b21      	ldr	r3, [pc, #132]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001484:	681a      	ldr	r2, [r3, #0]
 8001486:	88bb      	ldrh	r3, [r7, #4]
 8001488:	1c59      	adds	r1, r3, #1
 800148a:	80b9      	strh	r1, [r7, #4]
 800148c:	4413      	add	r3, r2
 800148e:	223a      	movs	r2, #58	; 0x3a
 8001490:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001494:	4b1c      	ldr	r3, [pc, #112]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 8001496:	681a      	ldr	r2, [r3, #0]
 8001498:	88bb      	ldrh	r3, [r7, #4]
 800149a:	1c59      	adds	r1, r3, #1
 800149c:	80b9      	strh	r1, [r7, #4]
 800149e:	4413      	add	r3, r2
 80014a0:	223b      	movs	r2, #59	; 0x3b
 80014a2:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80014a6:	4b18      	ldr	r3, [pc, #96]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80014a8:	681a      	ldr	r2, [r3, #0]
 80014aa:	88bb      	ldrh	r3, [r7, #4]
 80014ac:	1c59      	adds	r1, r3, #1
 80014ae:	80b9      	strh	r1, [r7, #4]
 80014b0:	4413      	add	r3, r2
 80014b2:	22ff      	movs	r2, #255	; 0xff
 80014b4:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80014b8:	88bb      	ldrh	r3, [r7, #4]
 80014ba:	80fb      	strh	r3, [r7, #6]
 80014bc:	e009      	b.n	80014d2 <send_DHCP_DISCOVER+0x282>
 80014be:	4b12      	ldr	r3, [pc, #72]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80014c0:	681a      	ldr	r2, [r3, #0]
 80014c2:	88fb      	ldrh	r3, [r7, #6]
 80014c4:	4413      	add	r3, r2
 80014c6:	2200      	movs	r2, #0
 80014c8:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80014cc:	88fb      	ldrh	r3, [r7, #6]
 80014ce:	3301      	adds	r3, #1
 80014d0:	80fb      	strh	r3, [r7, #6]
 80014d2:	88fb      	ldrh	r3, [r7, #6]
 80014d4:	f5b3 7f9c 	cmp.w	r3, #312	; 0x138
 80014d8:	d3f1      	bcc.n	80014be <send_DHCP_DISCOVER+0x26e>
 80014da:	23ff      	movs	r3, #255	; 0xff
 80014dc:	703b      	strb	r3, [r7, #0]
 80014de:	23ff      	movs	r3, #255	; 0xff
 80014e0:	707b      	strb	r3, [r7, #1]
 80014e2:	23ff      	movs	r3, #255	; 0xff
 80014e4:	70bb      	strb	r3, [r7, #2]
 80014e6:	23ff      	movs	r3, #255	; 0xff
 80014e8:	70fb      	strb	r3, [r7, #3]
 80014ea:	4b0a      	ldr	r3, [pc, #40]	; (8001514 <send_DHCP_DISCOVER+0x2c4>)
 80014ec:	7818      	ldrb	r0, [r3, #0]
 80014ee:	4b06      	ldr	r3, [pc, #24]	; (8001508 <send_DHCP_DISCOVER+0x2b8>)
 80014f0:	6819      	ldr	r1, [r3, #0]
 80014f2:	463b      	mov	r3, r7
 80014f4:	2243      	movs	r2, #67	; 0x43
 80014f6:	9200      	str	r2, [sp, #0]
 80014f8:	f44f 7209 	mov.w	r2, #548	; 0x224
 80014fc:	f002 f82c 	bl	8003558 <sendto>
 8001500:	bf00      	nop
 8001502:	3708      	adds	r7, #8
 8001504:	46bd      	mov	sp, r7
 8001506:	bd80      	pop	{r7, pc}
 8001508:	20000270 	.word	0x20000270
 800150c:	20000274 	.word	0x20000274
 8001510:	20000008 	.word	0x20000008
 8001514:	20000248 	.word	0x20000248

08001518 <send_DHCP_REQUEST>:
 8001518:	b5b0      	push	{r4, r5, r7, lr}
 800151a:	b086      	sub	sp, #24
 800151c:	af02      	add	r7, sp, #8
 800151e:	2300      	movs	r3, #0
 8001520:	817b      	strh	r3, [r7, #10]
 8001522:	f7ff fd9f 	bl	8001064 <makeDHCPMSG>
 8001526:	4b1b      	ldr	r3, [pc, #108]	; (8001594 <send_DHCP_REQUEST+0x7c>)
 8001528:	f993 3000 	ldrsb.w	r3, [r3]
 800152c:	2b03      	cmp	r3, #3
 800152e:	d004      	beq.n	800153a <send_DHCP_REQUEST+0x22>
 8001530:	4b18      	ldr	r3, [pc, #96]	; (8001594 <send_DHCP_REQUEST+0x7c>)
 8001532:	f993 3000 	ldrsb.w	r3, [r3]
 8001536:	2b04      	cmp	r3, #4
 8001538:	d134      	bne.n	80015a4 <send_DHCP_REQUEST+0x8c>
 800153a:	4b17      	ldr	r3, [pc, #92]	; (8001598 <send_DHCP_REQUEST+0x80>)
 800153c:	681b      	ldr	r3, [r3, #0]
 800153e:	330a      	adds	r3, #10
 8001540:	2200      	movs	r2, #0
 8001542:	701a      	strb	r2, [r3, #0]
 8001544:	4b14      	ldr	r3, [pc, #80]	; (8001598 <send_DHCP_REQUEST+0x80>)
 8001546:	681b      	ldr	r3, [r3, #0]
 8001548:	330a      	adds	r3, #10
 800154a:	3301      	adds	r3, #1
 800154c:	2200      	movs	r2, #0
 800154e:	701a      	strb	r2, [r3, #0]
 8001550:	4b11      	ldr	r3, [pc, #68]	; (8001598 <send_DHCP_REQUEST+0x80>)
 8001552:	681b      	ldr	r3, [r3, #0]
 8001554:	4a11      	ldr	r2, [pc, #68]	; (800159c <send_DHCP_REQUEST+0x84>)
 8001556:	7812      	ldrb	r2, [r2, #0]
 8001558:	731a      	strb	r2, [r3, #12]
 800155a:	4b0f      	ldr	r3, [pc, #60]	; (8001598 <send_DHCP_REQUEST+0x80>)
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	4a0f      	ldr	r2, [pc, #60]	; (800159c <send_DHCP_REQUEST+0x84>)
 8001560:	7852      	ldrb	r2, [r2, #1]
 8001562:	735a      	strb	r2, [r3, #13]
 8001564:	4b0c      	ldr	r3, [pc, #48]	; (8001598 <send_DHCP_REQUEST+0x80>)
 8001566:	681b      	ldr	r3, [r3, #0]
 8001568:	4a0c      	ldr	r2, [pc, #48]	; (800159c <send_DHCP_REQUEST+0x84>)
 800156a:	7892      	ldrb	r2, [r2, #2]
 800156c:	739a      	strb	r2, [r3, #14]
 800156e:	4b0a      	ldr	r3, [pc, #40]	; (8001598 <send_DHCP_REQUEST+0x80>)
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	4a0a      	ldr	r2, [pc, #40]	; (800159c <send_DHCP_REQUEST+0x84>)
 8001574:	78d2      	ldrb	r2, [r2, #3]
 8001576:	73da      	strb	r2, [r3, #15]
 8001578:	4b09      	ldr	r3, [pc, #36]	; (80015a0 <send_DHCP_REQUEST+0x88>)
 800157a:	781b      	ldrb	r3, [r3, #0]
 800157c:	713b      	strb	r3, [r7, #4]
 800157e:	4b08      	ldr	r3, [pc, #32]	; (80015a0 <send_DHCP_REQUEST+0x88>)
 8001580:	785b      	ldrb	r3, [r3, #1]
 8001582:	717b      	strb	r3, [r7, #5]
 8001584:	4b06      	ldr	r3, [pc, #24]	; (80015a0 <send_DHCP_REQUEST+0x88>)
 8001586:	789b      	ldrb	r3, [r3, #2]
 8001588:	71bb      	strb	r3, [r7, #6]
 800158a:	4b05      	ldr	r3, [pc, #20]	; (80015a0 <send_DHCP_REQUEST+0x88>)
 800158c:	78db      	ldrb	r3, [r3, #3]
 800158e:	71fb      	strb	r3, [r7, #7]
 8001590:	e010      	b.n	80015b4 <send_DHCP_REQUEST+0x9c>
 8001592:	bf00      	nop
 8001594:	20000264 	.word	0x20000264
 8001598:	20000270 	.word	0x20000270
 800159c:	20000254 	.word	0x20000254
 80015a0:	2000024c 	.word	0x2000024c
 80015a4:	23ff      	movs	r3, #255	; 0xff
 80015a6:	713b      	strb	r3, [r7, #4]
 80015a8:	23ff      	movs	r3, #255	; 0xff
 80015aa:	717b      	strb	r3, [r7, #5]
 80015ac:	23ff      	movs	r3, #255	; 0xff
 80015ae:	71bb      	strb	r3, [r7, #6]
 80015b0:	23ff      	movs	r3, #255	; 0xff
 80015b2:	71fb      	strb	r3, [r7, #7]
 80015b4:	2304      	movs	r3, #4
 80015b6:	817b      	strh	r3, [r7, #10]
 80015b8:	4b8d      	ldr	r3, [pc, #564]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80015ba:	681a      	ldr	r2, [r3, #0]
 80015bc:	897b      	ldrh	r3, [r7, #10]
 80015be:	1c59      	adds	r1, r3, #1
 80015c0:	8179      	strh	r1, [r7, #10]
 80015c2:	4413      	add	r3, r2
 80015c4:	2235      	movs	r2, #53	; 0x35
 80015c6:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80015ca:	4b89      	ldr	r3, [pc, #548]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80015cc:	681a      	ldr	r2, [r3, #0]
 80015ce:	897b      	ldrh	r3, [r7, #10]
 80015d0:	1c59      	adds	r1, r3, #1
 80015d2:	8179      	strh	r1, [r7, #10]
 80015d4:	4413      	add	r3, r2
 80015d6:	2201      	movs	r2, #1
 80015d8:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80015dc:	4b84      	ldr	r3, [pc, #528]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80015de:	681a      	ldr	r2, [r3, #0]
 80015e0:	897b      	ldrh	r3, [r7, #10]
 80015e2:	1c59      	adds	r1, r3, #1
 80015e4:	8179      	strh	r1, [r7, #10]
 80015e6:	4413      	add	r3, r2
 80015e8:	2203      	movs	r2, #3
 80015ea:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80015ee:	4b80      	ldr	r3, [pc, #512]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80015f0:	681a      	ldr	r2, [r3, #0]
 80015f2:	897b      	ldrh	r3, [r7, #10]
 80015f4:	1c59      	adds	r1, r3, #1
 80015f6:	8179      	strh	r1, [r7, #10]
 80015f8:	4413      	add	r3, r2
 80015fa:	223d      	movs	r2, #61	; 0x3d
 80015fc:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001600:	4b7b      	ldr	r3, [pc, #492]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001602:	681a      	ldr	r2, [r3, #0]
 8001604:	897b      	ldrh	r3, [r7, #10]
 8001606:	1c59      	adds	r1, r3, #1
 8001608:	8179      	strh	r1, [r7, #10]
 800160a:	4413      	add	r3, r2
 800160c:	2207      	movs	r2, #7
 800160e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001612:	4b77      	ldr	r3, [pc, #476]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001614:	681a      	ldr	r2, [r3, #0]
 8001616:	897b      	ldrh	r3, [r7, #10]
 8001618:	1c59      	adds	r1, r3, #1
 800161a:	8179      	strh	r1, [r7, #10]
 800161c:	4413      	add	r3, r2
 800161e:	2201      	movs	r2, #1
 8001620:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001624:	4b72      	ldr	r3, [pc, #456]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001626:	681a      	ldr	r2, [r3, #0]
 8001628:	897b      	ldrh	r3, [r7, #10]
 800162a:	1c59      	adds	r1, r3, #1
 800162c:	8179      	strh	r1, [r7, #10]
 800162e:	4618      	mov	r0, r3
 8001630:	4b70      	ldr	r3, [pc, #448]	; (80017f4 <send_DHCP_REQUEST+0x2dc>)
 8001632:	7819      	ldrb	r1, [r3, #0]
 8001634:	1813      	adds	r3, r2, r0
 8001636:	460a      	mov	r2, r1
 8001638:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800163c:	4b6c      	ldr	r3, [pc, #432]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 800163e:	681a      	ldr	r2, [r3, #0]
 8001640:	897b      	ldrh	r3, [r7, #10]
 8001642:	1c59      	adds	r1, r3, #1
 8001644:	8179      	strh	r1, [r7, #10]
 8001646:	4618      	mov	r0, r3
 8001648:	4b6a      	ldr	r3, [pc, #424]	; (80017f4 <send_DHCP_REQUEST+0x2dc>)
 800164a:	7859      	ldrb	r1, [r3, #1]
 800164c:	1813      	adds	r3, r2, r0
 800164e:	460a      	mov	r2, r1
 8001650:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001654:	4b66      	ldr	r3, [pc, #408]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001656:	681a      	ldr	r2, [r3, #0]
 8001658:	897b      	ldrh	r3, [r7, #10]
 800165a:	1c59      	adds	r1, r3, #1
 800165c:	8179      	strh	r1, [r7, #10]
 800165e:	4618      	mov	r0, r3
 8001660:	4b64      	ldr	r3, [pc, #400]	; (80017f4 <send_DHCP_REQUEST+0x2dc>)
 8001662:	7899      	ldrb	r1, [r3, #2]
 8001664:	1813      	adds	r3, r2, r0
 8001666:	460a      	mov	r2, r1
 8001668:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800166c:	4b60      	ldr	r3, [pc, #384]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 800166e:	681a      	ldr	r2, [r3, #0]
 8001670:	897b      	ldrh	r3, [r7, #10]
 8001672:	1c59      	adds	r1, r3, #1
 8001674:	8179      	strh	r1, [r7, #10]
 8001676:	4618      	mov	r0, r3
 8001678:	4b5e      	ldr	r3, [pc, #376]	; (80017f4 <send_DHCP_REQUEST+0x2dc>)
 800167a:	78d9      	ldrb	r1, [r3, #3]
 800167c:	1813      	adds	r3, r2, r0
 800167e:	460a      	mov	r2, r1
 8001680:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001684:	4b5a      	ldr	r3, [pc, #360]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001686:	681a      	ldr	r2, [r3, #0]
 8001688:	897b      	ldrh	r3, [r7, #10]
 800168a:	1c59      	adds	r1, r3, #1
 800168c:	8179      	strh	r1, [r7, #10]
 800168e:	4618      	mov	r0, r3
 8001690:	4b58      	ldr	r3, [pc, #352]	; (80017f4 <send_DHCP_REQUEST+0x2dc>)
 8001692:	7919      	ldrb	r1, [r3, #4]
 8001694:	1813      	adds	r3, r2, r0
 8001696:	460a      	mov	r2, r1
 8001698:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800169c:	4b54      	ldr	r3, [pc, #336]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 800169e:	681a      	ldr	r2, [r3, #0]
 80016a0:	897b      	ldrh	r3, [r7, #10]
 80016a2:	1c59      	adds	r1, r3, #1
 80016a4:	8179      	strh	r1, [r7, #10]
 80016a6:	4618      	mov	r0, r3
 80016a8:	4b52      	ldr	r3, [pc, #328]	; (80017f4 <send_DHCP_REQUEST+0x2dc>)
 80016aa:	7959      	ldrb	r1, [r3, #5]
 80016ac:	1813      	adds	r3, r2, r0
 80016ae:	460a      	mov	r2, r1
 80016b0:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80016b4:	79fb      	ldrb	r3, [r7, #7]
 80016b6:	2bff      	cmp	r3, #255	; 0xff
 80016b8:	f040 8084 	bne.w	80017c4 <send_DHCP_REQUEST+0x2ac>
 80016bc:	4b4c      	ldr	r3, [pc, #304]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80016be:	681a      	ldr	r2, [r3, #0]
 80016c0:	897b      	ldrh	r3, [r7, #10]
 80016c2:	1c59      	adds	r1, r3, #1
 80016c4:	8179      	strh	r1, [r7, #10]
 80016c6:	4413      	add	r3, r2
 80016c8:	2232      	movs	r2, #50	; 0x32
 80016ca:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80016ce:	4b48      	ldr	r3, [pc, #288]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80016d0:	681a      	ldr	r2, [r3, #0]
 80016d2:	897b      	ldrh	r3, [r7, #10]
 80016d4:	1c59      	adds	r1, r3, #1
 80016d6:	8179      	strh	r1, [r7, #10]
 80016d8:	4413      	add	r3, r2
 80016da:	2204      	movs	r2, #4
 80016dc:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80016e0:	4b43      	ldr	r3, [pc, #268]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80016e2:	681a      	ldr	r2, [r3, #0]
 80016e4:	897b      	ldrh	r3, [r7, #10]
 80016e6:	1c59      	adds	r1, r3, #1
 80016e8:	8179      	strh	r1, [r7, #10]
 80016ea:	4618      	mov	r0, r3
 80016ec:	4b42      	ldr	r3, [pc, #264]	; (80017f8 <send_DHCP_REQUEST+0x2e0>)
 80016ee:	7819      	ldrb	r1, [r3, #0]
 80016f0:	1813      	adds	r3, r2, r0
 80016f2:	460a      	mov	r2, r1
 80016f4:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80016f8:	4b3d      	ldr	r3, [pc, #244]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80016fa:	681a      	ldr	r2, [r3, #0]
 80016fc:	897b      	ldrh	r3, [r7, #10]
 80016fe:	1c59      	adds	r1, r3, #1
 8001700:	8179      	strh	r1, [r7, #10]
 8001702:	4618      	mov	r0, r3
 8001704:	4b3c      	ldr	r3, [pc, #240]	; (80017f8 <send_DHCP_REQUEST+0x2e0>)
 8001706:	7859      	ldrb	r1, [r3, #1]
 8001708:	1813      	adds	r3, r2, r0
 800170a:	460a      	mov	r2, r1
 800170c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001710:	4b37      	ldr	r3, [pc, #220]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001712:	681a      	ldr	r2, [r3, #0]
 8001714:	897b      	ldrh	r3, [r7, #10]
 8001716:	1c59      	adds	r1, r3, #1
 8001718:	8179      	strh	r1, [r7, #10]
 800171a:	4618      	mov	r0, r3
 800171c:	4b36      	ldr	r3, [pc, #216]	; (80017f8 <send_DHCP_REQUEST+0x2e0>)
 800171e:	7899      	ldrb	r1, [r3, #2]
 8001720:	1813      	adds	r3, r2, r0
 8001722:	460a      	mov	r2, r1
 8001724:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001728:	4b31      	ldr	r3, [pc, #196]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 800172a:	681a      	ldr	r2, [r3, #0]
 800172c:	897b      	ldrh	r3, [r7, #10]
 800172e:	1c59      	adds	r1, r3, #1
 8001730:	8179      	strh	r1, [r7, #10]
 8001732:	4618      	mov	r0, r3
 8001734:	4b30      	ldr	r3, [pc, #192]	; (80017f8 <send_DHCP_REQUEST+0x2e0>)
 8001736:	78d9      	ldrb	r1, [r3, #3]
 8001738:	1813      	adds	r3, r2, r0
 800173a:	460a      	mov	r2, r1
 800173c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001740:	4b2b      	ldr	r3, [pc, #172]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001742:	681a      	ldr	r2, [r3, #0]
 8001744:	897b      	ldrh	r3, [r7, #10]
 8001746:	1c59      	adds	r1, r3, #1
 8001748:	8179      	strh	r1, [r7, #10]
 800174a:	4413      	add	r3, r2
 800174c:	2236      	movs	r2, #54	; 0x36
 800174e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001752:	4b27      	ldr	r3, [pc, #156]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001754:	681a      	ldr	r2, [r3, #0]
 8001756:	897b      	ldrh	r3, [r7, #10]
 8001758:	1c59      	adds	r1, r3, #1
 800175a:	8179      	strh	r1, [r7, #10]
 800175c:	4413      	add	r3, r2
 800175e:	2204      	movs	r2, #4
 8001760:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001764:	4b22      	ldr	r3, [pc, #136]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001766:	681a      	ldr	r2, [r3, #0]
 8001768:	897b      	ldrh	r3, [r7, #10]
 800176a:	1c59      	adds	r1, r3, #1
 800176c:	8179      	strh	r1, [r7, #10]
 800176e:	4618      	mov	r0, r3
 8001770:	4b22      	ldr	r3, [pc, #136]	; (80017fc <send_DHCP_REQUEST+0x2e4>)
 8001772:	7819      	ldrb	r1, [r3, #0]
 8001774:	1813      	adds	r3, r2, r0
 8001776:	460a      	mov	r2, r1
 8001778:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800177c:	4b1c      	ldr	r3, [pc, #112]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 800177e:	681a      	ldr	r2, [r3, #0]
 8001780:	897b      	ldrh	r3, [r7, #10]
 8001782:	1c59      	adds	r1, r3, #1
 8001784:	8179      	strh	r1, [r7, #10]
 8001786:	4618      	mov	r0, r3
 8001788:	4b1c      	ldr	r3, [pc, #112]	; (80017fc <send_DHCP_REQUEST+0x2e4>)
 800178a:	7859      	ldrb	r1, [r3, #1]
 800178c:	1813      	adds	r3, r2, r0
 800178e:	460a      	mov	r2, r1
 8001790:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001794:	4b16      	ldr	r3, [pc, #88]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 8001796:	681a      	ldr	r2, [r3, #0]
 8001798:	897b      	ldrh	r3, [r7, #10]
 800179a:	1c59      	adds	r1, r3, #1
 800179c:	8179      	strh	r1, [r7, #10]
 800179e:	4618      	mov	r0, r3
 80017a0:	4b16      	ldr	r3, [pc, #88]	; (80017fc <send_DHCP_REQUEST+0x2e4>)
 80017a2:	7899      	ldrb	r1, [r3, #2]
 80017a4:	1813      	adds	r3, r2, r0
 80017a6:	460a      	mov	r2, r1
 80017a8:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80017ac:	4b10      	ldr	r3, [pc, #64]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80017ae:	681a      	ldr	r2, [r3, #0]
 80017b0:	897b      	ldrh	r3, [r7, #10]
 80017b2:	1c59      	adds	r1, r3, #1
 80017b4:	8179      	strh	r1, [r7, #10]
 80017b6:	4618      	mov	r0, r3
 80017b8:	4b10      	ldr	r3, [pc, #64]	; (80017fc <send_DHCP_REQUEST+0x2e4>)
 80017ba:	78d9      	ldrb	r1, [r3, #3]
 80017bc:	1813      	adds	r3, r2, r0
 80017be:	460a      	mov	r2, r1
 80017c0:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80017c4:	4b0a      	ldr	r3, [pc, #40]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80017c6:	681a      	ldr	r2, [r3, #0]
 80017c8:	897b      	ldrh	r3, [r7, #10]
 80017ca:	1c59      	adds	r1, r3, #1
 80017cc:	8179      	strh	r1, [r7, #10]
 80017ce:	4413      	add	r3, r2
 80017d0:	220c      	movs	r2, #12
 80017d2:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80017d6:	4b06      	ldr	r3, [pc, #24]	; (80017f0 <send_DHCP_REQUEST+0x2d8>)
 80017d8:	681a      	ldr	r2, [r3, #0]
 80017da:	897b      	ldrh	r3, [r7, #10]
 80017dc:	1c59      	adds	r1, r3, #1
 80017de:	8179      	strh	r1, [r7, #10]
 80017e0:	4413      	add	r3, r2
 80017e2:	2200      	movs	r2, #0
 80017e4:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80017e8:	2300      	movs	r3, #0
 80017ea:	60fb      	str	r3, [r7, #12]
 80017ec:	e019      	b.n	8001822 <send_DHCP_REQUEST+0x30a>
 80017ee:	bf00      	nop
 80017f0:	20000270 	.word	0x20000270
 80017f4:	20000274 	.word	0x20000274
 80017f8:	20000254 	.word	0x20000254
 80017fc:	2000024c 	.word	0x2000024c
 8001800:	4b86      	ldr	r3, [pc, #536]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001802:	681a      	ldr	r2, [r3, #0]
 8001804:	897b      	ldrh	r3, [r7, #10]
 8001806:	1c59      	adds	r1, r3, #1
 8001808:	8179      	strh	r1, [r7, #10]
 800180a:	4618      	mov	r0, r3
 800180c:	4984      	ldr	r1, [pc, #528]	; (8001a20 <send_DHCP_REQUEST+0x508>)
 800180e:	68fb      	ldr	r3, [r7, #12]
 8001810:	440b      	add	r3, r1
 8001812:	7819      	ldrb	r1, [r3, #0]
 8001814:	1813      	adds	r3, r2, r0
 8001816:	460a      	mov	r2, r1
 8001818:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800181c:	68fb      	ldr	r3, [r7, #12]
 800181e:	3301      	adds	r3, #1
 8001820:	60fb      	str	r3, [r7, #12]
 8001822:	4a7f      	ldr	r2, [pc, #508]	; (8001a20 <send_DHCP_REQUEST+0x508>)
 8001824:	68fb      	ldr	r3, [r7, #12]
 8001826:	4413      	add	r3, r2
 8001828:	781b      	ldrb	r3, [r3, #0]
 800182a:	2b00      	cmp	r3, #0
 800182c:	d1e8      	bne.n	8001800 <send_DHCP_REQUEST+0x2e8>
 800182e:	4b7d      	ldr	r3, [pc, #500]	; (8001a24 <send_DHCP_REQUEST+0x50c>)
 8001830:	78db      	ldrb	r3, [r3, #3]
 8001832:	091b      	lsrs	r3, r3, #4
 8001834:	b2da      	uxtb	r2, r3
 8001836:	4b79      	ldr	r3, [pc, #484]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001838:	681c      	ldr	r4, [r3, #0]
 800183a:	897b      	ldrh	r3, [r7, #10]
 800183c:	1c59      	adds	r1, r3, #1
 800183e:	8179      	strh	r1, [r7, #10]
 8001840:	461d      	mov	r5, r3
 8001842:	4610      	mov	r0, r2
 8001844:	f000 fede 	bl	8002604 <NibbleToHex>
 8001848:	4603      	mov	r3, r0
 800184a:	461a      	mov	r2, r3
 800184c:	1963      	adds	r3, r4, r5
 800184e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001852:	4b74      	ldr	r3, [pc, #464]	; (8001a24 <send_DHCP_REQUEST+0x50c>)
 8001854:	78da      	ldrb	r2, [r3, #3]
 8001856:	4b71      	ldr	r3, [pc, #452]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001858:	681c      	ldr	r4, [r3, #0]
 800185a:	897b      	ldrh	r3, [r7, #10]
 800185c:	1c59      	adds	r1, r3, #1
 800185e:	8179      	strh	r1, [r7, #10]
 8001860:	461d      	mov	r5, r3
 8001862:	4610      	mov	r0, r2
 8001864:	f000 fece 	bl	8002604 <NibbleToHex>
 8001868:	4603      	mov	r3, r0
 800186a:	461a      	mov	r2, r3
 800186c:	1963      	adds	r3, r4, r5
 800186e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001872:	4b6c      	ldr	r3, [pc, #432]	; (8001a24 <send_DHCP_REQUEST+0x50c>)
 8001874:	791b      	ldrb	r3, [r3, #4]
 8001876:	091b      	lsrs	r3, r3, #4
 8001878:	b2da      	uxtb	r2, r3
 800187a:	4b68      	ldr	r3, [pc, #416]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 800187c:	681c      	ldr	r4, [r3, #0]
 800187e:	897b      	ldrh	r3, [r7, #10]
 8001880:	1c59      	adds	r1, r3, #1
 8001882:	8179      	strh	r1, [r7, #10]
 8001884:	461d      	mov	r5, r3
 8001886:	4610      	mov	r0, r2
 8001888:	f000 febc 	bl	8002604 <NibbleToHex>
 800188c:	4603      	mov	r3, r0
 800188e:	461a      	mov	r2, r3
 8001890:	1963      	adds	r3, r4, r5
 8001892:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001896:	4b63      	ldr	r3, [pc, #396]	; (8001a24 <send_DHCP_REQUEST+0x50c>)
 8001898:	791a      	ldrb	r2, [r3, #4]
 800189a:	4b60      	ldr	r3, [pc, #384]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 800189c:	681c      	ldr	r4, [r3, #0]
 800189e:	897b      	ldrh	r3, [r7, #10]
 80018a0:	1c59      	adds	r1, r3, #1
 80018a2:	8179      	strh	r1, [r7, #10]
 80018a4:	461d      	mov	r5, r3
 80018a6:	4610      	mov	r0, r2
 80018a8:	f000 feac 	bl	8002604 <NibbleToHex>
 80018ac:	4603      	mov	r3, r0
 80018ae:	461a      	mov	r2, r3
 80018b0:	1963      	adds	r3, r4, r5
 80018b2:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80018b6:	4b5b      	ldr	r3, [pc, #364]	; (8001a24 <send_DHCP_REQUEST+0x50c>)
 80018b8:	795b      	ldrb	r3, [r3, #5]
 80018ba:	091b      	lsrs	r3, r3, #4
 80018bc:	b2da      	uxtb	r2, r3
 80018be:	4b57      	ldr	r3, [pc, #348]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 80018c0:	681c      	ldr	r4, [r3, #0]
 80018c2:	897b      	ldrh	r3, [r7, #10]
 80018c4:	1c59      	adds	r1, r3, #1
 80018c6:	8179      	strh	r1, [r7, #10]
 80018c8:	461d      	mov	r5, r3
 80018ca:	4610      	mov	r0, r2
 80018cc:	f000 fe9a 	bl	8002604 <NibbleToHex>
 80018d0:	4603      	mov	r3, r0
 80018d2:	461a      	mov	r2, r3
 80018d4:	1963      	adds	r3, r4, r5
 80018d6:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80018da:	4b52      	ldr	r3, [pc, #328]	; (8001a24 <send_DHCP_REQUEST+0x50c>)
 80018dc:	795a      	ldrb	r2, [r3, #5]
 80018de:	4b4f      	ldr	r3, [pc, #316]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 80018e0:	681c      	ldr	r4, [r3, #0]
 80018e2:	897b      	ldrh	r3, [r7, #10]
 80018e4:	1c59      	adds	r1, r3, #1
 80018e6:	8179      	strh	r1, [r7, #10]
 80018e8:	461d      	mov	r5, r3
 80018ea:	4610      	mov	r0, r2
 80018ec:	f000 fe8a 	bl	8002604 <NibbleToHex>
 80018f0:	4603      	mov	r3, r0
 80018f2:	461a      	mov	r2, r3
 80018f4:	1963      	adds	r3, r4, r5
 80018f6:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80018fa:	68fb      	ldr	r3, [r7, #12]
 80018fc:	b2d9      	uxtb	r1, r3
 80018fe:	4b47      	ldr	r3, [pc, #284]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001900:	681a      	ldr	r2, [r3, #0]
 8001902:	8978      	ldrh	r0, [r7, #10]
 8001904:	68fb      	ldr	r3, [r7, #12]
 8001906:	3307      	adds	r3, #7
 8001908:	1ac3      	subs	r3, r0, r3
 800190a:	3106      	adds	r1, #6
 800190c:	b2c9      	uxtb	r1, r1
 800190e:	4413      	add	r3, r2
 8001910:	460a      	mov	r2, r1
 8001912:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001916:	4b41      	ldr	r3, [pc, #260]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001918:	681a      	ldr	r2, [r3, #0]
 800191a:	897b      	ldrh	r3, [r7, #10]
 800191c:	1c59      	adds	r1, r3, #1
 800191e:	8179      	strh	r1, [r7, #10]
 8001920:	4413      	add	r3, r2
 8001922:	2237      	movs	r2, #55	; 0x37
 8001924:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001928:	4b3c      	ldr	r3, [pc, #240]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 800192a:	681a      	ldr	r2, [r3, #0]
 800192c:	897b      	ldrh	r3, [r7, #10]
 800192e:	1c59      	adds	r1, r3, #1
 8001930:	8179      	strh	r1, [r7, #10]
 8001932:	4413      	add	r3, r2
 8001934:	2208      	movs	r2, #8
 8001936:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800193a:	4b38      	ldr	r3, [pc, #224]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 800193c:	681a      	ldr	r2, [r3, #0]
 800193e:	897b      	ldrh	r3, [r7, #10]
 8001940:	1c59      	adds	r1, r3, #1
 8001942:	8179      	strh	r1, [r7, #10]
 8001944:	4413      	add	r3, r2
 8001946:	2201      	movs	r2, #1
 8001948:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800194c:	4b33      	ldr	r3, [pc, #204]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 800194e:	681a      	ldr	r2, [r3, #0]
 8001950:	897b      	ldrh	r3, [r7, #10]
 8001952:	1c59      	adds	r1, r3, #1
 8001954:	8179      	strh	r1, [r7, #10]
 8001956:	4413      	add	r3, r2
 8001958:	2203      	movs	r2, #3
 800195a:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 800195e:	4b2f      	ldr	r3, [pc, #188]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001960:	681a      	ldr	r2, [r3, #0]
 8001962:	897b      	ldrh	r3, [r7, #10]
 8001964:	1c59      	adds	r1, r3, #1
 8001966:	8179      	strh	r1, [r7, #10]
 8001968:	4413      	add	r3, r2
 800196a:	2206      	movs	r2, #6
 800196c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001970:	4b2a      	ldr	r3, [pc, #168]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001972:	681a      	ldr	r2, [r3, #0]
 8001974:	897b      	ldrh	r3, [r7, #10]
 8001976:	1c59      	adds	r1, r3, #1
 8001978:	8179      	strh	r1, [r7, #10]
 800197a:	4413      	add	r3, r2
 800197c:	220f      	movs	r2, #15
 800197e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001982:	4b26      	ldr	r3, [pc, #152]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001984:	681a      	ldr	r2, [r3, #0]
 8001986:	897b      	ldrh	r3, [r7, #10]
 8001988:	1c59      	adds	r1, r3, #1
 800198a:	8179      	strh	r1, [r7, #10]
 800198c:	4413      	add	r3, r2
 800198e:	223a      	movs	r2, #58	; 0x3a
 8001990:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001994:	4b21      	ldr	r3, [pc, #132]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001996:	681a      	ldr	r2, [r3, #0]
 8001998:	897b      	ldrh	r3, [r7, #10]
 800199a:	1c59      	adds	r1, r3, #1
 800199c:	8179      	strh	r1, [r7, #10]
 800199e:	4413      	add	r3, r2
 80019a0:	223b      	movs	r2, #59	; 0x3b
 80019a2:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80019a6:	4b1d      	ldr	r3, [pc, #116]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 80019a8:	681a      	ldr	r2, [r3, #0]
 80019aa:	897b      	ldrh	r3, [r7, #10]
 80019ac:	1c59      	adds	r1, r3, #1
 80019ae:	8179      	strh	r1, [r7, #10]
 80019b0:	4413      	add	r3, r2
 80019b2:	221f      	movs	r2, #31
 80019b4:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80019b8:	4b18      	ldr	r3, [pc, #96]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 80019ba:	681a      	ldr	r2, [r3, #0]
 80019bc:	897b      	ldrh	r3, [r7, #10]
 80019be:	1c59      	adds	r1, r3, #1
 80019c0:	8179      	strh	r1, [r7, #10]
 80019c2:	4413      	add	r3, r2
 80019c4:	2221      	movs	r2, #33	; 0x21
 80019c6:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80019ca:	4b14      	ldr	r3, [pc, #80]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 80019cc:	681a      	ldr	r2, [r3, #0]
 80019ce:	897b      	ldrh	r3, [r7, #10]
 80019d0:	1c59      	adds	r1, r3, #1
 80019d2:	8179      	strh	r1, [r7, #10]
 80019d4:	4413      	add	r3, r2
 80019d6:	22ff      	movs	r2, #255	; 0xff
 80019d8:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80019dc:	897b      	ldrh	r3, [r7, #10]
 80019de:	60fb      	str	r3, [r7, #12]
 80019e0:	e009      	b.n	80019f6 <send_DHCP_REQUEST+0x4de>
 80019e2:	4b0e      	ldr	r3, [pc, #56]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 80019e4:	681a      	ldr	r2, [r3, #0]
 80019e6:	68fb      	ldr	r3, [r7, #12]
 80019e8:	4413      	add	r3, r2
 80019ea:	33ec      	adds	r3, #236	; 0xec
 80019ec:	2200      	movs	r2, #0
 80019ee:	701a      	strb	r2, [r3, #0]
 80019f0:	68fb      	ldr	r3, [r7, #12]
 80019f2:	3301      	adds	r3, #1
 80019f4:	60fb      	str	r3, [r7, #12]
 80019f6:	68fb      	ldr	r3, [r7, #12]
 80019f8:	f5b3 7f9c 	cmp.w	r3, #312	; 0x138
 80019fc:	dbf1      	blt.n	80019e2 <send_DHCP_REQUEST+0x4ca>
 80019fe:	4b0a      	ldr	r3, [pc, #40]	; (8001a28 <send_DHCP_REQUEST+0x510>)
 8001a00:	7818      	ldrb	r0, [r3, #0]
 8001a02:	4b06      	ldr	r3, [pc, #24]	; (8001a1c <send_DHCP_REQUEST+0x504>)
 8001a04:	6819      	ldr	r1, [r3, #0]
 8001a06:	1d3b      	adds	r3, r7, #4
 8001a08:	2243      	movs	r2, #67	; 0x43
 8001a0a:	9200      	str	r2, [sp, #0]
 8001a0c:	f44f 7209 	mov.w	r2, #548	; 0x224
 8001a10:	f001 fda2 	bl	8003558 <sendto>
 8001a14:	bf00      	nop
 8001a16:	3710      	adds	r7, #16
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	bdb0      	pop	{r4, r5, r7, pc}
 8001a1c:	20000270 	.word	0x20000270
 8001a20:	20000008 	.word	0x20000008
 8001a24:	20000274 	.word	0x20000274
 8001a28:	20000248 	.word	0x20000248

08001a2c <send_DHCP_DECLINE>:
 8001a2c:	b580      	push	{r7, lr}
 8001a2e:	b086      	sub	sp, #24
 8001a30:	af02      	add	r7, sp, #8
 8001a32:	2300      	movs	r3, #0
 8001a34:	817b      	strh	r3, [r7, #10]
 8001a36:	f7ff fb15 	bl	8001064 <makeDHCPMSG>
 8001a3a:	2304      	movs	r3, #4
 8001a3c:	817b      	strh	r3, [r7, #10]
 8001a3e:	4b9f      	ldr	r3, [pc, #636]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001a40:	681b      	ldr	r3, [r3, #0]
 8001a42:	330a      	adds	r3, #10
 8001a44:	2200      	movs	r2, #0
 8001a46:	701a      	strb	r2, [r3, #0]
 8001a48:	4b9c      	ldr	r3, [pc, #624]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001a4a:	681b      	ldr	r3, [r3, #0]
 8001a4c:	330a      	adds	r3, #10
 8001a4e:	3301      	adds	r3, #1
 8001a50:	2200      	movs	r2, #0
 8001a52:	701a      	strb	r2, [r3, #0]
 8001a54:	4b99      	ldr	r3, [pc, #612]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001a56:	681a      	ldr	r2, [r3, #0]
 8001a58:	897b      	ldrh	r3, [r7, #10]
 8001a5a:	1c59      	adds	r1, r3, #1
 8001a5c:	8179      	strh	r1, [r7, #10]
 8001a5e:	4413      	add	r3, r2
 8001a60:	2235      	movs	r2, #53	; 0x35
 8001a62:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001a66:	4b95      	ldr	r3, [pc, #596]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001a68:	681a      	ldr	r2, [r3, #0]
 8001a6a:	897b      	ldrh	r3, [r7, #10]
 8001a6c:	1c59      	adds	r1, r3, #1
 8001a6e:	8179      	strh	r1, [r7, #10]
 8001a70:	4413      	add	r3, r2
 8001a72:	2201      	movs	r2, #1
 8001a74:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001a78:	4b90      	ldr	r3, [pc, #576]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001a7a:	681a      	ldr	r2, [r3, #0]
 8001a7c:	897b      	ldrh	r3, [r7, #10]
 8001a7e:	1c59      	adds	r1, r3, #1
 8001a80:	8179      	strh	r1, [r7, #10]
 8001a82:	4413      	add	r3, r2
 8001a84:	2204      	movs	r2, #4
 8001a86:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001a8a:	4b8c      	ldr	r3, [pc, #560]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001a8c:	681a      	ldr	r2, [r3, #0]
 8001a8e:	897b      	ldrh	r3, [r7, #10]
 8001a90:	1c59      	adds	r1, r3, #1
 8001a92:	8179      	strh	r1, [r7, #10]
 8001a94:	4413      	add	r3, r2
 8001a96:	223d      	movs	r2, #61	; 0x3d
 8001a98:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001a9c:	4b87      	ldr	r3, [pc, #540]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001a9e:	681a      	ldr	r2, [r3, #0]
 8001aa0:	897b      	ldrh	r3, [r7, #10]
 8001aa2:	1c59      	adds	r1, r3, #1
 8001aa4:	8179      	strh	r1, [r7, #10]
 8001aa6:	4413      	add	r3, r2
 8001aa8:	2207      	movs	r2, #7
 8001aaa:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001aae:	4b83      	ldr	r3, [pc, #524]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001ab0:	681a      	ldr	r2, [r3, #0]
 8001ab2:	897b      	ldrh	r3, [r7, #10]
 8001ab4:	1c59      	adds	r1, r3, #1
 8001ab6:	8179      	strh	r1, [r7, #10]
 8001ab8:	4413      	add	r3, r2
 8001aba:	2201      	movs	r2, #1
 8001abc:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001ac0:	4b7e      	ldr	r3, [pc, #504]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001ac2:	681a      	ldr	r2, [r3, #0]
 8001ac4:	897b      	ldrh	r3, [r7, #10]
 8001ac6:	1c59      	adds	r1, r3, #1
 8001ac8:	8179      	strh	r1, [r7, #10]
 8001aca:	4618      	mov	r0, r3
 8001acc:	4b7c      	ldr	r3, [pc, #496]	; (8001cc0 <send_DHCP_DECLINE+0x294>)
 8001ace:	7819      	ldrb	r1, [r3, #0]
 8001ad0:	1813      	adds	r3, r2, r0
 8001ad2:	460a      	mov	r2, r1
 8001ad4:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001ad8:	4b78      	ldr	r3, [pc, #480]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001ada:	681a      	ldr	r2, [r3, #0]
 8001adc:	897b      	ldrh	r3, [r7, #10]
 8001ade:	1c59      	adds	r1, r3, #1
 8001ae0:	8179      	strh	r1, [r7, #10]
 8001ae2:	4618      	mov	r0, r3
 8001ae4:	4b76      	ldr	r3, [pc, #472]	; (8001cc0 <send_DHCP_DECLINE+0x294>)
 8001ae6:	7859      	ldrb	r1, [r3, #1]
 8001ae8:	1813      	adds	r3, r2, r0
 8001aea:	460a      	mov	r2, r1
 8001aec:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001af0:	4b72      	ldr	r3, [pc, #456]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001af2:	681a      	ldr	r2, [r3, #0]
 8001af4:	897b      	ldrh	r3, [r7, #10]
 8001af6:	1c59      	adds	r1, r3, #1
 8001af8:	8179      	strh	r1, [r7, #10]
 8001afa:	4618      	mov	r0, r3
 8001afc:	4b70      	ldr	r3, [pc, #448]	; (8001cc0 <send_DHCP_DECLINE+0x294>)
 8001afe:	7899      	ldrb	r1, [r3, #2]
 8001b00:	1813      	adds	r3, r2, r0
 8001b02:	460a      	mov	r2, r1
 8001b04:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001b08:	4b6c      	ldr	r3, [pc, #432]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001b0a:	681a      	ldr	r2, [r3, #0]
 8001b0c:	897b      	ldrh	r3, [r7, #10]
 8001b0e:	1c59      	adds	r1, r3, #1
 8001b10:	8179      	strh	r1, [r7, #10]
 8001b12:	4618      	mov	r0, r3
 8001b14:	4b6a      	ldr	r3, [pc, #424]	; (8001cc0 <send_DHCP_DECLINE+0x294>)
 8001b16:	78d9      	ldrb	r1, [r3, #3]
 8001b18:	1813      	adds	r3, r2, r0
 8001b1a:	460a      	mov	r2, r1
 8001b1c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001b20:	4b66      	ldr	r3, [pc, #408]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001b22:	681a      	ldr	r2, [r3, #0]
 8001b24:	897b      	ldrh	r3, [r7, #10]
 8001b26:	1c59      	adds	r1, r3, #1
 8001b28:	8179      	strh	r1, [r7, #10]
 8001b2a:	4618      	mov	r0, r3
 8001b2c:	4b64      	ldr	r3, [pc, #400]	; (8001cc0 <send_DHCP_DECLINE+0x294>)
 8001b2e:	7919      	ldrb	r1, [r3, #4]
 8001b30:	1813      	adds	r3, r2, r0
 8001b32:	460a      	mov	r2, r1
 8001b34:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001b38:	4b60      	ldr	r3, [pc, #384]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001b3a:	681a      	ldr	r2, [r3, #0]
 8001b3c:	897b      	ldrh	r3, [r7, #10]
 8001b3e:	1c59      	adds	r1, r3, #1
 8001b40:	8179      	strh	r1, [r7, #10]
 8001b42:	4618      	mov	r0, r3
 8001b44:	4b5e      	ldr	r3, [pc, #376]	; (8001cc0 <send_DHCP_DECLINE+0x294>)
 8001b46:	7959      	ldrb	r1, [r3, #5]
 8001b48:	1813      	adds	r3, r2, r0
 8001b4a:	460a      	mov	r2, r1
 8001b4c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001b50:	4b5a      	ldr	r3, [pc, #360]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001b52:	681a      	ldr	r2, [r3, #0]
 8001b54:	897b      	ldrh	r3, [r7, #10]
 8001b56:	1c59      	adds	r1, r3, #1
 8001b58:	8179      	strh	r1, [r7, #10]
 8001b5a:	4413      	add	r3, r2
 8001b5c:	2232      	movs	r2, #50	; 0x32
 8001b5e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001b62:	4b56      	ldr	r3, [pc, #344]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001b64:	681a      	ldr	r2, [r3, #0]
 8001b66:	897b      	ldrh	r3, [r7, #10]
 8001b68:	1c59      	adds	r1, r3, #1
 8001b6a:	8179      	strh	r1, [r7, #10]
 8001b6c:	4413      	add	r3, r2
 8001b6e:	2204      	movs	r2, #4
 8001b70:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001b74:	4b51      	ldr	r3, [pc, #324]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001b76:	681a      	ldr	r2, [r3, #0]
 8001b78:	897b      	ldrh	r3, [r7, #10]
 8001b7a:	1c59      	adds	r1, r3, #1
 8001b7c:	8179      	strh	r1, [r7, #10]
 8001b7e:	4618      	mov	r0, r3
 8001b80:	4b50      	ldr	r3, [pc, #320]	; (8001cc4 <send_DHCP_DECLINE+0x298>)
 8001b82:	7819      	ldrb	r1, [r3, #0]
 8001b84:	1813      	adds	r3, r2, r0
 8001b86:	460a      	mov	r2, r1
 8001b88:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001b8c:	4b4b      	ldr	r3, [pc, #300]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001b8e:	681a      	ldr	r2, [r3, #0]
 8001b90:	897b      	ldrh	r3, [r7, #10]
 8001b92:	1c59      	adds	r1, r3, #1
 8001b94:	8179      	strh	r1, [r7, #10]
 8001b96:	4618      	mov	r0, r3
 8001b98:	4b4a      	ldr	r3, [pc, #296]	; (8001cc4 <send_DHCP_DECLINE+0x298>)
 8001b9a:	7859      	ldrb	r1, [r3, #1]
 8001b9c:	1813      	adds	r3, r2, r0
 8001b9e:	460a      	mov	r2, r1
 8001ba0:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001ba4:	4b45      	ldr	r3, [pc, #276]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001ba6:	681a      	ldr	r2, [r3, #0]
 8001ba8:	897b      	ldrh	r3, [r7, #10]
 8001baa:	1c59      	adds	r1, r3, #1
 8001bac:	8179      	strh	r1, [r7, #10]
 8001bae:	4618      	mov	r0, r3
 8001bb0:	4b44      	ldr	r3, [pc, #272]	; (8001cc4 <send_DHCP_DECLINE+0x298>)
 8001bb2:	7899      	ldrb	r1, [r3, #2]
 8001bb4:	1813      	adds	r3, r2, r0
 8001bb6:	460a      	mov	r2, r1
 8001bb8:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001bbc:	4b3f      	ldr	r3, [pc, #252]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001bbe:	681a      	ldr	r2, [r3, #0]
 8001bc0:	897b      	ldrh	r3, [r7, #10]
 8001bc2:	1c59      	adds	r1, r3, #1
 8001bc4:	8179      	strh	r1, [r7, #10]
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	4b3e      	ldr	r3, [pc, #248]	; (8001cc4 <send_DHCP_DECLINE+0x298>)
 8001bca:	78d9      	ldrb	r1, [r3, #3]
 8001bcc:	1813      	adds	r3, r2, r0
 8001bce:	460a      	mov	r2, r1
 8001bd0:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001bd4:	4b39      	ldr	r3, [pc, #228]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001bd6:	681a      	ldr	r2, [r3, #0]
 8001bd8:	897b      	ldrh	r3, [r7, #10]
 8001bda:	1c59      	adds	r1, r3, #1
 8001bdc:	8179      	strh	r1, [r7, #10]
 8001bde:	4413      	add	r3, r2
 8001be0:	2236      	movs	r2, #54	; 0x36
 8001be2:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001be6:	4b35      	ldr	r3, [pc, #212]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001be8:	681a      	ldr	r2, [r3, #0]
 8001bea:	897b      	ldrh	r3, [r7, #10]
 8001bec:	1c59      	adds	r1, r3, #1
 8001bee:	8179      	strh	r1, [r7, #10]
 8001bf0:	4413      	add	r3, r2
 8001bf2:	2204      	movs	r2, #4
 8001bf4:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001bf8:	4b30      	ldr	r3, [pc, #192]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001bfa:	681a      	ldr	r2, [r3, #0]
 8001bfc:	897b      	ldrh	r3, [r7, #10]
 8001bfe:	1c59      	adds	r1, r3, #1
 8001c00:	8179      	strh	r1, [r7, #10]
 8001c02:	4618      	mov	r0, r3
 8001c04:	4b30      	ldr	r3, [pc, #192]	; (8001cc8 <send_DHCP_DECLINE+0x29c>)
 8001c06:	7819      	ldrb	r1, [r3, #0]
 8001c08:	1813      	adds	r3, r2, r0
 8001c0a:	460a      	mov	r2, r1
 8001c0c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001c10:	4b2a      	ldr	r3, [pc, #168]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001c12:	681a      	ldr	r2, [r3, #0]
 8001c14:	897b      	ldrh	r3, [r7, #10]
 8001c16:	1c59      	adds	r1, r3, #1
 8001c18:	8179      	strh	r1, [r7, #10]
 8001c1a:	4618      	mov	r0, r3
 8001c1c:	4b2a      	ldr	r3, [pc, #168]	; (8001cc8 <send_DHCP_DECLINE+0x29c>)
 8001c1e:	7859      	ldrb	r1, [r3, #1]
 8001c20:	1813      	adds	r3, r2, r0
 8001c22:	460a      	mov	r2, r1
 8001c24:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001c28:	4b24      	ldr	r3, [pc, #144]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001c2a:	681a      	ldr	r2, [r3, #0]
 8001c2c:	897b      	ldrh	r3, [r7, #10]
 8001c2e:	1c59      	adds	r1, r3, #1
 8001c30:	8179      	strh	r1, [r7, #10]
 8001c32:	4618      	mov	r0, r3
 8001c34:	4b24      	ldr	r3, [pc, #144]	; (8001cc8 <send_DHCP_DECLINE+0x29c>)
 8001c36:	7899      	ldrb	r1, [r3, #2]
 8001c38:	1813      	adds	r3, r2, r0
 8001c3a:	460a      	mov	r2, r1
 8001c3c:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001c40:	4b1e      	ldr	r3, [pc, #120]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001c42:	681a      	ldr	r2, [r3, #0]
 8001c44:	897b      	ldrh	r3, [r7, #10]
 8001c46:	1c59      	adds	r1, r3, #1
 8001c48:	8179      	strh	r1, [r7, #10]
 8001c4a:	4618      	mov	r0, r3
 8001c4c:	4b1e      	ldr	r3, [pc, #120]	; (8001cc8 <send_DHCP_DECLINE+0x29c>)
 8001c4e:	78d9      	ldrb	r1, [r3, #3]
 8001c50:	1813      	adds	r3, r2, r0
 8001c52:	460a      	mov	r2, r1
 8001c54:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001c58:	4b18      	ldr	r3, [pc, #96]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001c5a:	681a      	ldr	r2, [r3, #0]
 8001c5c:	897b      	ldrh	r3, [r7, #10]
 8001c5e:	1c59      	adds	r1, r3, #1
 8001c60:	8179      	strh	r1, [r7, #10]
 8001c62:	4413      	add	r3, r2
 8001c64:	22ff      	movs	r2, #255	; 0xff
 8001c66:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001c6a:	897b      	ldrh	r3, [r7, #10]
 8001c6c:	60fb      	str	r3, [r7, #12]
 8001c6e:	e009      	b.n	8001c84 <send_DHCP_DECLINE+0x258>
 8001c70:	4b12      	ldr	r3, [pc, #72]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001c72:	681a      	ldr	r2, [r3, #0]
 8001c74:	68fb      	ldr	r3, [r7, #12]
 8001c76:	4413      	add	r3, r2
 8001c78:	33ec      	adds	r3, #236	; 0xec
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	701a      	strb	r2, [r3, #0]
 8001c7e:	68fb      	ldr	r3, [r7, #12]
 8001c80:	3301      	adds	r3, #1
 8001c82:	60fb      	str	r3, [r7, #12]
 8001c84:	68fb      	ldr	r3, [r7, #12]
 8001c86:	f5b3 7f9c 	cmp.w	r3, #312	; 0x138
 8001c8a:	dbf1      	blt.n	8001c70 <send_DHCP_DECLINE+0x244>
 8001c8c:	23ff      	movs	r3, #255	; 0xff
 8001c8e:	713b      	strb	r3, [r7, #4]
 8001c90:	23ff      	movs	r3, #255	; 0xff
 8001c92:	717b      	strb	r3, [r7, #5]
 8001c94:	23ff      	movs	r3, #255	; 0xff
 8001c96:	71bb      	strb	r3, [r7, #6]
 8001c98:	23ff      	movs	r3, #255	; 0xff
 8001c9a:	71fb      	strb	r3, [r7, #7]
 8001c9c:	4b0b      	ldr	r3, [pc, #44]	; (8001ccc <send_DHCP_DECLINE+0x2a0>)
 8001c9e:	7818      	ldrb	r0, [r3, #0]
 8001ca0:	4b06      	ldr	r3, [pc, #24]	; (8001cbc <send_DHCP_DECLINE+0x290>)
 8001ca2:	6819      	ldr	r1, [r3, #0]
 8001ca4:	1d3b      	adds	r3, r7, #4
 8001ca6:	2243      	movs	r2, #67	; 0x43
 8001ca8:	9200      	str	r2, [sp, #0]
 8001caa:	f44f 7209 	mov.w	r2, #548	; 0x224
 8001cae:	f001 fc53 	bl	8003558 <sendto>
 8001cb2:	bf00      	nop
 8001cb4:	3710      	adds	r7, #16
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	bd80      	pop	{r7, pc}
 8001cba:	bf00      	nop
 8001cbc:	20000270 	.word	0x20000270
 8001cc0:	20000274 	.word	0x20000274
 8001cc4:	20000254 	.word	0x20000254
 8001cc8:	2000024c 	.word	0x2000024c
 8001ccc:	20000248 	.word	0x20000248

08001cd0 <parseDHCPMSG>:
 8001cd0:	b590      	push	{r4, r7, lr}
 8001cd2:	b089      	sub	sp, #36	; 0x24
 8001cd4:	af02      	add	r7, sp, #8
 8001cd6:	2300      	movs	r3, #0
 8001cd8:	74fb      	strb	r3, [r7, #19]
 8001cda:	4baa      	ldr	r3, [pc, #680]	; (8001f84 <parseDHCPMSG+0x2b4>)
 8001cdc:	781b      	ldrb	r3, [r3, #0]
 8001cde:	4618      	mov	r0, r3
 8001ce0:	f000 fe6b 	bl	80029ba <getSn_RX_RSR>
 8001ce4:	4603      	mov	r3, r0
 8001ce6:	823b      	strh	r3, [r7, #16]
 8001ce8:	8a3b      	ldrh	r3, [r7, #16]
 8001cea:	2b00      	cmp	r3, #0
 8001cec:	d011      	beq.n	8001d12 <parseDHCPMSG+0x42>
 8001cee:	4ba5      	ldr	r3, [pc, #660]	; (8001f84 <parseDHCPMSG+0x2b4>)
 8001cf0:	7818      	ldrb	r0, [r3, #0]
 8001cf2:	4ba5      	ldr	r3, [pc, #660]	; (8001f88 <parseDHCPMSG+0x2b8>)
 8001cf4:	6819      	ldr	r1, [r3, #0]
 8001cf6:	1d3c      	adds	r4, r7, #4
 8001cf8:	8a3a      	ldrh	r2, [r7, #16]
 8001cfa:	1cbb      	adds	r3, r7, #2
 8001cfc:	9300      	str	r3, [sp, #0]
 8001cfe:	4623      	mov	r3, r4
 8001d00:	f001 fd60 	bl	80037c4 <recvfrom>
 8001d04:	4603      	mov	r3, r0
 8001d06:	823b      	strh	r3, [r7, #16]
 8001d08:	887b      	ldrh	r3, [r7, #2]
 8001d0a:	2b43      	cmp	r3, #67	; 0x43
 8001d0c:	f040 81a7 	bne.w	800205e <parseDHCPMSG+0x38e>
 8001d10:	e001      	b.n	8001d16 <parseDHCPMSG+0x46>
 8001d12:	2300      	movs	r3, #0
 8001d14:	e1a5      	b.n	8002062 <parseDHCPMSG+0x392>
 8001d16:	4b9c      	ldr	r3, [pc, #624]	; (8001f88 <parseDHCPMSG+0x2b8>)
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	7f1a      	ldrb	r2, [r3, #28]
 8001d1c:	4b9b      	ldr	r3, [pc, #620]	; (8001f8c <parseDHCPMSG+0x2bc>)
 8001d1e:	781b      	ldrb	r3, [r3, #0]
 8001d20:	429a      	cmp	r2, r3
 8001d22:	d124      	bne.n	8001d6e <parseDHCPMSG+0x9e>
 8001d24:	4b98      	ldr	r3, [pc, #608]	; (8001f88 <parseDHCPMSG+0x2b8>)
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	7f5a      	ldrb	r2, [r3, #29]
 8001d2a:	4b98      	ldr	r3, [pc, #608]	; (8001f8c <parseDHCPMSG+0x2bc>)
 8001d2c:	785b      	ldrb	r3, [r3, #1]
 8001d2e:	429a      	cmp	r2, r3
 8001d30:	d11d      	bne.n	8001d6e <parseDHCPMSG+0x9e>
 8001d32:	4b95      	ldr	r3, [pc, #596]	; (8001f88 <parseDHCPMSG+0x2b8>)
 8001d34:	681b      	ldr	r3, [r3, #0]
 8001d36:	7f9a      	ldrb	r2, [r3, #30]
 8001d38:	4b94      	ldr	r3, [pc, #592]	; (8001f8c <parseDHCPMSG+0x2bc>)
 8001d3a:	789b      	ldrb	r3, [r3, #2]
 8001d3c:	429a      	cmp	r2, r3
 8001d3e:	d116      	bne.n	8001d6e <parseDHCPMSG+0x9e>
 8001d40:	4b91      	ldr	r3, [pc, #580]	; (8001f88 <parseDHCPMSG+0x2b8>)
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	7fda      	ldrb	r2, [r3, #31]
 8001d46:	4b91      	ldr	r3, [pc, #580]	; (8001f8c <parseDHCPMSG+0x2bc>)
 8001d48:	78db      	ldrb	r3, [r3, #3]
 8001d4a:	429a      	cmp	r2, r3
 8001d4c:	d10f      	bne.n	8001d6e <parseDHCPMSG+0x9e>
 8001d4e:	4b8e      	ldr	r3, [pc, #568]	; (8001f88 <parseDHCPMSG+0x2b8>)
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	f893 2020 	ldrb.w	r2, [r3, #32]
 8001d56:	4b8d      	ldr	r3, [pc, #564]	; (8001f8c <parseDHCPMSG+0x2bc>)
 8001d58:	791b      	ldrb	r3, [r3, #4]
 8001d5a:	429a      	cmp	r2, r3
 8001d5c:	d107      	bne.n	8001d6e <parseDHCPMSG+0x9e>
 8001d5e:	4b8a      	ldr	r3, [pc, #552]	; (8001f88 <parseDHCPMSG+0x2b8>)
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 8001d66:	4b89      	ldr	r3, [pc, #548]	; (8001f8c <parseDHCPMSG+0x2bc>)
 8001d68:	795b      	ldrb	r3, [r3, #5]
 8001d6a:	429a      	cmp	r2, r3
 8001d6c:	d001      	beq.n	8001d72 <parseDHCPMSG+0xa2>
 8001d6e:	2300      	movs	r3, #0
 8001d70:	e177      	b.n	8002062 <parseDHCPMSG+0x392>
 8001d72:	4b85      	ldr	r3, [pc, #532]	; (8001f88 <parseDHCPMSG+0x2b8>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	617b      	str	r3, [r7, #20]
 8001d78:	697b      	ldr	r3, [r7, #20]
 8001d7a:	33f0      	adds	r3, #240	; 0xf0
 8001d7c:	617b      	str	r3, [r7, #20]
 8001d7e:	8a3b      	ldrh	r3, [r7, #16]
 8001d80:	3bf0      	subs	r3, #240	; 0xf0
 8001d82:	697a      	ldr	r2, [r7, #20]
 8001d84:	4413      	add	r3, r2
 8001d86:	60fb      	str	r3, [r7, #12]
 8001d88:	e164      	b.n	8002054 <parseDHCPMSG+0x384>
 8001d8a:	697b      	ldr	r3, [r7, #20]
 8001d8c:	781b      	ldrb	r3, [r3, #0]
 8001d8e:	2b36      	cmp	r3, #54	; 0x36
 8001d90:	dc76      	bgt.n	8001e80 <parseDHCPMSG+0x1b0>
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	f2c0 8151 	blt.w	800203a <parseDHCPMSG+0x36a>
 8001d98:	2b36      	cmp	r3, #54	; 0x36
 8001d9a:	f200 814e 	bhi.w	800203a <parseDHCPMSG+0x36a>
 8001d9e:	a201      	add	r2, pc, #4	; (adr r2, 8001da4 <parseDHCPMSG+0xd4>)
 8001da0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001da4:	08001e8d 	.word	0x08001e8d
 8001da8:	08001ead 	.word	0x08001ead
 8001dac:	0800203b 	.word	0x0800203b
 8001db0:	08001eeb 	.word	0x08001eeb
 8001db4:	0800203b 	.word	0x0800203b
 8001db8:	0800203b 	.word	0x0800203b
 8001dbc:	08001f37 	.word	0x08001f37
 8001dc0:	0800203b 	.word	0x0800203b
 8001dc4:	0800203b 	.word	0x0800203b
 8001dc8:	0800203b 	.word	0x0800203b
 8001dcc:	0800203b 	.word	0x0800203b
 8001dd0:	0800203b 	.word	0x0800203b
 8001dd4:	0800203b 	.word	0x0800203b
 8001dd8:	0800203b 	.word	0x0800203b
 8001ddc:	0800203b 	.word	0x0800203b
 8001de0:	0800203b 	.word	0x0800203b
 8001de4:	0800203b 	.word	0x0800203b
 8001de8:	0800203b 	.word	0x0800203b
 8001dec:	0800203b 	.word	0x0800203b
 8001df0:	0800203b 	.word	0x0800203b
 8001df4:	0800203b 	.word	0x0800203b
 8001df8:	0800203b 	.word	0x0800203b
 8001dfc:	0800203b 	.word	0x0800203b
 8001e00:	0800203b 	.word	0x0800203b
 8001e04:	0800203b 	.word	0x0800203b
 8001e08:	0800203b 	.word	0x0800203b
 8001e0c:	0800203b 	.word	0x0800203b
 8001e10:	0800203b 	.word	0x0800203b
 8001e14:	0800203b 	.word	0x0800203b
 8001e18:	0800203b 	.word	0x0800203b
 8001e1c:	0800203b 	.word	0x0800203b
 8001e20:	0800203b 	.word	0x0800203b
 8001e24:	0800203b 	.word	0x0800203b
 8001e28:	0800203b 	.word	0x0800203b
 8001e2c:	0800203b 	.word	0x0800203b
 8001e30:	0800203b 	.word	0x0800203b
 8001e34:	0800203b 	.word	0x0800203b
 8001e38:	0800203b 	.word	0x0800203b
 8001e3c:	0800203b 	.word	0x0800203b
 8001e40:	0800203b 	.word	0x0800203b
 8001e44:	0800203b 	.word	0x0800203b
 8001e48:	0800203b 	.word	0x0800203b
 8001e4c:	0800203b 	.word	0x0800203b
 8001e50:	0800203b 	.word	0x0800203b
 8001e54:	0800203b 	.word	0x0800203b
 8001e58:	0800203b 	.word	0x0800203b
 8001e5c:	0800203b 	.word	0x0800203b
 8001e60:	0800203b 	.word	0x0800203b
 8001e64:	0800203b 	.word	0x0800203b
 8001e68:	0800203b 	.word	0x0800203b
 8001e6c:	0800203b 	.word	0x0800203b
 8001e70:	08001f9d 	.word	0x08001f9d
 8001e74:	0800203b 	.word	0x0800203b
 8001e78:	08001e95 	.word	0x08001e95
 8001e7c:	08001ff9 	.word	0x08001ff9
 8001e80:	2bff      	cmp	r3, #255	; 0xff
 8001e82:	f040 80da 	bne.w	800203a <parseDHCPMSG+0x36a>
 8001e86:	68fb      	ldr	r3, [r7, #12]
 8001e88:	617b      	str	r3, [r7, #20]
 8001e8a:	e0e3      	b.n	8002054 <parseDHCPMSG+0x384>
 8001e8c:	697b      	ldr	r3, [r7, #20]
 8001e8e:	3301      	adds	r3, #1
 8001e90:	617b      	str	r3, [r7, #20]
 8001e92:	e0df      	b.n	8002054 <parseDHCPMSG+0x384>
 8001e94:	697b      	ldr	r3, [r7, #20]
 8001e96:	3301      	adds	r3, #1
 8001e98:	617b      	str	r3, [r7, #20]
 8001e9a:	697b      	ldr	r3, [r7, #20]
 8001e9c:	3301      	adds	r3, #1
 8001e9e:	617b      	str	r3, [r7, #20]
 8001ea0:	697b      	ldr	r3, [r7, #20]
 8001ea2:	1c5a      	adds	r2, r3, #1
 8001ea4:	617a      	str	r2, [r7, #20]
 8001ea6:	781b      	ldrb	r3, [r3, #0]
 8001ea8:	74fb      	strb	r3, [r7, #19]
 8001eaa:	e0d3      	b.n	8002054 <parseDHCPMSG+0x384>
 8001eac:	697b      	ldr	r3, [r7, #20]
 8001eae:	3301      	adds	r3, #1
 8001eb0:	617b      	str	r3, [r7, #20]
 8001eb2:	697b      	ldr	r3, [r7, #20]
 8001eb4:	3301      	adds	r3, #1
 8001eb6:	617b      	str	r3, [r7, #20]
 8001eb8:	697b      	ldr	r3, [r7, #20]
 8001eba:	1c5a      	adds	r2, r3, #1
 8001ebc:	617a      	str	r2, [r7, #20]
 8001ebe:	781a      	ldrb	r2, [r3, #0]
 8001ec0:	4b33      	ldr	r3, [pc, #204]	; (8001f90 <parseDHCPMSG+0x2c0>)
 8001ec2:	701a      	strb	r2, [r3, #0]
 8001ec4:	697b      	ldr	r3, [r7, #20]
 8001ec6:	1c5a      	adds	r2, r3, #1
 8001ec8:	617a      	str	r2, [r7, #20]
 8001eca:	781a      	ldrb	r2, [r3, #0]
 8001ecc:	4b30      	ldr	r3, [pc, #192]	; (8001f90 <parseDHCPMSG+0x2c0>)
 8001ece:	705a      	strb	r2, [r3, #1]
 8001ed0:	697b      	ldr	r3, [r7, #20]
 8001ed2:	1c5a      	adds	r2, r3, #1
 8001ed4:	617a      	str	r2, [r7, #20]
 8001ed6:	781a      	ldrb	r2, [r3, #0]
 8001ed8:	4b2d      	ldr	r3, [pc, #180]	; (8001f90 <parseDHCPMSG+0x2c0>)
 8001eda:	709a      	strb	r2, [r3, #2]
 8001edc:	697b      	ldr	r3, [r7, #20]
 8001ede:	1c5a      	adds	r2, r3, #1
 8001ee0:	617a      	str	r2, [r7, #20]
 8001ee2:	781a      	ldrb	r2, [r3, #0]
 8001ee4:	4b2a      	ldr	r3, [pc, #168]	; (8001f90 <parseDHCPMSG+0x2c0>)
 8001ee6:	70da      	strb	r2, [r3, #3]
 8001ee8:	e0b4      	b.n	8002054 <parseDHCPMSG+0x384>
 8001eea:	697b      	ldr	r3, [r7, #20]
 8001eec:	3301      	adds	r3, #1
 8001eee:	617b      	str	r3, [r7, #20]
 8001ef0:	697b      	ldr	r3, [r7, #20]
 8001ef2:	1c5a      	adds	r2, r3, #1
 8001ef4:	617a      	str	r2, [r7, #20]
 8001ef6:	781b      	ldrb	r3, [r3, #0]
 8001ef8:	72fb      	strb	r3, [r7, #11]
 8001efa:	697b      	ldr	r3, [r7, #20]
 8001efc:	1c5a      	adds	r2, r3, #1
 8001efe:	617a      	str	r2, [r7, #20]
 8001f00:	781a      	ldrb	r2, [r3, #0]
 8001f02:	4b24      	ldr	r3, [pc, #144]	; (8001f94 <parseDHCPMSG+0x2c4>)
 8001f04:	701a      	strb	r2, [r3, #0]
 8001f06:	697b      	ldr	r3, [r7, #20]
 8001f08:	1c5a      	adds	r2, r3, #1
 8001f0a:	617a      	str	r2, [r7, #20]
 8001f0c:	781a      	ldrb	r2, [r3, #0]
 8001f0e:	4b21      	ldr	r3, [pc, #132]	; (8001f94 <parseDHCPMSG+0x2c4>)
 8001f10:	705a      	strb	r2, [r3, #1]
 8001f12:	697b      	ldr	r3, [r7, #20]
 8001f14:	1c5a      	adds	r2, r3, #1
 8001f16:	617a      	str	r2, [r7, #20]
 8001f18:	781a      	ldrb	r2, [r3, #0]
 8001f1a:	4b1e      	ldr	r3, [pc, #120]	; (8001f94 <parseDHCPMSG+0x2c4>)
 8001f1c:	709a      	strb	r2, [r3, #2]
 8001f1e:	697b      	ldr	r3, [r7, #20]
 8001f20:	1c5a      	adds	r2, r3, #1
 8001f22:	617a      	str	r2, [r7, #20]
 8001f24:	781a      	ldrb	r2, [r3, #0]
 8001f26:	4b1b      	ldr	r3, [pc, #108]	; (8001f94 <parseDHCPMSG+0x2c4>)
 8001f28:	70da      	strb	r2, [r3, #3]
 8001f2a:	7afb      	ldrb	r3, [r7, #11]
 8001f2c:	3b04      	subs	r3, #4
 8001f2e:	697a      	ldr	r2, [r7, #20]
 8001f30:	4413      	add	r3, r2
 8001f32:	617b      	str	r3, [r7, #20]
 8001f34:	e08e      	b.n	8002054 <parseDHCPMSG+0x384>
 8001f36:	697b      	ldr	r3, [r7, #20]
 8001f38:	3301      	adds	r3, #1
 8001f3a:	617b      	str	r3, [r7, #20]
 8001f3c:	697b      	ldr	r3, [r7, #20]
 8001f3e:	1c5a      	adds	r2, r3, #1
 8001f40:	617a      	str	r2, [r7, #20]
 8001f42:	781b      	ldrb	r3, [r3, #0]
 8001f44:	72fb      	strb	r3, [r7, #11]
 8001f46:	697b      	ldr	r3, [r7, #20]
 8001f48:	1c5a      	adds	r2, r3, #1
 8001f4a:	617a      	str	r2, [r7, #20]
 8001f4c:	781a      	ldrb	r2, [r3, #0]
 8001f4e:	4b12      	ldr	r3, [pc, #72]	; (8001f98 <parseDHCPMSG+0x2c8>)
 8001f50:	701a      	strb	r2, [r3, #0]
 8001f52:	697b      	ldr	r3, [r7, #20]
 8001f54:	1c5a      	adds	r2, r3, #1
 8001f56:	617a      	str	r2, [r7, #20]
 8001f58:	781a      	ldrb	r2, [r3, #0]
 8001f5a:	4b0f      	ldr	r3, [pc, #60]	; (8001f98 <parseDHCPMSG+0x2c8>)
 8001f5c:	705a      	strb	r2, [r3, #1]
 8001f5e:	697b      	ldr	r3, [r7, #20]
 8001f60:	1c5a      	adds	r2, r3, #1
 8001f62:	617a      	str	r2, [r7, #20]
 8001f64:	781a      	ldrb	r2, [r3, #0]
 8001f66:	4b0c      	ldr	r3, [pc, #48]	; (8001f98 <parseDHCPMSG+0x2c8>)
 8001f68:	709a      	strb	r2, [r3, #2]
 8001f6a:	697b      	ldr	r3, [r7, #20]
 8001f6c:	1c5a      	adds	r2, r3, #1
 8001f6e:	617a      	str	r2, [r7, #20]
 8001f70:	781a      	ldrb	r2, [r3, #0]
 8001f72:	4b09      	ldr	r3, [pc, #36]	; (8001f98 <parseDHCPMSG+0x2c8>)
 8001f74:	70da      	strb	r2, [r3, #3]
 8001f76:	7afb      	ldrb	r3, [r7, #11]
 8001f78:	3b04      	subs	r3, #4
 8001f7a:	697a      	ldr	r2, [r7, #20]
 8001f7c:	4413      	add	r3, r2
 8001f7e:	617b      	str	r3, [r7, #20]
 8001f80:	e068      	b.n	8002054 <parseDHCPMSG+0x384>
 8001f82:	bf00      	nop
 8001f84:	20000248 	.word	0x20000248
 8001f88:	20000270 	.word	0x20000270
 8001f8c:	20000274 	.word	0x20000274
 8001f90:	2000025c 	.word	0x2000025c
 8001f94:	20000258 	.word	0x20000258
 8001f98:	20000260 	.word	0x20000260
 8001f9c:	697b      	ldr	r3, [r7, #20]
 8001f9e:	3301      	adds	r3, #1
 8001fa0:	617b      	str	r3, [r7, #20]
 8001fa2:	697b      	ldr	r3, [r7, #20]
 8001fa4:	1c5a      	adds	r2, r3, #1
 8001fa6:	617a      	str	r2, [r7, #20]
 8001fa8:	781b      	ldrb	r3, [r3, #0]
 8001faa:	72fb      	strb	r3, [r7, #11]
 8001fac:	697b      	ldr	r3, [r7, #20]
 8001fae:	1c5a      	adds	r2, r3, #1
 8001fb0:	617a      	str	r2, [r7, #20]
 8001fb2:	781b      	ldrb	r3, [r3, #0]
 8001fb4:	461a      	mov	r2, r3
 8001fb6:	4b2d      	ldr	r3, [pc, #180]	; (800206c <parseDHCPMSG+0x39c>)
 8001fb8:	601a      	str	r2, [r3, #0]
 8001fba:	4b2c      	ldr	r3, [pc, #176]	; (800206c <parseDHCPMSG+0x39c>)
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	021a      	lsls	r2, r3, #8
 8001fc0:	697b      	ldr	r3, [r7, #20]
 8001fc2:	1c59      	adds	r1, r3, #1
 8001fc4:	6179      	str	r1, [r7, #20]
 8001fc6:	781b      	ldrb	r3, [r3, #0]
 8001fc8:	4413      	add	r3, r2
 8001fca:	4a28      	ldr	r2, [pc, #160]	; (800206c <parseDHCPMSG+0x39c>)
 8001fcc:	6013      	str	r3, [r2, #0]
 8001fce:	4b27      	ldr	r3, [pc, #156]	; (800206c <parseDHCPMSG+0x39c>)
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	021a      	lsls	r2, r3, #8
 8001fd4:	697b      	ldr	r3, [r7, #20]
 8001fd6:	1c59      	adds	r1, r3, #1
 8001fd8:	6179      	str	r1, [r7, #20]
 8001fda:	781b      	ldrb	r3, [r3, #0]
 8001fdc:	4413      	add	r3, r2
 8001fde:	4a23      	ldr	r2, [pc, #140]	; (800206c <parseDHCPMSG+0x39c>)
 8001fe0:	6013      	str	r3, [r2, #0]
 8001fe2:	4b22      	ldr	r3, [pc, #136]	; (800206c <parseDHCPMSG+0x39c>)
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	021a      	lsls	r2, r3, #8
 8001fe8:	697b      	ldr	r3, [r7, #20]
 8001fea:	1c59      	adds	r1, r3, #1
 8001fec:	6179      	str	r1, [r7, #20]
 8001fee:	781b      	ldrb	r3, [r3, #0]
 8001ff0:	4413      	add	r3, r2
 8001ff2:	4a1e      	ldr	r2, [pc, #120]	; (800206c <parseDHCPMSG+0x39c>)
 8001ff4:	6013      	str	r3, [r2, #0]
 8001ff6:	e02d      	b.n	8002054 <parseDHCPMSG+0x384>
 8001ff8:	697b      	ldr	r3, [r7, #20]
 8001ffa:	3301      	adds	r3, #1
 8001ffc:	617b      	str	r3, [r7, #20]
 8001ffe:	697b      	ldr	r3, [r7, #20]
 8002000:	1c5a      	adds	r2, r3, #1
 8002002:	617a      	str	r2, [r7, #20]
 8002004:	781b      	ldrb	r3, [r3, #0]
 8002006:	72fb      	strb	r3, [r7, #11]
 8002008:	697b      	ldr	r3, [r7, #20]
 800200a:	1c5a      	adds	r2, r3, #1
 800200c:	617a      	str	r2, [r7, #20]
 800200e:	781a      	ldrb	r2, [r3, #0]
 8002010:	4b17      	ldr	r3, [pc, #92]	; (8002070 <parseDHCPMSG+0x3a0>)
 8002012:	701a      	strb	r2, [r3, #0]
 8002014:	697b      	ldr	r3, [r7, #20]
 8002016:	1c5a      	adds	r2, r3, #1
 8002018:	617a      	str	r2, [r7, #20]
 800201a:	781a      	ldrb	r2, [r3, #0]
 800201c:	4b14      	ldr	r3, [pc, #80]	; (8002070 <parseDHCPMSG+0x3a0>)
 800201e:	705a      	strb	r2, [r3, #1]
 8002020:	697b      	ldr	r3, [r7, #20]
 8002022:	1c5a      	adds	r2, r3, #1
 8002024:	617a      	str	r2, [r7, #20]
 8002026:	781a      	ldrb	r2, [r3, #0]
 8002028:	4b11      	ldr	r3, [pc, #68]	; (8002070 <parseDHCPMSG+0x3a0>)
 800202a:	709a      	strb	r2, [r3, #2]
 800202c:	697b      	ldr	r3, [r7, #20]
 800202e:	1c5a      	adds	r2, r3, #1
 8002030:	617a      	str	r2, [r7, #20]
 8002032:	781a      	ldrb	r2, [r3, #0]
 8002034:	4b0e      	ldr	r3, [pc, #56]	; (8002070 <parseDHCPMSG+0x3a0>)
 8002036:	70da      	strb	r2, [r3, #3]
 8002038:	e00c      	b.n	8002054 <parseDHCPMSG+0x384>
 800203a:	697b      	ldr	r3, [r7, #20]
 800203c:	3301      	adds	r3, #1
 800203e:	617b      	str	r3, [r7, #20]
 8002040:	697b      	ldr	r3, [r7, #20]
 8002042:	1c5a      	adds	r2, r3, #1
 8002044:	617a      	str	r2, [r7, #20]
 8002046:	781b      	ldrb	r3, [r3, #0]
 8002048:	72fb      	strb	r3, [r7, #11]
 800204a:	7afb      	ldrb	r3, [r7, #11]
 800204c:	697a      	ldr	r2, [r7, #20]
 800204e:	4413      	add	r3, r2
 8002050:	617b      	str	r3, [r7, #20]
 8002052:	bf00      	nop
 8002054:	697a      	ldr	r2, [r7, #20]
 8002056:	68fb      	ldr	r3, [r7, #12]
 8002058:	429a      	cmp	r2, r3
 800205a:	f4ff ae96 	bcc.w	8001d8a <parseDHCPMSG+0xba>
 800205e:	f997 3013 	ldrsb.w	r3, [r7, #19]
 8002062:	4618      	mov	r0, r3
 8002064:	371c      	adds	r7, #28
 8002066:	46bd      	mov	sp, r7
 8002068:	bd90      	pop	{r4, r7, pc}
 800206a:	bf00      	nop
 800206c:	20000000 	.word	0x20000000
 8002070:	2000024c 	.word	0x2000024c

08002074 <DHCP_run>:
 8002074:	b580      	push	{r7, lr}
 8002076:	b082      	sub	sp, #8
 8002078:	af00      	add	r7, sp, #0
 800207a:	4b7f      	ldr	r3, [pc, #508]	; (8002278 <DHCP_run+0x204>)
 800207c:	f993 3000 	ldrsb.w	r3, [r3]
 8002080:	2b06      	cmp	r3, #6
 8002082:	d101      	bne.n	8002088 <DHCP_run+0x14>
 8002084:	2305      	movs	r3, #5
 8002086:	e0f3      	b.n	8002270 <DHCP_run+0x1fc>
 8002088:	4b7c      	ldr	r3, [pc, #496]	; (800227c <DHCP_run+0x208>)
 800208a:	781b      	ldrb	r3, [r3, #0]
 800208c:	009b      	lsls	r3, r3, #2
 800208e:	3301      	adds	r3, #1
 8002090:	00db      	lsls	r3, r3, #3
 8002092:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8002096:	4618      	mov	r0, r3
 8002098:	f000 faea 	bl	8002670 <WIZCHIP_READ>
 800209c:	4603      	mov	r3, r0
 800209e:	2b22      	cmp	r3, #34	; 0x22
 80020a0:	d006      	beq.n	80020b0 <DHCP_run+0x3c>
 80020a2:	4b76      	ldr	r3, [pc, #472]	; (800227c <DHCP_run+0x208>)
 80020a4:	7818      	ldrb	r0, [r3, #0]
 80020a6:	2300      	movs	r3, #0
 80020a8:	2244      	movs	r2, #68	; 0x44
 80020aa:	2102      	movs	r1, #2
 80020ac:	f000 fdd0 	bl	8002c50 <socket>
 80020b0:	2301      	movs	r3, #1
 80020b2:	71fb      	strb	r3, [r7, #7]
 80020b4:	f7ff fe0c 	bl	8001cd0 <parseDHCPMSG>
 80020b8:	4603      	mov	r3, r0
 80020ba:	71bb      	strb	r3, [r7, #6]
 80020bc:	4b6e      	ldr	r3, [pc, #440]	; (8002278 <DHCP_run+0x204>)
 80020be:	f993 3000 	ldrsb.w	r3, [r3]
 80020c2:	2b04      	cmp	r3, #4
 80020c4:	f200 80d0 	bhi.w	8002268 <DHCP_run+0x1f4>
 80020c8:	a201      	add	r2, pc, #4	; (adr r2, 80020d0 <DHCP_run+0x5c>)
 80020ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80020ce:	bf00      	nop
 80020d0:	080020e5 	.word	0x080020e5
 80020d4:	08002109 	.word	0x08002109
 80020d8:	0800214d 	.word	0x0800214d
 80020dc:	0800219d 	.word	0x0800219d
 80020e0:	080021f7 	.word	0x080021f7
 80020e4:	4b66      	ldr	r3, [pc, #408]	; (8002280 <DHCP_run+0x20c>)
 80020e6:	2200      	movs	r2, #0
 80020e8:	701a      	strb	r2, [r3, #0]
 80020ea:	4b65      	ldr	r3, [pc, #404]	; (8002280 <DHCP_run+0x20c>)
 80020ec:	2200      	movs	r2, #0
 80020ee:	705a      	strb	r2, [r3, #1]
 80020f0:	4b63      	ldr	r3, [pc, #396]	; (8002280 <DHCP_run+0x20c>)
 80020f2:	2200      	movs	r2, #0
 80020f4:	709a      	strb	r2, [r3, #2]
 80020f6:	4b62      	ldr	r3, [pc, #392]	; (8002280 <DHCP_run+0x20c>)
 80020f8:	2200      	movs	r2, #0
 80020fa:	70da      	strb	r2, [r3, #3]
 80020fc:	f7ff f8a8 	bl	8001250 <send_DHCP_DISCOVER>
 8002100:	4b5d      	ldr	r3, [pc, #372]	; (8002278 <DHCP_run+0x204>)
 8002102:	2201      	movs	r2, #1
 8002104:	701a      	strb	r2, [r3, #0]
 8002106:	e0b2      	b.n	800226e <DHCP_run+0x1fa>
 8002108:	79bb      	ldrb	r3, [r7, #6]
 800210a:	2b02      	cmp	r3, #2
 800210c:	d119      	bne.n	8002142 <DHCP_run+0xce>
 800210e:	4b5d      	ldr	r3, [pc, #372]	; (8002284 <DHCP_run+0x210>)
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	7c1a      	ldrb	r2, [r3, #16]
 8002114:	4b5a      	ldr	r3, [pc, #360]	; (8002280 <DHCP_run+0x20c>)
 8002116:	701a      	strb	r2, [r3, #0]
 8002118:	4b5a      	ldr	r3, [pc, #360]	; (8002284 <DHCP_run+0x210>)
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	7c5a      	ldrb	r2, [r3, #17]
 800211e:	4b58      	ldr	r3, [pc, #352]	; (8002280 <DHCP_run+0x20c>)
 8002120:	705a      	strb	r2, [r3, #1]
 8002122:	4b58      	ldr	r3, [pc, #352]	; (8002284 <DHCP_run+0x210>)
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	7c9a      	ldrb	r2, [r3, #18]
 8002128:	4b55      	ldr	r3, [pc, #340]	; (8002280 <DHCP_run+0x20c>)
 800212a:	709a      	strb	r2, [r3, #2]
 800212c:	4b55      	ldr	r3, [pc, #340]	; (8002284 <DHCP_run+0x210>)
 800212e:	681b      	ldr	r3, [r3, #0]
 8002130:	7cda      	ldrb	r2, [r3, #19]
 8002132:	4b53      	ldr	r3, [pc, #332]	; (8002280 <DHCP_run+0x20c>)
 8002134:	70da      	strb	r2, [r3, #3]
 8002136:	f7ff f9ef 	bl	8001518 <send_DHCP_REQUEST>
 800213a:	4b4f      	ldr	r3, [pc, #316]	; (8002278 <DHCP_run+0x204>)
 800213c:	2202      	movs	r2, #2
 800213e:	701a      	strb	r2, [r3, #0]
 8002140:	e095      	b.n	800226e <DHCP_run+0x1fa>
 8002142:	f000 f8b1 	bl	80022a8 <check_DHCP_timeout>
 8002146:	4603      	mov	r3, r0
 8002148:	71fb      	strb	r3, [r7, #7]
 800214a:	e090      	b.n	800226e <DHCP_run+0x1fa>
 800214c:	79bb      	ldrb	r3, [r7, #6]
 800214e:	2b05      	cmp	r3, #5
 8002150:	d116      	bne.n	8002180 <DHCP_run+0x10c>
 8002152:	f000 f909 	bl	8002368 <check_DHCP_leasedIP>
 8002156:	4603      	mov	r3, r0
 8002158:	2b00      	cmp	r3, #0
 800215a:	d008      	beq.n	800216e <DHCP_run+0xfa>
 800215c:	4b4a      	ldr	r3, [pc, #296]	; (8002288 <DHCP_run+0x214>)
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	4798      	blx	r3
 8002162:	f000 f9ab 	bl	80024bc <reset_DHCP_timeout>
 8002166:	4b44      	ldr	r3, [pc, #272]	; (8002278 <DHCP_run+0x204>)
 8002168:	2203      	movs	r2, #3
 800216a:	701a      	strb	r2, [r3, #0]
 800216c:	e07f      	b.n	800226e <DHCP_run+0x1fa>
 800216e:	f000 f9a5 	bl	80024bc <reset_DHCP_timeout>
 8002172:	4b46      	ldr	r3, [pc, #280]	; (800228c <DHCP_run+0x218>)
 8002174:	681b      	ldr	r3, [r3, #0]
 8002176:	4798      	blx	r3
 8002178:	4b3f      	ldr	r3, [pc, #252]	; (8002278 <DHCP_run+0x204>)
 800217a:	2200      	movs	r2, #0
 800217c:	701a      	strb	r2, [r3, #0]
 800217e:	e076      	b.n	800226e <DHCP_run+0x1fa>
 8002180:	79bb      	ldrb	r3, [r7, #6]
 8002182:	2b06      	cmp	r3, #6
 8002184:	d105      	bne.n	8002192 <DHCP_run+0x11e>
 8002186:	f000 f999 	bl	80024bc <reset_DHCP_timeout>
 800218a:	4b3b      	ldr	r3, [pc, #236]	; (8002278 <DHCP_run+0x204>)
 800218c:	2201      	movs	r2, #1
 800218e:	701a      	strb	r2, [r3, #0]
 8002190:	e06d      	b.n	800226e <DHCP_run+0x1fa>
 8002192:	f000 f889 	bl	80022a8 <check_DHCP_timeout>
 8002196:	4603      	mov	r3, r0
 8002198:	71fb      	strb	r3, [r7, #7]
 800219a:	e068      	b.n	800226e <DHCP_run+0x1fa>
 800219c:	2304      	movs	r3, #4
 800219e:	71fb      	strb	r3, [r7, #7]
 80021a0:	4b3b      	ldr	r3, [pc, #236]	; (8002290 <DHCP_run+0x21c>)
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80021a8:	d060      	beq.n	800226c <DHCP_run+0x1f8>
 80021aa:	4b39      	ldr	r3, [pc, #228]	; (8002290 <DHCP_run+0x21c>)
 80021ac:	681b      	ldr	r3, [r3, #0]
 80021ae:	085a      	lsrs	r2, r3, #1
 80021b0:	4b38      	ldr	r3, [pc, #224]	; (8002294 <DHCP_run+0x220>)
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	429a      	cmp	r2, r3
 80021b6:	d259      	bcs.n	800226c <DHCP_run+0x1f8>
 80021b8:	2300      	movs	r3, #0
 80021ba:	71bb      	strb	r3, [r7, #6]
 80021bc:	4b30      	ldr	r3, [pc, #192]	; (8002280 <DHCP_run+0x20c>)
 80021be:	781a      	ldrb	r2, [r3, #0]
 80021c0:	4b35      	ldr	r3, [pc, #212]	; (8002298 <DHCP_run+0x224>)
 80021c2:	701a      	strb	r2, [r3, #0]
 80021c4:	4b2e      	ldr	r3, [pc, #184]	; (8002280 <DHCP_run+0x20c>)
 80021c6:	785a      	ldrb	r2, [r3, #1]
 80021c8:	4b33      	ldr	r3, [pc, #204]	; (8002298 <DHCP_run+0x224>)
 80021ca:	705a      	strb	r2, [r3, #1]
 80021cc:	4b2c      	ldr	r3, [pc, #176]	; (8002280 <DHCP_run+0x20c>)
 80021ce:	789a      	ldrb	r2, [r3, #2]
 80021d0:	4b31      	ldr	r3, [pc, #196]	; (8002298 <DHCP_run+0x224>)
 80021d2:	709a      	strb	r2, [r3, #2]
 80021d4:	4b2a      	ldr	r3, [pc, #168]	; (8002280 <DHCP_run+0x20c>)
 80021d6:	78da      	ldrb	r2, [r3, #3]
 80021d8:	4b2f      	ldr	r3, [pc, #188]	; (8002298 <DHCP_run+0x224>)
 80021da:	70da      	strb	r2, [r3, #3]
 80021dc:	4b2f      	ldr	r3, [pc, #188]	; (800229c <DHCP_run+0x228>)
 80021de:	681b      	ldr	r3, [r3, #0]
 80021e0:	3301      	adds	r3, #1
 80021e2:	4a2e      	ldr	r2, [pc, #184]	; (800229c <DHCP_run+0x228>)
 80021e4:	6013      	str	r3, [r2, #0]
 80021e6:	f7ff f997 	bl	8001518 <send_DHCP_REQUEST>
 80021ea:	f000 f967 	bl	80024bc <reset_DHCP_timeout>
 80021ee:	4b22      	ldr	r3, [pc, #136]	; (8002278 <DHCP_run+0x204>)
 80021f0:	2204      	movs	r2, #4
 80021f2:	701a      	strb	r2, [r3, #0]
 80021f4:	e03a      	b.n	800226c <DHCP_run+0x1f8>
 80021f6:	2304      	movs	r3, #4
 80021f8:	71fb      	strb	r3, [r7, #7]
 80021fa:	79bb      	ldrb	r3, [r7, #6]
 80021fc:	2b05      	cmp	r3, #5
 80021fe:	d125      	bne.n	800224c <DHCP_run+0x1d8>
 8002200:	4b27      	ldr	r3, [pc, #156]	; (80022a0 <DHCP_run+0x22c>)
 8002202:	2200      	movs	r2, #0
 8002204:	701a      	strb	r2, [r3, #0]
 8002206:	4b24      	ldr	r3, [pc, #144]	; (8002298 <DHCP_run+0x224>)
 8002208:	781a      	ldrb	r2, [r3, #0]
 800220a:	4b1d      	ldr	r3, [pc, #116]	; (8002280 <DHCP_run+0x20c>)
 800220c:	781b      	ldrb	r3, [r3, #0]
 800220e:	429a      	cmp	r2, r3
 8002210:	d111      	bne.n	8002236 <DHCP_run+0x1c2>
 8002212:	4b21      	ldr	r3, [pc, #132]	; (8002298 <DHCP_run+0x224>)
 8002214:	785a      	ldrb	r2, [r3, #1]
 8002216:	4b1a      	ldr	r3, [pc, #104]	; (8002280 <DHCP_run+0x20c>)
 8002218:	785b      	ldrb	r3, [r3, #1]
 800221a:	429a      	cmp	r2, r3
 800221c:	d10b      	bne.n	8002236 <DHCP_run+0x1c2>
 800221e:	4b1e      	ldr	r3, [pc, #120]	; (8002298 <DHCP_run+0x224>)
 8002220:	789a      	ldrb	r2, [r3, #2]
 8002222:	4b17      	ldr	r3, [pc, #92]	; (8002280 <DHCP_run+0x20c>)
 8002224:	789b      	ldrb	r3, [r3, #2]
 8002226:	429a      	cmp	r2, r3
 8002228:	d105      	bne.n	8002236 <DHCP_run+0x1c2>
 800222a:	4b1b      	ldr	r3, [pc, #108]	; (8002298 <DHCP_run+0x224>)
 800222c:	78da      	ldrb	r2, [r3, #3]
 800222e:	4b14      	ldr	r3, [pc, #80]	; (8002280 <DHCP_run+0x20c>)
 8002230:	78db      	ldrb	r3, [r3, #3]
 8002232:	429a      	cmp	r2, r3
 8002234:	d004      	beq.n	8002240 <DHCP_run+0x1cc>
 8002236:	2303      	movs	r3, #3
 8002238:	71fb      	strb	r3, [r7, #7]
 800223a:	4b1a      	ldr	r3, [pc, #104]	; (80022a4 <DHCP_run+0x230>)
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	4798      	blx	r3
 8002240:	f000 f93c 	bl	80024bc <reset_DHCP_timeout>
 8002244:	4b0c      	ldr	r3, [pc, #48]	; (8002278 <DHCP_run+0x204>)
 8002246:	2203      	movs	r2, #3
 8002248:	701a      	strb	r2, [r3, #0]
 800224a:	e010      	b.n	800226e <DHCP_run+0x1fa>
 800224c:	79bb      	ldrb	r3, [r7, #6]
 800224e:	2b06      	cmp	r3, #6
 8002250:	d105      	bne.n	800225e <DHCP_run+0x1ea>
 8002252:	f000 f933 	bl	80024bc <reset_DHCP_timeout>
 8002256:	4b08      	ldr	r3, [pc, #32]	; (8002278 <DHCP_run+0x204>)
 8002258:	2201      	movs	r2, #1
 800225a:	701a      	strb	r2, [r3, #0]
 800225c:	e007      	b.n	800226e <DHCP_run+0x1fa>
 800225e:	f000 f823 	bl	80022a8 <check_DHCP_timeout>
 8002262:	4603      	mov	r3, r0
 8002264:	71fb      	strb	r3, [r7, #7]
 8002266:	e002      	b.n	800226e <DHCP_run+0x1fa>
 8002268:	bf00      	nop
 800226a:	e000      	b.n	800226e <DHCP_run+0x1fa>
 800226c:	bf00      	nop
 800226e:	79fb      	ldrb	r3, [r7, #7]
 8002270:	4618      	mov	r0, r3
 8002272:	3708      	adds	r7, #8
 8002274:	46bd      	mov	sp, r7
 8002276:	bd80      	pop	{r7, pc}
 8002278:	20000264 	.word	0x20000264
 800227c:	20000248 	.word	0x20000248
 8002280:	20000254 	.word	0x20000254
 8002284:	20000270 	.word	0x20000270
 8002288:	20000010 	.word	0x20000010
 800228c:	20000018 	.word	0x20000018
 8002290:	20000000 	.word	0x20000000
 8002294:	20000268 	.word	0x20000268
 8002298:	20000250 	.word	0x20000250
 800229c:	2000026c 	.word	0x2000026c
 80022a0:	20000265 	.word	0x20000265
 80022a4:	20000014 	.word	0x20000014

080022a8 <check_DHCP_timeout>:
 80022a8:	b580      	push	{r7, lr}
 80022aa:	b082      	sub	sp, #8
 80022ac:	af00      	add	r7, sp, #0
 80022ae:	2301      	movs	r3, #1
 80022b0:	71fb      	strb	r3, [r7, #7]
 80022b2:	4b29      	ldr	r3, [pc, #164]	; (8002358 <check_DHCP_timeout+0xb0>)
 80022b4:	f993 3000 	ldrsb.w	r3, [r3]
 80022b8:	2b01      	cmp	r3, #1
 80022ba:	dc2d      	bgt.n	8002318 <check_DHCP_timeout+0x70>
 80022bc:	4b27      	ldr	r3, [pc, #156]	; (800235c <check_DHCP_timeout+0xb4>)
 80022be:	681a      	ldr	r2, [r3, #0]
 80022c0:	4b27      	ldr	r3, [pc, #156]	; (8002360 <check_DHCP_timeout+0xb8>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	429a      	cmp	r2, r3
 80022c6:	d242      	bcs.n	800234e <check_DHCP_timeout+0xa6>
 80022c8:	4b26      	ldr	r3, [pc, #152]	; (8002364 <check_DHCP_timeout+0xbc>)
 80022ca:	f993 3000 	ldrsb.w	r3, [r3]
 80022ce:	2b04      	cmp	r3, #4
 80022d0:	d00c      	beq.n	80022ec <check_DHCP_timeout+0x44>
 80022d2:	2b04      	cmp	r3, #4
 80022d4:	dc0d      	bgt.n	80022f2 <check_DHCP_timeout+0x4a>
 80022d6:	2b01      	cmp	r3, #1
 80022d8:	d002      	beq.n	80022e0 <check_DHCP_timeout+0x38>
 80022da:	2b02      	cmp	r3, #2
 80022dc:	d003      	beq.n	80022e6 <check_DHCP_timeout+0x3e>
 80022de:	e008      	b.n	80022f2 <check_DHCP_timeout+0x4a>
 80022e0:	f7fe ffb6 	bl	8001250 <send_DHCP_DISCOVER>
 80022e4:	e006      	b.n	80022f4 <check_DHCP_timeout+0x4c>
 80022e6:	f7ff f917 	bl	8001518 <send_DHCP_REQUEST>
 80022ea:	e003      	b.n	80022f4 <check_DHCP_timeout+0x4c>
 80022ec:	f7ff f914 	bl	8001518 <send_DHCP_REQUEST>
 80022f0:	e000      	b.n	80022f4 <check_DHCP_timeout+0x4c>
 80022f2:	bf00      	nop
 80022f4:	4b1a      	ldr	r3, [pc, #104]	; (8002360 <check_DHCP_timeout+0xb8>)
 80022f6:	2200      	movs	r2, #0
 80022f8:	601a      	str	r2, [r3, #0]
 80022fa:	4b19      	ldr	r3, [pc, #100]	; (8002360 <check_DHCP_timeout+0xb8>)
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	330a      	adds	r3, #10
 8002300:	4a16      	ldr	r2, [pc, #88]	; (800235c <check_DHCP_timeout+0xb4>)
 8002302:	6013      	str	r3, [r2, #0]
 8002304:	4b14      	ldr	r3, [pc, #80]	; (8002358 <check_DHCP_timeout+0xb0>)
 8002306:	f993 3000 	ldrsb.w	r3, [r3]
 800230a:	b2db      	uxtb	r3, r3
 800230c:	3301      	adds	r3, #1
 800230e:	b2db      	uxtb	r3, r3
 8002310:	b25a      	sxtb	r2, r3
 8002312:	4b11      	ldr	r3, [pc, #68]	; (8002358 <check_DHCP_timeout+0xb0>)
 8002314:	701a      	strb	r2, [r3, #0]
 8002316:	e01a      	b.n	800234e <check_DHCP_timeout+0xa6>
 8002318:	4b12      	ldr	r3, [pc, #72]	; (8002364 <check_DHCP_timeout+0xbc>)
 800231a:	f993 3000 	ldrsb.w	r3, [r3]
 800231e:	2b04      	cmp	r3, #4
 8002320:	d00c      	beq.n	800233c <check_DHCP_timeout+0x94>
 8002322:	2b04      	cmp	r3, #4
 8002324:	dc10      	bgt.n	8002348 <check_DHCP_timeout+0xa0>
 8002326:	2b01      	cmp	r3, #1
 8002328:	d002      	beq.n	8002330 <check_DHCP_timeout+0x88>
 800232a:	2b02      	cmp	r3, #2
 800232c:	d006      	beq.n	800233c <check_DHCP_timeout+0x94>
 800232e:	e00b      	b.n	8002348 <check_DHCP_timeout+0xa0>
 8002330:	4b0c      	ldr	r3, [pc, #48]	; (8002364 <check_DHCP_timeout+0xbc>)
 8002332:	2200      	movs	r2, #0
 8002334:	701a      	strb	r2, [r3, #0]
 8002336:	2300      	movs	r3, #0
 8002338:	71fb      	strb	r3, [r7, #7]
 800233a:	e006      	b.n	800234a <check_DHCP_timeout+0xa2>
 800233c:	f7fe ff88 	bl	8001250 <send_DHCP_DISCOVER>
 8002340:	4b08      	ldr	r3, [pc, #32]	; (8002364 <check_DHCP_timeout+0xbc>)
 8002342:	2201      	movs	r2, #1
 8002344:	701a      	strb	r2, [r3, #0]
 8002346:	e000      	b.n	800234a <check_DHCP_timeout+0xa2>
 8002348:	bf00      	nop
 800234a:	f000 f8b7 	bl	80024bc <reset_DHCP_timeout>
 800234e:	79fb      	ldrb	r3, [r7, #7]
 8002350:	4618      	mov	r0, r3
 8002352:	3708      	adds	r7, #8
 8002354:	46bd      	mov	sp, r7
 8002356:	bd80      	pop	{r7, pc}
 8002358:	20000265 	.word	0x20000265
 800235c:	20000004 	.word	0x20000004
 8002360:	20000268 	.word	0x20000268
 8002364:	20000264 	.word	0x20000264

08002368 <check_DHCP_leasedIP>:
 8002368:	b580      	push	{r7, lr}
 800236a:	b084      	sub	sp, #16
 800236c:	af02      	add	r7, sp, #8
 800236e:	f44f 50d8 	mov.w	r0, #6912	; 0x1b00
 8002372:	f000 f97d 	bl	8002670 <WIZCHIP_READ>
 8002376:	4603      	mov	r3, r0
 8002378:	71fb      	strb	r3, [r7, #7]
 800237a:	2103      	movs	r1, #3
 800237c:	f44f 50d8 	mov.w	r0, #6912	; 0x1b00
 8002380:	f000 f9c2 	bl	8002708 <WIZCHIP_WRITE>
 8002384:	4b13      	ldr	r3, [pc, #76]	; (80023d4 <check_DHCP_leasedIP+0x6c>)
 8002386:	7818      	ldrb	r0, [r3, #0]
 8002388:	f241 3388 	movw	r3, #5000	; 0x1388
 800238c:	9300      	str	r3, [sp, #0]
 800238e:	4b12      	ldr	r3, [pc, #72]	; (80023d8 <check_DHCP_leasedIP+0x70>)
 8002390:	2211      	movs	r2, #17
 8002392:	4912      	ldr	r1, [pc, #72]	; (80023dc <check_DHCP_leasedIP+0x74>)
 8002394:	f001 f8e0 	bl	8003558 <sendto>
 8002398:	6038      	str	r0, [r7, #0]
 800239a:	79fb      	ldrb	r3, [r7, #7]
 800239c:	4619      	mov	r1, r3
 800239e:	f44f 50d8 	mov.w	r0, #6912	; 0x1b00
 80023a2:	f000 f9b1 	bl	8002708 <WIZCHIP_WRITE>
 80023a6:	683b      	ldr	r3, [r7, #0]
 80023a8:	f113 0f0d 	cmn.w	r3, #13
 80023ac:	d101      	bne.n	80023b2 <check_DHCP_leasedIP+0x4a>
 80023ae:	2301      	movs	r3, #1
 80023b0:	e00c      	b.n	80023cc <check_DHCP_leasedIP+0x64>
 80023b2:	f7ff fb3b 	bl	8001a2c <send_DHCP_DECLINE>
 80023b6:	4b0a      	ldr	r3, [pc, #40]	; (80023e0 <check_DHCP_leasedIP+0x78>)
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	603b      	str	r3, [r7, #0]
 80023bc:	bf00      	nop
 80023be:	4b08      	ldr	r3, [pc, #32]	; (80023e0 <check_DHCP_leasedIP+0x78>)
 80023c0:	681a      	ldr	r2, [r3, #0]
 80023c2:	683b      	ldr	r3, [r7, #0]
 80023c4:	1ad3      	subs	r3, r2, r3
 80023c6:	2b01      	cmp	r3, #1
 80023c8:	d9f9      	bls.n	80023be <check_DHCP_leasedIP+0x56>
 80023ca:	2300      	movs	r3, #0
 80023cc:	4618      	mov	r0, r3
 80023ce:	3708      	adds	r7, #8
 80023d0:	46bd      	mov	sp, r7
 80023d2:	bd80      	pop	{r7, pc}
 80023d4:	20000248 	.word	0x20000248
 80023d8:	20000254 	.word	0x20000254
 80023dc:	080160c0 	.word	0x080160c0
 80023e0:	20000268 	.word	0x20000268

080023e4 <DHCP_init>:
 80023e4:	b580      	push	{r7, lr}
 80023e6:	b084      	sub	sp, #16
 80023e8:	af00      	add	r7, sp, #0
 80023ea:	4603      	mov	r3, r0
 80023ec:	6039      	str	r1, [r7, #0]
 80023ee:	71fb      	strb	r3, [r7, #7]
 80023f0:	2300      	movs	r3, #0
 80023f2:	60fb      	str	r3, [r7, #12]
 80023f4:	2206      	movs	r2, #6
 80023f6:	492b      	ldr	r1, [pc, #172]	; (80024a4 <DHCP_init+0xc0>)
 80023f8:	f44f 6010 	mov.w	r0, #2304	; 0x900
 80023fc:	f000 f9d2 	bl	80027a4 <WIZCHIP_READ_BUF>
 8002400:	4b28      	ldr	r3, [pc, #160]	; (80024a4 <DHCP_init+0xc0>)
 8002402:	781a      	ldrb	r2, [r3, #0]
 8002404:	4b27      	ldr	r3, [pc, #156]	; (80024a4 <DHCP_init+0xc0>)
 8002406:	785b      	ldrb	r3, [r3, #1]
 8002408:	4313      	orrs	r3, r2
 800240a:	b2da      	uxtb	r2, r3
 800240c:	4b25      	ldr	r3, [pc, #148]	; (80024a4 <DHCP_init+0xc0>)
 800240e:	789b      	ldrb	r3, [r3, #2]
 8002410:	4313      	orrs	r3, r2
 8002412:	b2da      	uxtb	r2, r3
 8002414:	4b23      	ldr	r3, [pc, #140]	; (80024a4 <DHCP_init+0xc0>)
 8002416:	78db      	ldrb	r3, [r3, #3]
 8002418:	4313      	orrs	r3, r2
 800241a:	b2da      	uxtb	r2, r3
 800241c:	4b21      	ldr	r3, [pc, #132]	; (80024a4 <DHCP_init+0xc0>)
 800241e:	791b      	ldrb	r3, [r3, #4]
 8002420:	4313      	orrs	r3, r2
 8002422:	b2da      	uxtb	r2, r3
 8002424:	4b1f      	ldr	r3, [pc, #124]	; (80024a4 <DHCP_init+0xc0>)
 8002426:	795b      	ldrb	r3, [r3, #5]
 8002428:	4313      	orrs	r3, r2
 800242a:	b2db      	uxtb	r3, r3
 800242c:	2b00      	cmp	r3, #0
 800242e:	d117      	bne.n	8002460 <DHCP_init+0x7c>
 8002430:	4b1c      	ldr	r3, [pc, #112]	; (80024a4 <DHCP_init+0xc0>)
 8002432:	2200      	movs	r2, #0
 8002434:	701a      	strb	r2, [r3, #0]
 8002436:	4b1b      	ldr	r3, [pc, #108]	; (80024a4 <DHCP_init+0xc0>)
 8002438:	2208      	movs	r2, #8
 800243a:	705a      	strb	r2, [r3, #1]
 800243c:	4b19      	ldr	r3, [pc, #100]	; (80024a4 <DHCP_init+0xc0>)
 800243e:	22dc      	movs	r2, #220	; 0xdc
 8002440:	709a      	strb	r2, [r3, #2]
 8002442:	4b18      	ldr	r3, [pc, #96]	; (80024a4 <DHCP_init+0xc0>)
 8002444:	2200      	movs	r2, #0
 8002446:	70da      	strb	r2, [r3, #3]
 8002448:	4b16      	ldr	r3, [pc, #88]	; (80024a4 <DHCP_init+0xc0>)
 800244a:	2200      	movs	r2, #0
 800244c:	711a      	strb	r2, [r3, #4]
 800244e:	4b15      	ldr	r3, [pc, #84]	; (80024a4 <DHCP_init+0xc0>)
 8002450:	2200      	movs	r2, #0
 8002452:	715a      	strb	r2, [r3, #5]
 8002454:	2206      	movs	r2, #6
 8002456:	4913      	ldr	r1, [pc, #76]	; (80024a4 <DHCP_init+0xc0>)
 8002458:	f44f 6010 	mov.w	r0, #2304	; 0x900
 800245c:	f000 fa02 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8002460:	4a11      	ldr	r2, [pc, #68]	; (80024a8 <DHCP_init+0xc4>)
 8002462:	79fb      	ldrb	r3, [r7, #7]
 8002464:	7013      	strb	r3, [r2, #0]
 8002466:	4a11      	ldr	r2, [pc, #68]	; (80024ac <DHCP_init+0xc8>)
 8002468:	683b      	ldr	r3, [r7, #0]
 800246a:	6013      	str	r3, [r2, #0]
 800246c:	4b10      	ldr	r3, [pc, #64]	; (80024b0 <DHCP_init+0xcc>)
 800246e:	4a11      	ldr	r2, [pc, #68]	; (80024b4 <DHCP_init+0xd0>)
 8002470:	601a      	str	r2, [r3, #0]
 8002472:	f107 030c 	add.w	r3, r7, #12
 8002476:	2204      	movs	r2, #4
 8002478:	4619      	mov	r1, r3
 800247a:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 800247e:	f000 f9f1 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8002482:	f107 030c 	add.w	r3, r7, #12
 8002486:	2204      	movs	r2, #4
 8002488:	4619      	mov	r1, r3
 800248a:	f44f 7080 	mov.w	r0, #256	; 0x100
 800248e:	f000 f9e9 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8002492:	f000 f813 	bl	80024bc <reset_DHCP_timeout>
 8002496:	4b08      	ldr	r3, [pc, #32]	; (80024b8 <DHCP_init+0xd4>)
 8002498:	2200      	movs	r2, #0
 800249a:	701a      	strb	r2, [r3, #0]
 800249c:	bf00      	nop
 800249e:	3710      	adds	r7, #16
 80024a0:	46bd      	mov	sp, r7
 80024a2:	bd80      	pop	{r7, pc}
 80024a4:	20000274 	.word	0x20000274
 80024a8:	20000248 	.word	0x20000248
 80024ac:	20000270 	.word	0x20000270
 80024b0:	2000026c 	.word	0x2000026c
 80024b4:	12345678 	.word	0x12345678
 80024b8:	20000264 	.word	0x20000264

080024bc <reset_DHCP_timeout>:
 80024bc:	b480      	push	{r7}
 80024be:	af00      	add	r7, sp, #0
 80024c0:	4b06      	ldr	r3, [pc, #24]	; (80024dc <reset_DHCP_timeout+0x20>)
 80024c2:	2200      	movs	r2, #0
 80024c4:	601a      	str	r2, [r3, #0]
 80024c6:	4b06      	ldr	r3, [pc, #24]	; (80024e0 <reset_DHCP_timeout+0x24>)
 80024c8:	220a      	movs	r2, #10
 80024ca:	601a      	str	r2, [r3, #0]
 80024cc:	4b05      	ldr	r3, [pc, #20]	; (80024e4 <reset_DHCP_timeout+0x28>)
 80024ce:	2200      	movs	r2, #0
 80024d0:	701a      	strb	r2, [r3, #0]
 80024d2:	bf00      	nop
 80024d4:	46bd      	mov	sp, r7
 80024d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024da:	4770      	bx	lr
 80024dc:	20000268 	.word	0x20000268
 80024e0:	20000004 	.word	0x20000004
 80024e4:	20000265 	.word	0x20000265

080024e8 <DHCP_time_handler>:
 80024e8:	b480      	push	{r7}
 80024ea:	af00      	add	r7, sp, #0
 80024ec:	4b04      	ldr	r3, [pc, #16]	; (8002500 <DHCP_time_handler+0x18>)
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	3301      	adds	r3, #1
 80024f2:	4a03      	ldr	r2, [pc, #12]	; (8002500 <DHCP_time_handler+0x18>)
 80024f4:	6013      	str	r3, [r2, #0]
 80024f6:	bf00      	nop
 80024f8:	46bd      	mov	sp, r7
 80024fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024fe:	4770      	bx	lr
 8002500:	20000268 	.word	0x20000268

08002504 <getIPfromDHCP>:
 8002504:	b480      	push	{r7}
 8002506:	b083      	sub	sp, #12
 8002508:	af00      	add	r7, sp, #0
 800250a:	6078      	str	r0, [r7, #4]
 800250c:	4b0c      	ldr	r3, [pc, #48]	; (8002540 <getIPfromDHCP+0x3c>)
 800250e:	781a      	ldrb	r2, [r3, #0]
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	701a      	strb	r2, [r3, #0]
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	3301      	adds	r3, #1
 8002518:	4a09      	ldr	r2, [pc, #36]	; (8002540 <getIPfromDHCP+0x3c>)
 800251a:	7852      	ldrb	r2, [r2, #1]
 800251c:	701a      	strb	r2, [r3, #0]
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	3302      	adds	r3, #2
 8002522:	4a07      	ldr	r2, [pc, #28]	; (8002540 <getIPfromDHCP+0x3c>)
 8002524:	7892      	ldrb	r2, [r2, #2]
 8002526:	701a      	strb	r2, [r3, #0]
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	3303      	adds	r3, #3
 800252c:	4a04      	ldr	r2, [pc, #16]	; (8002540 <getIPfromDHCP+0x3c>)
 800252e:	78d2      	ldrb	r2, [r2, #3]
 8002530:	701a      	strb	r2, [r3, #0]
 8002532:	bf00      	nop
 8002534:	370c      	adds	r7, #12
 8002536:	46bd      	mov	sp, r7
 8002538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800253c:	4770      	bx	lr
 800253e:	bf00      	nop
 8002540:	20000254 	.word	0x20000254

08002544 <getGWfromDHCP>:
 8002544:	b480      	push	{r7}
 8002546:	b083      	sub	sp, #12
 8002548:	af00      	add	r7, sp, #0
 800254a:	6078      	str	r0, [r7, #4]
 800254c:	4b0c      	ldr	r3, [pc, #48]	; (8002580 <getGWfromDHCP+0x3c>)
 800254e:	781a      	ldrb	r2, [r3, #0]
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	701a      	strb	r2, [r3, #0]
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	3301      	adds	r3, #1
 8002558:	4a09      	ldr	r2, [pc, #36]	; (8002580 <getGWfromDHCP+0x3c>)
 800255a:	7852      	ldrb	r2, [r2, #1]
 800255c:	701a      	strb	r2, [r3, #0]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	3302      	adds	r3, #2
 8002562:	4a07      	ldr	r2, [pc, #28]	; (8002580 <getGWfromDHCP+0x3c>)
 8002564:	7892      	ldrb	r2, [r2, #2]
 8002566:	701a      	strb	r2, [r3, #0]
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	3303      	adds	r3, #3
 800256c:	4a04      	ldr	r2, [pc, #16]	; (8002580 <getGWfromDHCP+0x3c>)
 800256e:	78d2      	ldrb	r2, [r2, #3]
 8002570:	701a      	strb	r2, [r3, #0]
 8002572:	bf00      	nop
 8002574:	370c      	adds	r7, #12
 8002576:	46bd      	mov	sp, r7
 8002578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800257c:	4770      	bx	lr
 800257e:	bf00      	nop
 8002580:	20000258 	.word	0x20000258

08002584 <getSNfromDHCP>:
 8002584:	b480      	push	{r7}
 8002586:	b083      	sub	sp, #12
 8002588:	af00      	add	r7, sp, #0
 800258a:	6078      	str	r0, [r7, #4]
 800258c:	4b0c      	ldr	r3, [pc, #48]	; (80025c0 <getSNfromDHCP+0x3c>)
 800258e:	781a      	ldrb	r2, [r3, #0]
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	701a      	strb	r2, [r3, #0]
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	3301      	adds	r3, #1
 8002598:	4a09      	ldr	r2, [pc, #36]	; (80025c0 <getSNfromDHCP+0x3c>)
 800259a:	7852      	ldrb	r2, [r2, #1]
 800259c:	701a      	strb	r2, [r3, #0]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	3302      	adds	r3, #2
 80025a2:	4a07      	ldr	r2, [pc, #28]	; (80025c0 <getSNfromDHCP+0x3c>)
 80025a4:	7892      	ldrb	r2, [r2, #2]
 80025a6:	701a      	strb	r2, [r3, #0]
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	3303      	adds	r3, #3
 80025ac:	4a04      	ldr	r2, [pc, #16]	; (80025c0 <getSNfromDHCP+0x3c>)
 80025ae:	78d2      	ldrb	r2, [r2, #3]
 80025b0:	701a      	strb	r2, [r3, #0]
 80025b2:	bf00      	nop
 80025b4:	370c      	adds	r7, #12
 80025b6:	46bd      	mov	sp, r7
 80025b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025bc:	4770      	bx	lr
 80025be:	bf00      	nop
 80025c0:	2000025c 	.word	0x2000025c

080025c4 <getDNSfromDHCP>:
 80025c4:	b480      	push	{r7}
 80025c6:	b083      	sub	sp, #12
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	6078      	str	r0, [r7, #4]
 80025cc:	4b0c      	ldr	r3, [pc, #48]	; (8002600 <getDNSfromDHCP+0x3c>)
 80025ce:	781a      	ldrb	r2, [r3, #0]
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	701a      	strb	r2, [r3, #0]
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	3301      	adds	r3, #1
 80025d8:	4a09      	ldr	r2, [pc, #36]	; (8002600 <getDNSfromDHCP+0x3c>)
 80025da:	7852      	ldrb	r2, [r2, #1]
 80025dc:	701a      	strb	r2, [r3, #0]
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	3302      	adds	r3, #2
 80025e2:	4a07      	ldr	r2, [pc, #28]	; (8002600 <getDNSfromDHCP+0x3c>)
 80025e4:	7892      	ldrb	r2, [r2, #2]
 80025e6:	701a      	strb	r2, [r3, #0]
 80025e8:	687b      	ldr	r3, [r7, #4]
 80025ea:	3303      	adds	r3, #3
 80025ec:	4a04      	ldr	r2, [pc, #16]	; (8002600 <getDNSfromDHCP+0x3c>)
 80025ee:	78d2      	ldrb	r2, [r2, #3]
 80025f0:	701a      	strb	r2, [r3, #0]
 80025f2:	bf00      	nop
 80025f4:	370c      	adds	r7, #12
 80025f6:	46bd      	mov	sp, r7
 80025f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025fc:	4770      	bx	lr
 80025fe:	bf00      	nop
 8002600:	20000260 	.word	0x20000260

08002604 <NibbleToHex>:
 8002604:	b480      	push	{r7}
 8002606:	b083      	sub	sp, #12
 8002608:	af00      	add	r7, sp, #0
 800260a:	4603      	mov	r3, r0
 800260c:	71fb      	strb	r3, [r7, #7]
 800260e:	79fb      	ldrb	r3, [r7, #7]
 8002610:	f003 030f 	and.w	r3, r3, #15
 8002614:	71fb      	strb	r3, [r7, #7]
 8002616:	79fb      	ldrb	r3, [r7, #7]
 8002618:	2b09      	cmp	r3, #9
 800261a:	d803      	bhi.n	8002624 <NibbleToHex+0x20>
 800261c:	79fb      	ldrb	r3, [r7, #7]
 800261e:	3330      	adds	r3, #48	; 0x30
 8002620:	b2db      	uxtb	r3, r3
 8002622:	e002      	b.n	800262a <NibbleToHex+0x26>
 8002624:	79fb      	ldrb	r3, [r7, #7]
 8002626:	3337      	adds	r3, #55	; 0x37
 8002628:	b2db      	uxtb	r3, r3
 800262a:	4618      	mov	r0, r3
 800262c:	370c      	adds	r7, #12
 800262e:	46bd      	mov	sp, r7
 8002630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002634:	4770      	bx	lr
	...

08002638 <DNS_init>:
 8002638:	b480      	push	{r7}
 800263a:	b083      	sub	sp, #12
 800263c:	af00      	add	r7, sp, #0
 800263e:	4603      	mov	r3, r0
 8002640:	6039      	str	r1, [r7, #0]
 8002642:	71fb      	strb	r3, [r7, #7]
 8002644:	4a07      	ldr	r2, [pc, #28]	; (8002664 <DNS_init+0x2c>)
 8002646:	79fb      	ldrb	r3, [r7, #7]
 8002648:	7013      	strb	r3, [r2, #0]
 800264a:	4a07      	ldr	r2, [pc, #28]	; (8002668 <DNS_init+0x30>)
 800264c:	683b      	ldr	r3, [r7, #0]
 800264e:	6013      	str	r3, [r2, #0]
 8002650:	4b06      	ldr	r3, [pc, #24]	; (800266c <DNS_init+0x34>)
 8002652:	f241 1222 	movw	r2, #4386	; 0x1122
 8002656:	801a      	strh	r2, [r3, #0]
 8002658:	bf00      	nop
 800265a:	370c      	adds	r7, #12
 800265c:	46bd      	mov	sp, r7
 800265e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002662:	4770      	bx	lr
 8002664:	20000280 	.word	0x20000280
 8002668:	2000027c 	.word	0x2000027c
 800266c:	20000282 	.word	0x20000282

08002670 <WIZCHIP_READ>:
 8002670:	b580      	push	{r7, lr}
 8002672:	b084      	sub	sp, #16
 8002674:	af00      	add	r7, sp, #0
 8002676:	6078      	str	r0, [r7, #4]
 8002678:	4b22      	ldr	r3, [pc, #136]	; (8002704 <WIZCHIP_READ+0x94>)
 800267a:	689b      	ldr	r3, [r3, #8]
 800267c:	4798      	blx	r3
 800267e:	4b21      	ldr	r3, [pc, #132]	; (8002704 <WIZCHIP_READ+0x94>)
 8002680:	691b      	ldr	r3, [r3, #16]
 8002682:	4798      	blx	r3
 8002684:	4b1f      	ldr	r3, [pc, #124]	; (8002704 <WIZCHIP_READ+0x94>)
 8002686:	6a1b      	ldr	r3, [r3, #32]
 8002688:	2b00      	cmp	r3, #0
 800268a:	d003      	beq.n	8002694 <WIZCHIP_READ+0x24>
 800268c:	4b1d      	ldr	r3, [pc, #116]	; (8002704 <WIZCHIP_READ+0x94>)
 800268e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002690:	2b00      	cmp	r3, #0
 8002692:	d114      	bne.n	80026be <WIZCHIP_READ+0x4e>
 8002694:	4b1b      	ldr	r3, [pc, #108]	; (8002704 <WIZCHIP_READ+0x94>)
 8002696:	69db      	ldr	r3, [r3, #28]
 8002698:	687a      	ldr	r2, [r7, #4]
 800269a:	0c12      	lsrs	r2, r2, #16
 800269c:	b2d2      	uxtb	r2, r2
 800269e:	4610      	mov	r0, r2
 80026a0:	4798      	blx	r3
 80026a2:	4b18      	ldr	r3, [pc, #96]	; (8002704 <WIZCHIP_READ+0x94>)
 80026a4:	69db      	ldr	r3, [r3, #28]
 80026a6:	687a      	ldr	r2, [r7, #4]
 80026a8:	0a12      	lsrs	r2, r2, #8
 80026aa:	b2d2      	uxtb	r2, r2
 80026ac:	4610      	mov	r0, r2
 80026ae:	4798      	blx	r3
 80026b0:	4b14      	ldr	r3, [pc, #80]	; (8002704 <WIZCHIP_READ+0x94>)
 80026b2:	69db      	ldr	r3, [r3, #28]
 80026b4:	687a      	ldr	r2, [r7, #4]
 80026b6:	b2d2      	uxtb	r2, r2
 80026b8:	4610      	mov	r0, r2
 80026ba:	4798      	blx	r3
 80026bc:	e011      	b.n	80026e2 <WIZCHIP_READ+0x72>
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	0c1b      	lsrs	r3, r3, #16
 80026c2:	b2db      	uxtb	r3, r3
 80026c4:	733b      	strb	r3, [r7, #12]
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	0a1b      	lsrs	r3, r3, #8
 80026ca:	b2db      	uxtb	r3, r3
 80026cc:	737b      	strb	r3, [r7, #13]
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	b2db      	uxtb	r3, r3
 80026d2:	73bb      	strb	r3, [r7, #14]
 80026d4:	4b0b      	ldr	r3, [pc, #44]	; (8002704 <WIZCHIP_READ+0x94>)
 80026d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026d8:	f107 020c 	add.w	r2, r7, #12
 80026dc:	2103      	movs	r1, #3
 80026de:	4610      	mov	r0, r2
 80026e0:	4798      	blx	r3
 80026e2:	4b08      	ldr	r3, [pc, #32]	; (8002704 <WIZCHIP_READ+0x94>)
 80026e4:	699b      	ldr	r3, [r3, #24]
 80026e6:	4798      	blx	r3
 80026e8:	4603      	mov	r3, r0
 80026ea:	73fb      	strb	r3, [r7, #15]
 80026ec:	4b05      	ldr	r3, [pc, #20]	; (8002704 <WIZCHIP_READ+0x94>)
 80026ee:	695b      	ldr	r3, [r3, #20]
 80026f0:	4798      	blx	r3
 80026f2:	4b04      	ldr	r3, [pc, #16]	; (8002704 <WIZCHIP_READ+0x94>)
 80026f4:	68db      	ldr	r3, [r3, #12]
 80026f6:	4798      	blx	r3
 80026f8:	7bfb      	ldrb	r3, [r7, #15]
 80026fa:	4618      	mov	r0, r3
 80026fc:	3710      	adds	r7, #16
 80026fe:	46bd      	mov	sp, r7
 8002700:	bd80      	pop	{r7, pc}
 8002702:	bf00      	nop
 8002704:	20000020 	.word	0x20000020

08002708 <WIZCHIP_WRITE>:
 8002708:	b580      	push	{r7, lr}
 800270a:	b084      	sub	sp, #16
 800270c:	af00      	add	r7, sp, #0
 800270e:	6078      	str	r0, [r7, #4]
 8002710:	460b      	mov	r3, r1
 8002712:	70fb      	strb	r3, [r7, #3]
 8002714:	4b22      	ldr	r3, [pc, #136]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 8002716:	689b      	ldr	r3, [r3, #8]
 8002718:	4798      	blx	r3
 800271a:	4b21      	ldr	r3, [pc, #132]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 800271c:	691b      	ldr	r3, [r3, #16]
 800271e:	4798      	blx	r3
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	f043 0304 	orr.w	r3, r3, #4
 8002726:	607b      	str	r3, [r7, #4]
 8002728:	4b1d      	ldr	r3, [pc, #116]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 800272a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800272c:	2b00      	cmp	r3, #0
 800272e:	d119      	bne.n	8002764 <WIZCHIP_WRITE+0x5c>
 8002730:	4b1b      	ldr	r3, [pc, #108]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 8002732:	69db      	ldr	r3, [r3, #28]
 8002734:	687a      	ldr	r2, [r7, #4]
 8002736:	0c12      	lsrs	r2, r2, #16
 8002738:	b2d2      	uxtb	r2, r2
 800273a:	4610      	mov	r0, r2
 800273c:	4798      	blx	r3
 800273e:	4b18      	ldr	r3, [pc, #96]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 8002740:	69db      	ldr	r3, [r3, #28]
 8002742:	687a      	ldr	r2, [r7, #4]
 8002744:	0a12      	lsrs	r2, r2, #8
 8002746:	b2d2      	uxtb	r2, r2
 8002748:	4610      	mov	r0, r2
 800274a:	4798      	blx	r3
 800274c:	4b14      	ldr	r3, [pc, #80]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 800274e:	69db      	ldr	r3, [r3, #28]
 8002750:	687a      	ldr	r2, [r7, #4]
 8002752:	b2d2      	uxtb	r2, r2
 8002754:	4610      	mov	r0, r2
 8002756:	4798      	blx	r3
 8002758:	4b11      	ldr	r3, [pc, #68]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 800275a:	69db      	ldr	r3, [r3, #28]
 800275c:	78fa      	ldrb	r2, [r7, #3]
 800275e:	4610      	mov	r0, r2
 8002760:	4798      	blx	r3
 8002762:	e013      	b.n	800278c <WIZCHIP_WRITE+0x84>
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	0c1b      	lsrs	r3, r3, #16
 8002768:	b2db      	uxtb	r3, r3
 800276a:	733b      	strb	r3, [r7, #12]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	0a1b      	lsrs	r3, r3, #8
 8002770:	b2db      	uxtb	r3, r3
 8002772:	737b      	strb	r3, [r7, #13]
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	b2db      	uxtb	r3, r3
 8002778:	73bb      	strb	r3, [r7, #14]
 800277a:	78fb      	ldrb	r3, [r7, #3]
 800277c:	73fb      	strb	r3, [r7, #15]
 800277e:	4b08      	ldr	r3, [pc, #32]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 8002780:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002782:	f107 020c 	add.w	r2, r7, #12
 8002786:	2104      	movs	r1, #4
 8002788:	4610      	mov	r0, r2
 800278a:	4798      	blx	r3
 800278c:	4b04      	ldr	r3, [pc, #16]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 800278e:	695b      	ldr	r3, [r3, #20]
 8002790:	4798      	blx	r3
 8002792:	4b03      	ldr	r3, [pc, #12]	; (80027a0 <WIZCHIP_WRITE+0x98>)
 8002794:	68db      	ldr	r3, [r3, #12]
 8002796:	4798      	blx	r3
 8002798:	bf00      	nop
 800279a:	3710      	adds	r7, #16
 800279c:	46bd      	mov	sp, r7
 800279e:	bd80      	pop	{r7, pc}
 80027a0:	20000020 	.word	0x20000020

080027a4 <WIZCHIP_READ_BUF>:
 80027a4:	b590      	push	{r4, r7, lr}
 80027a6:	b087      	sub	sp, #28
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	60f8      	str	r0, [r7, #12]
 80027ac:	60b9      	str	r1, [r7, #8]
 80027ae:	4613      	mov	r3, r2
 80027b0:	80fb      	strh	r3, [r7, #6]
 80027b2:	4b2b      	ldr	r3, [pc, #172]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 80027b4:	689b      	ldr	r3, [r3, #8]
 80027b6:	4798      	blx	r3
 80027b8:	4b29      	ldr	r3, [pc, #164]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 80027ba:	691b      	ldr	r3, [r3, #16]
 80027bc:	4798      	blx	r3
 80027be:	4b28      	ldr	r3, [pc, #160]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 80027c0:	6a1b      	ldr	r3, [r3, #32]
 80027c2:	2b00      	cmp	r3, #0
 80027c4:	d003      	beq.n	80027ce <WIZCHIP_READ_BUF+0x2a>
 80027c6:	4b26      	ldr	r3, [pc, #152]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 80027c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ca:	2b00      	cmp	r3, #0
 80027cc:	d126      	bne.n	800281c <WIZCHIP_READ_BUF+0x78>
 80027ce:	4b24      	ldr	r3, [pc, #144]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 80027d0:	69db      	ldr	r3, [r3, #28]
 80027d2:	68fa      	ldr	r2, [r7, #12]
 80027d4:	0c12      	lsrs	r2, r2, #16
 80027d6:	b2d2      	uxtb	r2, r2
 80027d8:	4610      	mov	r0, r2
 80027da:	4798      	blx	r3
 80027dc:	4b20      	ldr	r3, [pc, #128]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 80027de:	69db      	ldr	r3, [r3, #28]
 80027e0:	68fa      	ldr	r2, [r7, #12]
 80027e2:	0a12      	lsrs	r2, r2, #8
 80027e4:	b2d2      	uxtb	r2, r2
 80027e6:	4610      	mov	r0, r2
 80027e8:	4798      	blx	r3
 80027ea:	4b1d      	ldr	r3, [pc, #116]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 80027ec:	69db      	ldr	r3, [r3, #28]
 80027ee:	68fa      	ldr	r2, [r7, #12]
 80027f0:	b2d2      	uxtb	r2, r2
 80027f2:	4610      	mov	r0, r2
 80027f4:	4798      	blx	r3
 80027f6:	2300      	movs	r3, #0
 80027f8:	82fb      	strh	r3, [r7, #22]
 80027fa:	e00a      	b.n	8002812 <WIZCHIP_READ_BUF+0x6e>
 80027fc:	4b18      	ldr	r3, [pc, #96]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 80027fe:	699b      	ldr	r3, [r3, #24]
 8002800:	8afa      	ldrh	r2, [r7, #22]
 8002802:	68b9      	ldr	r1, [r7, #8]
 8002804:	188c      	adds	r4, r1, r2
 8002806:	4798      	blx	r3
 8002808:	4603      	mov	r3, r0
 800280a:	7023      	strb	r3, [r4, #0]
 800280c:	8afb      	ldrh	r3, [r7, #22]
 800280e:	3301      	adds	r3, #1
 8002810:	82fb      	strh	r3, [r7, #22]
 8002812:	8afa      	ldrh	r2, [r7, #22]
 8002814:	88fb      	ldrh	r3, [r7, #6]
 8002816:	429a      	cmp	r2, r3
 8002818:	d3f0      	bcc.n	80027fc <WIZCHIP_READ_BUF+0x58>
 800281a:	e017      	b.n	800284c <WIZCHIP_READ_BUF+0xa8>
 800281c:	68fb      	ldr	r3, [r7, #12]
 800281e:	0c1b      	lsrs	r3, r3, #16
 8002820:	b2db      	uxtb	r3, r3
 8002822:	743b      	strb	r3, [r7, #16]
 8002824:	68fb      	ldr	r3, [r7, #12]
 8002826:	0a1b      	lsrs	r3, r3, #8
 8002828:	b2db      	uxtb	r3, r3
 800282a:	747b      	strb	r3, [r7, #17]
 800282c:	68fb      	ldr	r3, [r7, #12]
 800282e:	b2db      	uxtb	r3, r3
 8002830:	74bb      	strb	r3, [r7, #18]
 8002832:	4b0b      	ldr	r3, [pc, #44]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 8002834:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002836:	f107 0210 	add.w	r2, r7, #16
 800283a:	2103      	movs	r1, #3
 800283c:	4610      	mov	r0, r2
 800283e:	4798      	blx	r3
 8002840:	4b07      	ldr	r3, [pc, #28]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 8002842:	6a1b      	ldr	r3, [r3, #32]
 8002844:	88fa      	ldrh	r2, [r7, #6]
 8002846:	4611      	mov	r1, r2
 8002848:	68b8      	ldr	r0, [r7, #8]
 800284a:	4798      	blx	r3
 800284c:	4b04      	ldr	r3, [pc, #16]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 800284e:	695b      	ldr	r3, [r3, #20]
 8002850:	4798      	blx	r3
 8002852:	4b03      	ldr	r3, [pc, #12]	; (8002860 <WIZCHIP_READ_BUF+0xbc>)
 8002854:	68db      	ldr	r3, [r3, #12]
 8002856:	4798      	blx	r3
 8002858:	bf00      	nop
 800285a:	371c      	adds	r7, #28
 800285c:	46bd      	mov	sp, r7
 800285e:	bd90      	pop	{r4, r7, pc}
 8002860:	20000020 	.word	0x20000020

08002864 <WIZCHIP_WRITE_BUF>:
 8002864:	b580      	push	{r7, lr}
 8002866:	b086      	sub	sp, #24
 8002868:	af00      	add	r7, sp, #0
 800286a:	60f8      	str	r0, [r7, #12]
 800286c:	60b9      	str	r1, [r7, #8]
 800286e:	4613      	mov	r3, r2
 8002870:	80fb      	strh	r3, [r7, #6]
 8002872:	4b2b      	ldr	r3, [pc, #172]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 8002874:	689b      	ldr	r3, [r3, #8]
 8002876:	4798      	blx	r3
 8002878:	4b29      	ldr	r3, [pc, #164]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 800287a:	691b      	ldr	r3, [r3, #16]
 800287c:	4798      	blx	r3
 800287e:	68fb      	ldr	r3, [r7, #12]
 8002880:	f043 0304 	orr.w	r3, r3, #4
 8002884:	60fb      	str	r3, [r7, #12]
 8002886:	4b26      	ldr	r3, [pc, #152]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 8002888:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800288a:	2b00      	cmp	r3, #0
 800288c:	d126      	bne.n	80028dc <WIZCHIP_WRITE_BUF+0x78>
 800288e:	4b24      	ldr	r3, [pc, #144]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 8002890:	69db      	ldr	r3, [r3, #28]
 8002892:	68fa      	ldr	r2, [r7, #12]
 8002894:	0c12      	lsrs	r2, r2, #16
 8002896:	b2d2      	uxtb	r2, r2
 8002898:	4610      	mov	r0, r2
 800289a:	4798      	blx	r3
 800289c:	4b20      	ldr	r3, [pc, #128]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 800289e:	69db      	ldr	r3, [r3, #28]
 80028a0:	68fa      	ldr	r2, [r7, #12]
 80028a2:	0a12      	lsrs	r2, r2, #8
 80028a4:	b2d2      	uxtb	r2, r2
 80028a6:	4610      	mov	r0, r2
 80028a8:	4798      	blx	r3
 80028aa:	4b1d      	ldr	r3, [pc, #116]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 80028ac:	69db      	ldr	r3, [r3, #28]
 80028ae:	68fa      	ldr	r2, [r7, #12]
 80028b0:	b2d2      	uxtb	r2, r2
 80028b2:	4610      	mov	r0, r2
 80028b4:	4798      	blx	r3
 80028b6:	2300      	movs	r3, #0
 80028b8:	82fb      	strh	r3, [r7, #22]
 80028ba:	e00a      	b.n	80028d2 <WIZCHIP_WRITE_BUF+0x6e>
 80028bc:	4b18      	ldr	r3, [pc, #96]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 80028be:	69db      	ldr	r3, [r3, #28]
 80028c0:	8afa      	ldrh	r2, [r7, #22]
 80028c2:	68b9      	ldr	r1, [r7, #8]
 80028c4:	440a      	add	r2, r1
 80028c6:	7812      	ldrb	r2, [r2, #0]
 80028c8:	4610      	mov	r0, r2
 80028ca:	4798      	blx	r3
 80028cc:	8afb      	ldrh	r3, [r7, #22]
 80028ce:	3301      	adds	r3, #1
 80028d0:	82fb      	strh	r3, [r7, #22]
 80028d2:	8afa      	ldrh	r2, [r7, #22]
 80028d4:	88fb      	ldrh	r3, [r7, #6]
 80028d6:	429a      	cmp	r2, r3
 80028d8:	d3f0      	bcc.n	80028bc <WIZCHIP_WRITE_BUF+0x58>
 80028da:	e017      	b.n	800290c <WIZCHIP_WRITE_BUF+0xa8>
 80028dc:	68fb      	ldr	r3, [r7, #12]
 80028de:	0c1b      	lsrs	r3, r3, #16
 80028e0:	b2db      	uxtb	r3, r3
 80028e2:	743b      	strb	r3, [r7, #16]
 80028e4:	68fb      	ldr	r3, [r7, #12]
 80028e6:	0a1b      	lsrs	r3, r3, #8
 80028e8:	b2db      	uxtb	r3, r3
 80028ea:	747b      	strb	r3, [r7, #17]
 80028ec:	68fb      	ldr	r3, [r7, #12]
 80028ee:	b2db      	uxtb	r3, r3
 80028f0:	74bb      	strb	r3, [r7, #18]
 80028f2:	4b0b      	ldr	r3, [pc, #44]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 80028f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028f6:	f107 0210 	add.w	r2, r7, #16
 80028fa:	2103      	movs	r1, #3
 80028fc:	4610      	mov	r0, r2
 80028fe:	4798      	blx	r3
 8002900:	4b07      	ldr	r3, [pc, #28]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 8002902:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002904:	88fa      	ldrh	r2, [r7, #6]
 8002906:	4611      	mov	r1, r2
 8002908:	68b8      	ldr	r0, [r7, #8]
 800290a:	4798      	blx	r3
 800290c:	4b04      	ldr	r3, [pc, #16]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 800290e:	695b      	ldr	r3, [r3, #20]
 8002910:	4798      	blx	r3
 8002912:	4b03      	ldr	r3, [pc, #12]	; (8002920 <WIZCHIP_WRITE_BUF+0xbc>)
 8002914:	68db      	ldr	r3, [r3, #12]
 8002916:	4798      	blx	r3
 8002918:	bf00      	nop
 800291a:	3718      	adds	r7, #24
 800291c:	46bd      	mov	sp, r7
 800291e:	bd80      	pop	{r7, pc}
 8002920:	20000020 	.word	0x20000020

08002924 <getSn_TX_FSR>:
 8002924:	b590      	push	{r4, r7, lr}
 8002926:	b085      	sub	sp, #20
 8002928:	af00      	add	r7, sp, #0
 800292a:	4603      	mov	r3, r0
 800292c:	71fb      	strb	r3, [r7, #7]
 800292e:	2300      	movs	r3, #0
 8002930:	81fb      	strh	r3, [r7, #14]
 8002932:	2300      	movs	r3, #0
 8002934:	81bb      	strh	r3, [r7, #12]
 8002936:	79fb      	ldrb	r3, [r7, #7]
 8002938:	009b      	lsls	r3, r3, #2
 800293a:	3301      	adds	r3, #1
 800293c:	00db      	lsls	r3, r3, #3
 800293e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8002942:	4618      	mov	r0, r3
 8002944:	f7ff fe94 	bl	8002670 <WIZCHIP_READ>
 8002948:	4603      	mov	r3, r0
 800294a:	81bb      	strh	r3, [r7, #12]
 800294c:	89bb      	ldrh	r3, [r7, #12]
 800294e:	021b      	lsls	r3, r3, #8
 8002950:	b29c      	uxth	r4, r3
 8002952:	79fb      	ldrb	r3, [r7, #7]
 8002954:	009b      	lsls	r3, r3, #2
 8002956:	3301      	adds	r3, #1
 8002958:	00db      	lsls	r3, r3, #3
 800295a:	f503 5304 	add.w	r3, r3, #8448	; 0x2100
 800295e:	4618      	mov	r0, r3
 8002960:	f7ff fe86 	bl	8002670 <WIZCHIP_READ>
 8002964:	4603      	mov	r3, r0
 8002966:	b29b      	uxth	r3, r3
 8002968:	4423      	add	r3, r4
 800296a:	81bb      	strh	r3, [r7, #12]
 800296c:	89bb      	ldrh	r3, [r7, #12]
 800296e:	2b00      	cmp	r3, #0
 8002970:	d01a      	beq.n	80029a8 <getSn_TX_FSR+0x84>
 8002972:	79fb      	ldrb	r3, [r7, #7]
 8002974:	009b      	lsls	r3, r3, #2
 8002976:	3301      	adds	r3, #1
 8002978:	00db      	lsls	r3, r3, #3
 800297a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800297e:	4618      	mov	r0, r3
 8002980:	f7ff fe76 	bl	8002670 <WIZCHIP_READ>
 8002984:	4603      	mov	r3, r0
 8002986:	81fb      	strh	r3, [r7, #14]
 8002988:	89fb      	ldrh	r3, [r7, #14]
 800298a:	021b      	lsls	r3, r3, #8
 800298c:	b29c      	uxth	r4, r3
 800298e:	79fb      	ldrb	r3, [r7, #7]
 8002990:	009b      	lsls	r3, r3, #2
 8002992:	3301      	adds	r3, #1
 8002994:	00db      	lsls	r3, r3, #3
 8002996:	f503 5304 	add.w	r3, r3, #8448	; 0x2100
 800299a:	4618      	mov	r0, r3
 800299c:	f7ff fe68 	bl	8002670 <WIZCHIP_READ>
 80029a0:	4603      	mov	r3, r0
 80029a2:	b29b      	uxth	r3, r3
 80029a4:	4423      	add	r3, r4
 80029a6:	81fb      	strh	r3, [r7, #14]
 80029a8:	89fa      	ldrh	r2, [r7, #14]
 80029aa:	89bb      	ldrh	r3, [r7, #12]
 80029ac:	429a      	cmp	r2, r3
 80029ae:	d1c2      	bne.n	8002936 <getSn_TX_FSR+0x12>
 80029b0:	89fb      	ldrh	r3, [r7, #14]
 80029b2:	4618      	mov	r0, r3
 80029b4:	3714      	adds	r7, #20
 80029b6:	46bd      	mov	sp, r7
 80029b8:	bd90      	pop	{r4, r7, pc}

080029ba <getSn_RX_RSR>:
 80029ba:	b590      	push	{r4, r7, lr}
 80029bc:	b085      	sub	sp, #20
 80029be:	af00      	add	r7, sp, #0
 80029c0:	4603      	mov	r3, r0
 80029c2:	71fb      	strb	r3, [r7, #7]
 80029c4:	2300      	movs	r3, #0
 80029c6:	81fb      	strh	r3, [r7, #14]
 80029c8:	2300      	movs	r3, #0
 80029ca:	81bb      	strh	r3, [r7, #12]
 80029cc:	79fb      	ldrb	r3, [r7, #7]
 80029ce:	009b      	lsls	r3, r3, #2
 80029d0:	3301      	adds	r3, #1
 80029d2:	00db      	lsls	r3, r3, #3
 80029d4:	f503 5318 	add.w	r3, r3, #9728	; 0x2600
 80029d8:	4618      	mov	r0, r3
 80029da:	f7ff fe49 	bl	8002670 <WIZCHIP_READ>
 80029de:	4603      	mov	r3, r0
 80029e0:	81bb      	strh	r3, [r7, #12]
 80029e2:	89bb      	ldrh	r3, [r7, #12]
 80029e4:	021b      	lsls	r3, r3, #8
 80029e6:	b29c      	uxth	r4, r3
 80029e8:	79fb      	ldrb	r3, [r7, #7]
 80029ea:	009b      	lsls	r3, r3, #2
 80029ec:	3301      	adds	r3, #1
 80029ee:	00db      	lsls	r3, r3, #3
 80029f0:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 80029f4:	4618      	mov	r0, r3
 80029f6:	f7ff fe3b 	bl	8002670 <WIZCHIP_READ>
 80029fa:	4603      	mov	r3, r0
 80029fc:	b29b      	uxth	r3, r3
 80029fe:	4423      	add	r3, r4
 8002a00:	81bb      	strh	r3, [r7, #12]
 8002a02:	89bb      	ldrh	r3, [r7, #12]
 8002a04:	2b00      	cmp	r3, #0
 8002a06:	d01a      	beq.n	8002a3e <getSn_RX_RSR+0x84>
 8002a08:	79fb      	ldrb	r3, [r7, #7]
 8002a0a:	009b      	lsls	r3, r3, #2
 8002a0c:	3301      	adds	r3, #1
 8002a0e:	00db      	lsls	r3, r3, #3
 8002a10:	f503 5318 	add.w	r3, r3, #9728	; 0x2600
 8002a14:	4618      	mov	r0, r3
 8002a16:	f7ff fe2b 	bl	8002670 <WIZCHIP_READ>
 8002a1a:	4603      	mov	r3, r0
 8002a1c:	81fb      	strh	r3, [r7, #14]
 8002a1e:	89fb      	ldrh	r3, [r7, #14]
 8002a20:	021b      	lsls	r3, r3, #8
 8002a22:	b29c      	uxth	r4, r3
 8002a24:	79fb      	ldrb	r3, [r7, #7]
 8002a26:	009b      	lsls	r3, r3, #2
 8002a28:	3301      	adds	r3, #1
 8002a2a:	00db      	lsls	r3, r3, #3
 8002a2c:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 8002a30:	4618      	mov	r0, r3
 8002a32:	f7ff fe1d 	bl	8002670 <WIZCHIP_READ>
 8002a36:	4603      	mov	r3, r0
 8002a38:	b29b      	uxth	r3, r3
 8002a3a:	4423      	add	r3, r4
 8002a3c:	81fb      	strh	r3, [r7, #14]
 8002a3e:	89fa      	ldrh	r2, [r7, #14]
 8002a40:	89bb      	ldrh	r3, [r7, #12]
 8002a42:	429a      	cmp	r2, r3
 8002a44:	d1c2      	bne.n	80029cc <getSn_RX_RSR+0x12>
 8002a46:	89fb      	ldrh	r3, [r7, #14]
 8002a48:	4618      	mov	r0, r3
 8002a4a:	3714      	adds	r7, #20
 8002a4c:	46bd      	mov	sp, r7
 8002a4e:	bd90      	pop	{r4, r7, pc}

08002a50 <wiz_send_data>:
 8002a50:	b590      	push	{r4, r7, lr}
 8002a52:	b085      	sub	sp, #20
 8002a54:	af00      	add	r7, sp, #0
 8002a56:	4603      	mov	r3, r0
 8002a58:	6039      	str	r1, [r7, #0]
 8002a5a:	71fb      	strb	r3, [r7, #7]
 8002a5c:	4613      	mov	r3, r2
 8002a5e:	80bb      	strh	r3, [r7, #4]
 8002a60:	2300      	movs	r3, #0
 8002a62:	81fb      	strh	r3, [r7, #14]
 8002a64:	2300      	movs	r3, #0
 8002a66:	60bb      	str	r3, [r7, #8]
 8002a68:	88bb      	ldrh	r3, [r7, #4]
 8002a6a:	2b00      	cmp	r3, #0
 8002a6c:	d048      	beq.n	8002b00 <wiz_send_data+0xb0>
 8002a6e:	79fb      	ldrb	r3, [r7, #7]
 8002a70:	009b      	lsls	r3, r3, #2
 8002a72:	3301      	adds	r3, #1
 8002a74:	00db      	lsls	r3, r3, #3
 8002a76:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 8002a7a:	4618      	mov	r0, r3
 8002a7c:	f7ff fdf8 	bl	8002670 <WIZCHIP_READ>
 8002a80:	4603      	mov	r3, r0
 8002a82:	b29b      	uxth	r3, r3
 8002a84:	021b      	lsls	r3, r3, #8
 8002a86:	b29c      	uxth	r4, r3
 8002a88:	79fb      	ldrb	r3, [r7, #7]
 8002a8a:	009b      	lsls	r3, r3, #2
 8002a8c:	3301      	adds	r3, #1
 8002a8e:	00db      	lsls	r3, r3, #3
 8002a90:	f503 5314 	add.w	r3, r3, #9472	; 0x2500
 8002a94:	4618      	mov	r0, r3
 8002a96:	f7ff fdeb 	bl	8002670 <WIZCHIP_READ>
 8002a9a:	4603      	mov	r3, r0
 8002a9c:	b29b      	uxth	r3, r3
 8002a9e:	4423      	add	r3, r4
 8002aa0:	81fb      	strh	r3, [r7, #14]
 8002aa2:	89fb      	ldrh	r3, [r7, #14]
 8002aa4:	021b      	lsls	r3, r3, #8
 8002aa6:	79fa      	ldrb	r2, [r7, #7]
 8002aa8:	0092      	lsls	r2, r2, #2
 8002aaa:	3202      	adds	r2, #2
 8002aac:	00d2      	lsls	r2, r2, #3
 8002aae:	4413      	add	r3, r2
 8002ab0:	60bb      	str	r3, [r7, #8]
 8002ab2:	88bb      	ldrh	r3, [r7, #4]
 8002ab4:	461a      	mov	r2, r3
 8002ab6:	6839      	ldr	r1, [r7, #0]
 8002ab8:	68b8      	ldr	r0, [r7, #8]
 8002aba:	f7ff fed3 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8002abe:	89fa      	ldrh	r2, [r7, #14]
 8002ac0:	88bb      	ldrh	r3, [r7, #4]
 8002ac2:	4413      	add	r3, r2
 8002ac4:	81fb      	strh	r3, [r7, #14]
 8002ac6:	79fb      	ldrb	r3, [r7, #7]
 8002ac8:	009b      	lsls	r3, r3, #2
 8002aca:	3301      	adds	r3, #1
 8002acc:	00db      	lsls	r3, r3, #3
 8002ace:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 8002ad2:	461a      	mov	r2, r3
 8002ad4:	89fb      	ldrh	r3, [r7, #14]
 8002ad6:	0a1b      	lsrs	r3, r3, #8
 8002ad8:	b29b      	uxth	r3, r3
 8002ada:	b2db      	uxtb	r3, r3
 8002adc:	4619      	mov	r1, r3
 8002ade:	4610      	mov	r0, r2
 8002ae0:	f7ff fe12 	bl	8002708 <WIZCHIP_WRITE>
 8002ae4:	79fb      	ldrb	r3, [r7, #7]
 8002ae6:	009b      	lsls	r3, r3, #2
 8002ae8:	3301      	adds	r3, #1
 8002aea:	00db      	lsls	r3, r3, #3
 8002aec:	f503 5314 	add.w	r3, r3, #9472	; 0x2500
 8002af0:	461a      	mov	r2, r3
 8002af2:	89fb      	ldrh	r3, [r7, #14]
 8002af4:	b2db      	uxtb	r3, r3
 8002af6:	4619      	mov	r1, r3
 8002af8:	4610      	mov	r0, r2
 8002afa:	f7ff fe05 	bl	8002708 <WIZCHIP_WRITE>
 8002afe:	e000      	b.n	8002b02 <wiz_send_data+0xb2>
 8002b00:	bf00      	nop
 8002b02:	3714      	adds	r7, #20
 8002b04:	46bd      	mov	sp, r7
 8002b06:	bd90      	pop	{r4, r7, pc}

08002b08 <wiz_recv_data>:
 8002b08:	b590      	push	{r4, r7, lr}
 8002b0a:	b085      	sub	sp, #20
 8002b0c:	af00      	add	r7, sp, #0
 8002b0e:	4603      	mov	r3, r0
 8002b10:	6039      	str	r1, [r7, #0]
 8002b12:	71fb      	strb	r3, [r7, #7]
 8002b14:	4613      	mov	r3, r2
 8002b16:	80bb      	strh	r3, [r7, #4]
 8002b18:	2300      	movs	r3, #0
 8002b1a:	81fb      	strh	r3, [r7, #14]
 8002b1c:	2300      	movs	r3, #0
 8002b1e:	60bb      	str	r3, [r7, #8]
 8002b20:	88bb      	ldrh	r3, [r7, #4]
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d048      	beq.n	8002bb8 <wiz_recv_data+0xb0>
 8002b26:	79fb      	ldrb	r3, [r7, #7]
 8002b28:	009b      	lsls	r3, r3, #2
 8002b2a:	3301      	adds	r3, #1
 8002b2c:	00db      	lsls	r3, r3, #3
 8002b2e:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
 8002b32:	4618      	mov	r0, r3
 8002b34:	f7ff fd9c 	bl	8002670 <WIZCHIP_READ>
 8002b38:	4603      	mov	r3, r0
 8002b3a:	b29b      	uxth	r3, r3
 8002b3c:	021b      	lsls	r3, r3, #8
 8002b3e:	b29c      	uxth	r4, r3
 8002b40:	79fb      	ldrb	r3, [r7, #7]
 8002b42:	009b      	lsls	r3, r3, #2
 8002b44:	3301      	adds	r3, #1
 8002b46:	00db      	lsls	r3, r3, #3
 8002b48:	f503 5324 	add.w	r3, r3, #10496	; 0x2900
 8002b4c:	4618      	mov	r0, r3
 8002b4e:	f7ff fd8f 	bl	8002670 <WIZCHIP_READ>
 8002b52:	4603      	mov	r3, r0
 8002b54:	b29b      	uxth	r3, r3
 8002b56:	4423      	add	r3, r4
 8002b58:	81fb      	strh	r3, [r7, #14]
 8002b5a:	89fb      	ldrh	r3, [r7, #14]
 8002b5c:	021b      	lsls	r3, r3, #8
 8002b5e:	79fa      	ldrb	r2, [r7, #7]
 8002b60:	0092      	lsls	r2, r2, #2
 8002b62:	3203      	adds	r2, #3
 8002b64:	00d2      	lsls	r2, r2, #3
 8002b66:	4413      	add	r3, r2
 8002b68:	60bb      	str	r3, [r7, #8]
 8002b6a:	88bb      	ldrh	r3, [r7, #4]
 8002b6c:	461a      	mov	r2, r3
 8002b6e:	6839      	ldr	r1, [r7, #0]
 8002b70:	68b8      	ldr	r0, [r7, #8]
 8002b72:	f7ff fe17 	bl	80027a4 <WIZCHIP_READ_BUF>
 8002b76:	89fa      	ldrh	r2, [r7, #14]
 8002b78:	88bb      	ldrh	r3, [r7, #4]
 8002b7a:	4413      	add	r3, r2
 8002b7c:	81fb      	strh	r3, [r7, #14]
 8002b7e:	79fb      	ldrb	r3, [r7, #7]
 8002b80:	009b      	lsls	r3, r3, #2
 8002b82:	3301      	adds	r3, #1
 8002b84:	00db      	lsls	r3, r3, #3
 8002b86:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
 8002b8a:	461a      	mov	r2, r3
 8002b8c:	89fb      	ldrh	r3, [r7, #14]
 8002b8e:	0a1b      	lsrs	r3, r3, #8
 8002b90:	b29b      	uxth	r3, r3
 8002b92:	b2db      	uxtb	r3, r3
 8002b94:	4619      	mov	r1, r3
 8002b96:	4610      	mov	r0, r2
 8002b98:	f7ff fdb6 	bl	8002708 <WIZCHIP_WRITE>
 8002b9c:	79fb      	ldrb	r3, [r7, #7]
 8002b9e:	009b      	lsls	r3, r3, #2
 8002ba0:	3301      	adds	r3, #1
 8002ba2:	00db      	lsls	r3, r3, #3
 8002ba4:	f503 5324 	add.w	r3, r3, #10496	; 0x2900
 8002ba8:	461a      	mov	r2, r3
 8002baa:	89fb      	ldrh	r3, [r7, #14]
 8002bac:	b2db      	uxtb	r3, r3
 8002bae:	4619      	mov	r1, r3
 8002bb0:	4610      	mov	r0, r2
 8002bb2:	f7ff fda9 	bl	8002708 <WIZCHIP_WRITE>
 8002bb6:	e000      	b.n	8002bba <wiz_recv_data+0xb2>
 8002bb8:	bf00      	nop
 8002bba:	3714      	adds	r7, #20
 8002bbc:	46bd      	mov	sp, r7
 8002bbe:	bd90      	pop	{r4, r7, pc}

08002bc0 <wiz_recv_ignore>:
 8002bc0:	b590      	push	{r4, r7, lr}
 8002bc2:	b085      	sub	sp, #20
 8002bc4:	af00      	add	r7, sp, #0
 8002bc6:	4603      	mov	r3, r0
 8002bc8:	460a      	mov	r2, r1
 8002bca:	71fb      	strb	r3, [r7, #7]
 8002bcc:	4613      	mov	r3, r2
 8002bce:	80bb      	strh	r3, [r7, #4]
 8002bd0:	2300      	movs	r3, #0
 8002bd2:	81fb      	strh	r3, [r7, #14]
 8002bd4:	79fb      	ldrb	r3, [r7, #7]
 8002bd6:	009b      	lsls	r3, r3, #2
 8002bd8:	3301      	adds	r3, #1
 8002bda:	00db      	lsls	r3, r3, #3
 8002bdc:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
 8002be0:	4618      	mov	r0, r3
 8002be2:	f7ff fd45 	bl	8002670 <WIZCHIP_READ>
 8002be6:	4603      	mov	r3, r0
 8002be8:	b29b      	uxth	r3, r3
 8002bea:	021b      	lsls	r3, r3, #8
 8002bec:	b29c      	uxth	r4, r3
 8002bee:	79fb      	ldrb	r3, [r7, #7]
 8002bf0:	009b      	lsls	r3, r3, #2
 8002bf2:	3301      	adds	r3, #1
 8002bf4:	00db      	lsls	r3, r3, #3
 8002bf6:	f503 5324 	add.w	r3, r3, #10496	; 0x2900
 8002bfa:	4618      	mov	r0, r3
 8002bfc:	f7ff fd38 	bl	8002670 <WIZCHIP_READ>
 8002c00:	4603      	mov	r3, r0
 8002c02:	b29b      	uxth	r3, r3
 8002c04:	4423      	add	r3, r4
 8002c06:	81fb      	strh	r3, [r7, #14]
 8002c08:	89fa      	ldrh	r2, [r7, #14]
 8002c0a:	88bb      	ldrh	r3, [r7, #4]
 8002c0c:	4413      	add	r3, r2
 8002c0e:	81fb      	strh	r3, [r7, #14]
 8002c10:	79fb      	ldrb	r3, [r7, #7]
 8002c12:	009b      	lsls	r3, r3, #2
 8002c14:	3301      	adds	r3, #1
 8002c16:	00db      	lsls	r3, r3, #3
 8002c18:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
 8002c1c:	461a      	mov	r2, r3
 8002c1e:	89fb      	ldrh	r3, [r7, #14]
 8002c20:	0a1b      	lsrs	r3, r3, #8
 8002c22:	b29b      	uxth	r3, r3
 8002c24:	b2db      	uxtb	r3, r3
 8002c26:	4619      	mov	r1, r3
 8002c28:	4610      	mov	r0, r2
 8002c2a:	f7ff fd6d 	bl	8002708 <WIZCHIP_WRITE>
 8002c2e:	79fb      	ldrb	r3, [r7, #7]
 8002c30:	009b      	lsls	r3, r3, #2
 8002c32:	3301      	adds	r3, #1
 8002c34:	00db      	lsls	r3, r3, #3
 8002c36:	f503 5324 	add.w	r3, r3, #10496	; 0x2900
 8002c3a:	461a      	mov	r2, r3
 8002c3c:	89fb      	ldrh	r3, [r7, #14]
 8002c3e:	b2db      	uxtb	r3, r3
 8002c40:	4619      	mov	r1, r3
 8002c42:	4610      	mov	r0, r2
 8002c44:	f7ff fd60 	bl	8002708 <WIZCHIP_WRITE>
 8002c48:	bf00      	nop
 8002c4a:	3714      	adds	r7, #20
 8002c4c:	46bd      	mov	sp, r7
 8002c4e:	bd90      	pop	{r4, r7, pc}

08002c50 <socket>:
 8002c50:	b590      	push	{r4, r7, lr}
 8002c52:	b085      	sub	sp, #20
 8002c54:	af00      	add	r7, sp, #0
 8002c56:	4604      	mov	r4, r0
 8002c58:	4608      	mov	r0, r1
 8002c5a:	4611      	mov	r1, r2
 8002c5c:	461a      	mov	r2, r3
 8002c5e:	4623      	mov	r3, r4
 8002c60:	71fb      	strb	r3, [r7, #7]
 8002c62:	4603      	mov	r3, r0
 8002c64:	71bb      	strb	r3, [r7, #6]
 8002c66:	460b      	mov	r3, r1
 8002c68:	80bb      	strh	r3, [r7, #4]
 8002c6a:	4613      	mov	r3, r2
 8002c6c:	70fb      	strb	r3, [r7, #3]
 8002c6e:	79fb      	ldrb	r3, [r7, #7]
 8002c70:	2b08      	cmp	r3, #8
 8002c72:	d902      	bls.n	8002c7a <socket+0x2a>
 8002c74:	f04f 33ff 	mov.w	r3, #4294967295
 8002c78:	e0f0      	b.n	8002e5c <socket+0x20c>
 8002c7a:	79bb      	ldrb	r3, [r7, #6]
 8002c7c:	2b01      	cmp	r3, #1
 8002c7e:	d005      	beq.n	8002c8c <socket+0x3c>
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	dd11      	ble.n	8002ca8 <socket+0x58>
 8002c84:	3b02      	subs	r3, #2
 8002c86:	2b02      	cmp	r3, #2
 8002c88:	d80e      	bhi.n	8002ca8 <socket+0x58>
 8002c8a:	e010      	b.n	8002cae <socket+0x5e>
 8002c8c:	f107 030c 	add.w	r3, r7, #12
 8002c90:	2204      	movs	r2, #4
 8002c92:	4619      	mov	r1, r3
 8002c94:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8002c98:	f7ff fd84 	bl	80027a4 <WIZCHIP_READ_BUF>
 8002c9c:	68fb      	ldr	r3, [r7, #12]
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	d105      	bne.n	8002cae <socket+0x5e>
 8002ca2:	f06f 0302 	mvn.w	r3, #2
 8002ca6:	e0d9      	b.n	8002e5c <socket+0x20c>
 8002ca8:	f06f 0304 	mvn.w	r3, #4
 8002cac:	e0d6      	b.n	8002e5c <socket+0x20c>
 8002cae:	bf00      	nop
 8002cb0:	78fb      	ldrb	r3, [r7, #3]
 8002cb2:	f003 0304 	and.w	r3, r3, #4
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d002      	beq.n	8002cc0 <socket+0x70>
 8002cba:	f06f 0305 	mvn.w	r3, #5
 8002cbe:	e0cd      	b.n	8002e5c <socket+0x20c>
 8002cc0:	78fb      	ldrb	r3, [r7, #3]
 8002cc2:	2b00      	cmp	r3, #0
 8002cc4:	d028      	beq.n	8002d18 <socket+0xc8>
 8002cc6:	79bb      	ldrb	r3, [r7, #6]
 8002cc8:	2b01      	cmp	r3, #1
 8002cca:	d002      	beq.n	8002cd2 <socket+0x82>
 8002ccc:	2b02      	cmp	r3, #2
 8002cce:	d008      	beq.n	8002ce2 <socket+0x92>
 8002cd0:	e022      	b.n	8002d18 <socket+0xc8>
 8002cd2:	78fb      	ldrb	r3, [r7, #3]
 8002cd4:	f003 0321 	and.w	r3, r3, #33	; 0x21
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	d11a      	bne.n	8002d12 <socket+0xc2>
 8002cdc:	f06f 0305 	mvn.w	r3, #5
 8002ce0:	e0bc      	b.n	8002e5c <socket+0x20c>
 8002ce2:	78fb      	ldrb	r3, [r7, #3]
 8002ce4:	f003 0320 	and.w	r3, r3, #32
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d006      	beq.n	8002cfa <socket+0xaa>
 8002cec:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	db02      	blt.n	8002cfa <socket+0xaa>
 8002cf4:	f06f 0305 	mvn.w	r3, #5
 8002cf8:	e0b0      	b.n	8002e5c <socket+0x20c>
 8002cfa:	78fb      	ldrb	r3, [r7, #3]
 8002cfc:	f003 0310 	and.w	r3, r3, #16
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d008      	beq.n	8002d16 <socket+0xc6>
 8002d04:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	db04      	blt.n	8002d16 <socket+0xc6>
 8002d0c:	f06f 0305 	mvn.w	r3, #5
 8002d10:	e0a4      	b.n	8002e5c <socket+0x20c>
 8002d12:	bf00      	nop
 8002d14:	e000      	b.n	8002d18 <socket+0xc8>
 8002d16:	bf00      	nop
 8002d18:	79fb      	ldrb	r3, [r7, #7]
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	f000 f8ac 	bl	8002e78 <close>
 8002d20:	79fb      	ldrb	r3, [r7, #7]
 8002d22:	009b      	lsls	r3, r3, #2
 8002d24:	3301      	adds	r3, #1
 8002d26:	00db      	lsls	r3, r3, #3
 8002d28:	4618      	mov	r0, r3
 8002d2a:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8002d2e:	f023 030f 	bic.w	r3, r3, #15
 8002d32:	b25a      	sxtb	r2, r3
 8002d34:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8002d38:	4313      	orrs	r3, r2
 8002d3a:	b25b      	sxtb	r3, r3
 8002d3c:	b2db      	uxtb	r3, r3
 8002d3e:	4619      	mov	r1, r3
 8002d40:	f7ff fce2 	bl	8002708 <WIZCHIP_WRITE>
 8002d44:	88bb      	ldrh	r3, [r7, #4]
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	d110      	bne.n	8002d6c <socket+0x11c>
 8002d4a:	4b46      	ldr	r3, [pc, #280]	; (8002e64 <socket+0x214>)
 8002d4c:	881b      	ldrh	r3, [r3, #0]
 8002d4e:	1c5a      	adds	r2, r3, #1
 8002d50:	b291      	uxth	r1, r2
 8002d52:	4a44      	ldr	r2, [pc, #272]	; (8002e64 <socket+0x214>)
 8002d54:	8011      	strh	r1, [r2, #0]
 8002d56:	80bb      	strh	r3, [r7, #4]
 8002d58:	4b42      	ldr	r3, [pc, #264]	; (8002e64 <socket+0x214>)
 8002d5a:	881b      	ldrh	r3, [r3, #0]
 8002d5c:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 8002d60:	4293      	cmp	r3, r2
 8002d62:	d103      	bne.n	8002d6c <socket+0x11c>
 8002d64:	4b3f      	ldr	r3, [pc, #252]	; (8002e64 <socket+0x214>)
 8002d66:	f44f 4240 	mov.w	r2, #49152	; 0xc000
 8002d6a:	801a      	strh	r2, [r3, #0]
 8002d6c:	79fb      	ldrb	r3, [r7, #7]
 8002d6e:	009b      	lsls	r3, r3, #2
 8002d70:	3301      	adds	r3, #1
 8002d72:	00db      	lsls	r3, r3, #3
 8002d74:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002d78:	461a      	mov	r2, r3
 8002d7a:	88bb      	ldrh	r3, [r7, #4]
 8002d7c:	0a1b      	lsrs	r3, r3, #8
 8002d7e:	b29b      	uxth	r3, r3
 8002d80:	b2db      	uxtb	r3, r3
 8002d82:	4619      	mov	r1, r3
 8002d84:	4610      	mov	r0, r2
 8002d86:	f7ff fcbf 	bl	8002708 <WIZCHIP_WRITE>
 8002d8a:	79fb      	ldrb	r3, [r7, #7]
 8002d8c:	009b      	lsls	r3, r3, #2
 8002d8e:	3301      	adds	r3, #1
 8002d90:	00db      	lsls	r3, r3, #3
 8002d92:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002d96:	461a      	mov	r2, r3
 8002d98:	88bb      	ldrh	r3, [r7, #4]
 8002d9a:	b2db      	uxtb	r3, r3
 8002d9c:	4619      	mov	r1, r3
 8002d9e:	4610      	mov	r0, r2
 8002da0:	f7ff fcb2 	bl	8002708 <WIZCHIP_WRITE>
 8002da4:	79fb      	ldrb	r3, [r7, #7]
 8002da6:	009b      	lsls	r3, r3, #2
 8002da8:	3301      	adds	r3, #1
 8002daa:	00db      	lsls	r3, r3, #3
 8002dac:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8002db0:	2101      	movs	r1, #1
 8002db2:	4618      	mov	r0, r3
 8002db4:	f7ff fca8 	bl	8002708 <WIZCHIP_WRITE>
 8002db8:	bf00      	nop
 8002dba:	79fb      	ldrb	r3, [r7, #7]
 8002dbc:	009b      	lsls	r3, r3, #2
 8002dbe:	3301      	adds	r3, #1
 8002dc0:	00db      	lsls	r3, r3, #3
 8002dc2:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8002dc6:	4618      	mov	r0, r3
 8002dc8:	f7ff fc52 	bl	8002670 <WIZCHIP_READ>
 8002dcc:	4603      	mov	r3, r0
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	d1f3      	bne.n	8002dba <socket+0x16a>
 8002dd2:	79fb      	ldrb	r3, [r7, #7]
 8002dd4:	2201      	movs	r2, #1
 8002dd6:	fa02 f303 	lsl.w	r3, r2, r3
 8002dda:	b21b      	sxth	r3, r3
 8002ddc:	43db      	mvns	r3, r3
 8002dde:	b21a      	sxth	r2, r3
 8002de0:	4b21      	ldr	r3, [pc, #132]	; (8002e68 <socket+0x218>)
 8002de2:	881b      	ldrh	r3, [r3, #0]
 8002de4:	b21b      	sxth	r3, r3
 8002de6:	4013      	ands	r3, r2
 8002de8:	b21b      	sxth	r3, r3
 8002dea:	b29a      	uxth	r2, r3
 8002dec:	4b1e      	ldr	r3, [pc, #120]	; (8002e68 <socket+0x218>)
 8002dee:	801a      	strh	r2, [r3, #0]
 8002df0:	78fb      	ldrb	r3, [r7, #3]
 8002df2:	f003 0201 	and.w	r2, r3, #1
 8002df6:	79fb      	ldrb	r3, [r7, #7]
 8002df8:	fa02 f303 	lsl.w	r3, r2, r3
 8002dfc:	b21a      	sxth	r2, r3
 8002dfe:	4b1a      	ldr	r3, [pc, #104]	; (8002e68 <socket+0x218>)
 8002e00:	881b      	ldrh	r3, [r3, #0]
 8002e02:	b21b      	sxth	r3, r3
 8002e04:	4313      	orrs	r3, r2
 8002e06:	b21b      	sxth	r3, r3
 8002e08:	b29a      	uxth	r2, r3
 8002e0a:	4b17      	ldr	r3, [pc, #92]	; (8002e68 <socket+0x218>)
 8002e0c:	801a      	strh	r2, [r3, #0]
 8002e0e:	79fb      	ldrb	r3, [r7, #7]
 8002e10:	2201      	movs	r2, #1
 8002e12:	fa02 f303 	lsl.w	r3, r2, r3
 8002e16:	b21b      	sxth	r3, r3
 8002e18:	43db      	mvns	r3, r3
 8002e1a:	b21a      	sxth	r2, r3
 8002e1c:	4b13      	ldr	r3, [pc, #76]	; (8002e6c <socket+0x21c>)
 8002e1e:	881b      	ldrh	r3, [r3, #0]
 8002e20:	b21b      	sxth	r3, r3
 8002e22:	4013      	ands	r3, r2
 8002e24:	b21b      	sxth	r3, r3
 8002e26:	b29a      	uxth	r2, r3
 8002e28:	4b10      	ldr	r3, [pc, #64]	; (8002e6c <socket+0x21c>)
 8002e2a:	801a      	strh	r2, [r3, #0]
 8002e2c:	79fb      	ldrb	r3, [r7, #7]
 8002e2e:	4a10      	ldr	r2, [pc, #64]	; (8002e70 <socket+0x220>)
 8002e30:	2100      	movs	r1, #0
 8002e32:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8002e36:	79fb      	ldrb	r3, [r7, #7]
 8002e38:	4a0e      	ldr	r2, [pc, #56]	; (8002e74 <socket+0x224>)
 8002e3a:	2100      	movs	r1, #0
 8002e3c:	54d1      	strb	r1, [r2, r3]
 8002e3e:	bf00      	nop
 8002e40:	79fb      	ldrb	r3, [r7, #7]
 8002e42:	009b      	lsls	r3, r3, #2
 8002e44:	3301      	adds	r3, #1
 8002e46:	00db      	lsls	r3, r3, #3
 8002e48:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8002e4c:	4618      	mov	r0, r3
 8002e4e:	f7ff fc0f 	bl	8002670 <WIZCHIP_READ>
 8002e52:	4603      	mov	r3, r0
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d0f3      	beq.n	8002e40 <socket+0x1f0>
 8002e58:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	3714      	adds	r7, #20
 8002e60:	46bd      	mov	sp, r7
 8002e62:	bd90      	pop	{r4, r7, pc}
 8002e64:	2000001c 	.word	0x2000001c
 8002e68:	20000284 	.word	0x20000284
 8002e6c:	20000286 	.word	0x20000286
 8002e70:	20000288 	.word	0x20000288
 8002e74:	20000298 	.word	0x20000298

08002e78 <close>:
 8002e78:	b580      	push	{r7, lr}
 8002e7a:	b082      	sub	sp, #8
 8002e7c:	af00      	add	r7, sp, #0
 8002e7e:	4603      	mov	r3, r0
 8002e80:	71fb      	strb	r3, [r7, #7]
 8002e82:	79fb      	ldrb	r3, [r7, #7]
 8002e84:	2b08      	cmp	r3, #8
 8002e86:	d902      	bls.n	8002e8e <close+0x16>
 8002e88:	f04f 33ff 	mov.w	r3, #4294967295
 8002e8c:	e055      	b.n	8002f3a <close+0xc2>
 8002e8e:	79fb      	ldrb	r3, [r7, #7]
 8002e90:	009b      	lsls	r3, r3, #2
 8002e92:	3301      	adds	r3, #1
 8002e94:	00db      	lsls	r3, r3, #3
 8002e96:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8002e9a:	2110      	movs	r1, #16
 8002e9c:	4618      	mov	r0, r3
 8002e9e:	f7ff fc33 	bl	8002708 <WIZCHIP_WRITE>
 8002ea2:	bf00      	nop
 8002ea4:	79fb      	ldrb	r3, [r7, #7]
 8002ea6:	009b      	lsls	r3, r3, #2
 8002ea8:	3301      	adds	r3, #1
 8002eaa:	00db      	lsls	r3, r3, #3
 8002eac:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8002eb0:	4618      	mov	r0, r3
 8002eb2:	f7ff fbdd 	bl	8002670 <WIZCHIP_READ>
 8002eb6:	4603      	mov	r3, r0
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	d1f3      	bne.n	8002ea4 <close+0x2c>
 8002ebc:	79fb      	ldrb	r3, [r7, #7]
 8002ebe:	009b      	lsls	r3, r3, #2
 8002ec0:	3301      	adds	r3, #1
 8002ec2:	00db      	lsls	r3, r3, #3
 8002ec4:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8002ec8:	211f      	movs	r1, #31
 8002eca:	4618      	mov	r0, r3
 8002ecc:	f7ff fc1c 	bl	8002708 <WIZCHIP_WRITE>
 8002ed0:	79fb      	ldrb	r3, [r7, #7]
 8002ed2:	2201      	movs	r2, #1
 8002ed4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ed8:	b21b      	sxth	r3, r3
 8002eda:	43db      	mvns	r3, r3
 8002edc:	b21a      	sxth	r2, r3
 8002ede:	4b19      	ldr	r3, [pc, #100]	; (8002f44 <close+0xcc>)
 8002ee0:	881b      	ldrh	r3, [r3, #0]
 8002ee2:	b21b      	sxth	r3, r3
 8002ee4:	4013      	ands	r3, r2
 8002ee6:	b21b      	sxth	r3, r3
 8002ee8:	b29a      	uxth	r2, r3
 8002eea:	4b16      	ldr	r3, [pc, #88]	; (8002f44 <close+0xcc>)
 8002eec:	801a      	strh	r2, [r3, #0]
 8002eee:	79fb      	ldrb	r3, [r7, #7]
 8002ef0:	2201      	movs	r2, #1
 8002ef2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ef6:	b21b      	sxth	r3, r3
 8002ef8:	43db      	mvns	r3, r3
 8002efa:	b21a      	sxth	r2, r3
 8002efc:	4b12      	ldr	r3, [pc, #72]	; (8002f48 <close+0xd0>)
 8002efe:	881b      	ldrh	r3, [r3, #0]
 8002f00:	b21b      	sxth	r3, r3
 8002f02:	4013      	ands	r3, r2
 8002f04:	b21b      	sxth	r3, r3
 8002f06:	b29a      	uxth	r2, r3
 8002f08:	4b0f      	ldr	r3, [pc, #60]	; (8002f48 <close+0xd0>)
 8002f0a:	801a      	strh	r2, [r3, #0]
 8002f0c:	79fb      	ldrb	r3, [r7, #7]
 8002f0e:	4a0f      	ldr	r2, [pc, #60]	; (8002f4c <close+0xd4>)
 8002f10:	2100      	movs	r1, #0
 8002f12:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8002f16:	79fb      	ldrb	r3, [r7, #7]
 8002f18:	4a0d      	ldr	r2, [pc, #52]	; (8002f50 <close+0xd8>)
 8002f1a:	2100      	movs	r1, #0
 8002f1c:	54d1      	strb	r1, [r2, r3]
 8002f1e:	bf00      	nop
 8002f20:	79fb      	ldrb	r3, [r7, #7]
 8002f22:	009b      	lsls	r3, r3, #2
 8002f24:	3301      	adds	r3, #1
 8002f26:	00db      	lsls	r3, r3, #3
 8002f28:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8002f2c:	4618      	mov	r0, r3
 8002f2e:	f7ff fb9f 	bl	8002670 <WIZCHIP_READ>
 8002f32:	4603      	mov	r3, r0
 8002f34:	2b00      	cmp	r3, #0
 8002f36:	d1f3      	bne.n	8002f20 <close+0xa8>
 8002f38:	2301      	movs	r3, #1
 8002f3a:	4618      	mov	r0, r3
 8002f3c:	3708      	adds	r7, #8
 8002f3e:	46bd      	mov	sp, r7
 8002f40:	bd80      	pop	{r7, pc}
 8002f42:	bf00      	nop
 8002f44:	20000284 	.word	0x20000284
 8002f48:	20000286 	.word	0x20000286
 8002f4c:	20000288 	.word	0x20000288
 8002f50:	20000298 	.word	0x20000298

08002f54 <connect>:
 8002f54:	b580      	push	{r7, lr}
 8002f56:	b084      	sub	sp, #16
 8002f58:	af00      	add	r7, sp, #0
 8002f5a:	4603      	mov	r3, r0
 8002f5c:	6039      	str	r1, [r7, #0]
 8002f5e:	71fb      	strb	r3, [r7, #7]
 8002f60:	4613      	mov	r3, r2
 8002f62:	80bb      	strh	r3, [r7, #4]
 8002f64:	79fb      	ldrb	r3, [r7, #7]
 8002f66:	2b08      	cmp	r3, #8
 8002f68:	d902      	bls.n	8002f70 <connect+0x1c>
 8002f6a:	f04f 33ff 	mov.w	r3, #4294967295
 8002f6e:	e0c6      	b.n	80030fe <connect+0x1aa>
 8002f70:	79fb      	ldrb	r3, [r7, #7]
 8002f72:	009b      	lsls	r3, r3, #2
 8002f74:	3301      	adds	r3, #1
 8002f76:	00db      	lsls	r3, r3, #3
 8002f78:	4618      	mov	r0, r3
 8002f7a:	f7ff fb79 	bl	8002670 <WIZCHIP_READ>
 8002f7e:	4603      	mov	r3, r0
 8002f80:	f003 030f 	and.w	r3, r3, #15
 8002f84:	2b01      	cmp	r3, #1
 8002f86:	d002      	beq.n	8002f8e <connect+0x3a>
 8002f88:	f06f 0304 	mvn.w	r3, #4
 8002f8c:	e0b7      	b.n	80030fe <connect+0x1aa>
 8002f8e:	79fb      	ldrb	r3, [r7, #7]
 8002f90:	009b      	lsls	r3, r3, #2
 8002f92:	3301      	adds	r3, #1
 8002f94:	00db      	lsls	r3, r3, #3
 8002f96:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8002f9a:	4618      	mov	r0, r3
 8002f9c:	f7ff fb68 	bl	8002670 <WIZCHIP_READ>
 8002fa0:	4603      	mov	r3, r0
 8002fa2:	2b13      	cmp	r3, #19
 8002fa4:	d002      	beq.n	8002fac <connect+0x58>
 8002fa6:	f06f 0302 	mvn.w	r3, #2
 8002faa:	e0a8      	b.n	80030fe <connect+0x1aa>
 8002fac:	683b      	ldr	r3, [r7, #0]
 8002fae:	781b      	ldrb	r3, [r3, #0]
 8002fb0:	60fb      	str	r3, [r7, #12]
 8002fb2:	68fb      	ldr	r3, [r7, #12]
 8002fb4:	021b      	lsls	r3, r3, #8
 8002fb6:	683a      	ldr	r2, [r7, #0]
 8002fb8:	3201      	adds	r2, #1
 8002fba:	7812      	ldrb	r2, [r2, #0]
 8002fbc:	4413      	add	r3, r2
 8002fbe:	60fb      	str	r3, [r7, #12]
 8002fc0:	68fb      	ldr	r3, [r7, #12]
 8002fc2:	021b      	lsls	r3, r3, #8
 8002fc4:	683a      	ldr	r2, [r7, #0]
 8002fc6:	3202      	adds	r2, #2
 8002fc8:	7812      	ldrb	r2, [r2, #0]
 8002fca:	4413      	add	r3, r2
 8002fcc:	60fb      	str	r3, [r7, #12]
 8002fce:	68fb      	ldr	r3, [r7, #12]
 8002fd0:	021b      	lsls	r3, r3, #8
 8002fd2:	683a      	ldr	r2, [r7, #0]
 8002fd4:	3203      	adds	r2, #3
 8002fd6:	7812      	ldrb	r2, [r2, #0]
 8002fd8:	4413      	add	r3, r2
 8002fda:	60fb      	str	r3, [r7, #12]
 8002fdc:	68fb      	ldr	r3, [r7, #12]
 8002fde:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002fe2:	d002      	beq.n	8002fea <connect+0x96>
 8002fe4:	68fb      	ldr	r3, [r7, #12]
 8002fe6:	2b00      	cmp	r3, #0
 8002fe8:	d102      	bne.n	8002ff0 <connect+0x9c>
 8002fea:	f06f 030b 	mvn.w	r3, #11
 8002fee:	e086      	b.n	80030fe <connect+0x1aa>
 8002ff0:	88bb      	ldrh	r3, [r7, #4]
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d102      	bne.n	8002ffc <connect+0xa8>
 8002ff6:	f06f 030a 	mvn.w	r3, #10
 8002ffa:	e080      	b.n	80030fe <connect+0x1aa>
 8002ffc:	79fb      	ldrb	r3, [r7, #7]
 8002ffe:	009b      	lsls	r3, r3, #2
 8003000:	3301      	adds	r3, #1
 8003002:	00db      	lsls	r3, r3, #3
 8003004:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
 8003008:	2204      	movs	r2, #4
 800300a:	6839      	ldr	r1, [r7, #0]
 800300c:	4618      	mov	r0, r3
 800300e:	f7ff fc29 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8003012:	79fb      	ldrb	r3, [r7, #7]
 8003014:	009b      	lsls	r3, r3, #2
 8003016:	3301      	adds	r3, #1
 8003018:	00db      	lsls	r3, r3, #3
 800301a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800301e:	461a      	mov	r2, r3
 8003020:	88bb      	ldrh	r3, [r7, #4]
 8003022:	0a1b      	lsrs	r3, r3, #8
 8003024:	b29b      	uxth	r3, r3
 8003026:	b2db      	uxtb	r3, r3
 8003028:	4619      	mov	r1, r3
 800302a:	4610      	mov	r0, r2
 800302c:	f7ff fb6c 	bl	8002708 <WIZCHIP_WRITE>
 8003030:	79fb      	ldrb	r3, [r7, #7]
 8003032:	009b      	lsls	r3, r3, #2
 8003034:	3301      	adds	r3, #1
 8003036:	00db      	lsls	r3, r3, #3
 8003038:	f503 5388 	add.w	r3, r3, #4352	; 0x1100
 800303c:	461a      	mov	r2, r3
 800303e:	88bb      	ldrh	r3, [r7, #4]
 8003040:	b2db      	uxtb	r3, r3
 8003042:	4619      	mov	r1, r3
 8003044:	4610      	mov	r0, r2
 8003046:	f7ff fb5f 	bl	8002708 <WIZCHIP_WRITE>
 800304a:	79fb      	ldrb	r3, [r7, #7]
 800304c:	009b      	lsls	r3, r3, #2
 800304e:	3301      	adds	r3, #1
 8003050:	00db      	lsls	r3, r3, #3
 8003052:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003056:	2104      	movs	r1, #4
 8003058:	4618      	mov	r0, r3
 800305a:	f7ff fb55 	bl	8002708 <WIZCHIP_WRITE>
 800305e:	bf00      	nop
 8003060:	79fb      	ldrb	r3, [r7, #7]
 8003062:	009b      	lsls	r3, r3, #2
 8003064:	3301      	adds	r3, #1
 8003066:	00db      	lsls	r3, r3, #3
 8003068:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800306c:	4618      	mov	r0, r3
 800306e:	f7ff faff 	bl	8002670 <WIZCHIP_READ>
 8003072:	4603      	mov	r3, r0
 8003074:	2b00      	cmp	r3, #0
 8003076:	d1f3      	bne.n	8003060 <connect+0x10c>
 8003078:	4b23      	ldr	r3, [pc, #140]	; (8003108 <connect+0x1b4>)
 800307a:	881b      	ldrh	r3, [r3, #0]
 800307c:	461a      	mov	r2, r3
 800307e:	79fb      	ldrb	r3, [r7, #7]
 8003080:	fa42 f303 	asr.w	r3, r2, r3
 8003084:	f003 0301 	and.w	r3, r3, #1
 8003088:	2b00      	cmp	r3, #0
 800308a:	d02b      	beq.n	80030e4 <connect+0x190>
 800308c:	2300      	movs	r3, #0
 800308e:	e036      	b.n	80030fe <connect+0x1aa>
 8003090:	79fb      	ldrb	r3, [r7, #7]
 8003092:	009b      	lsls	r3, r3, #2
 8003094:	3301      	adds	r3, #1
 8003096:	00db      	lsls	r3, r3, #3
 8003098:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800309c:	4618      	mov	r0, r3
 800309e:	f7ff fae7 	bl	8002670 <WIZCHIP_READ>
 80030a2:	4603      	mov	r3, r0
 80030a4:	f003 0308 	and.w	r3, r3, #8
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	d00c      	beq.n	80030c6 <connect+0x172>
 80030ac:	79fb      	ldrb	r3, [r7, #7]
 80030ae:	009b      	lsls	r3, r3, #2
 80030b0:	3301      	adds	r3, #1
 80030b2:	00db      	lsls	r3, r3, #3
 80030b4:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80030b8:	2108      	movs	r1, #8
 80030ba:	4618      	mov	r0, r3
 80030bc:	f7ff fb24 	bl	8002708 <WIZCHIP_WRITE>
 80030c0:	f06f 030c 	mvn.w	r3, #12
 80030c4:	e01b      	b.n	80030fe <connect+0x1aa>
 80030c6:	79fb      	ldrb	r3, [r7, #7]
 80030c8:	009b      	lsls	r3, r3, #2
 80030ca:	3301      	adds	r3, #1
 80030cc:	00db      	lsls	r3, r3, #3
 80030ce:	f503 7340 	add.w	r3, r3, #768	; 0x300
 80030d2:	4618      	mov	r0, r3
 80030d4:	f7ff facc 	bl	8002670 <WIZCHIP_READ>
 80030d8:	4603      	mov	r3, r0
 80030da:	2b00      	cmp	r3, #0
 80030dc:	d102      	bne.n	80030e4 <connect+0x190>
 80030de:	f06f 0303 	mvn.w	r3, #3
 80030e2:	e00c      	b.n	80030fe <connect+0x1aa>
 80030e4:	79fb      	ldrb	r3, [r7, #7]
 80030e6:	009b      	lsls	r3, r3, #2
 80030e8:	3301      	adds	r3, #1
 80030ea:	00db      	lsls	r3, r3, #3
 80030ec:	f503 7340 	add.w	r3, r3, #768	; 0x300
 80030f0:	4618      	mov	r0, r3
 80030f2:	f7ff fabd 	bl	8002670 <WIZCHIP_READ>
 80030f6:	4603      	mov	r3, r0
 80030f8:	2b17      	cmp	r3, #23
 80030fa:	d1c9      	bne.n	8003090 <connect+0x13c>
 80030fc:	2301      	movs	r3, #1
 80030fe:	4618      	mov	r0, r3
 8003100:	3710      	adds	r7, #16
 8003102:	46bd      	mov	sp, r7
 8003104:	bd80      	pop	{r7, pc}
 8003106:	bf00      	nop
 8003108:	20000284 	.word	0x20000284

0800310c <disconnect>:
 800310c:	b580      	push	{r7, lr}
 800310e:	b082      	sub	sp, #8
 8003110:	af00      	add	r7, sp, #0
 8003112:	4603      	mov	r3, r0
 8003114:	71fb      	strb	r3, [r7, #7]
 8003116:	79fb      	ldrb	r3, [r7, #7]
 8003118:	2b08      	cmp	r3, #8
 800311a:	d902      	bls.n	8003122 <disconnect+0x16>
 800311c:	f04f 33ff 	mov.w	r3, #4294967295
 8003120:	e062      	b.n	80031e8 <disconnect+0xdc>
 8003122:	79fb      	ldrb	r3, [r7, #7]
 8003124:	009b      	lsls	r3, r3, #2
 8003126:	3301      	adds	r3, #1
 8003128:	00db      	lsls	r3, r3, #3
 800312a:	4618      	mov	r0, r3
 800312c:	f7ff faa0 	bl	8002670 <WIZCHIP_READ>
 8003130:	4603      	mov	r3, r0
 8003132:	f003 030f 	and.w	r3, r3, #15
 8003136:	2b01      	cmp	r3, #1
 8003138:	d002      	beq.n	8003140 <disconnect+0x34>
 800313a:	f06f 0304 	mvn.w	r3, #4
 800313e:	e053      	b.n	80031e8 <disconnect+0xdc>
 8003140:	79fb      	ldrb	r3, [r7, #7]
 8003142:	009b      	lsls	r3, r3, #2
 8003144:	3301      	adds	r3, #1
 8003146:	00db      	lsls	r3, r3, #3
 8003148:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800314c:	2108      	movs	r1, #8
 800314e:	4618      	mov	r0, r3
 8003150:	f7ff fada 	bl	8002708 <WIZCHIP_WRITE>
 8003154:	bf00      	nop
 8003156:	79fb      	ldrb	r3, [r7, #7]
 8003158:	009b      	lsls	r3, r3, #2
 800315a:	3301      	adds	r3, #1
 800315c:	00db      	lsls	r3, r3, #3
 800315e:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003162:	4618      	mov	r0, r3
 8003164:	f7ff fa84 	bl	8002670 <WIZCHIP_READ>
 8003168:	4603      	mov	r3, r0
 800316a:	2b00      	cmp	r3, #0
 800316c:	d1f3      	bne.n	8003156 <disconnect+0x4a>
 800316e:	79fb      	ldrb	r3, [r7, #7]
 8003170:	2201      	movs	r2, #1
 8003172:	fa02 f303 	lsl.w	r3, r2, r3
 8003176:	b21b      	sxth	r3, r3
 8003178:	43db      	mvns	r3, r3
 800317a:	b21a      	sxth	r2, r3
 800317c:	4b1c      	ldr	r3, [pc, #112]	; (80031f0 <disconnect+0xe4>)
 800317e:	881b      	ldrh	r3, [r3, #0]
 8003180:	b21b      	sxth	r3, r3
 8003182:	4013      	ands	r3, r2
 8003184:	b21b      	sxth	r3, r3
 8003186:	b29a      	uxth	r2, r3
 8003188:	4b19      	ldr	r3, [pc, #100]	; (80031f0 <disconnect+0xe4>)
 800318a:	801a      	strh	r2, [r3, #0]
 800318c:	4b19      	ldr	r3, [pc, #100]	; (80031f4 <disconnect+0xe8>)
 800318e:	881b      	ldrh	r3, [r3, #0]
 8003190:	461a      	mov	r2, r3
 8003192:	79fb      	ldrb	r3, [r7, #7]
 8003194:	fa42 f303 	asr.w	r3, r2, r3
 8003198:	f003 0301 	and.w	r3, r3, #1
 800319c:	2b00      	cmp	r3, #0
 800319e:	d016      	beq.n	80031ce <disconnect+0xc2>
 80031a0:	2300      	movs	r3, #0
 80031a2:	e021      	b.n	80031e8 <disconnect+0xdc>
 80031a4:	79fb      	ldrb	r3, [r7, #7]
 80031a6:	009b      	lsls	r3, r3, #2
 80031a8:	3301      	adds	r3, #1
 80031aa:	00db      	lsls	r3, r3, #3
 80031ac:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80031b0:	4618      	mov	r0, r3
 80031b2:	f7ff fa5d 	bl	8002670 <WIZCHIP_READ>
 80031b6:	4603      	mov	r3, r0
 80031b8:	f003 0308 	and.w	r3, r3, #8
 80031bc:	2b00      	cmp	r3, #0
 80031be:	d006      	beq.n	80031ce <disconnect+0xc2>
 80031c0:	79fb      	ldrb	r3, [r7, #7]
 80031c2:	4618      	mov	r0, r3
 80031c4:	f7ff fe58 	bl	8002e78 <close>
 80031c8:	f06f 030c 	mvn.w	r3, #12
 80031cc:	e00c      	b.n	80031e8 <disconnect+0xdc>
 80031ce:	79fb      	ldrb	r3, [r7, #7]
 80031d0:	009b      	lsls	r3, r3, #2
 80031d2:	3301      	adds	r3, #1
 80031d4:	00db      	lsls	r3, r3, #3
 80031d6:	f503 7340 	add.w	r3, r3, #768	; 0x300
 80031da:	4618      	mov	r0, r3
 80031dc:	f7ff fa48 	bl	8002670 <WIZCHIP_READ>
 80031e0:	4603      	mov	r3, r0
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d1de      	bne.n	80031a4 <disconnect+0x98>
 80031e6:	2301      	movs	r3, #1
 80031e8:	4618      	mov	r0, r3
 80031ea:	3708      	adds	r7, #8
 80031ec:	46bd      	mov	sp, r7
 80031ee:	bd80      	pop	{r7, pc}
 80031f0:	20000286 	.word	0x20000286
 80031f4:	20000284 	.word	0x20000284

080031f8 <send>:
 80031f8:	b580      	push	{r7, lr}
 80031fa:	b084      	sub	sp, #16
 80031fc:	af00      	add	r7, sp, #0
 80031fe:	4603      	mov	r3, r0
 8003200:	6039      	str	r1, [r7, #0]
 8003202:	71fb      	strb	r3, [r7, #7]
 8003204:	4613      	mov	r3, r2
 8003206:	80bb      	strh	r3, [r7, #4]
 8003208:	2300      	movs	r3, #0
 800320a:	73fb      	strb	r3, [r7, #15]
 800320c:	2300      	movs	r3, #0
 800320e:	81bb      	strh	r3, [r7, #12]
 8003210:	79fb      	ldrb	r3, [r7, #7]
 8003212:	2b08      	cmp	r3, #8
 8003214:	d902      	bls.n	800321c <send+0x24>
 8003216:	f04f 33ff 	mov.w	r3, #4294967295
 800321a:	e0de      	b.n	80033da <send+0x1e2>
 800321c:	79fb      	ldrb	r3, [r7, #7]
 800321e:	009b      	lsls	r3, r3, #2
 8003220:	3301      	adds	r3, #1
 8003222:	00db      	lsls	r3, r3, #3
 8003224:	4618      	mov	r0, r3
 8003226:	f7ff fa23 	bl	8002670 <WIZCHIP_READ>
 800322a:	4603      	mov	r3, r0
 800322c:	f003 030f 	and.w	r3, r3, #15
 8003230:	2b01      	cmp	r3, #1
 8003232:	d002      	beq.n	800323a <send+0x42>
 8003234:	f06f 0304 	mvn.w	r3, #4
 8003238:	e0cf      	b.n	80033da <send+0x1e2>
 800323a:	88bb      	ldrh	r3, [r7, #4]
 800323c:	2b00      	cmp	r3, #0
 800323e:	d102      	bne.n	8003246 <send+0x4e>
 8003240:	f06f 030d 	mvn.w	r3, #13
 8003244:	e0c9      	b.n	80033da <send+0x1e2>
 8003246:	79fb      	ldrb	r3, [r7, #7]
 8003248:	009b      	lsls	r3, r3, #2
 800324a:	3301      	adds	r3, #1
 800324c:	00db      	lsls	r3, r3, #3
 800324e:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8003252:	4618      	mov	r0, r3
 8003254:	f7ff fa0c 	bl	8002670 <WIZCHIP_READ>
 8003258:	4603      	mov	r3, r0
 800325a:	73fb      	strb	r3, [r7, #15]
 800325c:	7bfb      	ldrb	r3, [r7, #15]
 800325e:	2b17      	cmp	r3, #23
 8003260:	d005      	beq.n	800326e <send+0x76>
 8003262:	7bfb      	ldrb	r3, [r7, #15]
 8003264:	2b1c      	cmp	r3, #28
 8003266:	d002      	beq.n	800326e <send+0x76>
 8003268:	f06f 0306 	mvn.w	r3, #6
 800326c:	e0b5      	b.n	80033da <send+0x1e2>
 800326e:	4b5d      	ldr	r3, [pc, #372]	; (80033e4 <send+0x1ec>)
 8003270:	881b      	ldrh	r3, [r3, #0]
 8003272:	461a      	mov	r2, r3
 8003274:	79fb      	ldrb	r3, [r7, #7]
 8003276:	fa42 f303 	asr.w	r3, r2, r3
 800327a:	f003 0301 	and.w	r3, r3, #1
 800327e:	2b00      	cmp	r3, #0
 8003280:	d039      	beq.n	80032f6 <send+0xfe>
 8003282:	79fb      	ldrb	r3, [r7, #7]
 8003284:	009b      	lsls	r3, r3, #2
 8003286:	3301      	adds	r3, #1
 8003288:	00db      	lsls	r3, r3, #3
 800328a:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800328e:	4618      	mov	r0, r3
 8003290:	f7ff f9ee 	bl	8002670 <WIZCHIP_READ>
 8003294:	4603      	mov	r3, r0
 8003296:	f003 031f 	and.w	r3, r3, #31
 800329a:	73fb      	strb	r3, [r7, #15]
 800329c:	7bfb      	ldrb	r3, [r7, #15]
 800329e:	f003 0310 	and.w	r3, r3, #16
 80032a2:	2b00      	cmp	r3, #0
 80032a4:	d019      	beq.n	80032da <send+0xe2>
 80032a6:	79fb      	ldrb	r3, [r7, #7]
 80032a8:	009b      	lsls	r3, r3, #2
 80032aa:	3301      	adds	r3, #1
 80032ac:	00db      	lsls	r3, r3, #3
 80032ae:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80032b2:	2110      	movs	r1, #16
 80032b4:	4618      	mov	r0, r3
 80032b6:	f7ff fa27 	bl	8002708 <WIZCHIP_WRITE>
 80032ba:	79fb      	ldrb	r3, [r7, #7]
 80032bc:	2201      	movs	r2, #1
 80032be:	fa02 f303 	lsl.w	r3, r2, r3
 80032c2:	b21b      	sxth	r3, r3
 80032c4:	43db      	mvns	r3, r3
 80032c6:	b21a      	sxth	r2, r3
 80032c8:	4b46      	ldr	r3, [pc, #280]	; (80033e4 <send+0x1ec>)
 80032ca:	881b      	ldrh	r3, [r3, #0]
 80032cc:	b21b      	sxth	r3, r3
 80032ce:	4013      	ands	r3, r2
 80032d0:	b21b      	sxth	r3, r3
 80032d2:	b29a      	uxth	r2, r3
 80032d4:	4b43      	ldr	r3, [pc, #268]	; (80033e4 <send+0x1ec>)
 80032d6:	801a      	strh	r2, [r3, #0]
 80032d8:	e00d      	b.n	80032f6 <send+0xfe>
 80032da:	7bfb      	ldrb	r3, [r7, #15]
 80032dc:	f003 0308 	and.w	r3, r3, #8
 80032e0:	2b00      	cmp	r3, #0
 80032e2:	d006      	beq.n	80032f2 <send+0xfa>
 80032e4:	79fb      	ldrb	r3, [r7, #7]
 80032e6:	4618      	mov	r0, r3
 80032e8:	f7ff fdc6 	bl	8002e78 <close>
 80032ec:	f06f 030c 	mvn.w	r3, #12
 80032f0:	e073      	b.n	80033da <send+0x1e2>
 80032f2:	2300      	movs	r3, #0
 80032f4:	e071      	b.n	80033da <send+0x1e2>
 80032f6:	79fb      	ldrb	r3, [r7, #7]
 80032f8:	009b      	lsls	r3, r3, #2
 80032fa:	3301      	adds	r3, #1
 80032fc:	00db      	lsls	r3, r3, #3
 80032fe:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 8003302:	4618      	mov	r0, r3
 8003304:	f7ff f9b4 	bl	8002670 <WIZCHIP_READ>
 8003308:	4603      	mov	r3, r0
 800330a:	b29b      	uxth	r3, r3
 800330c:	029b      	lsls	r3, r3, #10
 800330e:	81bb      	strh	r3, [r7, #12]
 8003310:	88ba      	ldrh	r2, [r7, #4]
 8003312:	89bb      	ldrh	r3, [r7, #12]
 8003314:	429a      	cmp	r2, r3
 8003316:	d901      	bls.n	800331c <send+0x124>
 8003318:	89bb      	ldrh	r3, [r7, #12]
 800331a:	80bb      	strh	r3, [r7, #4]
 800331c:	79fb      	ldrb	r3, [r7, #7]
 800331e:	4618      	mov	r0, r3
 8003320:	f7ff fb00 	bl	8002924 <getSn_TX_FSR>
 8003324:	4603      	mov	r3, r0
 8003326:	81bb      	strh	r3, [r7, #12]
 8003328:	79fb      	ldrb	r3, [r7, #7]
 800332a:	009b      	lsls	r3, r3, #2
 800332c:	3301      	adds	r3, #1
 800332e:	00db      	lsls	r3, r3, #3
 8003330:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8003334:	4618      	mov	r0, r3
 8003336:	f7ff f99b 	bl	8002670 <WIZCHIP_READ>
 800333a:	4603      	mov	r3, r0
 800333c:	73fb      	strb	r3, [r7, #15]
 800333e:	7bfb      	ldrb	r3, [r7, #15]
 8003340:	2b17      	cmp	r3, #23
 8003342:	d009      	beq.n	8003358 <send+0x160>
 8003344:	7bfb      	ldrb	r3, [r7, #15]
 8003346:	2b1c      	cmp	r3, #28
 8003348:	d006      	beq.n	8003358 <send+0x160>
 800334a:	79fb      	ldrb	r3, [r7, #7]
 800334c:	4618      	mov	r0, r3
 800334e:	f7ff fd93 	bl	8002e78 <close>
 8003352:	f06f 0306 	mvn.w	r3, #6
 8003356:	e040      	b.n	80033da <send+0x1e2>
 8003358:	4b23      	ldr	r3, [pc, #140]	; (80033e8 <send+0x1f0>)
 800335a:	881b      	ldrh	r3, [r3, #0]
 800335c:	461a      	mov	r2, r3
 800335e:	79fb      	ldrb	r3, [r7, #7]
 8003360:	fa42 f303 	asr.w	r3, r2, r3
 8003364:	f003 0301 	and.w	r3, r3, #1
 8003368:	2b00      	cmp	r3, #0
 800336a:	d005      	beq.n	8003378 <send+0x180>
 800336c:	88ba      	ldrh	r2, [r7, #4]
 800336e:	89bb      	ldrh	r3, [r7, #12]
 8003370:	429a      	cmp	r2, r3
 8003372:	d901      	bls.n	8003378 <send+0x180>
 8003374:	2300      	movs	r3, #0
 8003376:	e030      	b.n	80033da <send+0x1e2>
 8003378:	88ba      	ldrh	r2, [r7, #4]
 800337a:	89bb      	ldrh	r3, [r7, #12]
 800337c:	429a      	cmp	r2, r3
 800337e:	d900      	bls.n	8003382 <send+0x18a>
 8003380:	e7cc      	b.n	800331c <send+0x124>
 8003382:	bf00      	nop
 8003384:	88ba      	ldrh	r2, [r7, #4]
 8003386:	79fb      	ldrb	r3, [r7, #7]
 8003388:	6839      	ldr	r1, [r7, #0]
 800338a:	4618      	mov	r0, r3
 800338c:	f7ff fb60 	bl	8002a50 <wiz_send_data>
 8003390:	79fb      	ldrb	r3, [r7, #7]
 8003392:	009b      	lsls	r3, r3, #2
 8003394:	3301      	adds	r3, #1
 8003396:	00db      	lsls	r3, r3, #3
 8003398:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800339c:	2120      	movs	r1, #32
 800339e:	4618      	mov	r0, r3
 80033a0:	f7ff f9b2 	bl	8002708 <WIZCHIP_WRITE>
 80033a4:	bf00      	nop
 80033a6:	79fb      	ldrb	r3, [r7, #7]
 80033a8:	009b      	lsls	r3, r3, #2
 80033aa:	3301      	adds	r3, #1
 80033ac:	00db      	lsls	r3, r3, #3
 80033ae:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80033b2:	4618      	mov	r0, r3
 80033b4:	f7ff f95c 	bl	8002670 <WIZCHIP_READ>
 80033b8:	4603      	mov	r3, r0
 80033ba:	2b00      	cmp	r3, #0
 80033bc:	d1f3      	bne.n	80033a6 <send+0x1ae>
 80033be:	79fb      	ldrb	r3, [r7, #7]
 80033c0:	2201      	movs	r2, #1
 80033c2:	fa02 f303 	lsl.w	r3, r2, r3
 80033c6:	b21a      	sxth	r2, r3
 80033c8:	4b06      	ldr	r3, [pc, #24]	; (80033e4 <send+0x1ec>)
 80033ca:	881b      	ldrh	r3, [r3, #0]
 80033cc:	b21b      	sxth	r3, r3
 80033ce:	4313      	orrs	r3, r2
 80033d0:	b21b      	sxth	r3, r3
 80033d2:	b29a      	uxth	r2, r3
 80033d4:	4b03      	ldr	r3, [pc, #12]	; (80033e4 <send+0x1ec>)
 80033d6:	801a      	strh	r2, [r3, #0]
 80033d8:	88bb      	ldrh	r3, [r7, #4]
 80033da:	4618      	mov	r0, r3
 80033dc:	3710      	adds	r7, #16
 80033de:	46bd      	mov	sp, r7
 80033e0:	bd80      	pop	{r7, pc}
 80033e2:	bf00      	nop
 80033e4:	20000286 	.word	0x20000286
 80033e8:	20000284 	.word	0x20000284

080033ec <recv>:
 80033ec:	b590      	push	{r4, r7, lr}
 80033ee:	b085      	sub	sp, #20
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	4603      	mov	r3, r0
 80033f4:	6039      	str	r1, [r7, #0]
 80033f6:	71fb      	strb	r3, [r7, #7]
 80033f8:	4613      	mov	r3, r2
 80033fa:	80bb      	strh	r3, [r7, #4]
 80033fc:	2300      	movs	r3, #0
 80033fe:	73fb      	strb	r3, [r7, #15]
 8003400:	2300      	movs	r3, #0
 8003402:	81bb      	strh	r3, [r7, #12]
 8003404:	79fb      	ldrb	r3, [r7, #7]
 8003406:	2b08      	cmp	r3, #8
 8003408:	d902      	bls.n	8003410 <recv+0x24>
 800340a:	f04f 33ff 	mov.w	r3, #4294967295
 800340e:	e09c      	b.n	800354a <recv+0x15e>
 8003410:	79fb      	ldrb	r3, [r7, #7]
 8003412:	009b      	lsls	r3, r3, #2
 8003414:	3301      	adds	r3, #1
 8003416:	00db      	lsls	r3, r3, #3
 8003418:	4618      	mov	r0, r3
 800341a:	f7ff f929 	bl	8002670 <WIZCHIP_READ>
 800341e:	4603      	mov	r3, r0
 8003420:	f003 030f 	and.w	r3, r3, #15
 8003424:	2b01      	cmp	r3, #1
 8003426:	d002      	beq.n	800342e <recv+0x42>
 8003428:	f06f 0304 	mvn.w	r3, #4
 800342c:	e08d      	b.n	800354a <recv+0x15e>
 800342e:	88bb      	ldrh	r3, [r7, #4]
 8003430:	2b00      	cmp	r3, #0
 8003432:	d102      	bne.n	800343a <recv+0x4e>
 8003434:	f06f 030d 	mvn.w	r3, #13
 8003438:	e087      	b.n	800354a <recv+0x15e>
 800343a:	79fb      	ldrb	r3, [r7, #7]
 800343c:	009b      	lsls	r3, r3, #2
 800343e:	3301      	adds	r3, #1
 8003440:	00db      	lsls	r3, r3, #3
 8003442:	f503 53f0 	add.w	r3, r3, #7680	; 0x1e00
 8003446:	4618      	mov	r0, r3
 8003448:	f7ff f912 	bl	8002670 <WIZCHIP_READ>
 800344c:	4603      	mov	r3, r0
 800344e:	b29b      	uxth	r3, r3
 8003450:	029b      	lsls	r3, r3, #10
 8003452:	81bb      	strh	r3, [r7, #12]
 8003454:	89ba      	ldrh	r2, [r7, #12]
 8003456:	88bb      	ldrh	r3, [r7, #4]
 8003458:	429a      	cmp	r2, r3
 800345a:	d201      	bcs.n	8003460 <recv+0x74>
 800345c:	89bb      	ldrh	r3, [r7, #12]
 800345e:	80bb      	strh	r3, [r7, #4]
 8003460:	79fb      	ldrb	r3, [r7, #7]
 8003462:	4618      	mov	r0, r3
 8003464:	f7ff faa9 	bl	80029ba <getSn_RX_RSR>
 8003468:	4603      	mov	r3, r0
 800346a:	81bb      	strh	r3, [r7, #12]
 800346c:	79fb      	ldrb	r3, [r7, #7]
 800346e:	009b      	lsls	r3, r3, #2
 8003470:	3301      	adds	r3, #1
 8003472:	00db      	lsls	r3, r3, #3
 8003474:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8003478:	4618      	mov	r0, r3
 800347a:	f7ff f8f9 	bl	8002670 <WIZCHIP_READ>
 800347e:	4603      	mov	r3, r0
 8003480:	73fb      	strb	r3, [r7, #15]
 8003482:	7bfb      	ldrb	r3, [r7, #15]
 8003484:	2b17      	cmp	r3, #23
 8003486:	d026      	beq.n	80034d6 <recv+0xea>
 8003488:	7bfb      	ldrb	r3, [r7, #15]
 800348a:	2b1c      	cmp	r3, #28
 800348c:	d11c      	bne.n	80034c8 <recv+0xdc>
 800348e:	89bb      	ldrh	r3, [r7, #12]
 8003490:	2b00      	cmp	r3, #0
 8003492:	d133      	bne.n	80034fc <recv+0x110>
 8003494:	79fb      	ldrb	r3, [r7, #7]
 8003496:	4618      	mov	r0, r3
 8003498:	f7ff fa44 	bl	8002924 <getSn_TX_FSR>
 800349c:	4603      	mov	r3, r0
 800349e:	461c      	mov	r4, r3
 80034a0:	79fb      	ldrb	r3, [r7, #7]
 80034a2:	009b      	lsls	r3, r3, #2
 80034a4:	3301      	adds	r3, #1
 80034a6:	00db      	lsls	r3, r3, #3
 80034a8:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 80034ac:	4618      	mov	r0, r3
 80034ae:	f7ff f8df 	bl	8002670 <WIZCHIP_READ>
 80034b2:	4603      	mov	r3, r0
 80034b4:	029b      	lsls	r3, r3, #10
 80034b6:	429c      	cmp	r4, r3
 80034b8:	d10d      	bne.n	80034d6 <recv+0xea>
 80034ba:	79fb      	ldrb	r3, [r7, #7]
 80034bc:	4618      	mov	r0, r3
 80034be:	f7ff fcdb 	bl	8002e78 <close>
 80034c2:	f06f 0306 	mvn.w	r3, #6
 80034c6:	e040      	b.n	800354a <recv+0x15e>
 80034c8:	79fb      	ldrb	r3, [r7, #7]
 80034ca:	4618      	mov	r0, r3
 80034cc:	f7ff fcd4 	bl	8002e78 <close>
 80034d0:	f06f 0306 	mvn.w	r3, #6
 80034d4:	e039      	b.n	800354a <recv+0x15e>
 80034d6:	4b1f      	ldr	r3, [pc, #124]	; (8003554 <recv+0x168>)
 80034d8:	881b      	ldrh	r3, [r3, #0]
 80034da:	461a      	mov	r2, r3
 80034dc:	79fb      	ldrb	r3, [r7, #7]
 80034de:	fa42 f303 	asr.w	r3, r2, r3
 80034e2:	f003 0301 	and.w	r3, r3, #1
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	d004      	beq.n	80034f4 <recv+0x108>
 80034ea:	89bb      	ldrh	r3, [r7, #12]
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d101      	bne.n	80034f4 <recv+0x108>
 80034f0:	2300      	movs	r3, #0
 80034f2:	e02a      	b.n	800354a <recv+0x15e>
 80034f4:	89bb      	ldrh	r3, [r7, #12]
 80034f6:	2b00      	cmp	r3, #0
 80034f8:	d102      	bne.n	8003500 <recv+0x114>
 80034fa:	e7b1      	b.n	8003460 <recv+0x74>
 80034fc:	bf00      	nop
 80034fe:	e000      	b.n	8003502 <recv+0x116>
 8003500:	bf00      	nop
 8003502:	89ba      	ldrh	r2, [r7, #12]
 8003504:	88bb      	ldrh	r3, [r7, #4]
 8003506:	429a      	cmp	r2, r3
 8003508:	d201      	bcs.n	800350e <recv+0x122>
 800350a:	89bb      	ldrh	r3, [r7, #12]
 800350c:	80bb      	strh	r3, [r7, #4]
 800350e:	88ba      	ldrh	r2, [r7, #4]
 8003510:	79fb      	ldrb	r3, [r7, #7]
 8003512:	6839      	ldr	r1, [r7, #0]
 8003514:	4618      	mov	r0, r3
 8003516:	f7ff faf7 	bl	8002b08 <wiz_recv_data>
 800351a:	79fb      	ldrb	r3, [r7, #7]
 800351c:	009b      	lsls	r3, r3, #2
 800351e:	3301      	adds	r3, #1
 8003520:	00db      	lsls	r3, r3, #3
 8003522:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003526:	2140      	movs	r1, #64	; 0x40
 8003528:	4618      	mov	r0, r3
 800352a:	f7ff f8ed 	bl	8002708 <WIZCHIP_WRITE>
 800352e:	bf00      	nop
 8003530:	79fb      	ldrb	r3, [r7, #7]
 8003532:	009b      	lsls	r3, r3, #2
 8003534:	3301      	adds	r3, #1
 8003536:	00db      	lsls	r3, r3, #3
 8003538:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800353c:	4618      	mov	r0, r3
 800353e:	f7ff f897 	bl	8002670 <WIZCHIP_READ>
 8003542:	4603      	mov	r3, r0
 8003544:	2b00      	cmp	r3, #0
 8003546:	d1f3      	bne.n	8003530 <recv+0x144>
 8003548:	88bb      	ldrh	r3, [r7, #4]
 800354a:	4618      	mov	r0, r3
 800354c:	3714      	adds	r7, #20
 800354e:	46bd      	mov	sp, r7
 8003550:	bd90      	pop	{r4, r7, pc}
 8003552:	bf00      	nop
 8003554:	20000284 	.word	0x20000284

08003558 <sendto>:
 8003558:	b580      	push	{r7, lr}
 800355a:	b086      	sub	sp, #24
 800355c:	af00      	add	r7, sp, #0
 800355e:	60b9      	str	r1, [r7, #8]
 8003560:	607b      	str	r3, [r7, #4]
 8003562:	4603      	mov	r3, r0
 8003564:	73fb      	strb	r3, [r7, #15]
 8003566:	4613      	mov	r3, r2
 8003568:	81bb      	strh	r3, [r7, #12]
 800356a:	2300      	movs	r3, #0
 800356c:	75fb      	strb	r3, [r7, #23]
 800356e:	2300      	movs	r3, #0
 8003570:	82bb      	strh	r3, [r7, #20]
 8003572:	7bfb      	ldrb	r3, [r7, #15]
 8003574:	2b08      	cmp	r3, #8
 8003576:	d902      	bls.n	800357e <sendto+0x26>
 8003578:	f04f 33ff 	mov.w	r3, #4294967295
 800357c:	e11b      	b.n	80037b6 <sendto+0x25e>
 800357e:	7bfb      	ldrb	r3, [r7, #15]
 8003580:	009b      	lsls	r3, r3, #2
 8003582:	3301      	adds	r3, #1
 8003584:	00db      	lsls	r3, r3, #3
 8003586:	4618      	mov	r0, r3
 8003588:	f7ff f872 	bl	8002670 <WIZCHIP_READ>
 800358c:	4603      	mov	r3, r0
 800358e:	f003 030f 	and.w	r3, r3, #15
 8003592:	3b02      	subs	r3, #2
 8003594:	2b02      	cmp	r3, #2
 8003596:	d902      	bls.n	800359e <sendto+0x46>
 8003598:	f06f 0304 	mvn.w	r3, #4
 800359c:	e10b      	b.n	80037b6 <sendto+0x25e>
 800359e:	bf00      	nop
 80035a0:	89bb      	ldrh	r3, [r7, #12]
 80035a2:	2b00      	cmp	r3, #0
 80035a4:	d102      	bne.n	80035ac <sendto+0x54>
 80035a6:	f06f 030d 	mvn.w	r3, #13
 80035aa:	e104      	b.n	80037b6 <sendto+0x25e>
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	781b      	ldrb	r3, [r3, #0]
 80035b0:	613b      	str	r3, [r7, #16]
 80035b2:	693b      	ldr	r3, [r7, #16]
 80035b4:	021b      	lsls	r3, r3, #8
 80035b6:	687a      	ldr	r2, [r7, #4]
 80035b8:	3201      	adds	r2, #1
 80035ba:	7812      	ldrb	r2, [r2, #0]
 80035bc:	4413      	add	r3, r2
 80035be:	613b      	str	r3, [r7, #16]
 80035c0:	693b      	ldr	r3, [r7, #16]
 80035c2:	021b      	lsls	r3, r3, #8
 80035c4:	687a      	ldr	r2, [r7, #4]
 80035c6:	3202      	adds	r2, #2
 80035c8:	7812      	ldrb	r2, [r2, #0]
 80035ca:	4413      	add	r3, r2
 80035cc:	613b      	str	r3, [r7, #16]
 80035ce:	693b      	ldr	r3, [r7, #16]
 80035d0:	021b      	lsls	r3, r3, #8
 80035d2:	687a      	ldr	r2, [r7, #4]
 80035d4:	3203      	adds	r2, #3
 80035d6:	7812      	ldrb	r2, [r2, #0]
 80035d8:	4413      	add	r3, r2
 80035da:	613b      	str	r3, [r7, #16]
 80035dc:	693b      	ldr	r3, [r7, #16]
 80035de:	2b00      	cmp	r3, #0
 80035e0:	d10e      	bne.n	8003600 <sendto+0xa8>
 80035e2:	7bfb      	ldrb	r3, [r7, #15]
 80035e4:	009b      	lsls	r3, r3, #2
 80035e6:	3301      	adds	r3, #1
 80035e8:	00db      	lsls	r3, r3, #3
 80035ea:	4618      	mov	r0, r3
 80035ec:	f7ff f840 	bl	8002670 <WIZCHIP_READ>
 80035f0:	4603      	mov	r3, r0
 80035f2:	f003 0304 	and.w	r3, r3, #4
 80035f6:	2b04      	cmp	r3, #4
 80035f8:	d002      	beq.n	8003600 <sendto+0xa8>
 80035fa:	f06f 030b 	mvn.w	r3, #11
 80035fe:	e0da      	b.n	80037b6 <sendto+0x25e>
 8003600:	8c3b      	ldrh	r3, [r7, #32]
 8003602:	2b00      	cmp	r3, #0
 8003604:	d10e      	bne.n	8003624 <sendto+0xcc>
 8003606:	7bfb      	ldrb	r3, [r7, #15]
 8003608:	009b      	lsls	r3, r3, #2
 800360a:	3301      	adds	r3, #1
 800360c:	00db      	lsls	r3, r3, #3
 800360e:	4618      	mov	r0, r3
 8003610:	f7ff f82e 	bl	8002670 <WIZCHIP_READ>
 8003614:	4603      	mov	r3, r0
 8003616:	f003 0304 	and.w	r3, r3, #4
 800361a:	2b04      	cmp	r3, #4
 800361c:	d002      	beq.n	8003624 <sendto+0xcc>
 800361e:	f06f 030a 	mvn.w	r3, #10
 8003622:	e0c8      	b.n	80037b6 <sendto+0x25e>
 8003624:	7bfb      	ldrb	r3, [r7, #15]
 8003626:	009b      	lsls	r3, r3, #2
 8003628:	3301      	adds	r3, #1
 800362a:	00db      	lsls	r3, r3, #3
 800362c:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8003630:	4618      	mov	r0, r3
 8003632:	f7ff f81d 	bl	8002670 <WIZCHIP_READ>
 8003636:	4603      	mov	r3, r0
 8003638:	75fb      	strb	r3, [r7, #23]
 800363a:	7dfb      	ldrb	r3, [r7, #23]
 800363c:	2b42      	cmp	r3, #66	; 0x42
 800363e:	d008      	beq.n	8003652 <sendto+0xfa>
 8003640:	7dfb      	ldrb	r3, [r7, #23]
 8003642:	2b22      	cmp	r3, #34	; 0x22
 8003644:	d005      	beq.n	8003652 <sendto+0xfa>
 8003646:	7dfb      	ldrb	r3, [r7, #23]
 8003648:	2b32      	cmp	r3, #50	; 0x32
 800364a:	d002      	beq.n	8003652 <sendto+0xfa>
 800364c:	f06f 0306 	mvn.w	r3, #6
 8003650:	e0b1      	b.n	80037b6 <sendto+0x25e>
 8003652:	7bfb      	ldrb	r3, [r7, #15]
 8003654:	009b      	lsls	r3, r3, #2
 8003656:	3301      	adds	r3, #1
 8003658:	00db      	lsls	r3, r3, #3
 800365a:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
 800365e:	2204      	movs	r2, #4
 8003660:	6879      	ldr	r1, [r7, #4]
 8003662:	4618      	mov	r0, r3
 8003664:	f7ff f8fe 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8003668:	7bfb      	ldrb	r3, [r7, #15]
 800366a:	009b      	lsls	r3, r3, #2
 800366c:	3301      	adds	r3, #1
 800366e:	00db      	lsls	r3, r3, #3
 8003670:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8003674:	461a      	mov	r2, r3
 8003676:	8c3b      	ldrh	r3, [r7, #32]
 8003678:	0a1b      	lsrs	r3, r3, #8
 800367a:	b29b      	uxth	r3, r3
 800367c:	b2db      	uxtb	r3, r3
 800367e:	4619      	mov	r1, r3
 8003680:	4610      	mov	r0, r2
 8003682:	f7ff f841 	bl	8002708 <WIZCHIP_WRITE>
 8003686:	7bfb      	ldrb	r3, [r7, #15]
 8003688:	009b      	lsls	r3, r3, #2
 800368a:	3301      	adds	r3, #1
 800368c:	00db      	lsls	r3, r3, #3
 800368e:	f503 5388 	add.w	r3, r3, #4352	; 0x1100
 8003692:	461a      	mov	r2, r3
 8003694:	8c3b      	ldrh	r3, [r7, #32]
 8003696:	b2db      	uxtb	r3, r3
 8003698:	4619      	mov	r1, r3
 800369a:	4610      	mov	r0, r2
 800369c:	f7ff f834 	bl	8002708 <WIZCHIP_WRITE>
 80036a0:	7bfb      	ldrb	r3, [r7, #15]
 80036a2:	009b      	lsls	r3, r3, #2
 80036a4:	3301      	adds	r3, #1
 80036a6:	00db      	lsls	r3, r3, #3
 80036a8:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 80036ac:	4618      	mov	r0, r3
 80036ae:	f7fe ffdf 	bl	8002670 <WIZCHIP_READ>
 80036b2:	4603      	mov	r3, r0
 80036b4:	b29b      	uxth	r3, r3
 80036b6:	029b      	lsls	r3, r3, #10
 80036b8:	82bb      	strh	r3, [r7, #20]
 80036ba:	89ba      	ldrh	r2, [r7, #12]
 80036bc:	8abb      	ldrh	r3, [r7, #20]
 80036be:	429a      	cmp	r2, r3
 80036c0:	d901      	bls.n	80036c6 <sendto+0x16e>
 80036c2:	8abb      	ldrh	r3, [r7, #20]
 80036c4:	81bb      	strh	r3, [r7, #12]
 80036c6:	7bfb      	ldrb	r3, [r7, #15]
 80036c8:	4618      	mov	r0, r3
 80036ca:	f7ff f92b 	bl	8002924 <getSn_TX_FSR>
 80036ce:	4603      	mov	r3, r0
 80036d0:	82bb      	strh	r3, [r7, #20]
 80036d2:	7bfb      	ldrb	r3, [r7, #15]
 80036d4:	009b      	lsls	r3, r3, #2
 80036d6:	3301      	adds	r3, #1
 80036d8:	00db      	lsls	r3, r3, #3
 80036da:	f503 7340 	add.w	r3, r3, #768	; 0x300
 80036de:	4618      	mov	r0, r3
 80036e0:	f7fe ffc6 	bl	8002670 <WIZCHIP_READ>
 80036e4:	4603      	mov	r3, r0
 80036e6:	2b00      	cmp	r3, #0
 80036e8:	d102      	bne.n	80036f0 <sendto+0x198>
 80036ea:	f06f 0303 	mvn.w	r3, #3
 80036ee:	e062      	b.n	80037b6 <sendto+0x25e>
 80036f0:	4b33      	ldr	r3, [pc, #204]	; (80037c0 <sendto+0x268>)
 80036f2:	881b      	ldrh	r3, [r3, #0]
 80036f4:	461a      	mov	r2, r3
 80036f6:	7bfb      	ldrb	r3, [r7, #15]
 80036f8:	fa42 f303 	asr.w	r3, r2, r3
 80036fc:	f003 0301 	and.w	r3, r3, #1
 8003700:	2b00      	cmp	r3, #0
 8003702:	d005      	beq.n	8003710 <sendto+0x1b8>
 8003704:	89ba      	ldrh	r2, [r7, #12]
 8003706:	8abb      	ldrh	r3, [r7, #20]
 8003708:	429a      	cmp	r2, r3
 800370a:	d901      	bls.n	8003710 <sendto+0x1b8>
 800370c:	2300      	movs	r3, #0
 800370e:	e052      	b.n	80037b6 <sendto+0x25e>
 8003710:	89ba      	ldrh	r2, [r7, #12]
 8003712:	8abb      	ldrh	r3, [r7, #20]
 8003714:	429a      	cmp	r2, r3
 8003716:	d900      	bls.n	800371a <sendto+0x1c2>
 8003718:	e7d5      	b.n	80036c6 <sendto+0x16e>
 800371a:	bf00      	nop
 800371c:	89ba      	ldrh	r2, [r7, #12]
 800371e:	7bfb      	ldrb	r3, [r7, #15]
 8003720:	68b9      	ldr	r1, [r7, #8]
 8003722:	4618      	mov	r0, r3
 8003724:	f7ff f994 	bl	8002a50 <wiz_send_data>
 8003728:	7bfb      	ldrb	r3, [r7, #15]
 800372a:	009b      	lsls	r3, r3, #2
 800372c:	3301      	adds	r3, #1
 800372e:	00db      	lsls	r3, r3, #3
 8003730:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003734:	2120      	movs	r1, #32
 8003736:	4618      	mov	r0, r3
 8003738:	f7fe ffe6 	bl	8002708 <WIZCHIP_WRITE>
 800373c:	bf00      	nop
 800373e:	7bfb      	ldrb	r3, [r7, #15]
 8003740:	009b      	lsls	r3, r3, #2
 8003742:	3301      	adds	r3, #1
 8003744:	00db      	lsls	r3, r3, #3
 8003746:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800374a:	4618      	mov	r0, r3
 800374c:	f7fe ff90 	bl	8002670 <WIZCHIP_READ>
 8003750:	4603      	mov	r3, r0
 8003752:	2b00      	cmp	r3, #0
 8003754:	d1f3      	bne.n	800373e <sendto+0x1e6>
 8003756:	7bfb      	ldrb	r3, [r7, #15]
 8003758:	009b      	lsls	r3, r3, #2
 800375a:	3301      	adds	r3, #1
 800375c:	00db      	lsls	r3, r3, #3
 800375e:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8003762:	4618      	mov	r0, r3
 8003764:	f7fe ff84 	bl	8002670 <WIZCHIP_READ>
 8003768:	4603      	mov	r3, r0
 800376a:	f003 031f 	and.w	r3, r3, #31
 800376e:	75fb      	strb	r3, [r7, #23]
 8003770:	7dfb      	ldrb	r3, [r7, #23]
 8003772:	f003 0310 	and.w	r3, r3, #16
 8003776:	2b00      	cmp	r3, #0
 8003778:	d00c      	beq.n	8003794 <sendto+0x23c>
 800377a:	7bfb      	ldrb	r3, [r7, #15]
 800377c:	009b      	lsls	r3, r3, #2
 800377e:	3301      	adds	r3, #1
 8003780:	00db      	lsls	r3, r3, #3
 8003782:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8003786:	2110      	movs	r1, #16
 8003788:	4618      	mov	r0, r3
 800378a:	f7fe ffbd 	bl	8002708 <WIZCHIP_WRITE>
 800378e:	bf00      	nop
 8003790:	89bb      	ldrh	r3, [r7, #12]
 8003792:	e010      	b.n	80037b6 <sendto+0x25e>
 8003794:	7dfb      	ldrb	r3, [r7, #23]
 8003796:	f003 0308 	and.w	r3, r3, #8
 800379a:	2b00      	cmp	r3, #0
 800379c:	d0db      	beq.n	8003756 <sendto+0x1fe>
 800379e:	7bfb      	ldrb	r3, [r7, #15]
 80037a0:	009b      	lsls	r3, r3, #2
 80037a2:	3301      	adds	r3, #1
 80037a4:	00db      	lsls	r3, r3, #3
 80037a6:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80037aa:	2108      	movs	r1, #8
 80037ac:	4618      	mov	r0, r3
 80037ae:	f7fe ffab 	bl	8002708 <WIZCHIP_WRITE>
 80037b2:	f06f 030c 	mvn.w	r3, #12
 80037b6:	4618      	mov	r0, r3
 80037b8:	3718      	adds	r7, #24
 80037ba:	46bd      	mov	sp, r7
 80037bc:	bd80      	pop	{r7, pc}
 80037be:	bf00      	nop
 80037c0:	20000284 	.word	0x20000284

080037c4 <recvfrom>:
 80037c4:	b580      	push	{r7, lr}
 80037c6:	b088      	sub	sp, #32
 80037c8:	af00      	add	r7, sp, #0
 80037ca:	60b9      	str	r1, [r7, #8]
 80037cc:	607b      	str	r3, [r7, #4]
 80037ce:	4603      	mov	r3, r0
 80037d0:	73fb      	strb	r3, [r7, #15]
 80037d2:	4613      	mov	r3, r2
 80037d4:	81bb      	strh	r3, [r7, #12]
 80037d6:	2300      	movs	r3, #0
 80037d8:	83fb      	strh	r3, [r7, #30]
 80037da:	7bfb      	ldrb	r3, [r7, #15]
 80037dc:	2b08      	cmp	r3, #8
 80037de:	d902      	bls.n	80037e6 <recvfrom+0x22>
 80037e0:	f04f 33ff 	mov.w	r3, #4294967295
 80037e4:	e1d4      	b.n	8003b90 <recvfrom+0x3cc>
 80037e6:	7bfb      	ldrb	r3, [r7, #15]
 80037e8:	009b      	lsls	r3, r3, #2
 80037ea:	3301      	adds	r3, #1
 80037ec:	00db      	lsls	r3, r3, #3
 80037ee:	4618      	mov	r0, r3
 80037f0:	f7fe ff3e 	bl	8002670 <WIZCHIP_READ>
 80037f4:	4603      	mov	r3, r0
 80037f6:	777b      	strb	r3, [r7, #29]
 80037f8:	7f7b      	ldrb	r3, [r7, #29]
 80037fa:	f003 030f 	and.w	r3, r3, #15
 80037fe:	3b02      	subs	r3, #2
 8003800:	2b02      	cmp	r3, #2
 8003802:	d902      	bls.n	800380a <recvfrom+0x46>
 8003804:	f06f 0304 	mvn.w	r3, #4
 8003808:	e1c2      	b.n	8003b90 <recvfrom+0x3cc>
 800380a:	bf00      	nop
 800380c:	89bb      	ldrh	r3, [r7, #12]
 800380e:	2b00      	cmp	r3, #0
 8003810:	d102      	bne.n	8003818 <recvfrom+0x54>
 8003812:	f06f 030d 	mvn.w	r3, #13
 8003816:	e1bb      	b.n	8003b90 <recvfrom+0x3cc>
 8003818:	7bfb      	ldrb	r3, [r7, #15]
 800381a:	4a88      	ldr	r2, [pc, #544]	; (8003a3c <recvfrom+0x278>)
 800381c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003820:	2b00      	cmp	r3, #0
 8003822:	d128      	bne.n	8003876 <recvfrom+0xb2>
 8003824:	7bfb      	ldrb	r3, [r7, #15]
 8003826:	4618      	mov	r0, r3
 8003828:	f7ff f8c7 	bl	80029ba <getSn_RX_RSR>
 800382c:	4603      	mov	r3, r0
 800382e:	83fb      	strh	r3, [r7, #30]
 8003830:	7bfb      	ldrb	r3, [r7, #15]
 8003832:	009b      	lsls	r3, r3, #2
 8003834:	3301      	adds	r3, #1
 8003836:	00db      	lsls	r3, r3, #3
 8003838:	f503 7340 	add.w	r3, r3, #768	; 0x300
 800383c:	4618      	mov	r0, r3
 800383e:	f7fe ff17 	bl	8002670 <WIZCHIP_READ>
 8003842:	4603      	mov	r3, r0
 8003844:	2b00      	cmp	r3, #0
 8003846:	d102      	bne.n	800384e <recvfrom+0x8a>
 8003848:	f06f 0303 	mvn.w	r3, #3
 800384c:	e1a0      	b.n	8003b90 <recvfrom+0x3cc>
 800384e:	4b7c      	ldr	r3, [pc, #496]	; (8003a40 <recvfrom+0x27c>)
 8003850:	881b      	ldrh	r3, [r3, #0]
 8003852:	461a      	mov	r2, r3
 8003854:	7bfb      	ldrb	r3, [r7, #15]
 8003856:	fa42 f303 	asr.w	r3, r2, r3
 800385a:	f003 0301 	and.w	r3, r3, #1
 800385e:	2b00      	cmp	r3, #0
 8003860:	d004      	beq.n	800386c <recvfrom+0xa8>
 8003862:	8bfb      	ldrh	r3, [r7, #30]
 8003864:	2b00      	cmp	r3, #0
 8003866:	d101      	bne.n	800386c <recvfrom+0xa8>
 8003868:	2300      	movs	r3, #0
 800386a:	e191      	b.n	8003b90 <recvfrom+0x3cc>
 800386c:	8bfb      	ldrh	r3, [r7, #30]
 800386e:	2b00      	cmp	r3, #0
 8003870:	d100      	bne.n	8003874 <recvfrom+0xb0>
 8003872:	e7d7      	b.n	8003824 <recvfrom+0x60>
 8003874:	bf00      	nop
 8003876:	7f7b      	ldrb	r3, [r7, #29]
 8003878:	f003 0307 	and.w	r3, r3, #7
 800387c:	2b04      	cmp	r3, #4
 800387e:	d079      	beq.n	8003974 <recvfrom+0x1b0>
 8003880:	2b04      	cmp	r3, #4
 8003882:	f300 8142 	bgt.w	8003b0a <recvfrom+0x346>
 8003886:	2b02      	cmp	r3, #2
 8003888:	d003      	beq.n	8003892 <recvfrom+0xce>
 800388a:	2b03      	cmp	r3, #3
 800388c:	f000 80dc 	beq.w	8003a48 <recvfrom+0x284>
 8003890:	e13b      	b.n	8003b0a <recvfrom+0x346>
 8003892:	7bfb      	ldrb	r3, [r7, #15]
 8003894:	4a69      	ldr	r2, [pc, #420]	; (8003a3c <recvfrom+0x278>)
 8003896:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800389a:	2b00      	cmp	r3, #0
 800389c:	d152      	bne.n	8003944 <recvfrom+0x180>
 800389e:	f107 0114 	add.w	r1, r7, #20
 80038a2:	7bfb      	ldrb	r3, [r7, #15]
 80038a4:	2208      	movs	r2, #8
 80038a6:	4618      	mov	r0, r3
 80038a8:	f7ff f92e 	bl	8002b08 <wiz_recv_data>
 80038ac:	7bfb      	ldrb	r3, [r7, #15]
 80038ae:	009b      	lsls	r3, r3, #2
 80038b0:	3301      	adds	r3, #1
 80038b2:	00db      	lsls	r3, r3, #3
 80038b4:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80038b8:	2140      	movs	r1, #64	; 0x40
 80038ba:	4618      	mov	r0, r3
 80038bc:	f7fe ff24 	bl	8002708 <WIZCHIP_WRITE>
 80038c0:	bf00      	nop
 80038c2:	7bfb      	ldrb	r3, [r7, #15]
 80038c4:	009b      	lsls	r3, r3, #2
 80038c6:	3301      	adds	r3, #1
 80038c8:	00db      	lsls	r3, r3, #3
 80038ca:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80038ce:	4618      	mov	r0, r3
 80038d0:	f7fe fece 	bl	8002670 <WIZCHIP_READ>
 80038d4:	4603      	mov	r3, r0
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d1f3      	bne.n	80038c2 <recvfrom+0xfe>
 80038da:	7d3a      	ldrb	r2, [r7, #20]
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	701a      	strb	r2, [r3, #0]
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	3301      	adds	r3, #1
 80038e4:	7d7a      	ldrb	r2, [r7, #21]
 80038e6:	701a      	strb	r2, [r3, #0]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	3302      	adds	r3, #2
 80038ec:	7dba      	ldrb	r2, [r7, #22]
 80038ee:	701a      	strb	r2, [r3, #0]
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	3303      	adds	r3, #3
 80038f4:	7dfa      	ldrb	r2, [r7, #23]
 80038f6:	701a      	strb	r2, [r3, #0]
 80038f8:	7e3b      	ldrb	r3, [r7, #24]
 80038fa:	b29a      	uxth	r2, r3
 80038fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80038fe:	801a      	strh	r2, [r3, #0]
 8003900:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003902:	881b      	ldrh	r3, [r3, #0]
 8003904:	021b      	lsls	r3, r3, #8
 8003906:	b29a      	uxth	r2, r3
 8003908:	7e7b      	ldrb	r3, [r7, #25]
 800390a:	b29b      	uxth	r3, r3
 800390c:	4413      	add	r3, r2
 800390e:	b29a      	uxth	r2, r3
 8003910:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003912:	801a      	strh	r2, [r3, #0]
 8003914:	7eba      	ldrb	r2, [r7, #26]
 8003916:	7bfb      	ldrb	r3, [r7, #15]
 8003918:	b291      	uxth	r1, r2
 800391a:	4a48      	ldr	r2, [pc, #288]	; (8003a3c <recvfrom+0x278>)
 800391c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8003920:	7bfb      	ldrb	r3, [r7, #15]
 8003922:	4a46      	ldr	r2, [pc, #280]	; (8003a3c <recvfrom+0x278>)
 8003924:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003928:	021b      	lsls	r3, r3, #8
 800392a:	b299      	uxth	r1, r3
 800392c:	7efb      	ldrb	r3, [r7, #27]
 800392e:	b29a      	uxth	r2, r3
 8003930:	7bfb      	ldrb	r3, [r7, #15]
 8003932:	440a      	add	r2, r1
 8003934:	b291      	uxth	r1, r2
 8003936:	4a41      	ldr	r2, [pc, #260]	; (8003a3c <recvfrom+0x278>)
 8003938:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800393c:	7bfb      	ldrb	r3, [r7, #15]
 800393e:	4a41      	ldr	r2, [pc, #260]	; (8003a44 <recvfrom+0x280>)
 8003940:	2180      	movs	r1, #128	; 0x80
 8003942:	54d1      	strb	r1, [r2, r3]
 8003944:	7bfb      	ldrb	r3, [r7, #15]
 8003946:	4a3d      	ldr	r2, [pc, #244]	; (8003a3c <recvfrom+0x278>)
 8003948:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800394c:	89ba      	ldrh	r2, [r7, #12]
 800394e:	429a      	cmp	r2, r3
 8003950:	d202      	bcs.n	8003958 <recvfrom+0x194>
 8003952:	89bb      	ldrh	r3, [r7, #12]
 8003954:	83fb      	strh	r3, [r7, #30]
 8003956:	e004      	b.n	8003962 <recvfrom+0x19e>
 8003958:	7bfb      	ldrb	r3, [r7, #15]
 800395a:	4a38      	ldr	r2, [pc, #224]	; (8003a3c <recvfrom+0x278>)
 800395c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003960:	83fb      	strh	r3, [r7, #30]
 8003962:	8bfb      	ldrh	r3, [r7, #30]
 8003964:	81bb      	strh	r3, [r7, #12]
 8003966:	8bfa      	ldrh	r2, [r7, #30]
 8003968:	7bfb      	ldrb	r3, [r7, #15]
 800396a:	68b9      	ldr	r1, [r7, #8]
 800396c:	4618      	mov	r0, r3
 800396e:	f7ff f8cb 	bl	8002b08 <wiz_recv_data>
 8003972:	e0d6      	b.n	8003b22 <recvfrom+0x35e>
 8003974:	7bfb      	ldrb	r3, [r7, #15]
 8003976:	4a31      	ldr	r2, [pc, #196]	; (8003a3c <recvfrom+0x278>)
 8003978:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800397c:	2b00      	cmp	r3, #0
 800397e:	d146      	bne.n	8003a0e <recvfrom+0x24a>
 8003980:	f107 0114 	add.w	r1, r7, #20
 8003984:	7bfb      	ldrb	r3, [r7, #15]
 8003986:	2202      	movs	r2, #2
 8003988:	4618      	mov	r0, r3
 800398a:	f7ff f8bd 	bl	8002b08 <wiz_recv_data>
 800398e:	7bfb      	ldrb	r3, [r7, #15]
 8003990:	009b      	lsls	r3, r3, #2
 8003992:	3301      	adds	r3, #1
 8003994:	00db      	lsls	r3, r3, #3
 8003996:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800399a:	2140      	movs	r1, #64	; 0x40
 800399c:	4618      	mov	r0, r3
 800399e:	f7fe feb3 	bl	8002708 <WIZCHIP_WRITE>
 80039a2:	bf00      	nop
 80039a4:	7bfb      	ldrb	r3, [r7, #15]
 80039a6:	009b      	lsls	r3, r3, #2
 80039a8:	3301      	adds	r3, #1
 80039aa:	00db      	lsls	r3, r3, #3
 80039ac:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80039b0:	4618      	mov	r0, r3
 80039b2:	f7fe fe5d 	bl	8002670 <WIZCHIP_READ>
 80039b6:	4603      	mov	r3, r0
 80039b8:	2b00      	cmp	r3, #0
 80039ba:	d1f3      	bne.n	80039a4 <recvfrom+0x1e0>
 80039bc:	7d3a      	ldrb	r2, [r7, #20]
 80039be:	7bfb      	ldrb	r3, [r7, #15]
 80039c0:	b291      	uxth	r1, r2
 80039c2:	4a1e      	ldr	r2, [pc, #120]	; (8003a3c <recvfrom+0x278>)
 80039c4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80039c8:	7bfb      	ldrb	r3, [r7, #15]
 80039ca:	4a1c      	ldr	r2, [pc, #112]	; (8003a3c <recvfrom+0x278>)
 80039cc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80039d0:	021b      	lsls	r3, r3, #8
 80039d2:	b29a      	uxth	r2, r3
 80039d4:	7d7b      	ldrb	r3, [r7, #21]
 80039d6:	b29b      	uxth	r3, r3
 80039d8:	4413      	add	r3, r2
 80039da:	b29a      	uxth	r2, r3
 80039dc:	7bfb      	ldrb	r3, [r7, #15]
 80039de:	3a02      	subs	r2, #2
 80039e0:	b291      	uxth	r1, r2
 80039e2:	4a16      	ldr	r2, [pc, #88]	; (8003a3c <recvfrom+0x278>)
 80039e4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80039e8:	7bfb      	ldrb	r3, [r7, #15]
 80039ea:	4a14      	ldr	r2, [pc, #80]	; (8003a3c <recvfrom+0x278>)
 80039ec:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80039f0:	f240 52ea 	movw	r2, #1514	; 0x5ea
 80039f4:	4293      	cmp	r3, r2
 80039f6:	d906      	bls.n	8003a06 <recvfrom+0x242>
 80039f8:	7bfb      	ldrb	r3, [r7, #15]
 80039fa:	4618      	mov	r0, r3
 80039fc:	f7ff fa3c 	bl	8002e78 <close>
 8003a00:	f46f 737a 	mvn.w	r3, #1000	; 0x3e8
 8003a04:	e0c4      	b.n	8003b90 <recvfrom+0x3cc>
 8003a06:	7bfb      	ldrb	r3, [r7, #15]
 8003a08:	4a0e      	ldr	r2, [pc, #56]	; (8003a44 <recvfrom+0x280>)
 8003a0a:	2180      	movs	r1, #128	; 0x80
 8003a0c:	54d1      	strb	r1, [r2, r3]
 8003a0e:	7bfb      	ldrb	r3, [r7, #15]
 8003a10:	4a0a      	ldr	r2, [pc, #40]	; (8003a3c <recvfrom+0x278>)
 8003a12:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003a16:	89ba      	ldrh	r2, [r7, #12]
 8003a18:	429a      	cmp	r2, r3
 8003a1a:	d202      	bcs.n	8003a22 <recvfrom+0x25e>
 8003a1c:	89bb      	ldrh	r3, [r7, #12]
 8003a1e:	83fb      	strh	r3, [r7, #30]
 8003a20:	e004      	b.n	8003a2c <recvfrom+0x268>
 8003a22:	7bfb      	ldrb	r3, [r7, #15]
 8003a24:	4a05      	ldr	r2, [pc, #20]	; (8003a3c <recvfrom+0x278>)
 8003a26:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003a2a:	83fb      	strh	r3, [r7, #30]
 8003a2c:	8bfa      	ldrh	r2, [r7, #30]
 8003a2e:	7bfb      	ldrb	r3, [r7, #15]
 8003a30:	68b9      	ldr	r1, [r7, #8]
 8003a32:	4618      	mov	r0, r3
 8003a34:	f7ff f868 	bl	8002b08 <wiz_recv_data>
 8003a38:	e073      	b.n	8003b22 <recvfrom+0x35e>
 8003a3a:	bf00      	nop
 8003a3c:	20000288 	.word	0x20000288
 8003a40:	20000284 	.word	0x20000284
 8003a44:	20000298 	.word	0x20000298
 8003a48:	7bfb      	ldrb	r3, [r7, #15]
 8003a4a:	4a53      	ldr	r2, [pc, #332]	; (8003b98 <recvfrom+0x3d4>)
 8003a4c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003a50:	2b00      	cmp	r3, #0
 8003a52:	d144      	bne.n	8003ade <recvfrom+0x31a>
 8003a54:	f107 0114 	add.w	r1, r7, #20
 8003a58:	7bfb      	ldrb	r3, [r7, #15]
 8003a5a:	2206      	movs	r2, #6
 8003a5c:	4618      	mov	r0, r3
 8003a5e:	f7ff f853 	bl	8002b08 <wiz_recv_data>
 8003a62:	7bfb      	ldrb	r3, [r7, #15]
 8003a64:	009b      	lsls	r3, r3, #2
 8003a66:	3301      	adds	r3, #1
 8003a68:	00db      	lsls	r3, r3, #3
 8003a6a:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003a6e:	2140      	movs	r1, #64	; 0x40
 8003a70:	4618      	mov	r0, r3
 8003a72:	f7fe fe49 	bl	8002708 <WIZCHIP_WRITE>
 8003a76:	bf00      	nop
 8003a78:	7bfb      	ldrb	r3, [r7, #15]
 8003a7a:	009b      	lsls	r3, r3, #2
 8003a7c:	3301      	adds	r3, #1
 8003a7e:	00db      	lsls	r3, r3, #3
 8003a80:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003a84:	4618      	mov	r0, r3
 8003a86:	f7fe fdf3 	bl	8002670 <WIZCHIP_READ>
 8003a8a:	4603      	mov	r3, r0
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d1f3      	bne.n	8003a78 <recvfrom+0x2b4>
 8003a90:	7d3a      	ldrb	r2, [r7, #20]
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	701a      	strb	r2, [r3, #0]
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	3301      	adds	r3, #1
 8003a9a:	7d7a      	ldrb	r2, [r7, #21]
 8003a9c:	701a      	strb	r2, [r3, #0]
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	3302      	adds	r3, #2
 8003aa2:	7dba      	ldrb	r2, [r7, #22]
 8003aa4:	701a      	strb	r2, [r3, #0]
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	3303      	adds	r3, #3
 8003aaa:	7dfa      	ldrb	r2, [r7, #23]
 8003aac:	701a      	strb	r2, [r3, #0]
 8003aae:	7e3a      	ldrb	r2, [r7, #24]
 8003ab0:	7bfb      	ldrb	r3, [r7, #15]
 8003ab2:	b291      	uxth	r1, r2
 8003ab4:	4a38      	ldr	r2, [pc, #224]	; (8003b98 <recvfrom+0x3d4>)
 8003ab6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8003aba:	7bfb      	ldrb	r3, [r7, #15]
 8003abc:	4a36      	ldr	r2, [pc, #216]	; (8003b98 <recvfrom+0x3d4>)
 8003abe:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003ac2:	021b      	lsls	r3, r3, #8
 8003ac4:	b299      	uxth	r1, r3
 8003ac6:	7e7b      	ldrb	r3, [r7, #25]
 8003ac8:	b29a      	uxth	r2, r3
 8003aca:	7bfb      	ldrb	r3, [r7, #15]
 8003acc:	440a      	add	r2, r1
 8003ace:	b291      	uxth	r1, r2
 8003ad0:	4a31      	ldr	r2, [pc, #196]	; (8003b98 <recvfrom+0x3d4>)
 8003ad2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8003ad6:	7bfb      	ldrb	r3, [r7, #15]
 8003ad8:	4a30      	ldr	r2, [pc, #192]	; (8003b9c <recvfrom+0x3d8>)
 8003ada:	2180      	movs	r1, #128	; 0x80
 8003adc:	54d1      	strb	r1, [r2, r3]
 8003ade:	7bfb      	ldrb	r3, [r7, #15]
 8003ae0:	4a2d      	ldr	r2, [pc, #180]	; (8003b98 <recvfrom+0x3d4>)
 8003ae2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003ae6:	89ba      	ldrh	r2, [r7, #12]
 8003ae8:	429a      	cmp	r2, r3
 8003aea:	d202      	bcs.n	8003af2 <recvfrom+0x32e>
 8003aec:	89bb      	ldrh	r3, [r7, #12]
 8003aee:	83fb      	strh	r3, [r7, #30]
 8003af0:	e004      	b.n	8003afc <recvfrom+0x338>
 8003af2:	7bfb      	ldrb	r3, [r7, #15]
 8003af4:	4a28      	ldr	r2, [pc, #160]	; (8003b98 <recvfrom+0x3d4>)
 8003af6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003afa:	83fb      	strh	r3, [r7, #30]
 8003afc:	8bfa      	ldrh	r2, [r7, #30]
 8003afe:	7bfb      	ldrb	r3, [r7, #15]
 8003b00:	68b9      	ldr	r1, [r7, #8]
 8003b02:	4618      	mov	r0, r3
 8003b04:	f7ff f800 	bl	8002b08 <wiz_recv_data>
 8003b08:	e00b      	b.n	8003b22 <recvfrom+0x35e>
 8003b0a:	8bfa      	ldrh	r2, [r7, #30]
 8003b0c:	7bfb      	ldrb	r3, [r7, #15]
 8003b0e:	4611      	mov	r1, r2
 8003b10:	4618      	mov	r0, r3
 8003b12:	f7ff f855 	bl	8002bc0 <wiz_recv_ignore>
 8003b16:	7bfb      	ldrb	r3, [r7, #15]
 8003b18:	491f      	ldr	r1, [pc, #124]	; (8003b98 <recvfrom+0x3d4>)
 8003b1a:	8bfa      	ldrh	r2, [r7, #30]
 8003b1c:	f821 2013 	strh.w	r2, [r1, r3, lsl #1]
 8003b20:	bf00      	nop
 8003b22:	7bfb      	ldrb	r3, [r7, #15]
 8003b24:	009b      	lsls	r3, r3, #2
 8003b26:	3301      	adds	r3, #1
 8003b28:	00db      	lsls	r3, r3, #3
 8003b2a:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003b2e:	2140      	movs	r1, #64	; 0x40
 8003b30:	4618      	mov	r0, r3
 8003b32:	f7fe fde9 	bl	8002708 <WIZCHIP_WRITE>
 8003b36:	bf00      	nop
 8003b38:	7bfb      	ldrb	r3, [r7, #15]
 8003b3a:	009b      	lsls	r3, r3, #2
 8003b3c:	3301      	adds	r3, #1
 8003b3e:	00db      	lsls	r3, r3, #3
 8003b40:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003b44:	4618      	mov	r0, r3
 8003b46:	f7fe fd93 	bl	8002670 <WIZCHIP_READ>
 8003b4a:	4603      	mov	r3, r0
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	d1f3      	bne.n	8003b38 <recvfrom+0x374>
 8003b50:	7bfb      	ldrb	r3, [r7, #15]
 8003b52:	4a11      	ldr	r2, [pc, #68]	; (8003b98 <recvfrom+0x3d4>)
 8003b54:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 8003b58:	7bfb      	ldrb	r3, [r7, #15]
 8003b5a:	8bfa      	ldrh	r2, [r7, #30]
 8003b5c:	1a8a      	subs	r2, r1, r2
 8003b5e:	b291      	uxth	r1, r2
 8003b60:	4a0d      	ldr	r2, [pc, #52]	; (8003b98 <recvfrom+0x3d4>)
 8003b62:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8003b66:	7bfb      	ldrb	r3, [r7, #15]
 8003b68:	4a0b      	ldr	r2, [pc, #44]	; (8003b98 <recvfrom+0x3d4>)
 8003b6a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d009      	beq.n	8003b86 <recvfrom+0x3c2>
 8003b72:	7bfb      	ldrb	r3, [r7, #15]
 8003b74:	4a09      	ldr	r2, [pc, #36]	; (8003b9c <recvfrom+0x3d8>)
 8003b76:	5cd2      	ldrb	r2, [r2, r3]
 8003b78:	7bfb      	ldrb	r3, [r7, #15]
 8003b7a:	f042 0201 	orr.w	r2, r2, #1
 8003b7e:	b2d1      	uxtb	r1, r2
 8003b80:	4a06      	ldr	r2, [pc, #24]	; (8003b9c <recvfrom+0x3d8>)
 8003b82:	54d1      	strb	r1, [r2, r3]
 8003b84:	e003      	b.n	8003b8e <recvfrom+0x3ca>
 8003b86:	7bfb      	ldrb	r3, [r7, #15]
 8003b88:	4a04      	ldr	r2, [pc, #16]	; (8003b9c <recvfrom+0x3d8>)
 8003b8a:	2100      	movs	r1, #0
 8003b8c:	54d1      	strb	r1, [r2, r3]
 8003b8e:	8bfb      	ldrh	r3, [r7, #30]
 8003b90:	4618      	mov	r0, r3
 8003b92:	3720      	adds	r7, #32
 8003b94:	46bd      	mov	sp, r7
 8003b96:	bd80      	pop	{r7, pc}
 8003b98:	20000288 	.word	0x20000288
 8003b9c:	20000298 	.word	0x20000298

08003ba0 <wizchip_cris_enter>:
 8003ba0:	b480      	push	{r7}
 8003ba2:	af00      	add	r7, sp, #0
 8003ba4:	bf00      	nop
 8003ba6:	46bd      	mov	sp, r7
 8003ba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bac:	4770      	bx	lr

08003bae <wizchip_cris_exit>:
 8003bae:	b480      	push	{r7}
 8003bb0:	af00      	add	r7, sp, #0
 8003bb2:	bf00      	nop
 8003bb4:	46bd      	mov	sp, r7
 8003bb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bba:	4770      	bx	lr

08003bbc <wizchip_cs_select>:
 8003bbc:	b480      	push	{r7}
 8003bbe:	af00      	add	r7, sp, #0
 8003bc0:	bf00      	nop
 8003bc2:	46bd      	mov	sp, r7
 8003bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bc8:	4770      	bx	lr

08003bca <wizchip_cs_deselect>:
 8003bca:	b480      	push	{r7}
 8003bcc:	af00      	add	r7, sp, #0
 8003bce:	bf00      	nop
 8003bd0:	46bd      	mov	sp, r7
 8003bd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bd6:	4770      	bx	lr

08003bd8 <wizchip_bus_readdata>:
 8003bd8:	b480      	push	{r7}
 8003bda:	b083      	sub	sp, #12
 8003bdc:	af00      	add	r7, sp, #0
 8003bde:	6078      	str	r0, [r7, #4]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	781b      	ldrb	r3, [r3, #0]
 8003be4:	b2db      	uxtb	r3, r3
 8003be6:	4618      	mov	r0, r3
 8003be8:	370c      	adds	r7, #12
 8003bea:	46bd      	mov	sp, r7
 8003bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bf0:	4770      	bx	lr

08003bf2 <wizchip_bus_writedata>:
 8003bf2:	b480      	push	{r7}
 8003bf4:	b083      	sub	sp, #12
 8003bf6:	af00      	add	r7, sp, #0
 8003bf8:	6078      	str	r0, [r7, #4]
 8003bfa:	460b      	mov	r3, r1
 8003bfc:	70fb      	strb	r3, [r7, #3]
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	78fa      	ldrb	r2, [r7, #3]
 8003c02:	701a      	strb	r2, [r3, #0]
 8003c04:	bf00      	nop
 8003c06:	370c      	adds	r7, #12
 8003c08:	46bd      	mov	sp, r7
 8003c0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c0e:	4770      	bx	lr

08003c10 <wizchip_spi_readbyte>:
 8003c10:	b480      	push	{r7}
 8003c12:	af00      	add	r7, sp, #0
 8003c14:	2300      	movs	r3, #0
 8003c16:	4618      	mov	r0, r3
 8003c18:	46bd      	mov	sp, r7
 8003c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c1e:	4770      	bx	lr

08003c20 <wizchip_spi_writebyte>:
 8003c20:	b480      	push	{r7}
 8003c22:	b083      	sub	sp, #12
 8003c24:	af00      	add	r7, sp, #0
 8003c26:	4603      	mov	r3, r0
 8003c28:	71fb      	strb	r3, [r7, #7]
 8003c2a:	bf00      	nop
 8003c2c:	370c      	adds	r7, #12
 8003c2e:	46bd      	mov	sp, r7
 8003c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c34:	4770      	bx	lr

08003c36 <wizchip_spi_readburst>:
 8003c36:	b480      	push	{r7}
 8003c38:	b083      	sub	sp, #12
 8003c3a:	af00      	add	r7, sp, #0
 8003c3c:	6078      	str	r0, [r7, #4]
 8003c3e:	460b      	mov	r3, r1
 8003c40:	807b      	strh	r3, [r7, #2]
 8003c42:	bf00      	nop
 8003c44:	370c      	adds	r7, #12
 8003c46:	46bd      	mov	sp, r7
 8003c48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c4c:	4770      	bx	lr

08003c4e <wizchip_spi_writeburst>:
 8003c4e:	b480      	push	{r7}
 8003c50:	b083      	sub	sp, #12
 8003c52:	af00      	add	r7, sp, #0
 8003c54:	6078      	str	r0, [r7, #4]
 8003c56:	460b      	mov	r3, r1
 8003c58:	807b      	strh	r3, [r7, #2]
 8003c5a:	bf00      	nop
 8003c5c:	370c      	adds	r7, #12
 8003c5e:	46bd      	mov	sp, r7
 8003c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c64:	4770      	bx	lr
	...

08003c68 <reg_wizchip_cs_cbfunc>:
 8003c68:	b480      	push	{r7}
 8003c6a:	b083      	sub	sp, #12
 8003c6c:	af00      	add	r7, sp, #0
 8003c6e:	6078      	str	r0, [r7, #4]
 8003c70:	6039      	str	r1, [r7, #0]
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d002      	beq.n	8003c7e <reg_wizchip_cs_cbfunc+0x16>
 8003c78:	683b      	ldr	r3, [r7, #0]
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d106      	bne.n	8003c8c <reg_wizchip_cs_cbfunc+0x24>
 8003c7e:	4b0a      	ldr	r3, [pc, #40]	; (8003ca8 <reg_wizchip_cs_cbfunc+0x40>)
 8003c80:	4a0a      	ldr	r2, [pc, #40]	; (8003cac <reg_wizchip_cs_cbfunc+0x44>)
 8003c82:	611a      	str	r2, [r3, #16]
 8003c84:	4b08      	ldr	r3, [pc, #32]	; (8003ca8 <reg_wizchip_cs_cbfunc+0x40>)
 8003c86:	4a0a      	ldr	r2, [pc, #40]	; (8003cb0 <reg_wizchip_cs_cbfunc+0x48>)
 8003c88:	615a      	str	r2, [r3, #20]
 8003c8a:	e006      	b.n	8003c9a <reg_wizchip_cs_cbfunc+0x32>
 8003c8c:	4a06      	ldr	r2, [pc, #24]	; (8003ca8 <reg_wizchip_cs_cbfunc+0x40>)
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	6113      	str	r3, [r2, #16]
 8003c92:	4a05      	ldr	r2, [pc, #20]	; (8003ca8 <reg_wizchip_cs_cbfunc+0x40>)
 8003c94:	683b      	ldr	r3, [r7, #0]
 8003c96:	6153      	str	r3, [r2, #20]
 8003c98:	bf00      	nop
 8003c9a:	bf00      	nop
 8003c9c:	370c      	adds	r7, #12
 8003c9e:	46bd      	mov	sp, r7
 8003ca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ca4:	4770      	bx	lr
 8003ca6:	bf00      	nop
 8003ca8:	20000020 	.word	0x20000020
 8003cac:	08003bbd 	.word	0x08003bbd
 8003cb0:	08003bcb 	.word	0x08003bcb

08003cb4 <reg_wizchip_spi_cbfunc>:
 8003cb4:	b480      	push	{r7}
 8003cb6:	b083      	sub	sp, #12
 8003cb8:	af00      	add	r7, sp, #0
 8003cba:	6078      	str	r0, [r7, #4]
 8003cbc:	6039      	str	r1, [r7, #0]
 8003cbe:	bf00      	nop
 8003cc0:	4b0f      	ldr	r3, [pc, #60]	; (8003d00 <reg_wizchip_spi_cbfunc+0x4c>)
 8003cc2:	881b      	ldrh	r3, [r3, #0]
 8003cc4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003cc8:	2b00      	cmp	r3, #0
 8003cca:	d0f9      	beq.n	8003cc0 <reg_wizchip_spi_cbfunc+0xc>
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	2b00      	cmp	r3, #0
 8003cd0:	d002      	beq.n	8003cd8 <reg_wizchip_spi_cbfunc+0x24>
 8003cd2:	683b      	ldr	r3, [r7, #0]
 8003cd4:	2b00      	cmp	r3, #0
 8003cd6:	d106      	bne.n	8003ce6 <reg_wizchip_spi_cbfunc+0x32>
 8003cd8:	4b09      	ldr	r3, [pc, #36]	; (8003d00 <reg_wizchip_spi_cbfunc+0x4c>)
 8003cda:	4a0a      	ldr	r2, [pc, #40]	; (8003d04 <reg_wizchip_spi_cbfunc+0x50>)
 8003cdc:	619a      	str	r2, [r3, #24]
 8003cde:	4b08      	ldr	r3, [pc, #32]	; (8003d00 <reg_wizchip_spi_cbfunc+0x4c>)
 8003ce0:	4a09      	ldr	r2, [pc, #36]	; (8003d08 <reg_wizchip_spi_cbfunc+0x54>)
 8003ce2:	61da      	str	r2, [r3, #28]
 8003ce4:	e006      	b.n	8003cf4 <reg_wizchip_spi_cbfunc+0x40>
 8003ce6:	4a06      	ldr	r2, [pc, #24]	; (8003d00 <reg_wizchip_spi_cbfunc+0x4c>)
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	6193      	str	r3, [r2, #24]
 8003cec:	4a04      	ldr	r2, [pc, #16]	; (8003d00 <reg_wizchip_spi_cbfunc+0x4c>)
 8003cee:	683b      	ldr	r3, [r7, #0]
 8003cf0:	61d3      	str	r3, [r2, #28]
 8003cf2:	bf00      	nop
 8003cf4:	bf00      	nop
 8003cf6:	370c      	adds	r7, #12
 8003cf8:	46bd      	mov	sp, r7
 8003cfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cfe:	4770      	bx	lr
 8003d00:	20000020 	.word	0x20000020
 8003d04:	08003c11 	.word	0x08003c11
 8003d08:	08003c21 	.word	0x08003c21

08003d0c <reg_wizchip_spiburst_cbfunc>:
 8003d0c:	b480      	push	{r7}
 8003d0e:	b083      	sub	sp, #12
 8003d10:	af00      	add	r7, sp, #0
 8003d12:	6078      	str	r0, [r7, #4]
 8003d14:	6039      	str	r1, [r7, #0]
 8003d16:	bf00      	nop
 8003d18:	4b0f      	ldr	r3, [pc, #60]	; (8003d58 <reg_wizchip_spiburst_cbfunc+0x4c>)
 8003d1a:	881b      	ldrh	r3, [r3, #0]
 8003d1c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003d20:	2b00      	cmp	r3, #0
 8003d22:	d0f9      	beq.n	8003d18 <reg_wizchip_spiburst_cbfunc+0xc>
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d002      	beq.n	8003d30 <reg_wizchip_spiburst_cbfunc+0x24>
 8003d2a:	683b      	ldr	r3, [r7, #0]
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	d106      	bne.n	8003d3e <reg_wizchip_spiburst_cbfunc+0x32>
 8003d30:	4b09      	ldr	r3, [pc, #36]	; (8003d58 <reg_wizchip_spiburst_cbfunc+0x4c>)
 8003d32:	4a0a      	ldr	r2, [pc, #40]	; (8003d5c <reg_wizchip_spiburst_cbfunc+0x50>)
 8003d34:	621a      	str	r2, [r3, #32]
 8003d36:	4b08      	ldr	r3, [pc, #32]	; (8003d58 <reg_wizchip_spiburst_cbfunc+0x4c>)
 8003d38:	4a09      	ldr	r2, [pc, #36]	; (8003d60 <reg_wizchip_spiburst_cbfunc+0x54>)
 8003d3a:	625a      	str	r2, [r3, #36]	; 0x24
 8003d3c:	e006      	b.n	8003d4c <reg_wizchip_spiburst_cbfunc+0x40>
 8003d3e:	4a06      	ldr	r2, [pc, #24]	; (8003d58 <reg_wizchip_spiburst_cbfunc+0x4c>)
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	6213      	str	r3, [r2, #32]
 8003d44:	4a04      	ldr	r2, [pc, #16]	; (8003d58 <reg_wizchip_spiburst_cbfunc+0x4c>)
 8003d46:	683b      	ldr	r3, [r7, #0]
 8003d48:	6253      	str	r3, [r2, #36]	; 0x24
 8003d4a:	bf00      	nop
 8003d4c:	bf00      	nop
 8003d4e:	370c      	adds	r7, #12
 8003d50:	46bd      	mov	sp, r7
 8003d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d56:	4770      	bx	lr
 8003d58:	20000020 	.word	0x20000020
 8003d5c:	08003c37 	.word	0x08003c37
 8003d60:	08003c4f 	.word	0x08003c4f

08003d64 <ctlwizchip>:
 8003d64:	b590      	push	{r4, r7, lr}
 8003d66:	b087      	sub	sp, #28
 8003d68:	af00      	add	r7, sp, #0
 8003d6a:	4603      	mov	r3, r0
 8003d6c:	6039      	str	r1, [r7, #0]
 8003d6e:	71fb      	strb	r3, [r7, #7]
 8003d70:	2300      	movs	r3, #0
 8003d72:	75fb      	strb	r3, [r7, #23]
 8003d74:	2300      	movs	r3, #0
 8003d76:	60fb      	str	r3, [r7, #12]
 8003d78:	2300      	movs	r3, #0
 8003d7a:	613b      	str	r3, [r7, #16]
 8003d7c:	79fb      	ldrb	r3, [r7, #7]
 8003d7e:	2b0f      	cmp	r3, #15
 8003d80:	f200 80c2 	bhi.w	8003f08 <ctlwizchip+0x1a4>
 8003d84:	a201      	add	r2, pc, #4	; (adr r2, 8003d8c <ctlwizchip+0x28>)
 8003d86:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d8a:	bf00      	nop
 8003d8c:	08003dcd 	.word	0x08003dcd
 8003d90:	08003dd3 	.word	0x08003dd3
 8003d94:	08003dff 	.word	0x08003dff
 8003d98:	08003df3 	.word	0x08003df3
 8003d9c:	08003e0d 	.word	0x08003e0d
 8003da0:	08003e19 	.word	0x08003e19
 8003da4:	08003e27 	.word	0x08003e27
 8003da8:	08003e4d 	.word	0x08003e4d
 8003dac:	08003e73 	.word	0x08003e73
 8003db0:	08003ead 	.word	0x08003ead
 8003db4:	08003eb3 	.word	0x08003eb3
 8003db8:	08003ebb 	.word	0x08003ebb
 8003dbc:	08003f0f 	.word	0x08003f0f
 8003dc0:	08003ec3 	.word	0x08003ec3
 8003dc4:	08003ed1 	.word	0x08003ed1
 8003dc8:	08003eed 	.word	0x08003eed
 8003dcc:	f000 f8a8 	bl	8003f20 <wizchip_sw_reset>
 8003dd0:	e09e      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003dd2:	683b      	ldr	r3, [r7, #0]
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	d004      	beq.n	8003de2 <ctlwizchip+0x7e>
 8003dd8:	683b      	ldr	r3, [r7, #0]
 8003dda:	60fb      	str	r3, [r7, #12]
 8003ddc:	68fb      	ldr	r3, [r7, #12]
 8003dde:	3308      	adds	r3, #8
 8003de0:	613b      	str	r3, [r7, #16]
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	693a      	ldr	r2, [r7, #16]
 8003de6:	4611      	mov	r1, r2
 8003de8:	4618      	mov	r0, r3
 8003dea:	f000 f8e5 	bl	8003fb8 <wizchip_init>
 8003dee:	4603      	mov	r3, r0
 8003df0:	e08f      	b.n	8003f12 <ctlwizchip+0x1ae>
 8003df2:	683b      	ldr	r3, [r7, #0]
 8003df4:	881b      	ldrh	r3, [r3, #0]
 8003df6:	4618      	mov	r0, r3
 8003df8:	f000 f96a 	bl	80040d0 <wizchip_clrinterrupt>
 8003dfc:	e088      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003dfe:	f000 f985 	bl	800410c <wizchip_getinterrupt>
 8003e02:	4603      	mov	r3, r0
 8003e04:	461a      	mov	r2, r3
 8003e06:	683b      	ldr	r3, [r7, #0]
 8003e08:	801a      	strh	r2, [r3, #0]
 8003e0a:	e081      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003e0c:	683b      	ldr	r3, [r7, #0]
 8003e0e:	881b      	ldrh	r3, [r3, #0]
 8003e10:	4618      	mov	r0, r3
 8003e12:	f000 f9a0 	bl	8004156 <wizchip_setinterruptmask>
 8003e16:	e07b      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003e18:	f000 f9b8 	bl	800418c <wizchip_getinterruptmask>
 8003e1c:	4603      	mov	r3, r0
 8003e1e:	461a      	mov	r2, r3
 8003e20:	683b      	ldr	r3, [r7, #0]
 8003e22:	801a      	strh	r2, [r3, #0]
 8003e24:	e074      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003e26:	683b      	ldr	r3, [r7, #0]
 8003e28:	881b      	ldrh	r3, [r3, #0]
 8003e2a:	0a1b      	lsrs	r3, r3, #8
 8003e2c:	b29b      	uxth	r3, r3
 8003e2e:	b2db      	uxtb	r3, r3
 8003e30:	4619      	mov	r1, r3
 8003e32:	f44f 5098 	mov.w	r0, #4864	; 0x1300
 8003e36:	f7fe fc67 	bl	8002708 <WIZCHIP_WRITE>
 8003e3a:	683b      	ldr	r3, [r7, #0]
 8003e3c:	881b      	ldrh	r3, [r3, #0]
 8003e3e:	b2db      	uxtb	r3, r3
 8003e40:	4619      	mov	r1, r3
 8003e42:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 8003e46:	f7fe fc5f 	bl	8002708 <WIZCHIP_WRITE>
 8003e4a:	e061      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003e4c:	f44f 5098 	mov.w	r0, #4864	; 0x1300
 8003e50:	f7fe fc0e 	bl	8002670 <WIZCHIP_READ>
 8003e54:	4603      	mov	r3, r0
 8003e56:	b29b      	uxth	r3, r3
 8003e58:	021b      	lsls	r3, r3, #8
 8003e5a:	b29c      	uxth	r4, r3
 8003e5c:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 8003e60:	f7fe fc06 	bl	8002670 <WIZCHIP_READ>
 8003e64:	4603      	mov	r3, r0
 8003e66:	b29b      	uxth	r3, r3
 8003e68:	4423      	add	r3, r4
 8003e6a:	b29a      	uxth	r2, r3
 8003e6c:	683b      	ldr	r3, [r7, #0]
 8003e6e:	801a      	strh	r2, [r3, #0]
 8003e70:	e04e      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003e72:	4b2a      	ldr	r3, [pc, #168]	; (8003f1c <ctlwizchip+0x1b8>)
 8003e74:	789a      	ldrb	r2, [r3, #2]
 8003e76:	683b      	ldr	r3, [r7, #0]
 8003e78:	701a      	strb	r2, [r3, #0]
 8003e7a:	683b      	ldr	r3, [r7, #0]
 8003e7c:	3301      	adds	r3, #1
 8003e7e:	4a27      	ldr	r2, [pc, #156]	; (8003f1c <ctlwizchip+0x1b8>)
 8003e80:	78d2      	ldrb	r2, [r2, #3]
 8003e82:	701a      	strb	r2, [r3, #0]
 8003e84:	683b      	ldr	r3, [r7, #0]
 8003e86:	3302      	adds	r3, #2
 8003e88:	4a24      	ldr	r2, [pc, #144]	; (8003f1c <ctlwizchip+0x1b8>)
 8003e8a:	7912      	ldrb	r2, [r2, #4]
 8003e8c:	701a      	strb	r2, [r3, #0]
 8003e8e:	683b      	ldr	r3, [r7, #0]
 8003e90:	3303      	adds	r3, #3
 8003e92:	4a22      	ldr	r2, [pc, #136]	; (8003f1c <ctlwizchip+0x1b8>)
 8003e94:	7952      	ldrb	r2, [r2, #5]
 8003e96:	701a      	strb	r2, [r3, #0]
 8003e98:	683b      	ldr	r3, [r7, #0]
 8003e9a:	3304      	adds	r3, #4
 8003e9c:	4a1f      	ldr	r2, [pc, #124]	; (8003f1c <ctlwizchip+0x1b8>)
 8003e9e:	7992      	ldrb	r2, [r2, #6]
 8003ea0:	701a      	strb	r2, [r3, #0]
 8003ea2:	683b      	ldr	r3, [r7, #0]
 8003ea4:	3305      	adds	r3, #5
 8003ea6:	2200      	movs	r2, #0
 8003ea8:	701a      	strb	r2, [r3, #0]
 8003eaa:	e031      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003eac:	f000 f9c0 	bl	8004230 <wizphy_reset>
 8003eb0:	e02e      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003eb2:	6838      	ldr	r0, [r7, #0]
 8003eb4:	f000 f9e3 	bl	800427e <wizphy_setphyconf>
 8003eb8:	e02a      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003eba:	6838      	ldr	r0, [r7, #0]
 8003ebc:	f000 fa22 	bl	8004304 <wizphy_getphyconf>
 8003ec0:	e026      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003ec2:	683b      	ldr	r3, [r7, #0]
 8003ec4:	781b      	ldrb	r3, [r3, #0]
 8003ec6:	4618      	mov	r0, r3
 8003ec8:	f000 fa86 	bl	80043d8 <wizphy_setphypmode>
 8003ecc:	4603      	mov	r3, r0
 8003ece:	e020      	b.n	8003f12 <ctlwizchip+0x1ae>
 8003ed0:	f000 f995 	bl	80041fe <wizphy_getphypmode>
 8003ed4:	4603      	mov	r3, r0
 8003ed6:	75fb      	strb	r3, [r7, #23]
 8003ed8:	7dfb      	ldrb	r3, [r7, #23]
 8003eda:	2bff      	cmp	r3, #255	; 0xff
 8003edc:	d102      	bne.n	8003ee4 <ctlwizchip+0x180>
 8003ede:	f04f 33ff 	mov.w	r3, #4294967295
 8003ee2:	e016      	b.n	8003f12 <ctlwizchip+0x1ae>
 8003ee4:	683b      	ldr	r3, [r7, #0]
 8003ee6:	7dfa      	ldrb	r2, [r7, #23]
 8003ee8:	701a      	strb	r2, [r3, #0]
 8003eea:	e011      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003eec:	f000 f971 	bl	80041d2 <wizphy_getphylink>
 8003ef0:	4603      	mov	r3, r0
 8003ef2:	75fb      	strb	r3, [r7, #23]
 8003ef4:	7dfb      	ldrb	r3, [r7, #23]
 8003ef6:	2bff      	cmp	r3, #255	; 0xff
 8003ef8:	d102      	bne.n	8003f00 <ctlwizchip+0x19c>
 8003efa:	f04f 33ff 	mov.w	r3, #4294967295
 8003efe:	e008      	b.n	8003f12 <ctlwizchip+0x1ae>
 8003f00:	683b      	ldr	r3, [r7, #0]
 8003f02:	7dfa      	ldrb	r2, [r7, #23]
 8003f04:	701a      	strb	r2, [r3, #0]
 8003f06:	e003      	b.n	8003f10 <ctlwizchip+0x1ac>
 8003f08:	f04f 33ff 	mov.w	r3, #4294967295
 8003f0c:	e001      	b.n	8003f12 <ctlwizchip+0x1ae>
 8003f0e:	bf00      	nop
 8003f10:	2300      	movs	r3, #0
 8003f12:	4618      	mov	r0, r3
 8003f14:	371c      	adds	r7, #28
 8003f16:	46bd      	mov	sp, r7
 8003f18:	bd90      	pop	{r4, r7, pc}
 8003f1a:	bf00      	nop
 8003f1c:	20000020 	.word	0x20000020

08003f20 <wizchip_sw_reset>:
 8003f20:	b580      	push	{r7, lr}
 8003f22:	b086      	sub	sp, #24
 8003f24:	af00      	add	r7, sp, #0
 8003f26:	1d3b      	adds	r3, r7, #4
 8003f28:	2206      	movs	r2, #6
 8003f2a:	4619      	mov	r1, r3
 8003f2c:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8003f30:	f7fe fc38 	bl	80027a4 <WIZCHIP_READ_BUF>
 8003f34:	f107 0314 	add.w	r3, r7, #20
 8003f38:	2204      	movs	r2, #4
 8003f3a:	4619      	mov	r1, r3
 8003f3c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8003f40:	f7fe fc30 	bl	80027a4 <WIZCHIP_READ_BUF>
 8003f44:	f107 0310 	add.w	r3, r7, #16
 8003f48:	2204      	movs	r2, #4
 8003f4a:	4619      	mov	r1, r3
 8003f4c:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8003f50:	f7fe fc28 	bl	80027a4 <WIZCHIP_READ_BUF>
 8003f54:	f107 030c 	add.w	r3, r7, #12
 8003f58:	2204      	movs	r2, #4
 8003f5a:	4619      	mov	r1, r3
 8003f5c:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8003f60:	f7fe fc20 	bl	80027a4 <WIZCHIP_READ_BUF>
 8003f64:	2180      	movs	r1, #128	; 0x80
 8003f66:	2000      	movs	r0, #0
 8003f68:	f7fe fbce 	bl	8002708 <WIZCHIP_WRITE>
 8003f6c:	2000      	movs	r0, #0
 8003f6e:	f7fe fb7f 	bl	8002670 <WIZCHIP_READ>
 8003f72:	1d3b      	adds	r3, r7, #4
 8003f74:	2206      	movs	r2, #6
 8003f76:	4619      	mov	r1, r3
 8003f78:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8003f7c:	f7fe fc72 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8003f80:	f107 0314 	add.w	r3, r7, #20
 8003f84:	2204      	movs	r2, #4
 8003f86:	4619      	mov	r1, r3
 8003f88:	f44f 7080 	mov.w	r0, #256	; 0x100
 8003f8c:	f7fe fc6a 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8003f90:	f107 0310 	add.w	r3, r7, #16
 8003f94:	2204      	movs	r2, #4
 8003f96:	4619      	mov	r1, r3
 8003f98:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8003f9c:	f7fe fc62 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8003fa0:	f107 030c 	add.w	r3, r7, #12
 8003fa4:	2204      	movs	r2, #4
 8003fa6:	4619      	mov	r1, r3
 8003fa8:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8003fac:	f7fe fc5a 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8003fb0:	bf00      	nop
 8003fb2:	3718      	adds	r7, #24
 8003fb4:	46bd      	mov	sp, r7
 8003fb6:	bd80      	pop	{r7, pc}

08003fb8 <wizchip_init>:
 8003fb8:	b580      	push	{r7, lr}
 8003fba:	b084      	sub	sp, #16
 8003fbc:	af00      	add	r7, sp, #0
 8003fbe:	6078      	str	r0, [r7, #4]
 8003fc0:	6039      	str	r1, [r7, #0]
 8003fc2:	2300      	movs	r3, #0
 8003fc4:	73bb      	strb	r3, [r7, #14]
 8003fc6:	f7ff ffab 	bl	8003f20 <wizchip_sw_reset>
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	d03b      	beq.n	8004048 <wizchip_init+0x90>
 8003fd0:	2300      	movs	r3, #0
 8003fd2:	73bb      	strb	r3, [r7, #14]
 8003fd4:	2300      	movs	r3, #0
 8003fd6:	73fb      	strb	r3, [r7, #15]
 8003fd8:	e015      	b.n	8004006 <wizchip_init+0x4e>
 8003fda:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003fde:	687a      	ldr	r2, [r7, #4]
 8003fe0:	4413      	add	r3, r2
 8003fe2:	781a      	ldrb	r2, [r3, #0]
 8003fe4:	7bbb      	ldrb	r3, [r7, #14]
 8003fe6:	4413      	add	r3, r2
 8003fe8:	b2db      	uxtb	r3, r3
 8003fea:	73bb      	strb	r3, [r7, #14]
 8003fec:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8003ff0:	2b10      	cmp	r3, #16
 8003ff2:	dd02      	ble.n	8003ffa <wizchip_init+0x42>
 8003ff4:	f04f 33ff 	mov.w	r3, #4294967295
 8003ff8:	e066      	b.n	80040c8 <wizchip_init+0x110>
 8003ffa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003ffe:	b2db      	uxtb	r3, r3
 8004000:	3301      	adds	r3, #1
 8004002:	b2db      	uxtb	r3, r3
 8004004:	73fb      	strb	r3, [r7, #15]
 8004006:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800400a:	2b07      	cmp	r3, #7
 800400c:	dde5      	ble.n	8003fda <wizchip_init+0x22>
 800400e:	2300      	movs	r3, #0
 8004010:	73fb      	strb	r3, [r7, #15]
 8004012:	e015      	b.n	8004040 <wizchip_init+0x88>
 8004014:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004018:	009b      	lsls	r3, r3, #2
 800401a:	3301      	adds	r3, #1
 800401c:	00db      	lsls	r3, r3, #3
 800401e:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 8004022:	4618      	mov	r0, r3
 8004024:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004028:	687a      	ldr	r2, [r7, #4]
 800402a:	4413      	add	r3, r2
 800402c:	781b      	ldrb	r3, [r3, #0]
 800402e:	4619      	mov	r1, r3
 8004030:	f7fe fb6a 	bl	8002708 <WIZCHIP_WRITE>
 8004034:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004038:	b2db      	uxtb	r3, r3
 800403a:	3301      	adds	r3, #1
 800403c:	b2db      	uxtb	r3, r3
 800403e:	73fb      	strb	r3, [r7, #15]
 8004040:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004044:	2b07      	cmp	r3, #7
 8004046:	dde5      	ble.n	8004014 <wizchip_init+0x5c>
 8004048:	683b      	ldr	r3, [r7, #0]
 800404a:	2b00      	cmp	r3, #0
 800404c:	d03b      	beq.n	80040c6 <wizchip_init+0x10e>
 800404e:	2300      	movs	r3, #0
 8004050:	73bb      	strb	r3, [r7, #14]
 8004052:	2300      	movs	r3, #0
 8004054:	73fb      	strb	r3, [r7, #15]
 8004056:	e015      	b.n	8004084 <wizchip_init+0xcc>
 8004058:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800405c:	683a      	ldr	r2, [r7, #0]
 800405e:	4413      	add	r3, r2
 8004060:	781a      	ldrb	r2, [r3, #0]
 8004062:	7bbb      	ldrb	r3, [r7, #14]
 8004064:	4413      	add	r3, r2
 8004066:	b2db      	uxtb	r3, r3
 8004068:	73bb      	strb	r3, [r7, #14]
 800406a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800406e:	2b10      	cmp	r3, #16
 8004070:	dd02      	ble.n	8004078 <wizchip_init+0xc0>
 8004072:	f04f 33ff 	mov.w	r3, #4294967295
 8004076:	e027      	b.n	80040c8 <wizchip_init+0x110>
 8004078:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800407c:	b2db      	uxtb	r3, r3
 800407e:	3301      	adds	r3, #1
 8004080:	b2db      	uxtb	r3, r3
 8004082:	73fb      	strb	r3, [r7, #15]
 8004084:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004088:	2b07      	cmp	r3, #7
 800408a:	dde5      	ble.n	8004058 <wizchip_init+0xa0>
 800408c:	2300      	movs	r3, #0
 800408e:	73fb      	strb	r3, [r7, #15]
 8004090:	e015      	b.n	80040be <wizchip_init+0x106>
 8004092:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004096:	009b      	lsls	r3, r3, #2
 8004098:	3301      	adds	r3, #1
 800409a:	00db      	lsls	r3, r3, #3
 800409c:	f503 53f0 	add.w	r3, r3, #7680	; 0x1e00
 80040a0:	4618      	mov	r0, r3
 80040a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80040a6:	683a      	ldr	r2, [r7, #0]
 80040a8:	4413      	add	r3, r2
 80040aa:	781b      	ldrb	r3, [r3, #0]
 80040ac:	4619      	mov	r1, r3
 80040ae:	f7fe fb2b 	bl	8002708 <WIZCHIP_WRITE>
 80040b2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80040b6:	b2db      	uxtb	r3, r3
 80040b8:	3301      	adds	r3, #1
 80040ba:	b2db      	uxtb	r3, r3
 80040bc:	73fb      	strb	r3, [r7, #15]
 80040be:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80040c2:	2b07      	cmp	r3, #7
 80040c4:	dde5      	ble.n	8004092 <wizchip_init+0xda>
 80040c6:	2300      	movs	r3, #0
 80040c8:	4618      	mov	r0, r3
 80040ca:	3710      	adds	r7, #16
 80040cc:	46bd      	mov	sp, r7
 80040ce:	bd80      	pop	{r7, pc}

080040d0 <wizchip_clrinterrupt>:
 80040d0:	b580      	push	{r7, lr}
 80040d2:	b084      	sub	sp, #16
 80040d4:	af00      	add	r7, sp, #0
 80040d6:	4603      	mov	r3, r0
 80040d8:	80fb      	strh	r3, [r7, #6]
 80040da:	88fb      	ldrh	r3, [r7, #6]
 80040dc:	73fb      	strb	r3, [r7, #15]
 80040de:	88fb      	ldrh	r3, [r7, #6]
 80040e0:	0a1b      	lsrs	r3, r3, #8
 80040e2:	b29b      	uxth	r3, r3
 80040e4:	73bb      	strb	r3, [r7, #14]
 80040e6:	7bfb      	ldrb	r3, [r7, #15]
 80040e8:	f023 030f 	bic.w	r3, r3, #15
 80040ec:	b2db      	uxtb	r3, r3
 80040ee:	4619      	mov	r1, r3
 80040f0:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 80040f4:	f7fe fb08 	bl	8002708 <WIZCHIP_WRITE>
 80040f8:	7bbb      	ldrb	r3, [r7, #14]
 80040fa:	4619      	mov	r1, r3
 80040fc:	f44f 50b8 	mov.w	r0, #5888	; 0x1700
 8004100:	f7fe fb02 	bl	8002708 <WIZCHIP_WRITE>
 8004104:	bf00      	nop
 8004106:	3710      	adds	r7, #16
 8004108:	46bd      	mov	sp, r7
 800410a:	bd80      	pop	{r7, pc}

0800410c <wizchip_getinterrupt>:
 800410c:	b580      	push	{r7, lr}
 800410e:	b082      	sub	sp, #8
 8004110:	af00      	add	r7, sp, #0
 8004112:	2300      	movs	r3, #0
 8004114:	71fb      	strb	r3, [r7, #7]
 8004116:	2300      	movs	r3, #0
 8004118:	71bb      	strb	r3, [r7, #6]
 800411a:	2300      	movs	r3, #0
 800411c:	80bb      	strh	r3, [r7, #4]
 800411e:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 8004122:	f7fe faa5 	bl	8002670 <WIZCHIP_READ>
 8004126:	4603      	mov	r3, r0
 8004128:	f023 030f 	bic.w	r3, r3, #15
 800412c:	71fb      	strb	r3, [r7, #7]
 800412e:	f44f 50b8 	mov.w	r0, #5888	; 0x1700
 8004132:	f7fe fa9d 	bl	8002670 <WIZCHIP_READ>
 8004136:	4603      	mov	r3, r0
 8004138:	71bb      	strb	r3, [r7, #6]
 800413a:	79bb      	ldrb	r3, [r7, #6]
 800413c:	80bb      	strh	r3, [r7, #4]
 800413e:	88bb      	ldrh	r3, [r7, #4]
 8004140:	021b      	lsls	r3, r3, #8
 8004142:	b29a      	uxth	r2, r3
 8004144:	79fb      	ldrb	r3, [r7, #7]
 8004146:	b29b      	uxth	r3, r3
 8004148:	4413      	add	r3, r2
 800414a:	80bb      	strh	r3, [r7, #4]
 800414c:	88bb      	ldrh	r3, [r7, #4]
 800414e:	4618      	mov	r0, r3
 8004150:	3708      	adds	r7, #8
 8004152:	46bd      	mov	sp, r7
 8004154:	bd80      	pop	{r7, pc}

08004156 <wizchip_setinterruptmask>:
 8004156:	b580      	push	{r7, lr}
 8004158:	b084      	sub	sp, #16
 800415a:	af00      	add	r7, sp, #0
 800415c:	4603      	mov	r3, r0
 800415e:	80fb      	strh	r3, [r7, #6]
 8004160:	88fb      	ldrh	r3, [r7, #6]
 8004162:	73fb      	strb	r3, [r7, #15]
 8004164:	88fb      	ldrh	r3, [r7, #6]
 8004166:	0a1b      	lsrs	r3, r3, #8
 8004168:	b29b      	uxth	r3, r3
 800416a:	73bb      	strb	r3, [r7, #14]
 800416c:	7bfb      	ldrb	r3, [r7, #15]
 800416e:	4619      	mov	r1, r3
 8004170:	f44f 50b0 	mov.w	r0, #5632	; 0x1600
 8004174:	f7fe fac8 	bl	8002708 <WIZCHIP_WRITE>
 8004178:	7bbb      	ldrb	r3, [r7, #14]
 800417a:	4619      	mov	r1, r3
 800417c:	f44f 50c0 	mov.w	r0, #6144	; 0x1800
 8004180:	f7fe fac2 	bl	8002708 <WIZCHIP_WRITE>
 8004184:	bf00      	nop
 8004186:	3710      	adds	r7, #16
 8004188:	46bd      	mov	sp, r7
 800418a:	bd80      	pop	{r7, pc}

0800418c <wizchip_getinterruptmask>:
 800418c:	b580      	push	{r7, lr}
 800418e:	b082      	sub	sp, #8
 8004190:	af00      	add	r7, sp, #0
 8004192:	2300      	movs	r3, #0
 8004194:	71fb      	strb	r3, [r7, #7]
 8004196:	2300      	movs	r3, #0
 8004198:	71bb      	strb	r3, [r7, #6]
 800419a:	2300      	movs	r3, #0
 800419c:	80bb      	strh	r3, [r7, #4]
 800419e:	f44f 50b0 	mov.w	r0, #5632	; 0x1600
 80041a2:	f7fe fa65 	bl	8002670 <WIZCHIP_READ>
 80041a6:	4603      	mov	r3, r0
 80041a8:	71fb      	strb	r3, [r7, #7]
 80041aa:	f44f 50c0 	mov.w	r0, #6144	; 0x1800
 80041ae:	f7fe fa5f 	bl	8002670 <WIZCHIP_READ>
 80041b2:	4603      	mov	r3, r0
 80041b4:	71bb      	strb	r3, [r7, #6]
 80041b6:	79bb      	ldrb	r3, [r7, #6]
 80041b8:	80bb      	strh	r3, [r7, #4]
 80041ba:	88bb      	ldrh	r3, [r7, #4]
 80041bc:	021b      	lsls	r3, r3, #8
 80041be:	b29a      	uxth	r2, r3
 80041c0:	79fb      	ldrb	r3, [r7, #7]
 80041c2:	b29b      	uxth	r3, r3
 80041c4:	4413      	add	r3, r2
 80041c6:	80bb      	strh	r3, [r7, #4]
 80041c8:	88bb      	ldrh	r3, [r7, #4]
 80041ca:	4618      	mov	r0, r3
 80041cc:	3708      	adds	r7, #8
 80041ce:	46bd      	mov	sp, r7
 80041d0:	bd80      	pop	{r7, pc}

080041d2 <wizphy_getphylink>:
 80041d2:	b580      	push	{r7, lr}
 80041d4:	b082      	sub	sp, #8
 80041d6:	af00      	add	r7, sp, #0
 80041d8:	2300      	movs	r3, #0
 80041da:	71fb      	strb	r3, [r7, #7]
 80041dc:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 80041e0:	f7fe fa46 	bl	8002670 <WIZCHIP_READ>
 80041e4:	4603      	mov	r3, r0
 80041e6:	f003 0301 	and.w	r3, r3, #1
 80041ea:	2b00      	cmp	r3, #0
 80041ec:	d001      	beq.n	80041f2 <wizphy_getphylink+0x20>
 80041ee:	2301      	movs	r3, #1
 80041f0:	71fb      	strb	r3, [r7, #7]
 80041f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041f6:	4618      	mov	r0, r3
 80041f8:	3708      	adds	r7, #8
 80041fa:	46bd      	mov	sp, r7
 80041fc:	bd80      	pop	{r7, pc}

080041fe <wizphy_getphypmode>:
 80041fe:	b580      	push	{r7, lr}
 8004200:	b082      	sub	sp, #8
 8004202:	af00      	add	r7, sp, #0
 8004204:	2300      	movs	r3, #0
 8004206:	71fb      	strb	r3, [r7, #7]
 8004208:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 800420c:	f7fe fa30 	bl	8002670 <WIZCHIP_READ>
 8004210:	4603      	mov	r3, r0
 8004212:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004216:	2b30      	cmp	r3, #48	; 0x30
 8004218:	d102      	bne.n	8004220 <wizphy_getphypmode+0x22>
 800421a:	2301      	movs	r3, #1
 800421c:	71fb      	strb	r3, [r7, #7]
 800421e:	e001      	b.n	8004224 <wizphy_getphypmode+0x26>
 8004220:	2300      	movs	r3, #0
 8004222:	71fb      	strb	r3, [r7, #7]
 8004224:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004228:	4618      	mov	r0, r3
 800422a:	3708      	adds	r7, #8
 800422c:	46bd      	mov	sp, r7
 800422e:	bd80      	pop	{r7, pc}

08004230 <wizphy_reset>:
 8004230:	b580      	push	{r7, lr}
 8004232:	b082      	sub	sp, #8
 8004234:	af00      	add	r7, sp, #0
 8004236:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 800423a:	f7fe fa19 	bl	8002670 <WIZCHIP_READ>
 800423e:	4603      	mov	r3, r0
 8004240:	71fb      	strb	r3, [r7, #7]
 8004242:	79fb      	ldrb	r3, [r7, #7]
 8004244:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004248:	71fb      	strb	r3, [r7, #7]
 800424a:	79fb      	ldrb	r3, [r7, #7]
 800424c:	4619      	mov	r1, r3
 800424e:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8004252:	f7fe fa59 	bl	8002708 <WIZCHIP_WRITE>
 8004256:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 800425a:	f7fe fa09 	bl	8002670 <WIZCHIP_READ>
 800425e:	4603      	mov	r3, r0
 8004260:	71fb      	strb	r3, [r7, #7]
 8004262:	79fb      	ldrb	r3, [r7, #7]
 8004264:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8004268:	71fb      	strb	r3, [r7, #7]
 800426a:	79fb      	ldrb	r3, [r7, #7]
 800426c:	4619      	mov	r1, r3
 800426e:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8004272:	f7fe fa49 	bl	8002708 <WIZCHIP_WRITE>
 8004276:	bf00      	nop
 8004278:	3708      	adds	r7, #8
 800427a:	46bd      	mov	sp, r7
 800427c:	bd80      	pop	{r7, pc}

0800427e <wizphy_setphyconf>:
 800427e:	b580      	push	{r7, lr}
 8004280:	b084      	sub	sp, #16
 8004282:	af00      	add	r7, sp, #0
 8004284:	6078      	str	r0, [r7, #4]
 8004286:	2300      	movs	r3, #0
 8004288:	73fb      	strb	r3, [r7, #15]
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	781b      	ldrb	r3, [r3, #0]
 800428e:	2b01      	cmp	r3, #1
 8004290:	d104      	bne.n	800429c <wizphy_setphyconf+0x1e>
 8004292:	7bfb      	ldrb	r3, [r7, #15]
 8004294:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004298:	73fb      	strb	r3, [r7, #15]
 800429a:	e003      	b.n	80042a4 <wizphy_setphyconf+0x26>
 800429c:	7bfb      	ldrb	r3, [r7, #15]
 800429e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80042a2:	73fb      	strb	r3, [r7, #15]
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	785b      	ldrb	r3, [r3, #1]
 80042a8:	2b01      	cmp	r3, #1
 80042aa:	d104      	bne.n	80042b6 <wizphy_setphyconf+0x38>
 80042ac:	7bfb      	ldrb	r3, [r7, #15]
 80042ae:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 80042b2:	73fb      	strb	r3, [r7, #15]
 80042b4:	e019      	b.n	80042ea <wizphy_setphyconf+0x6c>
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	78db      	ldrb	r3, [r3, #3]
 80042ba:	2b01      	cmp	r3, #1
 80042bc:	d10d      	bne.n	80042da <wizphy_setphyconf+0x5c>
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	789b      	ldrb	r3, [r3, #2]
 80042c2:	2b01      	cmp	r3, #1
 80042c4:	d104      	bne.n	80042d0 <wizphy_setphyconf+0x52>
 80042c6:	7bfb      	ldrb	r3, [r7, #15]
 80042c8:	f043 0318 	orr.w	r3, r3, #24
 80042cc:	73fb      	strb	r3, [r7, #15]
 80042ce:	e00c      	b.n	80042ea <wizphy_setphyconf+0x6c>
 80042d0:	7bfb      	ldrb	r3, [r7, #15]
 80042d2:	f043 0308 	orr.w	r3, r3, #8
 80042d6:	73fb      	strb	r3, [r7, #15]
 80042d8:	e007      	b.n	80042ea <wizphy_setphyconf+0x6c>
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	789b      	ldrb	r3, [r3, #2]
 80042de:	2b01      	cmp	r3, #1
 80042e0:	d103      	bne.n	80042ea <wizphy_setphyconf+0x6c>
 80042e2:	7bfb      	ldrb	r3, [r7, #15]
 80042e4:	f043 0310 	orr.w	r3, r3, #16
 80042e8:	73fb      	strb	r3, [r7, #15]
 80042ea:	7bfb      	ldrb	r3, [r7, #15]
 80042ec:	4619      	mov	r1, r3
 80042ee:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 80042f2:	f7fe fa09 	bl	8002708 <WIZCHIP_WRITE>
 80042f6:	f7ff ff9b 	bl	8004230 <wizphy_reset>
 80042fa:	bf00      	nop
 80042fc:	3710      	adds	r7, #16
 80042fe:	46bd      	mov	sp, r7
 8004300:	bd80      	pop	{r7, pc}
	...

08004304 <wizphy_getphyconf>:
 8004304:	b580      	push	{r7, lr}
 8004306:	b084      	sub	sp, #16
 8004308:	af00      	add	r7, sp, #0
 800430a:	6078      	str	r0, [r7, #4]
 800430c:	2300      	movs	r3, #0
 800430e:	73fb      	strb	r3, [r7, #15]
 8004310:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8004314:	f7fe f9ac 	bl	8002670 <WIZCHIP_READ>
 8004318:	4603      	mov	r3, r0
 800431a:	73fb      	strb	r3, [r7, #15]
 800431c:	7bfb      	ldrb	r3, [r7, #15]
 800431e:	119b      	asrs	r3, r3, #6
 8004320:	b2db      	uxtb	r3, r3
 8004322:	f003 0301 	and.w	r3, r3, #1
 8004326:	b2da      	uxtb	r2, r3
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	701a      	strb	r2, [r3, #0]
 800432c:	7bfb      	ldrb	r3, [r7, #15]
 800432e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004332:	2b20      	cmp	r3, #32
 8004334:	d001      	beq.n	800433a <wizphy_getphyconf+0x36>
 8004336:	2b38      	cmp	r3, #56	; 0x38
 8004338:	d103      	bne.n	8004342 <wizphy_getphyconf+0x3e>
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	2201      	movs	r2, #1
 800433e:	705a      	strb	r2, [r3, #1]
 8004340:	e003      	b.n	800434a <wizphy_getphyconf+0x46>
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	2200      	movs	r2, #0
 8004346:	705a      	strb	r2, [r3, #1]
 8004348:	bf00      	nop
 800434a:	7bfb      	ldrb	r3, [r7, #15]
 800434c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004350:	3b10      	subs	r3, #16
 8004352:	2b10      	cmp	r3, #16
 8004354:	bf8c      	ite	hi
 8004356:	2201      	movhi	r2, #1
 8004358:	2200      	movls	r2, #0
 800435a:	b2d2      	uxtb	r2, r2
 800435c:	2a00      	cmp	r2, #0
 800435e:	d10f      	bne.n	8004380 <wizphy_getphyconf+0x7c>
 8004360:	4a1b      	ldr	r2, [pc, #108]	; (80043d0 <wizphy_getphyconf+0xcc>)
 8004362:	fa22 f303 	lsr.w	r3, r2, r3
 8004366:	f003 0301 	and.w	r3, r3, #1
 800436a:	2b00      	cmp	r3, #0
 800436c:	bf14      	ite	ne
 800436e:	2301      	movne	r3, #1
 8004370:	2300      	moveq	r3, #0
 8004372:	b2db      	uxtb	r3, r3
 8004374:	2b00      	cmp	r3, #0
 8004376:	d003      	beq.n	8004380 <wizphy_getphyconf+0x7c>
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	2201      	movs	r2, #1
 800437c:	709a      	strb	r2, [r3, #2]
 800437e:	e003      	b.n	8004388 <wizphy_getphyconf+0x84>
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	2200      	movs	r2, #0
 8004384:	709a      	strb	r2, [r3, #2]
 8004386:	bf00      	nop
 8004388:	7bfb      	ldrb	r3, [r7, #15]
 800438a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800438e:	3b08      	subs	r3, #8
 8004390:	2b18      	cmp	r3, #24
 8004392:	bf8c      	ite	hi
 8004394:	2201      	movhi	r2, #1
 8004396:	2200      	movls	r2, #0
 8004398:	b2d2      	uxtb	r2, r2
 800439a:	2a00      	cmp	r2, #0
 800439c:	d10f      	bne.n	80043be <wizphy_getphyconf+0xba>
 800439e:	4a0d      	ldr	r2, [pc, #52]	; (80043d4 <wizphy_getphyconf+0xd0>)
 80043a0:	fa22 f303 	lsr.w	r3, r2, r3
 80043a4:	f003 0301 	and.w	r3, r3, #1
 80043a8:	2b00      	cmp	r3, #0
 80043aa:	bf14      	ite	ne
 80043ac:	2301      	movne	r3, #1
 80043ae:	2300      	moveq	r3, #0
 80043b0:	b2db      	uxtb	r3, r3
 80043b2:	2b00      	cmp	r3, #0
 80043b4:	d003      	beq.n	80043be <wizphy_getphyconf+0xba>
 80043b6:	687b      	ldr	r3, [r7, #4]
 80043b8:	2201      	movs	r2, #1
 80043ba:	70da      	strb	r2, [r3, #3]
 80043bc:	e003      	b.n	80043c6 <wizphy_getphyconf+0xc2>
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	2200      	movs	r2, #0
 80043c2:	70da      	strb	r2, [r3, #3]
 80043c4:	bf00      	nop
 80043c6:	bf00      	nop
 80043c8:	3710      	adds	r7, #16
 80043ca:	46bd      	mov	sp, r7
 80043cc:	bd80      	pop	{r7, pc}
 80043ce:	bf00      	nop
 80043d0:	00010101 	.word	0x00010101
 80043d4:	01010001 	.word	0x01010001

080043d8 <wizphy_setphypmode>:
 80043d8:	b580      	push	{r7, lr}
 80043da:	b084      	sub	sp, #16
 80043dc:	af00      	add	r7, sp, #0
 80043de:	4603      	mov	r3, r0
 80043e0:	71fb      	strb	r3, [r7, #7]
 80043e2:	2300      	movs	r3, #0
 80043e4:	73fb      	strb	r3, [r7, #15]
 80043e6:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 80043ea:	f7fe f941 	bl	8002670 <WIZCHIP_READ>
 80043ee:	4603      	mov	r3, r0
 80043f0:	73fb      	strb	r3, [r7, #15]
 80043f2:	7bfb      	ldrb	r3, [r7, #15]
 80043f4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d102      	bne.n	8004402 <wizphy_setphypmode+0x2a>
 80043fc:	f04f 33ff 	mov.w	r3, #4294967295
 8004400:	e030      	b.n	8004464 <wizphy_setphypmode+0x8c>
 8004402:	7bfb      	ldrb	r3, [r7, #15]
 8004404:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8004408:	73fb      	strb	r3, [r7, #15]
 800440a:	79fb      	ldrb	r3, [r7, #7]
 800440c:	2b01      	cmp	r3, #1
 800440e:	d104      	bne.n	800441a <wizphy_setphypmode+0x42>
 8004410:	7bfb      	ldrb	r3, [r7, #15]
 8004412:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8004416:	73fb      	strb	r3, [r7, #15]
 8004418:	e003      	b.n	8004422 <wizphy_setphypmode+0x4a>
 800441a:	7bfb      	ldrb	r3, [r7, #15]
 800441c:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8004420:	73fb      	strb	r3, [r7, #15]
 8004422:	7bfb      	ldrb	r3, [r7, #15]
 8004424:	4619      	mov	r1, r3
 8004426:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 800442a:	f7fe f96d 	bl	8002708 <WIZCHIP_WRITE>
 800442e:	f7ff feff 	bl	8004230 <wizphy_reset>
 8004432:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8004436:	f7fe f91b 	bl	8002670 <WIZCHIP_READ>
 800443a:	4603      	mov	r3, r0
 800443c:	73fb      	strb	r3, [r7, #15]
 800443e:	79fb      	ldrb	r3, [r7, #7]
 8004440:	2b01      	cmp	r3, #1
 8004442:	d106      	bne.n	8004452 <wizphy_setphypmode+0x7a>
 8004444:	7bfb      	ldrb	r3, [r7, #15]
 8004446:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800444a:	2b00      	cmp	r3, #0
 800444c:	d008      	beq.n	8004460 <wizphy_setphypmode+0x88>
 800444e:	2300      	movs	r3, #0
 8004450:	e008      	b.n	8004464 <wizphy_setphypmode+0x8c>
 8004452:	7bfb      	ldrb	r3, [r7, #15]
 8004454:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004458:	2b00      	cmp	r3, #0
 800445a:	d001      	beq.n	8004460 <wizphy_setphypmode+0x88>
 800445c:	2300      	movs	r3, #0
 800445e:	e001      	b.n	8004464 <wizphy_setphypmode+0x8c>
 8004460:	f04f 33ff 	mov.w	r3, #4294967295
 8004464:	4618      	mov	r0, r3
 8004466:	3710      	adds	r7, #16
 8004468:	46bd      	mov	sp, r7
 800446a:	bd80      	pop	{r7, pc}

0800446c <wizchip_setnetinfo>:
 800446c:	b580      	push	{r7, lr}
 800446e:	b082      	sub	sp, #8
 8004470:	af00      	add	r7, sp, #0
 8004472:	6078      	str	r0, [r7, #4]
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	2206      	movs	r2, #6
 8004478:	4619      	mov	r1, r3
 800447a:	f44f 6010 	mov.w	r0, #2304	; 0x900
 800447e:	f7fe f9f1 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	330e      	adds	r3, #14
 8004486:	2204      	movs	r2, #4
 8004488:	4619      	mov	r1, r3
 800448a:	f44f 7080 	mov.w	r0, #256	; 0x100
 800448e:	f7fe f9e9 	bl	8002864 <WIZCHIP_WRITE_BUF>
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	330a      	adds	r3, #10
 8004496:	2204      	movs	r2, #4
 8004498:	4619      	mov	r1, r3
 800449a:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800449e:	f7fe f9e1 	bl	8002864 <WIZCHIP_WRITE_BUF>
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	3306      	adds	r3, #6
 80044a6:	2204      	movs	r2, #4
 80044a8:	4619      	mov	r1, r3
 80044aa:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 80044ae:	f7fe f9d9 	bl	8002864 <WIZCHIP_WRITE_BUF>
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	7c9a      	ldrb	r2, [r3, #18]
 80044b6:	4b0b      	ldr	r3, [pc, #44]	; (80044e4 <wizchip_setnetinfo+0x78>)
 80044b8:	701a      	strb	r2, [r3, #0]
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	7cda      	ldrb	r2, [r3, #19]
 80044be:	4b09      	ldr	r3, [pc, #36]	; (80044e4 <wizchip_setnetinfo+0x78>)
 80044c0:	705a      	strb	r2, [r3, #1]
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	7d1a      	ldrb	r2, [r3, #20]
 80044c6:	4b07      	ldr	r3, [pc, #28]	; (80044e4 <wizchip_setnetinfo+0x78>)
 80044c8:	709a      	strb	r2, [r3, #2]
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	7d5a      	ldrb	r2, [r3, #21]
 80044ce:	4b05      	ldr	r3, [pc, #20]	; (80044e4 <wizchip_setnetinfo+0x78>)
 80044d0:	70da      	strb	r2, [r3, #3]
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	7d9a      	ldrb	r2, [r3, #22]
 80044d6:	4b04      	ldr	r3, [pc, #16]	; (80044e8 <wizchip_setnetinfo+0x7c>)
 80044d8:	701a      	strb	r2, [r3, #0]
 80044da:	bf00      	nop
 80044dc:	3708      	adds	r7, #8
 80044de:	46bd      	mov	sp, r7
 80044e0:	bd80      	pop	{r7, pc}
 80044e2:	bf00      	nop
 80044e4:	200002a0 	.word	0x200002a0
 80044e8:	200002a4 	.word	0x200002a4

080044ec <cJSON_GetErrorPtr>:
 80044ec:	b480      	push	{r7}
 80044ee:	af00      	add	r7, sp, #0
 80044f0:	4b04      	ldr	r3, [pc, #16]	; (8004504 <cJSON_GetErrorPtr+0x18>)
 80044f2:	681a      	ldr	r2, [r3, #0]
 80044f4:	4b03      	ldr	r3, [pc, #12]	; (8004504 <cJSON_GetErrorPtr+0x18>)
 80044f6:	685b      	ldr	r3, [r3, #4]
 80044f8:	4413      	add	r3, r2
 80044fa:	4618      	mov	r0, r3
 80044fc:	46bd      	mov	sp, r7
 80044fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004502:	4770      	bx	lr
 8004504:	200002a8 	.word	0x200002a8

08004508 <case_insensitive_strcmp>:
 8004508:	b480      	push	{r7}
 800450a:	b085      	sub	sp, #20
 800450c:	af00      	add	r7, sp, #0
 800450e:	6078      	str	r0, [r7, #4]
 8004510:	6039      	str	r1, [r7, #0]
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	2b00      	cmp	r3, #0
 8004516:	d002      	beq.n	800451e <case_insensitive_strcmp+0x16>
 8004518:	683b      	ldr	r3, [r7, #0]
 800451a:	2b00      	cmp	r3, #0
 800451c:	d101      	bne.n	8004522 <case_insensitive_strcmp+0x1a>
 800451e:	2301      	movs	r3, #1
 8004520:	e056      	b.n	80045d0 <case_insensitive_strcmp+0xc8>
 8004522:	687a      	ldr	r2, [r7, #4]
 8004524:	683b      	ldr	r3, [r7, #0]
 8004526:	429a      	cmp	r2, r3
 8004528:	d10d      	bne.n	8004546 <case_insensitive_strcmp+0x3e>
 800452a:	2300      	movs	r3, #0
 800452c:	e050      	b.n	80045d0 <case_insensitive_strcmp+0xc8>
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	781b      	ldrb	r3, [r3, #0]
 8004532:	2b00      	cmp	r3, #0
 8004534:	d101      	bne.n	800453a <case_insensitive_strcmp+0x32>
 8004536:	2300      	movs	r3, #0
 8004538:	e04a      	b.n	80045d0 <case_insensitive_strcmp+0xc8>
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	3301      	adds	r3, #1
 800453e:	607b      	str	r3, [r7, #4]
 8004540:	683b      	ldr	r3, [r7, #0]
 8004542:	3301      	adds	r3, #1
 8004544:	603b      	str	r3, [r7, #0]
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	781b      	ldrb	r3, [r3, #0]
 800454a:	73fb      	strb	r3, [r7, #15]
 800454c:	7bfb      	ldrb	r3, [r7, #15]
 800454e:	3301      	adds	r3, #1
 8004550:	4a22      	ldr	r2, [pc, #136]	; (80045dc <case_insensitive_strcmp+0xd4>)
 8004552:	4413      	add	r3, r2
 8004554:	781b      	ldrb	r3, [r3, #0]
 8004556:	f003 0303 	and.w	r3, r3, #3
 800455a:	2b01      	cmp	r3, #1
 800455c:	d103      	bne.n	8004566 <case_insensitive_strcmp+0x5e>
 800455e:	7bfb      	ldrb	r3, [r7, #15]
 8004560:	f103 0220 	add.w	r2, r3, #32
 8004564:	e000      	b.n	8004568 <case_insensitive_strcmp+0x60>
 8004566:	7bfa      	ldrb	r2, [r7, #15]
 8004568:	683b      	ldr	r3, [r7, #0]
 800456a:	781b      	ldrb	r3, [r3, #0]
 800456c:	73bb      	strb	r3, [r7, #14]
 800456e:	7bbb      	ldrb	r3, [r7, #14]
 8004570:	3301      	adds	r3, #1
 8004572:	491a      	ldr	r1, [pc, #104]	; (80045dc <case_insensitive_strcmp+0xd4>)
 8004574:	440b      	add	r3, r1
 8004576:	781b      	ldrb	r3, [r3, #0]
 8004578:	f003 0303 	and.w	r3, r3, #3
 800457c:	2b01      	cmp	r3, #1
 800457e:	d102      	bne.n	8004586 <case_insensitive_strcmp+0x7e>
 8004580:	7bbb      	ldrb	r3, [r7, #14]
 8004582:	3320      	adds	r3, #32
 8004584:	e000      	b.n	8004588 <case_insensitive_strcmp+0x80>
 8004586:	7bbb      	ldrb	r3, [r7, #14]
 8004588:	429a      	cmp	r2, r3
 800458a:	d0d0      	beq.n	800452e <case_insensitive_strcmp+0x26>
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	781b      	ldrb	r3, [r3, #0]
 8004590:	737b      	strb	r3, [r7, #13]
 8004592:	7b7b      	ldrb	r3, [r7, #13]
 8004594:	3301      	adds	r3, #1
 8004596:	4a11      	ldr	r2, [pc, #68]	; (80045dc <case_insensitive_strcmp+0xd4>)
 8004598:	4413      	add	r3, r2
 800459a:	781b      	ldrb	r3, [r3, #0]
 800459c:	f003 0303 	and.w	r3, r3, #3
 80045a0:	2b01      	cmp	r3, #1
 80045a2:	d103      	bne.n	80045ac <case_insensitive_strcmp+0xa4>
 80045a4:	7b7b      	ldrb	r3, [r7, #13]
 80045a6:	f103 0220 	add.w	r2, r3, #32
 80045aa:	e000      	b.n	80045ae <case_insensitive_strcmp+0xa6>
 80045ac:	7b7a      	ldrb	r2, [r7, #13]
 80045ae:	683b      	ldr	r3, [r7, #0]
 80045b0:	781b      	ldrb	r3, [r3, #0]
 80045b2:	733b      	strb	r3, [r7, #12]
 80045b4:	7b3b      	ldrb	r3, [r7, #12]
 80045b6:	3301      	adds	r3, #1
 80045b8:	4908      	ldr	r1, [pc, #32]	; (80045dc <case_insensitive_strcmp+0xd4>)
 80045ba:	440b      	add	r3, r1
 80045bc:	781b      	ldrb	r3, [r3, #0]
 80045be:	f003 0303 	and.w	r3, r3, #3
 80045c2:	2b01      	cmp	r3, #1
 80045c4:	d102      	bne.n	80045cc <case_insensitive_strcmp+0xc4>
 80045c6:	7b3b      	ldrb	r3, [r7, #12]
 80045c8:	3320      	adds	r3, #32
 80045ca:	e000      	b.n	80045ce <case_insensitive_strcmp+0xc6>
 80045cc:	7b3b      	ldrb	r3, [r7, #12]
 80045ce:	1ad3      	subs	r3, r2, r3
 80045d0:	4618      	mov	r0, r3
 80045d2:	3714      	adds	r7, #20
 80045d4:	46bd      	mov	sp, r7
 80045d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045da:	4770      	bx	lr
 80045dc:	08016938 	.word	0x08016938

080045e0 <cJSON_strdup>:
 80045e0:	b580      	push	{r7, lr}
 80045e2:	b084      	sub	sp, #16
 80045e4:	af00      	add	r7, sp, #0
 80045e6:	6078      	str	r0, [r7, #4]
 80045e8:	6039      	str	r1, [r7, #0]
 80045ea:	2300      	movs	r3, #0
 80045ec:	60fb      	str	r3, [r7, #12]
 80045ee:	2300      	movs	r3, #0
 80045f0:	60bb      	str	r3, [r7, #8]
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	d101      	bne.n	80045fc <cJSON_strdup+0x1c>
 80045f8:	2300      	movs	r3, #0
 80045fa:	e015      	b.n	8004628 <cJSON_strdup+0x48>
 80045fc:	6878      	ldr	r0, [r7, #4]
 80045fe:	f7fb fe47 	bl	8000290 <strlen>
 8004602:	4603      	mov	r3, r0
 8004604:	3301      	adds	r3, #1
 8004606:	60fb      	str	r3, [r7, #12]
 8004608:	683b      	ldr	r3, [r7, #0]
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	68f8      	ldr	r0, [r7, #12]
 800460e:	4798      	blx	r3
 8004610:	60b8      	str	r0, [r7, #8]
 8004612:	68bb      	ldr	r3, [r7, #8]
 8004614:	2b00      	cmp	r3, #0
 8004616:	d101      	bne.n	800461c <cJSON_strdup+0x3c>
 8004618:	2300      	movs	r3, #0
 800461a:	e005      	b.n	8004628 <cJSON_strdup+0x48>
 800461c:	68fa      	ldr	r2, [r7, #12]
 800461e:	6879      	ldr	r1, [r7, #4]
 8004620:	68b8      	ldr	r0, [r7, #8]
 8004622:	f00e fd16 	bl	8013052 <memcpy>
 8004626:	68bb      	ldr	r3, [r7, #8]
 8004628:	4618      	mov	r0, r3
 800462a:	3710      	adds	r7, #16
 800462c:	46bd      	mov	sp, r7
 800462e:	bd80      	pop	{r7, pc}

08004630 <cJSON_New_Item>:
 8004630:	b580      	push	{r7, lr}
 8004632:	b084      	sub	sp, #16
 8004634:	af00      	add	r7, sp, #0
 8004636:	6078      	str	r0, [r7, #4]
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	681b      	ldr	r3, [r3, #0]
 800463c:	2028      	movs	r0, #40	; 0x28
 800463e:	4798      	blx	r3
 8004640:	60f8      	str	r0, [r7, #12]
 8004642:	68fb      	ldr	r3, [r7, #12]
 8004644:	2b00      	cmp	r3, #0
 8004646:	d004      	beq.n	8004652 <cJSON_New_Item+0x22>
 8004648:	2228      	movs	r2, #40	; 0x28
 800464a:	2100      	movs	r1, #0
 800464c:	68f8      	ldr	r0, [r7, #12]
 800464e:	f00e fbf5 	bl	8012e3c <memset>
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	4618      	mov	r0, r3
 8004656:	3710      	adds	r7, #16
 8004658:	46bd      	mov	sp, r7
 800465a:	bd80      	pop	{r7, pc}

0800465c <cJSON_Delete>:
 800465c:	b580      	push	{r7, lr}
 800465e:	b084      	sub	sp, #16
 8004660:	af00      	add	r7, sp, #0
 8004662:	6078      	str	r0, [r7, #4]
 8004664:	2300      	movs	r3, #0
 8004666:	60fb      	str	r3, [r7, #12]
 8004668:	e037      	b.n	80046da <cJSON_Delete+0x7e>
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	60fb      	str	r3, [r7, #12]
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	68db      	ldr	r3, [r3, #12]
 8004674:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004678:	2b00      	cmp	r3, #0
 800467a:	d108      	bne.n	800468e <cJSON_Delete+0x32>
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	689b      	ldr	r3, [r3, #8]
 8004680:	2b00      	cmp	r3, #0
 8004682:	d004      	beq.n	800468e <cJSON_Delete+0x32>
 8004684:	687b      	ldr	r3, [r7, #4]
 8004686:	689b      	ldr	r3, [r3, #8]
 8004688:	4618      	mov	r0, r3
 800468a:	f7ff ffe7 	bl	800465c <cJSON_Delete>
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	68db      	ldr	r3, [r3, #12]
 8004692:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004696:	2b00      	cmp	r3, #0
 8004698:	d109      	bne.n	80046ae <cJSON_Delete+0x52>
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	691b      	ldr	r3, [r3, #16]
 800469e:	2b00      	cmp	r3, #0
 80046a0:	d005      	beq.n	80046ae <cJSON_Delete+0x52>
 80046a2:	4b12      	ldr	r3, [pc, #72]	; (80046ec <cJSON_Delete+0x90>)
 80046a4:	685b      	ldr	r3, [r3, #4]
 80046a6:	687a      	ldr	r2, [r7, #4]
 80046a8:	6912      	ldr	r2, [r2, #16]
 80046aa:	4610      	mov	r0, r2
 80046ac:	4798      	blx	r3
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	68db      	ldr	r3, [r3, #12]
 80046b2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	d109      	bne.n	80046ce <cJSON_Delete+0x72>
 80046ba:	687b      	ldr	r3, [r7, #4]
 80046bc:	6a1b      	ldr	r3, [r3, #32]
 80046be:	2b00      	cmp	r3, #0
 80046c0:	d005      	beq.n	80046ce <cJSON_Delete+0x72>
 80046c2:	4b0a      	ldr	r3, [pc, #40]	; (80046ec <cJSON_Delete+0x90>)
 80046c4:	685b      	ldr	r3, [r3, #4]
 80046c6:	687a      	ldr	r2, [r7, #4]
 80046c8:	6a12      	ldr	r2, [r2, #32]
 80046ca:	4610      	mov	r0, r2
 80046cc:	4798      	blx	r3
 80046ce:	4b07      	ldr	r3, [pc, #28]	; (80046ec <cJSON_Delete+0x90>)
 80046d0:	685b      	ldr	r3, [r3, #4]
 80046d2:	6878      	ldr	r0, [r7, #4]
 80046d4:	4798      	blx	r3
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	607b      	str	r3, [r7, #4]
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	2b00      	cmp	r3, #0
 80046de:	d1c4      	bne.n	800466a <cJSON_Delete+0xe>
 80046e0:	bf00      	nop
 80046e2:	bf00      	nop
 80046e4:	3710      	adds	r7, #16
 80046e6:	46bd      	mov	sp, r7
 80046e8:	bd80      	pop	{r7, pc}
 80046ea:	bf00      	nop
 80046ec:	20000048 	.word	0x20000048

080046f0 <get_decimal_point>:
 80046f0:	b480      	push	{r7}
 80046f2:	af00      	add	r7, sp, #0
 80046f4:	232e      	movs	r3, #46	; 0x2e
 80046f6:	4618      	mov	r0, r3
 80046f8:	46bd      	mov	sp, r7
 80046fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046fe:	4770      	bx	lr

08004700 <parse_number>:
 8004700:	b580      	push	{r7, lr}
 8004702:	b098      	sub	sp, #96	; 0x60
 8004704:	af00      	add	r7, sp, #0
 8004706:	6078      	str	r0, [r7, #4]
 8004708:	6039      	str	r1, [r7, #0]
 800470a:	f04f 0200 	mov.w	r2, #0
 800470e:	f04f 0300 	mov.w	r3, #0
 8004712:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 8004716:	2300      	movs	r3, #0
 8004718:	64bb      	str	r3, [r7, #72]	; 0x48
 800471a:	f7ff ffe9 	bl	80046f0 <get_decimal_point>
 800471e:	4603      	mov	r3, r0
 8004720:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004724:	2300      	movs	r3, #0
 8004726:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004728:	683b      	ldr	r3, [r7, #0]
 800472a:	2b00      	cmp	r3, #0
 800472c:	d003      	beq.n	8004736 <parse_number+0x36>
 800472e:	683b      	ldr	r3, [r7, #0]
 8004730:	681b      	ldr	r3, [r3, #0]
 8004732:	2b00      	cmp	r3, #0
 8004734:	d101      	bne.n	800473a <parse_number+0x3a>
 8004736:	2300      	movs	r3, #0
 8004738:	e0a0      	b.n	800487c <parse_number+0x17c>
 800473a:	2300      	movs	r3, #0
 800473c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800473e:	e03d      	b.n	80047bc <parse_number+0xbc>
 8004740:	683b      	ldr	r3, [r7, #0]
 8004742:	681a      	ldr	r2, [r3, #0]
 8004744:	683b      	ldr	r3, [r7, #0]
 8004746:	6899      	ldr	r1, [r3, #8]
 8004748:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800474a:	440b      	add	r3, r1
 800474c:	4413      	add	r3, r2
 800474e:	781b      	ldrb	r3, [r3, #0]
 8004750:	2b45      	cmp	r3, #69	; 0x45
 8004752:	dc17      	bgt.n	8004784 <parse_number+0x84>
 8004754:	2b2b      	cmp	r3, #43	; 0x2b
 8004756:	db40      	blt.n	80047da <parse_number+0xda>
 8004758:	3b2b      	subs	r3, #43	; 0x2b
 800475a:	2201      	movs	r2, #1
 800475c:	409a      	lsls	r2, r3
 800475e:	4b4c      	ldr	r3, [pc, #304]	; (8004890 <parse_number+0x190>)
 8004760:	4013      	ands	r3, r2
 8004762:	2b00      	cmp	r3, #0
 8004764:	bf14      	ite	ne
 8004766:	2301      	movne	r3, #1
 8004768:	2300      	moveq	r3, #0
 800476a:	b2db      	uxtb	r3, r3
 800476c:	2b00      	cmp	r3, #0
 800476e:	d10b      	bne.n	8004788 <parse_number+0x88>
 8004770:	f002 0308 	and.w	r3, r2, #8
 8004774:	2b00      	cmp	r3, #0
 8004776:	bf14      	ite	ne
 8004778:	2301      	movne	r3, #1
 800477a:	2300      	moveq	r3, #0
 800477c:	b2db      	uxtb	r3, r3
 800477e:	2b00      	cmp	r3, #0
 8004780:	d111      	bne.n	80047a6 <parse_number+0xa6>
 8004782:	e02a      	b.n	80047da <parse_number+0xda>
 8004784:	2b65      	cmp	r3, #101	; 0x65
 8004786:	d128      	bne.n	80047da <parse_number+0xda>
 8004788:	683b      	ldr	r3, [r7, #0]
 800478a:	681a      	ldr	r2, [r3, #0]
 800478c:	683b      	ldr	r3, [r7, #0]
 800478e:	6899      	ldr	r1, [r3, #8]
 8004790:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8004792:	440b      	add	r3, r1
 8004794:	4413      	add	r3, r2
 8004796:	7819      	ldrb	r1, [r3, #0]
 8004798:	f107 0208 	add.w	r2, r7, #8
 800479c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800479e:	4413      	add	r3, r2
 80047a0:	460a      	mov	r2, r1
 80047a2:	701a      	strb	r2, [r3, #0]
 80047a4:	e007      	b.n	80047b6 <parse_number+0xb6>
 80047a6:	f107 0208 	add.w	r2, r7, #8
 80047aa:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80047ac:	4413      	add	r3, r2
 80047ae:	f897 204f 	ldrb.w	r2, [r7, #79]	; 0x4f
 80047b2:	701a      	strb	r2, [r3, #0]
 80047b4:	bf00      	nop
 80047b6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80047b8:	3301      	adds	r3, #1
 80047ba:	65fb      	str	r3, [r7, #92]	; 0x5c
 80047bc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80047be:	2b3e      	cmp	r3, #62	; 0x3e
 80047c0:	d80d      	bhi.n	80047de <parse_number+0xde>
 80047c2:	683b      	ldr	r3, [r7, #0]
 80047c4:	2b00      	cmp	r3, #0
 80047c6:	d00a      	beq.n	80047de <parse_number+0xde>
 80047c8:	683b      	ldr	r3, [r7, #0]
 80047ca:	689a      	ldr	r2, [r3, #8]
 80047cc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80047ce:	441a      	add	r2, r3
 80047d0:	683b      	ldr	r3, [r7, #0]
 80047d2:	685b      	ldr	r3, [r3, #4]
 80047d4:	429a      	cmp	r2, r3
 80047d6:	d3b3      	bcc.n	8004740 <parse_number+0x40>
 80047d8:	e001      	b.n	80047de <parse_number+0xde>
 80047da:	bf00      	nop
 80047dc:	e000      	b.n	80047e0 <parse_number+0xe0>
 80047de:	bf00      	nop
 80047e0:	f107 0208 	add.w	r2, r7, #8
 80047e4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80047e6:	4413      	add	r3, r2
 80047e8:	2200      	movs	r2, #0
 80047ea:	701a      	strb	r2, [r3, #0]
 80047ec:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80047f0:	f107 0308 	add.w	r3, r7, #8
 80047f4:	4611      	mov	r1, r2
 80047f6:	4618      	mov	r0, r3
 80047f8:	f00d fcb2 	bl	8012160 <strtod>
 80047fc:	ed87 0b14 	vstr	d0, [r7, #80]	; 0x50
 8004800:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8004802:	f107 0308 	add.w	r3, r7, #8
 8004806:	429a      	cmp	r2, r3
 8004808:	d101      	bne.n	800480e <parse_number+0x10e>
 800480a:	2300      	movs	r3, #0
 800480c:	e036      	b.n	800487c <parse_number+0x17c>
 800480e:	6879      	ldr	r1, [r7, #4]
 8004810:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8004814:	e9c1 2306 	strd	r2, r3, [r1, #24]
 8004818:	a31b      	add	r3, pc, #108	; (adr r3, 8004888 <parse_number+0x188>)
 800481a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800481e:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8004822:	f7fc f97f 	bl	8000b24 <__aeabi_dcmpge>
 8004826:	4603      	mov	r3, r0
 8004828:	2b00      	cmp	r3, #0
 800482a:	d004      	beq.n	8004836 <parse_number+0x136>
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8004832:	615a      	str	r2, [r3, #20]
 8004834:	e015      	b.n	8004862 <parse_number+0x162>
 8004836:	f04f 0200 	mov.w	r2, #0
 800483a:	4b16      	ldr	r3, [pc, #88]	; (8004894 <parse_number+0x194>)
 800483c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8004840:	f7fc f966 	bl	8000b10 <__aeabi_dcmple>
 8004844:	4603      	mov	r3, r0
 8004846:	2b00      	cmp	r3, #0
 8004848:	d004      	beq.n	8004854 <parse_number+0x154>
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8004850:	615a      	str	r2, [r3, #20]
 8004852:	e006      	b.n	8004862 <parse_number+0x162>
 8004854:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8004858:	f7fc f98e 	bl	8000b78 <__aeabi_d2iz>
 800485c:	4602      	mov	r2, r0
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	615a      	str	r2, [r3, #20]
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	2208      	movs	r2, #8
 8004866:	60da      	str	r2, [r3, #12]
 8004868:	683b      	ldr	r3, [r7, #0]
 800486a:	689b      	ldr	r3, [r3, #8]
 800486c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800486e:	f107 0208 	add.w	r2, r7, #8
 8004872:	1a8a      	subs	r2, r1, r2
 8004874:	441a      	add	r2, r3
 8004876:	683b      	ldr	r3, [r7, #0]
 8004878:	609a      	str	r2, [r3, #8]
 800487a:	2301      	movs	r3, #1
 800487c:	4618      	mov	r0, r3
 800487e:	3760      	adds	r7, #96	; 0x60
 8004880:	46bd      	mov	sp, r7
 8004882:	bd80      	pop	{r7, pc}
 8004884:	f3af 8000 	nop.w
 8004888:	ffc00000 	.word	0xffc00000
 800488c:	41dfffff 	.word	0x41dfffff
 8004890:	04007fe5 	.word	0x04007fe5
 8004894:	c1e00000 	.word	0xc1e00000

08004898 <ensure>:
 8004898:	b580      	push	{r7, lr}
 800489a:	b084      	sub	sp, #16
 800489c:	af00      	add	r7, sp, #0
 800489e:	6078      	str	r0, [r7, #4]
 80048a0:	6039      	str	r1, [r7, #0]
 80048a2:	2300      	movs	r3, #0
 80048a4:	60fb      	str	r3, [r7, #12]
 80048a6:	2300      	movs	r3, #0
 80048a8:	60bb      	str	r3, [r7, #8]
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	2b00      	cmp	r3, #0
 80048ae:	d003      	beq.n	80048b8 <ensure+0x20>
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	681b      	ldr	r3, [r3, #0]
 80048b4:	2b00      	cmp	r3, #0
 80048b6:	d101      	bne.n	80048bc <ensure+0x24>
 80048b8:	2300      	movs	r3, #0
 80048ba:	e083      	b.n	80049c4 <ensure+0x12c>
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	685b      	ldr	r3, [r3, #4]
 80048c0:	2b00      	cmp	r3, #0
 80048c2:	d007      	beq.n	80048d4 <ensure+0x3c>
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	689a      	ldr	r2, [r3, #8]
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	685b      	ldr	r3, [r3, #4]
 80048cc:	429a      	cmp	r2, r3
 80048ce:	d301      	bcc.n	80048d4 <ensure+0x3c>
 80048d0:	2300      	movs	r3, #0
 80048d2:	e077      	b.n	80049c4 <ensure+0x12c>
 80048d4:	683b      	ldr	r3, [r7, #0]
 80048d6:	2b00      	cmp	r3, #0
 80048d8:	da01      	bge.n	80048de <ensure+0x46>
 80048da:	2300      	movs	r3, #0
 80048dc:	e072      	b.n	80049c4 <ensure+0x12c>
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	689a      	ldr	r2, [r3, #8]
 80048e2:	683b      	ldr	r3, [r7, #0]
 80048e4:	4413      	add	r3, r2
 80048e6:	3301      	adds	r3, #1
 80048e8:	603b      	str	r3, [r7, #0]
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	685b      	ldr	r3, [r3, #4]
 80048ee:	683a      	ldr	r2, [r7, #0]
 80048f0:	429a      	cmp	r2, r3
 80048f2:	d805      	bhi.n	8004900 <ensure+0x68>
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	681a      	ldr	r2, [r3, #0]
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	689b      	ldr	r3, [r3, #8]
 80048fc:	4413      	add	r3, r2
 80048fe:	e061      	b.n	80049c4 <ensure+0x12c>
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	691b      	ldr	r3, [r3, #16]
 8004904:	2b00      	cmp	r3, #0
 8004906:	d001      	beq.n	800490c <ensure+0x74>
 8004908:	2300      	movs	r3, #0
 800490a:	e05b      	b.n	80049c4 <ensure+0x12c>
 800490c:	683b      	ldr	r3, [r7, #0]
 800490e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004912:	d308      	bcc.n	8004926 <ensure+0x8e>
 8004914:	683b      	ldr	r3, [r7, #0]
 8004916:	2b00      	cmp	r3, #0
 8004918:	db03      	blt.n	8004922 <ensure+0x8a>
 800491a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800491e:	60bb      	str	r3, [r7, #8]
 8004920:	e004      	b.n	800492c <ensure+0x94>
 8004922:	2300      	movs	r3, #0
 8004924:	e04e      	b.n	80049c4 <ensure+0x12c>
 8004926:	683b      	ldr	r3, [r7, #0]
 8004928:	005b      	lsls	r3, r3, #1
 800492a:	60bb      	str	r3, [r7, #8]
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	6a1b      	ldr	r3, [r3, #32]
 8004930:	2b00      	cmp	r3, #0
 8004932:	d018      	beq.n	8004966 <ensure+0xce>
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	6a1b      	ldr	r3, [r3, #32]
 8004938:	687a      	ldr	r2, [r7, #4]
 800493a:	6812      	ldr	r2, [r2, #0]
 800493c:	68b9      	ldr	r1, [r7, #8]
 800493e:	4610      	mov	r0, r2
 8004940:	4798      	blx	r3
 8004942:	60f8      	str	r0, [r7, #12]
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	2b00      	cmp	r3, #0
 8004948:	d132      	bne.n	80049b0 <ensure+0x118>
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	69db      	ldr	r3, [r3, #28]
 800494e:	687a      	ldr	r2, [r7, #4]
 8004950:	6812      	ldr	r2, [r2, #0]
 8004952:	4610      	mov	r0, r2
 8004954:	4798      	blx	r3
 8004956:	687b      	ldr	r3, [r7, #4]
 8004958:	2200      	movs	r2, #0
 800495a:	605a      	str	r2, [r3, #4]
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	2200      	movs	r2, #0
 8004960:	601a      	str	r2, [r3, #0]
 8004962:	2300      	movs	r3, #0
 8004964:	e02e      	b.n	80049c4 <ensure+0x12c>
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	699b      	ldr	r3, [r3, #24]
 800496a:	68b8      	ldr	r0, [r7, #8]
 800496c:	4798      	blx	r3
 800496e:	60f8      	str	r0, [r7, #12]
 8004970:	68fb      	ldr	r3, [r7, #12]
 8004972:	2b00      	cmp	r3, #0
 8004974:	d10d      	bne.n	8004992 <ensure+0xfa>
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	69db      	ldr	r3, [r3, #28]
 800497a:	687a      	ldr	r2, [r7, #4]
 800497c:	6812      	ldr	r2, [r2, #0]
 800497e:	4610      	mov	r0, r2
 8004980:	4798      	blx	r3
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	2200      	movs	r2, #0
 8004986:	605a      	str	r2, [r3, #4]
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	2200      	movs	r2, #0
 800498c:	601a      	str	r2, [r3, #0]
 800498e:	2300      	movs	r3, #0
 8004990:	e018      	b.n	80049c4 <ensure+0x12c>
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	6819      	ldr	r1, [r3, #0]
 8004996:	687b      	ldr	r3, [r7, #4]
 8004998:	689b      	ldr	r3, [r3, #8]
 800499a:	3301      	adds	r3, #1
 800499c:	461a      	mov	r2, r3
 800499e:	68f8      	ldr	r0, [r7, #12]
 80049a0:	f00e fb57 	bl	8013052 <memcpy>
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	69db      	ldr	r3, [r3, #28]
 80049a8:	687a      	ldr	r2, [r7, #4]
 80049aa:	6812      	ldr	r2, [r2, #0]
 80049ac:	4610      	mov	r0, r2
 80049ae:	4798      	blx	r3
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	68ba      	ldr	r2, [r7, #8]
 80049b4:	605a      	str	r2, [r3, #4]
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	68fa      	ldr	r2, [r7, #12]
 80049ba:	601a      	str	r2, [r3, #0]
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	689b      	ldr	r3, [r3, #8]
 80049c0:	68fa      	ldr	r2, [r7, #12]
 80049c2:	4413      	add	r3, r2
 80049c4:	4618      	mov	r0, r3
 80049c6:	3710      	adds	r7, #16
 80049c8:	46bd      	mov	sp, r7
 80049ca:	bd80      	pop	{r7, pc}

080049cc <update_offset>:
 80049cc:	b590      	push	{r4, r7, lr}
 80049ce:	b085      	sub	sp, #20
 80049d0:	af00      	add	r7, sp, #0
 80049d2:	6078      	str	r0, [r7, #4]
 80049d4:	2300      	movs	r3, #0
 80049d6:	60fb      	str	r3, [r7, #12]
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	2b00      	cmp	r3, #0
 80049dc:	d013      	beq.n	8004a06 <update_offset+0x3a>
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	2b00      	cmp	r3, #0
 80049e4:	d00f      	beq.n	8004a06 <update_offset+0x3a>
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	681a      	ldr	r2, [r3, #0]
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	689b      	ldr	r3, [r3, #8]
 80049ee:	4413      	add	r3, r2
 80049f0:	60fb      	str	r3, [r7, #12]
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	689c      	ldr	r4, [r3, #8]
 80049f6:	68f8      	ldr	r0, [r7, #12]
 80049f8:	f7fb fc4a 	bl	8000290 <strlen>
 80049fc:	4603      	mov	r3, r0
 80049fe:	18e2      	adds	r2, r4, r3
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	609a      	str	r2, [r3, #8]
 8004a04:	e000      	b.n	8004a08 <update_offset+0x3c>
 8004a06:	bf00      	nop
 8004a08:	3714      	adds	r7, #20
 8004a0a:	46bd      	mov	sp, r7
 8004a0c:	bd90      	pop	{r4, r7, pc}
	...

08004a10 <compare_double>:
 8004a10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004a14:	b087      	sub	sp, #28
 8004a16:	af00      	add	r7, sp, #0
 8004a18:	ed87 0b02 	vstr	d0, [r7, #8]
 8004a1c:	ed87 1b00 	vstr	d1, [r7]
 8004a20:	68b8      	ldr	r0, [r7, #8]
 8004a22:	68fe      	ldr	r6, [r7, #12]
 8004a24:	f026 4100 	bic.w	r1, r6, #2147483648	; 0x80000000
 8004a28:	683a      	ldr	r2, [r7, #0]
 8004a2a:	687e      	ldr	r6, [r7, #4]
 8004a2c:	f026 4300 	bic.w	r3, r6, #2147483648	; 0x80000000
 8004a30:	f7fc f882 	bl	8000b38 <__aeabi_dcmpgt>
 8004a34:	4603      	mov	r3, r0
 8004a36:	2b00      	cmp	r3, #0
 8004a38:	d004      	beq.n	8004a44 <compare_double+0x34>
 8004a3a:	68bc      	ldr	r4, [r7, #8]
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 8004a42:	e003      	b.n	8004a4c <compare_double+0x3c>
 8004a44:	683c      	ldr	r4, [r7, #0]
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 8004a4c:	e9c7 4504 	strd	r4, r5, [r7, #16]
 8004a50:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004a54:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8004a58:	f7fb fc26 	bl	80002a8 <__aeabi_dsub>
 8004a5c:	4602      	mov	r2, r0
 8004a5e:	460b      	mov	r3, r1
 8004a60:	4690      	mov	r8, r2
 8004a62:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
 8004a66:	f04f 0200 	mov.w	r2, #0
 8004a6a:	4b0c      	ldr	r3, [pc, #48]	; (8004a9c <compare_double+0x8c>)
 8004a6c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8004a70:	f7fb fdd2 	bl	8000618 <__aeabi_dmul>
 8004a74:	4602      	mov	r2, r0
 8004a76:	460b      	mov	r3, r1
 8004a78:	2101      	movs	r1, #1
 8004a7a:	460c      	mov	r4, r1
 8004a7c:	4640      	mov	r0, r8
 8004a7e:	4649      	mov	r1, r9
 8004a80:	f7fc f846 	bl	8000b10 <__aeabi_dcmple>
 8004a84:	4603      	mov	r3, r0
 8004a86:	2b00      	cmp	r3, #0
 8004a88:	d101      	bne.n	8004a8e <compare_double+0x7e>
 8004a8a:	2300      	movs	r3, #0
 8004a8c:	461c      	mov	r4, r3
 8004a8e:	b2e3      	uxtb	r3, r4
 8004a90:	4618      	mov	r0, r3
 8004a92:	371c      	adds	r7, #28
 8004a94:	46bd      	mov	sp, r7
 8004a96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004a9a:	bf00      	nop
 8004a9c:	3cb00000 	.word	0x3cb00000

08004aa0 <print_number>:
 8004aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004aa2:	b093      	sub	sp, #76	; 0x4c
 8004aa4:	af00      	add	r7, sp, #0
 8004aa6:	6078      	str	r0, [r7, #4]
 8004aa8:	6039      	str	r1, [r7, #0]
 8004aaa:	2300      	movs	r3, #0
 8004aac:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8004ab4:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
 8004ab8:	2300      	movs	r3, #0
 8004aba:	647b      	str	r3, [r7, #68]	; 0x44
 8004abc:	2300      	movs	r3, #0
 8004abe:	643b      	str	r3, [r7, #64]	; 0x40
 8004ac0:	2300      	movs	r3, #0
 8004ac2:	617b      	str	r3, [r7, #20]
 8004ac4:	f107 0318 	add.w	r3, r7, #24
 8004ac8:	2200      	movs	r2, #0
 8004aca:	601a      	str	r2, [r3, #0]
 8004acc:	605a      	str	r2, [r3, #4]
 8004ace:	609a      	str	r2, [r3, #8]
 8004ad0:	60da      	str	r2, [r3, #12]
 8004ad2:	611a      	str	r2, [r3, #16]
 8004ad4:	829a      	strh	r2, [r3, #20]
 8004ad6:	f7ff fe0b 	bl	80046f0 <get_decimal_point>
 8004ada:	4603      	mov	r3, r0
 8004adc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8004ae0:	f04f 0200 	mov.w	r2, #0
 8004ae4:	f04f 0300 	mov.w	r3, #0
 8004ae8:	e9c7 2302 	strd	r2, r3, [r7, #8]
 8004aec:	683b      	ldr	r3, [r7, #0]
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d101      	bne.n	8004af6 <print_number+0x56>
 8004af2:	2300      	movs	r3, #0
 8004af4:	e0b4      	b.n	8004c60 <print_number+0x1c0>
 8004af6:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8004afa:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8004afe:	f7fc f825 	bl	8000b4c <__aeabi_dcmpun>
 8004b02:	4603      	mov	r3, r0
 8004b04:	2b00      	cmp	r3, #0
 8004b06:	d121      	bne.n	8004b4c <print_number+0xac>
 8004b08:	6b3c      	ldr	r4, [r7, #48]	; 0x30
 8004b0a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004b0c:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 8004b10:	2301      	movs	r3, #1
 8004b12:	461e      	mov	r6, r3
 8004b14:	f04f 32ff 	mov.w	r2, #4294967295
 8004b18:	4b53      	ldr	r3, [pc, #332]	; (8004c68 <print_number+0x1c8>)
 8004b1a:	4620      	mov	r0, r4
 8004b1c:	4629      	mov	r1, r5
 8004b1e:	f7fc f815 	bl	8000b4c <__aeabi_dcmpun>
 8004b22:	4603      	mov	r3, r0
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	d10b      	bne.n	8004b40 <print_number+0xa0>
 8004b28:	f04f 32ff 	mov.w	r2, #4294967295
 8004b2c:	4b4e      	ldr	r3, [pc, #312]	; (8004c68 <print_number+0x1c8>)
 8004b2e:	4620      	mov	r0, r4
 8004b30:	4629      	mov	r1, r5
 8004b32:	f7fb ffed 	bl	8000b10 <__aeabi_dcmple>
 8004b36:	4603      	mov	r3, r0
 8004b38:	2b00      	cmp	r3, #0
 8004b3a:	d101      	bne.n	8004b40 <print_number+0xa0>
 8004b3c:	2300      	movs	r3, #0
 8004b3e:	461e      	mov	r6, r3
 8004b40:	b2f3      	uxtb	r3, r6
 8004b42:	f083 0301 	eor.w	r3, r3, #1
 8004b46:	b2db      	uxtb	r3, r3
 8004b48:	2b00      	cmp	r3, #0
 8004b4a:	d007      	beq.n	8004b5c <print_number+0xbc>
 8004b4c:	f107 0314 	add.w	r3, r7, #20
 8004b50:	4946      	ldr	r1, [pc, #280]	; (8004c6c <print_number+0x1cc>)
 8004b52:	4618      	mov	r0, r3
 8004b54:	f00e f87e 	bl	8012c54 <siprintf>
 8004b58:	6478      	str	r0, [r7, #68]	; 0x44
 8004b5a:	e03f      	b.n	8004bdc <print_number+0x13c>
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	695b      	ldr	r3, [r3, #20]
 8004b60:	4618      	mov	r0, r3
 8004b62:	f7fb fcef 	bl	8000544 <__aeabi_i2d>
 8004b66:	4602      	mov	r2, r0
 8004b68:	460b      	mov	r3, r1
 8004b6a:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8004b6e:	f7fb ffbb 	bl	8000ae8 <__aeabi_dcmpeq>
 8004b72:	4603      	mov	r3, r0
 8004b74:	2b00      	cmp	r3, #0
 8004b76:	d009      	beq.n	8004b8c <print_number+0xec>
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	695a      	ldr	r2, [r3, #20]
 8004b7c:	f107 0314 	add.w	r3, r7, #20
 8004b80:	493b      	ldr	r1, [pc, #236]	; (8004c70 <print_number+0x1d0>)
 8004b82:	4618      	mov	r0, r3
 8004b84:	f00e f866 	bl	8012c54 <siprintf>
 8004b88:	6478      	str	r0, [r7, #68]	; 0x44
 8004b8a:	e027      	b.n	8004bdc <print_number+0x13c>
 8004b8c:	f107 0014 	add.w	r0, r7, #20
 8004b90:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8004b94:	4937      	ldr	r1, [pc, #220]	; (8004c74 <print_number+0x1d4>)
 8004b96:	f00e f85d 	bl	8012c54 <siprintf>
 8004b9a:	6478      	str	r0, [r7, #68]	; 0x44
 8004b9c:	f107 0208 	add.w	r2, r7, #8
 8004ba0:	f107 0314 	add.w	r3, r7, #20
 8004ba4:	4934      	ldr	r1, [pc, #208]	; (8004c78 <print_number+0x1d8>)
 8004ba6:	4618      	mov	r0, r3
 8004ba8:	f00e f874 	bl	8012c94 <siscanf>
 8004bac:	4603      	mov	r3, r0
 8004bae:	2b01      	cmp	r3, #1
 8004bb0:	d10c      	bne.n	8004bcc <print_number+0x12c>
 8004bb2:	ed97 7b02 	vldr	d7, [r7, #8]
 8004bb6:	ed97 1b0c 	vldr	d1, [r7, #48]	; 0x30
 8004bba:	eeb0 0a47 	vmov.f32	s0, s14
 8004bbe:	eef0 0a67 	vmov.f32	s1, s15
 8004bc2:	f7ff ff25 	bl	8004a10 <compare_double>
 8004bc6:	4603      	mov	r3, r0
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	d107      	bne.n	8004bdc <print_number+0x13c>
 8004bcc:	f107 0014 	add.w	r0, r7, #20
 8004bd0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8004bd4:	4929      	ldr	r1, [pc, #164]	; (8004c7c <print_number+0x1dc>)
 8004bd6:	f00e f83d 	bl	8012c54 <siprintf>
 8004bda:	6478      	str	r0, [r7, #68]	; 0x44
 8004bdc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004bde:	2b00      	cmp	r3, #0
 8004be0:	db02      	blt.n	8004be8 <print_number+0x148>
 8004be2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004be4:	2b19      	cmp	r3, #25
 8004be6:	dd01      	ble.n	8004bec <print_number+0x14c>
 8004be8:	2300      	movs	r3, #0
 8004bea:	e039      	b.n	8004c60 <print_number+0x1c0>
 8004bec:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004bee:	3301      	adds	r3, #1
 8004bf0:	4619      	mov	r1, r3
 8004bf2:	6838      	ldr	r0, [r7, #0]
 8004bf4:	f7ff fe50 	bl	8004898 <ensure>
 8004bf8:	63f8      	str	r0, [r7, #60]	; 0x3c
 8004bfa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	d101      	bne.n	8004c04 <print_number+0x164>
 8004c00:	2300      	movs	r3, #0
 8004c02:	e02d      	b.n	8004c60 <print_number+0x1c0>
 8004c04:	2300      	movs	r3, #0
 8004c06:	643b      	str	r3, [r7, #64]	; 0x40
 8004c08:	e01a      	b.n	8004c40 <print_number+0x1a0>
 8004c0a:	f107 0214 	add.w	r2, r7, #20
 8004c0e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004c10:	4413      	add	r3, r2
 8004c12:	781b      	ldrb	r3, [r3, #0]
 8004c14:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 8004c18:	429a      	cmp	r2, r3
 8004c1a:	d105      	bne.n	8004c28 <print_number+0x188>
 8004c1c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004c1e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004c20:	4413      	add	r3, r2
 8004c22:	222e      	movs	r2, #46	; 0x2e
 8004c24:	701a      	strb	r2, [r3, #0]
 8004c26:	e008      	b.n	8004c3a <print_number+0x19a>
 8004c28:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004c2a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004c2c:	4413      	add	r3, r2
 8004c2e:	f107 0114 	add.w	r1, r7, #20
 8004c32:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8004c34:	440a      	add	r2, r1
 8004c36:	7812      	ldrb	r2, [r2, #0]
 8004c38:	701a      	strb	r2, [r3, #0]
 8004c3a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004c3c:	3301      	adds	r3, #1
 8004c3e:	643b      	str	r3, [r7, #64]	; 0x40
 8004c40:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004c42:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8004c44:	429a      	cmp	r2, r3
 8004c46:	d3e0      	bcc.n	8004c0a <print_number+0x16a>
 8004c48:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004c4a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004c4c:	4413      	add	r3, r2
 8004c4e:	2200      	movs	r2, #0
 8004c50:	701a      	strb	r2, [r3, #0]
 8004c52:	683b      	ldr	r3, [r7, #0]
 8004c54:	689a      	ldr	r2, [r3, #8]
 8004c56:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004c58:	441a      	add	r2, r3
 8004c5a:	683b      	ldr	r3, [r7, #0]
 8004c5c:	609a      	str	r2, [r3, #8]
 8004c5e:	2301      	movs	r3, #1
 8004c60:	4618      	mov	r0, r3
 8004c62:	374c      	adds	r7, #76	; 0x4c
 8004c64:	46bd      	mov	sp, r7
 8004c66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004c68:	7fefffff 	.word	0x7fefffff
 8004c6c:	080160e0 	.word	0x080160e0
 8004c70:	080160e8 	.word	0x080160e8
 8004c74:	080160ec 	.word	0x080160ec
 8004c78:	080160f4 	.word	0x080160f4
 8004c7c:	080160f8 	.word	0x080160f8

08004c80 <parse_hex4>:
 8004c80:	b480      	push	{r7}
 8004c82:	b085      	sub	sp, #20
 8004c84:	af00      	add	r7, sp, #0
 8004c86:	6078      	str	r0, [r7, #4]
 8004c88:	2300      	movs	r3, #0
 8004c8a:	60fb      	str	r3, [r7, #12]
 8004c8c:	2300      	movs	r3, #0
 8004c8e:	60bb      	str	r3, [r7, #8]
 8004c90:	2300      	movs	r3, #0
 8004c92:	60bb      	str	r3, [r7, #8]
 8004c94:	e04c      	b.n	8004d30 <parse_hex4+0xb0>
 8004c96:	687a      	ldr	r2, [r7, #4]
 8004c98:	68bb      	ldr	r3, [r7, #8]
 8004c9a:	4413      	add	r3, r2
 8004c9c:	781b      	ldrb	r3, [r3, #0]
 8004c9e:	2b2f      	cmp	r3, #47	; 0x2f
 8004ca0:	d90f      	bls.n	8004cc2 <parse_hex4+0x42>
 8004ca2:	687a      	ldr	r2, [r7, #4]
 8004ca4:	68bb      	ldr	r3, [r7, #8]
 8004ca6:	4413      	add	r3, r2
 8004ca8:	781b      	ldrb	r3, [r3, #0]
 8004caa:	2b39      	cmp	r3, #57	; 0x39
 8004cac:	d809      	bhi.n	8004cc2 <parse_hex4+0x42>
 8004cae:	687a      	ldr	r2, [r7, #4]
 8004cb0:	68bb      	ldr	r3, [r7, #8]
 8004cb2:	4413      	add	r3, r2
 8004cb4:	781b      	ldrb	r3, [r3, #0]
 8004cb6:	461a      	mov	r2, r3
 8004cb8:	68fb      	ldr	r3, [r7, #12]
 8004cba:	4413      	add	r3, r2
 8004cbc:	3b30      	subs	r3, #48	; 0x30
 8004cbe:	60fb      	str	r3, [r7, #12]
 8004cc0:	e02d      	b.n	8004d1e <parse_hex4+0x9e>
 8004cc2:	687a      	ldr	r2, [r7, #4]
 8004cc4:	68bb      	ldr	r3, [r7, #8]
 8004cc6:	4413      	add	r3, r2
 8004cc8:	781b      	ldrb	r3, [r3, #0]
 8004cca:	2b40      	cmp	r3, #64	; 0x40
 8004ccc:	d90f      	bls.n	8004cee <parse_hex4+0x6e>
 8004cce:	687a      	ldr	r2, [r7, #4]
 8004cd0:	68bb      	ldr	r3, [r7, #8]
 8004cd2:	4413      	add	r3, r2
 8004cd4:	781b      	ldrb	r3, [r3, #0]
 8004cd6:	2b46      	cmp	r3, #70	; 0x46
 8004cd8:	d809      	bhi.n	8004cee <parse_hex4+0x6e>
 8004cda:	687a      	ldr	r2, [r7, #4]
 8004cdc:	68bb      	ldr	r3, [r7, #8]
 8004cde:	4413      	add	r3, r2
 8004ce0:	781b      	ldrb	r3, [r3, #0]
 8004ce2:	461a      	mov	r2, r3
 8004ce4:	68fb      	ldr	r3, [r7, #12]
 8004ce6:	4413      	add	r3, r2
 8004ce8:	3b37      	subs	r3, #55	; 0x37
 8004cea:	60fb      	str	r3, [r7, #12]
 8004cec:	e017      	b.n	8004d1e <parse_hex4+0x9e>
 8004cee:	687a      	ldr	r2, [r7, #4]
 8004cf0:	68bb      	ldr	r3, [r7, #8]
 8004cf2:	4413      	add	r3, r2
 8004cf4:	781b      	ldrb	r3, [r3, #0]
 8004cf6:	2b60      	cmp	r3, #96	; 0x60
 8004cf8:	d90f      	bls.n	8004d1a <parse_hex4+0x9a>
 8004cfa:	687a      	ldr	r2, [r7, #4]
 8004cfc:	68bb      	ldr	r3, [r7, #8]
 8004cfe:	4413      	add	r3, r2
 8004d00:	781b      	ldrb	r3, [r3, #0]
 8004d02:	2b66      	cmp	r3, #102	; 0x66
 8004d04:	d809      	bhi.n	8004d1a <parse_hex4+0x9a>
 8004d06:	687a      	ldr	r2, [r7, #4]
 8004d08:	68bb      	ldr	r3, [r7, #8]
 8004d0a:	4413      	add	r3, r2
 8004d0c:	781b      	ldrb	r3, [r3, #0]
 8004d0e:	461a      	mov	r2, r3
 8004d10:	68fb      	ldr	r3, [r7, #12]
 8004d12:	4413      	add	r3, r2
 8004d14:	3b57      	subs	r3, #87	; 0x57
 8004d16:	60fb      	str	r3, [r7, #12]
 8004d18:	e001      	b.n	8004d1e <parse_hex4+0x9e>
 8004d1a:	2300      	movs	r3, #0
 8004d1c:	e00c      	b.n	8004d38 <parse_hex4+0xb8>
 8004d1e:	68bb      	ldr	r3, [r7, #8]
 8004d20:	2b02      	cmp	r3, #2
 8004d22:	d802      	bhi.n	8004d2a <parse_hex4+0xaa>
 8004d24:	68fb      	ldr	r3, [r7, #12]
 8004d26:	011b      	lsls	r3, r3, #4
 8004d28:	60fb      	str	r3, [r7, #12]
 8004d2a:	68bb      	ldr	r3, [r7, #8]
 8004d2c:	3301      	adds	r3, #1
 8004d2e:	60bb      	str	r3, [r7, #8]
 8004d30:	68bb      	ldr	r3, [r7, #8]
 8004d32:	2b03      	cmp	r3, #3
 8004d34:	d9af      	bls.n	8004c96 <parse_hex4+0x16>
 8004d36:	68fb      	ldr	r3, [r7, #12]
 8004d38:	4618      	mov	r0, r3
 8004d3a:	3714      	adds	r7, #20
 8004d3c:	46bd      	mov	sp, r7
 8004d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d42:	4770      	bx	lr

08004d44 <utf16_literal_to_utf8>:
 8004d44:	b580      	push	{r7, lr}
 8004d46:	b08a      	sub	sp, #40	; 0x28
 8004d48:	af00      	add	r7, sp, #0
 8004d4a:	60f8      	str	r0, [r7, #12]
 8004d4c:	60b9      	str	r1, [r7, #8]
 8004d4e:	607a      	str	r2, [r7, #4]
 8004d50:	2300      	movs	r3, #0
 8004d52:	627b      	str	r3, [r7, #36]	; 0x24
 8004d54:	2300      	movs	r3, #0
 8004d56:	61fb      	str	r3, [r7, #28]
 8004d58:	68fb      	ldr	r3, [r7, #12]
 8004d5a:	61bb      	str	r3, [r7, #24]
 8004d5c:	2300      	movs	r3, #0
 8004d5e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004d62:	2300      	movs	r3, #0
 8004d64:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8004d68:	2300      	movs	r3, #0
 8004d6a:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 8004d6e:	2300      	movs	r3, #0
 8004d70:	f887 3020 	strb.w	r3, [r7, #32]
 8004d74:	68ba      	ldr	r2, [r7, #8]
 8004d76:	69bb      	ldr	r3, [r7, #24]
 8004d78:	1ad3      	subs	r3, r2, r3
 8004d7a:	2b05      	cmp	r3, #5
 8004d7c:	f340 80b7 	ble.w	8004eee <utf16_literal_to_utf8+0x1aa>
 8004d80:	69bb      	ldr	r3, [r7, #24]
 8004d82:	3302      	adds	r3, #2
 8004d84:	4618      	mov	r0, r3
 8004d86:	f7ff ff7b 	bl	8004c80 <parse_hex4>
 8004d8a:	61f8      	str	r0, [r7, #28]
 8004d8c:	69fb      	ldr	r3, [r7, #28]
 8004d8e:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 8004d92:	d304      	bcc.n	8004d9e <utf16_literal_to_utf8+0x5a>
 8004d94:	69fb      	ldr	r3, [r7, #28]
 8004d96:	f5b3 4f60 	cmp.w	r3, #57344	; 0xe000
 8004d9a:	f0c0 80aa 	bcc.w	8004ef2 <utf16_literal_to_utf8+0x1ae>
 8004d9e:	69fb      	ldr	r3, [r7, #28]
 8004da0:	f5b3 4f58 	cmp.w	r3, #55296	; 0xd800
 8004da4:	d337      	bcc.n	8004e16 <utf16_literal_to_utf8+0xd2>
 8004da6:	69fb      	ldr	r3, [r7, #28]
 8004da8:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 8004dac:	d233      	bcs.n	8004e16 <utf16_literal_to_utf8+0xd2>
 8004dae:	69bb      	ldr	r3, [r7, #24]
 8004db0:	3306      	adds	r3, #6
 8004db2:	617b      	str	r3, [r7, #20]
 8004db4:	2300      	movs	r3, #0
 8004db6:	613b      	str	r3, [r7, #16]
 8004db8:	230c      	movs	r3, #12
 8004dba:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 8004dbe:	68ba      	ldr	r2, [r7, #8]
 8004dc0:	697b      	ldr	r3, [r7, #20]
 8004dc2:	1ad3      	subs	r3, r2, r3
 8004dc4:	2b05      	cmp	r3, #5
 8004dc6:	f340 8096 	ble.w	8004ef6 <utf16_literal_to_utf8+0x1b2>
 8004dca:	697b      	ldr	r3, [r7, #20]
 8004dcc:	781b      	ldrb	r3, [r3, #0]
 8004dce:	2b5c      	cmp	r3, #92	; 0x5c
 8004dd0:	f040 8093 	bne.w	8004efa <utf16_literal_to_utf8+0x1b6>
 8004dd4:	697b      	ldr	r3, [r7, #20]
 8004dd6:	3301      	adds	r3, #1
 8004dd8:	781b      	ldrb	r3, [r3, #0]
 8004dda:	2b75      	cmp	r3, #117	; 0x75
 8004ddc:	f040 808d 	bne.w	8004efa <utf16_literal_to_utf8+0x1b6>
 8004de0:	697b      	ldr	r3, [r7, #20]
 8004de2:	3302      	adds	r3, #2
 8004de4:	4618      	mov	r0, r3
 8004de6:	f7ff ff4b 	bl	8004c80 <parse_hex4>
 8004dea:	6138      	str	r0, [r7, #16]
 8004dec:	693b      	ldr	r3, [r7, #16]
 8004dee:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 8004df2:	f0c0 8084 	bcc.w	8004efe <utf16_literal_to_utf8+0x1ba>
 8004df6:	693b      	ldr	r3, [r7, #16]
 8004df8:	f5b3 4f60 	cmp.w	r3, #57344	; 0xe000
 8004dfc:	d27f      	bcs.n	8004efe <utf16_literal_to_utf8+0x1ba>
 8004dfe:	69fb      	ldr	r3, [r7, #28]
 8004e00:	029a      	lsls	r2, r3, #10
 8004e02:	4b43      	ldr	r3, [pc, #268]	; (8004f10 <utf16_literal_to_utf8+0x1cc>)
 8004e04:	4013      	ands	r3, r2
 8004e06:	693a      	ldr	r2, [r7, #16]
 8004e08:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8004e0c:	4313      	orrs	r3, r2
 8004e0e:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8004e12:	627b      	str	r3, [r7, #36]	; 0x24
 8004e14:	e004      	b.n	8004e20 <utf16_literal_to_utf8+0xdc>
 8004e16:	2306      	movs	r3, #6
 8004e18:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 8004e1c:	69fb      	ldr	r3, [r7, #28]
 8004e1e:	627b      	str	r3, [r7, #36]	; 0x24
 8004e20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e22:	2b7f      	cmp	r3, #127	; 0x7f
 8004e24:	d803      	bhi.n	8004e2e <utf16_literal_to_utf8+0xea>
 8004e26:	2301      	movs	r3, #1
 8004e28:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004e2c:	e01f      	b.n	8004e6e <utf16_literal_to_utf8+0x12a>
 8004e2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e30:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004e34:	d206      	bcs.n	8004e44 <utf16_literal_to_utf8+0x100>
 8004e36:	2302      	movs	r3, #2
 8004e38:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004e3c:	23c0      	movs	r3, #192	; 0xc0
 8004e3e:	f887 3020 	strb.w	r3, [r7, #32]
 8004e42:	e014      	b.n	8004e6e <utf16_literal_to_utf8+0x12a>
 8004e44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e46:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004e4a:	d206      	bcs.n	8004e5a <utf16_literal_to_utf8+0x116>
 8004e4c:	2303      	movs	r3, #3
 8004e4e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004e52:	23e0      	movs	r3, #224	; 0xe0
 8004e54:	f887 3020 	strb.w	r3, [r7, #32]
 8004e58:	e009      	b.n	8004e6e <utf16_literal_to_utf8+0x12a>
 8004e5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e5c:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 8004e60:	d24f      	bcs.n	8004f02 <utf16_literal_to_utf8+0x1be>
 8004e62:	2304      	movs	r3, #4
 8004e64:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004e68:	23f0      	movs	r3, #240	; 0xf0
 8004e6a:	f887 3020 	strb.w	r3, [r7, #32]
 8004e6e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8004e72:	3b01      	subs	r3, #1
 8004e74:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8004e78:	e015      	b.n	8004ea6 <utf16_literal_to_utf8+0x162>
 8004e7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e7c:	b2db      	uxtb	r3, r3
 8004e7e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004e82:	b2da      	uxtb	r2, r3
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	6819      	ldr	r1, [r3, #0]
 8004e88:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8004e8c:	440b      	add	r3, r1
 8004e8e:	f062 027f 	orn	r2, r2, #127	; 0x7f
 8004e92:	b2d2      	uxtb	r2, r2
 8004e94:	701a      	strb	r2, [r3, #0]
 8004e96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e98:	099b      	lsrs	r3, r3, #6
 8004e9a:	627b      	str	r3, [r7, #36]	; 0x24
 8004e9c:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8004ea0:	3b01      	subs	r3, #1
 8004ea2:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8004ea6:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8004eaa:	2b00      	cmp	r3, #0
 8004eac:	d1e5      	bne.n	8004e7a <utf16_literal_to_utf8+0x136>
 8004eae:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8004eb2:	2b01      	cmp	r3, #1
 8004eb4:	d909      	bls.n	8004eca <utf16_literal_to_utf8+0x186>
 8004eb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eb8:	b2d9      	uxtb	r1, r3
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	f897 2020 	ldrb.w	r2, [r7, #32]
 8004ec2:	430a      	orrs	r2, r1
 8004ec4:	b2d2      	uxtb	r2, r2
 8004ec6:	701a      	strb	r2, [r3, #0]
 8004ec8:	e007      	b.n	8004eda <utf16_literal_to_utf8+0x196>
 8004eca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ecc:	b2da      	uxtb	r2, r3
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8004ed6:	b2d2      	uxtb	r2, r2
 8004ed8:	701a      	strb	r2, [r3, #0]
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	681a      	ldr	r2, [r3, #0]
 8004ede:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8004ee2:	441a      	add	r2, r3
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	601a      	str	r2, [r3, #0]
 8004ee8:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 8004eec:	e00b      	b.n	8004f06 <utf16_literal_to_utf8+0x1c2>
 8004eee:	bf00      	nop
 8004ef0:	e008      	b.n	8004f04 <utf16_literal_to_utf8+0x1c0>
 8004ef2:	bf00      	nop
 8004ef4:	e006      	b.n	8004f04 <utf16_literal_to_utf8+0x1c0>
 8004ef6:	bf00      	nop
 8004ef8:	e004      	b.n	8004f04 <utf16_literal_to_utf8+0x1c0>
 8004efa:	bf00      	nop
 8004efc:	e002      	b.n	8004f04 <utf16_literal_to_utf8+0x1c0>
 8004efe:	bf00      	nop
 8004f00:	e000      	b.n	8004f04 <utf16_literal_to_utf8+0x1c0>
 8004f02:	bf00      	nop
 8004f04:	2300      	movs	r3, #0
 8004f06:	4618      	mov	r0, r3
 8004f08:	3728      	adds	r7, #40	; 0x28
 8004f0a:	46bd      	mov	sp, r7
 8004f0c:	bd80      	pop	{r7, pc}
 8004f0e:	bf00      	nop
 8004f10:	000ffc00 	.word	0x000ffc00

08004f14 <parse_string>:
 8004f14:	b580      	push	{r7, lr}
 8004f16:	b08a      	sub	sp, #40	; 0x28
 8004f18:	af00      	add	r7, sp, #0
 8004f1a:	6078      	str	r0, [r7, #4]
 8004f1c:	6039      	str	r1, [r7, #0]
 8004f1e:	683b      	ldr	r3, [r7, #0]
 8004f20:	681a      	ldr	r2, [r3, #0]
 8004f22:	683b      	ldr	r3, [r7, #0]
 8004f24:	689b      	ldr	r3, [r3, #8]
 8004f26:	3301      	adds	r3, #1
 8004f28:	4413      	add	r3, r2
 8004f2a:	627b      	str	r3, [r7, #36]	; 0x24
 8004f2c:	683b      	ldr	r3, [r7, #0]
 8004f2e:	681a      	ldr	r2, [r3, #0]
 8004f30:	683b      	ldr	r3, [r7, #0]
 8004f32:	689b      	ldr	r3, [r3, #8]
 8004f34:	3301      	adds	r3, #1
 8004f36:	4413      	add	r3, r2
 8004f38:	623b      	str	r3, [r7, #32]
 8004f3a:	2300      	movs	r3, #0
 8004f3c:	60fb      	str	r3, [r7, #12]
 8004f3e:	2300      	movs	r3, #0
 8004f40:	61fb      	str	r3, [r7, #28]
 8004f42:	683b      	ldr	r3, [r7, #0]
 8004f44:	681a      	ldr	r2, [r3, #0]
 8004f46:	683b      	ldr	r3, [r7, #0]
 8004f48:	689b      	ldr	r3, [r3, #8]
 8004f4a:	4413      	add	r3, r2
 8004f4c:	781b      	ldrb	r3, [r3, #0]
 8004f4e:	2b22      	cmp	r3, #34	; 0x22
 8004f50:	f040 8103 	bne.w	800515a <parse_string+0x246>
 8004f54:	2300      	movs	r3, #0
 8004f56:	613b      	str	r3, [r7, #16]
 8004f58:	2300      	movs	r3, #0
 8004f5a:	61bb      	str	r3, [r7, #24]
 8004f5c:	e017      	b.n	8004f8e <parse_string+0x7a>
 8004f5e:	6a3b      	ldr	r3, [r7, #32]
 8004f60:	781b      	ldrb	r3, [r3, #0]
 8004f62:	2b5c      	cmp	r3, #92	; 0x5c
 8004f64:	d110      	bne.n	8004f88 <parse_string+0x74>
 8004f66:	6a3b      	ldr	r3, [r7, #32]
 8004f68:	1c5a      	adds	r2, r3, #1
 8004f6a:	683b      	ldr	r3, [r7, #0]
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	1ad3      	subs	r3, r2, r3
 8004f70:	461a      	mov	r2, r3
 8004f72:	683b      	ldr	r3, [r7, #0]
 8004f74:	685b      	ldr	r3, [r3, #4]
 8004f76:	429a      	cmp	r2, r3
 8004f78:	f080 80f1 	bcs.w	800515e <parse_string+0x24a>
 8004f7c:	69bb      	ldr	r3, [r7, #24]
 8004f7e:	3301      	adds	r3, #1
 8004f80:	61bb      	str	r3, [r7, #24]
 8004f82:	6a3b      	ldr	r3, [r7, #32]
 8004f84:	3301      	adds	r3, #1
 8004f86:	623b      	str	r3, [r7, #32]
 8004f88:	6a3b      	ldr	r3, [r7, #32]
 8004f8a:	3301      	adds	r3, #1
 8004f8c:	623b      	str	r3, [r7, #32]
 8004f8e:	683b      	ldr	r3, [r7, #0]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	6a3a      	ldr	r2, [r7, #32]
 8004f94:	1ad3      	subs	r3, r2, r3
 8004f96:	461a      	mov	r2, r3
 8004f98:	683b      	ldr	r3, [r7, #0]
 8004f9a:	685b      	ldr	r3, [r3, #4]
 8004f9c:	429a      	cmp	r2, r3
 8004f9e:	d203      	bcs.n	8004fa8 <parse_string+0x94>
 8004fa0:	6a3b      	ldr	r3, [r7, #32]
 8004fa2:	781b      	ldrb	r3, [r3, #0]
 8004fa4:	2b22      	cmp	r3, #34	; 0x22
 8004fa6:	d1da      	bne.n	8004f5e <parse_string+0x4a>
 8004fa8:	683b      	ldr	r3, [r7, #0]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	6a3a      	ldr	r2, [r7, #32]
 8004fae:	1ad3      	subs	r3, r2, r3
 8004fb0:	461a      	mov	r2, r3
 8004fb2:	683b      	ldr	r3, [r7, #0]
 8004fb4:	685b      	ldr	r3, [r3, #4]
 8004fb6:	429a      	cmp	r2, r3
 8004fb8:	f080 80d3 	bcs.w	8005162 <parse_string+0x24e>
 8004fbc:	6a3b      	ldr	r3, [r7, #32]
 8004fbe:	781b      	ldrb	r3, [r3, #0]
 8004fc0:	2b22      	cmp	r3, #34	; 0x22
 8004fc2:	f040 80ce 	bne.w	8005162 <parse_string+0x24e>
 8004fc6:	683b      	ldr	r3, [r7, #0]
 8004fc8:	681a      	ldr	r2, [r3, #0]
 8004fca:	683b      	ldr	r3, [r7, #0]
 8004fcc:	689b      	ldr	r3, [r3, #8]
 8004fce:	4413      	add	r3, r2
 8004fd0:	6a3a      	ldr	r2, [r7, #32]
 8004fd2:	1ad3      	subs	r3, r2, r3
 8004fd4:	461a      	mov	r2, r3
 8004fd6:	69bb      	ldr	r3, [r7, #24]
 8004fd8:	1ad3      	subs	r3, r2, r3
 8004fda:	613b      	str	r3, [r7, #16]
 8004fdc:	683b      	ldr	r3, [r7, #0]
 8004fde:	691b      	ldr	r3, [r3, #16]
 8004fe0:	693a      	ldr	r2, [r7, #16]
 8004fe2:	3201      	adds	r2, #1
 8004fe4:	4610      	mov	r0, r2
 8004fe6:	4798      	blx	r3
 8004fe8:	61f8      	str	r0, [r7, #28]
 8004fea:	69fb      	ldr	r3, [r7, #28]
 8004fec:	2b00      	cmp	r3, #0
 8004fee:	f000 80ba 	beq.w	8005166 <parse_string+0x252>
 8004ff2:	69fb      	ldr	r3, [r7, #28]
 8004ff4:	60fb      	str	r3, [r7, #12]
 8004ff6:	e094      	b.n	8005122 <parse_string+0x20e>
 8004ff8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ffa:	781b      	ldrb	r3, [r3, #0]
 8004ffc:	2b5c      	cmp	r3, #92	; 0x5c
 8004ffe:	d008      	beq.n	8005012 <parse_string+0xfe>
 8005000:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005002:	1c53      	adds	r3, r2, #1
 8005004:	627b      	str	r3, [r7, #36]	; 0x24
 8005006:	68fb      	ldr	r3, [r7, #12]
 8005008:	1c59      	adds	r1, r3, #1
 800500a:	60f9      	str	r1, [r7, #12]
 800500c:	7812      	ldrb	r2, [r2, #0]
 800500e:	701a      	strb	r2, [r3, #0]
 8005010:	e087      	b.n	8005122 <parse_string+0x20e>
 8005012:	2302      	movs	r3, #2
 8005014:	75fb      	strb	r3, [r7, #23]
 8005016:	6a3a      	ldr	r2, [r7, #32]
 8005018:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800501a:	1ad3      	subs	r3, r2, r3
 800501c:	2b00      	cmp	r3, #0
 800501e:	f340 80a4 	ble.w	800516a <parse_string+0x256>
 8005022:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005024:	3301      	adds	r3, #1
 8005026:	781b      	ldrb	r3, [r3, #0]
 8005028:	2b75      	cmp	r3, #117	; 0x75
 800502a:	f300 80a0 	bgt.w	800516e <parse_string+0x25a>
 800502e:	2b5c      	cmp	r3, #92	; 0x5c
 8005030:	da04      	bge.n	800503c <parse_string+0x128>
 8005032:	2b22      	cmp	r3, #34	; 0x22
 8005034:	d05c      	beq.n	80050f0 <parse_string+0x1dc>
 8005036:	2b2f      	cmp	r3, #47	; 0x2f
 8005038:	d05a      	beq.n	80050f0 <parse_string+0x1dc>
 800503a:	e098      	b.n	800516e <parse_string+0x25a>
 800503c:	3b5c      	subs	r3, #92	; 0x5c
 800503e:	2b19      	cmp	r3, #25
 8005040:	f200 8095 	bhi.w	800516e <parse_string+0x25a>
 8005044:	a201      	add	r2, pc, #4	; (adr r2, 800504c <parse_string+0x138>)
 8005046:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800504a:	bf00      	nop
 800504c:	080050f1 	.word	0x080050f1
 8005050:	0800516f 	.word	0x0800516f
 8005054:	0800516f 	.word	0x0800516f
 8005058:	0800516f 	.word	0x0800516f
 800505c:	0800516f 	.word	0x0800516f
 8005060:	0800516f 	.word	0x0800516f
 8005064:	080050b5 	.word	0x080050b5
 8005068:	0800516f 	.word	0x0800516f
 800506c:	0800516f 	.word	0x0800516f
 8005070:	0800516f 	.word	0x0800516f
 8005074:	080050c1 	.word	0x080050c1
 8005078:	0800516f 	.word	0x0800516f
 800507c:	0800516f 	.word	0x0800516f
 8005080:	0800516f 	.word	0x0800516f
 8005084:	0800516f 	.word	0x0800516f
 8005088:	0800516f 	.word	0x0800516f
 800508c:	0800516f 	.word	0x0800516f
 8005090:	0800516f 	.word	0x0800516f
 8005094:	080050cd 	.word	0x080050cd
 8005098:	0800516f 	.word	0x0800516f
 800509c:	0800516f 	.word	0x0800516f
 80050a0:	0800516f 	.word	0x0800516f
 80050a4:	080050d9 	.word	0x080050d9
 80050a8:	0800516f 	.word	0x0800516f
 80050ac:	080050e5 	.word	0x080050e5
 80050b0:	08005101 	.word	0x08005101
 80050b4:	68fb      	ldr	r3, [r7, #12]
 80050b6:	1c5a      	adds	r2, r3, #1
 80050b8:	60fa      	str	r2, [r7, #12]
 80050ba:	2208      	movs	r2, #8
 80050bc:	701a      	strb	r2, [r3, #0]
 80050be:	e02c      	b.n	800511a <parse_string+0x206>
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	1c5a      	adds	r2, r3, #1
 80050c4:	60fa      	str	r2, [r7, #12]
 80050c6:	220c      	movs	r2, #12
 80050c8:	701a      	strb	r2, [r3, #0]
 80050ca:	e026      	b.n	800511a <parse_string+0x206>
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	1c5a      	adds	r2, r3, #1
 80050d0:	60fa      	str	r2, [r7, #12]
 80050d2:	220a      	movs	r2, #10
 80050d4:	701a      	strb	r2, [r3, #0]
 80050d6:	e020      	b.n	800511a <parse_string+0x206>
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	1c5a      	adds	r2, r3, #1
 80050dc:	60fa      	str	r2, [r7, #12]
 80050de:	220d      	movs	r2, #13
 80050e0:	701a      	strb	r2, [r3, #0]
 80050e2:	e01a      	b.n	800511a <parse_string+0x206>
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	1c5a      	adds	r2, r3, #1
 80050e8:	60fa      	str	r2, [r7, #12]
 80050ea:	2209      	movs	r2, #9
 80050ec:	701a      	strb	r2, [r3, #0]
 80050ee:	e014      	b.n	800511a <parse_string+0x206>
 80050f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80050f2:	1c5a      	adds	r2, r3, #1
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	1c59      	adds	r1, r3, #1
 80050f8:	60f9      	str	r1, [r7, #12]
 80050fa:	7812      	ldrb	r2, [r2, #0]
 80050fc:	701a      	strb	r2, [r3, #0]
 80050fe:	e00c      	b.n	800511a <parse_string+0x206>
 8005100:	f107 030c 	add.w	r3, r7, #12
 8005104:	461a      	mov	r2, r3
 8005106:	6a39      	ldr	r1, [r7, #32]
 8005108:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800510a:	f7ff fe1b 	bl	8004d44 <utf16_literal_to_utf8>
 800510e:	4603      	mov	r3, r0
 8005110:	75fb      	strb	r3, [r7, #23]
 8005112:	7dfb      	ldrb	r3, [r7, #23]
 8005114:	2b00      	cmp	r3, #0
 8005116:	d02c      	beq.n	8005172 <parse_string+0x25e>
 8005118:	bf00      	nop
 800511a:	7dfb      	ldrb	r3, [r7, #23]
 800511c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800511e:	4413      	add	r3, r2
 8005120:	627b      	str	r3, [r7, #36]	; 0x24
 8005122:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005124:	6a3b      	ldr	r3, [r7, #32]
 8005126:	429a      	cmp	r2, r3
 8005128:	f4ff af66 	bcc.w	8004ff8 <parse_string+0xe4>
 800512c:	68fb      	ldr	r3, [r7, #12]
 800512e:	2200      	movs	r2, #0
 8005130:	701a      	strb	r2, [r3, #0]
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	2210      	movs	r2, #16
 8005136:	60da      	str	r2, [r3, #12]
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	69fa      	ldr	r2, [r7, #28]
 800513c:	611a      	str	r2, [r3, #16]
 800513e:	683b      	ldr	r3, [r7, #0]
 8005140:	681b      	ldr	r3, [r3, #0]
 8005142:	6a3a      	ldr	r2, [r7, #32]
 8005144:	1ad3      	subs	r3, r2, r3
 8005146:	461a      	mov	r2, r3
 8005148:	683b      	ldr	r3, [r7, #0]
 800514a:	609a      	str	r2, [r3, #8]
 800514c:	683b      	ldr	r3, [r7, #0]
 800514e:	689b      	ldr	r3, [r3, #8]
 8005150:	1c5a      	adds	r2, r3, #1
 8005152:	683b      	ldr	r3, [r7, #0]
 8005154:	609a      	str	r2, [r3, #8]
 8005156:	2301      	movs	r3, #1
 8005158:	e01e      	b.n	8005198 <parse_string+0x284>
 800515a:	bf00      	nop
 800515c:	e00a      	b.n	8005174 <parse_string+0x260>
 800515e:	bf00      	nop
 8005160:	e008      	b.n	8005174 <parse_string+0x260>
 8005162:	bf00      	nop
 8005164:	e006      	b.n	8005174 <parse_string+0x260>
 8005166:	bf00      	nop
 8005168:	e004      	b.n	8005174 <parse_string+0x260>
 800516a:	bf00      	nop
 800516c:	e002      	b.n	8005174 <parse_string+0x260>
 800516e:	bf00      	nop
 8005170:	e000      	b.n	8005174 <parse_string+0x260>
 8005172:	bf00      	nop
 8005174:	69fb      	ldr	r3, [r7, #28]
 8005176:	2b00      	cmp	r3, #0
 8005178:	d003      	beq.n	8005182 <parse_string+0x26e>
 800517a:	683b      	ldr	r3, [r7, #0]
 800517c:	695b      	ldr	r3, [r3, #20]
 800517e:	69f8      	ldr	r0, [r7, #28]
 8005180:	4798      	blx	r3
 8005182:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005184:	2b00      	cmp	r3, #0
 8005186:	d006      	beq.n	8005196 <parse_string+0x282>
 8005188:	683b      	ldr	r3, [r7, #0]
 800518a:	681b      	ldr	r3, [r3, #0]
 800518c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800518e:	1ad3      	subs	r3, r2, r3
 8005190:	461a      	mov	r2, r3
 8005192:	683b      	ldr	r3, [r7, #0]
 8005194:	609a      	str	r2, [r3, #8]
 8005196:	2300      	movs	r3, #0
 8005198:	4618      	mov	r0, r3
 800519a:	3728      	adds	r7, #40	; 0x28
 800519c:	46bd      	mov	sp, r7
 800519e:	bd80      	pop	{r7, pc}

080051a0 <print_string_ptr>:
 80051a0:	b580      	push	{r7, lr}
 80051a2:	b088      	sub	sp, #32
 80051a4:	af00      	add	r7, sp, #0
 80051a6:	6078      	str	r0, [r7, #4]
 80051a8:	6039      	str	r1, [r7, #0]
 80051aa:	2300      	movs	r3, #0
 80051ac:	61fb      	str	r3, [r7, #28]
 80051ae:	2300      	movs	r3, #0
 80051b0:	613b      	str	r3, [r7, #16]
 80051b2:	2300      	movs	r3, #0
 80051b4:	61bb      	str	r3, [r7, #24]
 80051b6:	2300      	movs	r3, #0
 80051b8:	60fb      	str	r3, [r7, #12]
 80051ba:	2300      	movs	r3, #0
 80051bc:	617b      	str	r3, [r7, #20]
 80051be:	683b      	ldr	r3, [r7, #0]
 80051c0:	2b00      	cmp	r3, #0
 80051c2:	d101      	bne.n	80051c8 <print_string_ptr+0x28>
 80051c4:	2300      	movs	r3, #0
 80051c6:	e110      	b.n	80053ea <print_string_ptr+0x24a>
 80051c8:	687b      	ldr	r3, [r7, #4]
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d111      	bne.n	80051f2 <print_string_ptr+0x52>
 80051ce:	2103      	movs	r1, #3
 80051d0:	6838      	ldr	r0, [r7, #0]
 80051d2:	f7ff fb61 	bl	8004898 <ensure>
 80051d6:	6138      	str	r0, [r7, #16]
 80051d8:	693b      	ldr	r3, [r7, #16]
 80051da:	2b00      	cmp	r3, #0
 80051dc:	d101      	bne.n	80051e2 <print_string_ptr+0x42>
 80051de:	2300      	movs	r3, #0
 80051e0:	e103      	b.n	80053ea <print_string_ptr+0x24a>
 80051e2:	693b      	ldr	r3, [r7, #16]
 80051e4:	4a83      	ldr	r2, [pc, #524]	; (80053f4 <print_string_ptr+0x254>)
 80051e6:	8811      	ldrh	r1, [r2, #0]
 80051e8:	7892      	ldrb	r2, [r2, #2]
 80051ea:	8019      	strh	r1, [r3, #0]
 80051ec:	709a      	strb	r2, [r3, #2]
 80051ee:	2301      	movs	r3, #1
 80051f0:	e0fb      	b.n	80053ea <print_string_ptr+0x24a>
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	61fb      	str	r3, [r7, #28]
 80051f6:	e024      	b.n	8005242 <print_string_ptr+0xa2>
 80051f8:	69fb      	ldr	r3, [r7, #28]
 80051fa:	781b      	ldrb	r3, [r3, #0]
 80051fc:	2b22      	cmp	r3, #34	; 0x22
 80051fe:	dc0f      	bgt.n	8005220 <print_string_ptr+0x80>
 8005200:	2b08      	cmp	r3, #8
 8005202:	db13      	blt.n	800522c <print_string_ptr+0x8c>
 8005204:	3b08      	subs	r3, #8
 8005206:	4a7c      	ldr	r2, [pc, #496]	; (80053f8 <print_string_ptr+0x258>)
 8005208:	fa22 f303 	lsr.w	r3, r2, r3
 800520c:	f003 0301 	and.w	r3, r3, #1
 8005210:	2b00      	cmp	r3, #0
 8005212:	bf14      	ite	ne
 8005214:	2301      	movne	r3, #1
 8005216:	2300      	moveq	r3, #0
 8005218:	b2db      	uxtb	r3, r3
 800521a:	2b00      	cmp	r3, #0
 800521c:	d102      	bne.n	8005224 <print_string_ptr+0x84>
 800521e:	e005      	b.n	800522c <print_string_ptr+0x8c>
 8005220:	2b5c      	cmp	r3, #92	; 0x5c
 8005222:	d103      	bne.n	800522c <print_string_ptr+0x8c>
 8005224:	697b      	ldr	r3, [r7, #20]
 8005226:	3301      	adds	r3, #1
 8005228:	617b      	str	r3, [r7, #20]
 800522a:	e007      	b.n	800523c <print_string_ptr+0x9c>
 800522c:	69fb      	ldr	r3, [r7, #28]
 800522e:	781b      	ldrb	r3, [r3, #0]
 8005230:	2b1f      	cmp	r3, #31
 8005232:	d802      	bhi.n	800523a <print_string_ptr+0x9a>
 8005234:	697b      	ldr	r3, [r7, #20]
 8005236:	3305      	adds	r3, #5
 8005238:	617b      	str	r3, [r7, #20]
 800523a:	bf00      	nop
 800523c:	69fb      	ldr	r3, [r7, #28]
 800523e:	3301      	adds	r3, #1
 8005240:	61fb      	str	r3, [r7, #28]
 8005242:	69fb      	ldr	r3, [r7, #28]
 8005244:	781b      	ldrb	r3, [r3, #0]
 8005246:	2b00      	cmp	r3, #0
 8005248:	d1d6      	bne.n	80051f8 <print_string_ptr+0x58>
 800524a:	69fa      	ldr	r2, [r7, #28]
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	1ad3      	subs	r3, r2, r3
 8005250:	461a      	mov	r2, r3
 8005252:	697b      	ldr	r3, [r7, #20]
 8005254:	4413      	add	r3, r2
 8005256:	60fb      	str	r3, [r7, #12]
 8005258:	68fb      	ldr	r3, [r7, #12]
 800525a:	3303      	adds	r3, #3
 800525c:	4619      	mov	r1, r3
 800525e:	6838      	ldr	r0, [r7, #0]
 8005260:	f7ff fb1a 	bl	8004898 <ensure>
 8005264:	6138      	str	r0, [r7, #16]
 8005266:	693b      	ldr	r3, [r7, #16]
 8005268:	2b00      	cmp	r3, #0
 800526a:	d101      	bne.n	8005270 <print_string_ptr+0xd0>
 800526c:	2300      	movs	r3, #0
 800526e:	e0bc      	b.n	80053ea <print_string_ptr+0x24a>
 8005270:	697b      	ldr	r3, [r7, #20]
 8005272:	2b00      	cmp	r3, #0
 8005274:	d117      	bne.n	80052a6 <print_string_ptr+0x106>
 8005276:	693b      	ldr	r3, [r7, #16]
 8005278:	2222      	movs	r2, #34	; 0x22
 800527a:	701a      	strb	r2, [r3, #0]
 800527c:	693b      	ldr	r3, [r7, #16]
 800527e:	3301      	adds	r3, #1
 8005280:	68fa      	ldr	r2, [r7, #12]
 8005282:	6879      	ldr	r1, [r7, #4]
 8005284:	4618      	mov	r0, r3
 8005286:	f00d fee4 	bl	8013052 <memcpy>
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	3301      	adds	r3, #1
 800528e:	693a      	ldr	r2, [r7, #16]
 8005290:	4413      	add	r3, r2
 8005292:	2222      	movs	r2, #34	; 0x22
 8005294:	701a      	strb	r2, [r3, #0]
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	3302      	adds	r3, #2
 800529a:	693a      	ldr	r2, [r7, #16]
 800529c:	4413      	add	r3, r2
 800529e:	2200      	movs	r2, #0
 80052a0:	701a      	strb	r2, [r3, #0]
 80052a2:	2301      	movs	r3, #1
 80052a4:	e0a1      	b.n	80053ea <print_string_ptr+0x24a>
 80052a6:	693b      	ldr	r3, [r7, #16]
 80052a8:	2222      	movs	r2, #34	; 0x22
 80052aa:	701a      	strb	r2, [r3, #0]
 80052ac:	693b      	ldr	r3, [r7, #16]
 80052ae:	3301      	adds	r3, #1
 80052b0:	61bb      	str	r3, [r7, #24]
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	61fb      	str	r3, [r7, #28]
 80052b6:	e086      	b.n	80053c6 <print_string_ptr+0x226>
 80052b8:	69fb      	ldr	r3, [r7, #28]
 80052ba:	781b      	ldrb	r3, [r3, #0]
 80052bc:	2b1f      	cmp	r3, #31
 80052be:	d90c      	bls.n	80052da <print_string_ptr+0x13a>
 80052c0:	69fb      	ldr	r3, [r7, #28]
 80052c2:	781b      	ldrb	r3, [r3, #0]
 80052c4:	2b22      	cmp	r3, #34	; 0x22
 80052c6:	d008      	beq.n	80052da <print_string_ptr+0x13a>
 80052c8:	69fb      	ldr	r3, [r7, #28]
 80052ca:	781b      	ldrb	r3, [r3, #0]
 80052cc:	2b5c      	cmp	r3, #92	; 0x5c
 80052ce:	d004      	beq.n	80052da <print_string_ptr+0x13a>
 80052d0:	69fb      	ldr	r3, [r7, #28]
 80052d2:	781a      	ldrb	r2, [r3, #0]
 80052d4:	69bb      	ldr	r3, [r7, #24]
 80052d6:	701a      	strb	r2, [r3, #0]
 80052d8:	e06f      	b.n	80053ba <print_string_ptr+0x21a>
 80052da:	69bb      	ldr	r3, [r7, #24]
 80052dc:	1c5a      	adds	r2, r3, #1
 80052de:	61ba      	str	r2, [r7, #24]
 80052e0:	225c      	movs	r2, #92	; 0x5c
 80052e2:	701a      	strb	r2, [r3, #0]
 80052e4:	69fb      	ldr	r3, [r7, #28]
 80052e6:	781b      	ldrb	r3, [r3, #0]
 80052e8:	2b22      	cmp	r3, #34	; 0x22
 80052ea:	dc3d      	bgt.n	8005368 <print_string_ptr+0x1c8>
 80052ec:	2b08      	cmp	r3, #8
 80052ee:	db59      	blt.n	80053a4 <print_string_ptr+0x204>
 80052f0:	3b08      	subs	r3, #8
 80052f2:	2b1a      	cmp	r3, #26
 80052f4:	d856      	bhi.n	80053a4 <print_string_ptr+0x204>
 80052f6:	a201      	add	r2, pc, #4	; (adr r2, 80052fc <print_string_ptr+0x15c>)
 80052f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80052fc:	0800537d 	.word	0x0800537d
 8005300:	0800539d 	.word	0x0800539d
 8005304:	0800538d 	.word	0x0800538d
 8005308:	080053a5 	.word	0x080053a5
 800530c:	08005385 	.word	0x08005385
 8005310:	08005395 	.word	0x08005395
 8005314:	080053a5 	.word	0x080053a5
 8005318:	080053a5 	.word	0x080053a5
 800531c:	080053a5 	.word	0x080053a5
 8005320:	080053a5 	.word	0x080053a5
 8005324:	080053a5 	.word	0x080053a5
 8005328:	080053a5 	.word	0x080053a5
 800532c:	080053a5 	.word	0x080053a5
 8005330:	080053a5 	.word	0x080053a5
 8005334:	080053a5 	.word	0x080053a5
 8005338:	080053a5 	.word	0x080053a5
 800533c:	080053a5 	.word	0x080053a5
 8005340:	080053a5 	.word	0x080053a5
 8005344:	080053a5 	.word	0x080053a5
 8005348:	080053a5 	.word	0x080053a5
 800534c:	080053a5 	.word	0x080053a5
 8005350:	080053a5 	.word	0x080053a5
 8005354:	080053a5 	.word	0x080053a5
 8005358:	080053a5 	.word	0x080053a5
 800535c:	080053a5 	.word	0x080053a5
 8005360:	080053a5 	.word	0x080053a5
 8005364:	08005375 	.word	0x08005375
 8005368:	2b5c      	cmp	r3, #92	; 0x5c
 800536a:	d11b      	bne.n	80053a4 <print_string_ptr+0x204>
 800536c:	69bb      	ldr	r3, [r7, #24]
 800536e:	225c      	movs	r2, #92	; 0x5c
 8005370:	701a      	strb	r2, [r3, #0]
 8005372:	e022      	b.n	80053ba <print_string_ptr+0x21a>
 8005374:	69bb      	ldr	r3, [r7, #24]
 8005376:	2222      	movs	r2, #34	; 0x22
 8005378:	701a      	strb	r2, [r3, #0]
 800537a:	e01e      	b.n	80053ba <print_string_ptr+0x21a>
 800537c:	69bb      	ldr	r3, [r7, #24]
 800537e:	2262      	movs	r2, #98	; 0x62
 8005380:	701a      	strb	r2, [r3, #0]
 8005382:	e01a      	b.n	80053ba <print_string_ptr+0x21a>
 8005384:	69bb      	ldr	r3, [r7, #24]
 8005386:	2266      	movs	r2, #102	; 0x66
 8005388:	701a      	strb	r2, [r3, #0]
 800538a:	e016      	b.n	80053ba <print_string_ptr+0x21a>
 800538c:	69bb      	ldr	r3, [r7, #24]
 800538e:	226e      	movs	r2, #110	; 0x6e
 8005390:	701a      	strb	r2, [r3, #0]
 8005392:	e012      	b.n	80053ba <print_string_ptr+0x21a>
 8005394:	69bb      	ldr	r3, [r7, #24]
 8005396:	2272      	movs	r2, #114	; 0x72
 8005398:	701a      	strb	r2, [r3, #0]
 800539a:	e00e      	b.n	80053ba <print_string_ptr+0x21a>
 800539c:	69bb      	ldr	r3, [r7, #24]
 800539e:	2274      	movs	r2, #116	; 0x74
 80053a0:	701a      	strb	r2, [r3, #0]
 80053a2:	e00a      	b.n	80053ba <print_string_ptr+0x21a>
 80053a4:	69fb      	ldr	r3, [r7, #28]
 80053a6:	781b      	ldrb	r3, [r3, #0]
 80053a8:	461a      	mov	r2, r3
 80053aa:	4914      	ldr	r1, [pc, #80]	; (80053fc <print_string_ptr+0x25c>)
 80053ac:	69b8      	ldr	r0, [r7, #24]
 80053ae:	f00d fc51 	bl	8012c54 <siprintf>
 80053b2:	69bb      	ldr	r3, [r7, #24]
 80053b4:	3304      	adds	r3, #4
 80053b6:	61bb      	str	r3, [r7, #24]
 80053b8:	bf00      	nop
 80053ba:	69fb      	ldr	r3, [r7, #28]
 80053bc:	3301      	adds	r3, #1
 80053be:	61fb      	str	r3, [r7, #28]
 80053c0:	69bb      	ldr	r3, [r7, #24]
 80053c2:	3301      	adds	r3, #1
 80053c4:	61bb      	str	r3, [r7, #24]
 80053c6:	69fb      	ldr	r3, [r7, #28]
 80053c8:	781b      	ldrb	r3, [r3, #0]
 80053ca:	2b00      	cmp	r3, #0
 80053cc:	f47f af74 	bne.w	80052b8 <print_string_ptr+0x118>
 80053d0:	68fb      	ldr	r3, [r7, #12]
 80053d2:	3301      	adds	r3, #1
 80053d4:	693a      	ldr	r2, [r7, #16]
 80053d6:	4413      	add	r3, r2
 80053d8:	2222      	movs	r2, #34	; 0x22
 80053da:	701a      	strb	r2, [r3, #0]
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	3302      	adds	r3, #2
 80053e0:	693a      	ldr	r2, [r7, #16]
 80053e2:	4413      	add	r3, r2
 80053e4:	2200      	movs	r2, #0
 80053e6:	701a      	strb	r2, [r3, #0]
 80053e8:	2301      	movs	r3, #1
 80053ea:	4618      	mov	r0, r3
 80053ec:	3720      	adds	r7, #32
 80053ee:	46bd      	mov	sp, r7
 80053f0:	bd80      	pop	{r7, pc}
 80053f2:	bf00      	nop
 80053f4:	08016100 	.word	0x08016100
 80053f8:	04000037 	.word	0x04000037
 80053fc:	08016104 	.word	0x08016104

08005400 <print_string>:
 8005400:	b580      	push	{r7, lr}
 8005402:	b082      	sub	sp, #8
 8005404:	af00      	add	r7, sp, #0
 8005406:	6078      	str	r0, [r7, #4]
 8005408:	6039      	str	r1, [r7, #0]
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	691b      	ldr	r3, [r3, #16]
 800540e:	6839      	ldr	r1, [r7, #0]
 8005410:	4618      	mov	r0, r3
 8005412:	f7ff fec5 	bl	80051a0 <print_string_ptr>
 8005416:	4603      	mov	r3, r0
 8005418:	4618      	mov	r0, r3
 800541a:	3708      	adds	r7, #8
 800541c:	46bd      	mov	sp, r7
 800541e:	bd80      	pop	{r7, pc}

08005420 <buffer_skip_whitespace>:
 8005420:	b480      	push	{r7}
 8005422:	b083      	sub	sp, #12
 8005424:	af00      	add	r7, sp, #0
 8005426:	6078      	str	r0, [r7, #4]
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	2b00      	cmp	r3, #0
 800542c:	d003      	beq.n	8005436 <buffer_skip_whitespace+0x16>
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	681b      	ldr	r3, [r3, #0]
 8005432:	2b00      	cmp	r3, #0
 8005434:	d101      	bne.n	800543a <buffer_skip_whitespace+0x1a>
 8005436:	2300      	movs	r3, #0
 8005438:	e02c      	b.n	8005494 <buffer_skip_whitespace+0x74>
 800543a:	687b      	ldr	r3, [r7, #4]
 800543c:	2b00      	cmp	r3, #0
 800543e:	d005      	beq.n	800544c <buffer_skip_whitespace+0x2c>
 8005440:	687b      	ldr	r3, [r7, #4]
 8005442:	689a      	ldr	r2, [r3, #8]
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	685b      	ldr	r3, [r3, #4]
 8005448:	429a      	cmp	r2, r3
 800544a:	d306      	bcc.n	800545a <buffer_skip_whitespace+0x3a>
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	e021      	b.n	8005494 <buffer_skip_whitespace+0x74>
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	689b      	ldr	r3, [r3, #8]
 8005454:	1c5a      	adds	r2, r3, #1
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	609a      	str	r2, [r3, #8]
 800545a:	687b      	ldr	r3, [r7, #4]
 800545c:	2b00      	cmp	r3, #0
 800545e:	d00d      	beq.n	800547c <buffer_skip_whitespace+0x5c>
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	689a      	ldr	r2, [r3, #8]
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	685b      	ldr	r3, [r3, #4]
 8005468:	429a      	cmp	r2, r3
 800546a:	d207      	bcs.n	800547c <buffer_skip_whitespace+0x5c>
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	681a      	ldr	r2, [r3, #0]
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	689b      	ldr	r3, [r3, #8]
 8005474:	4413      	add	r3, r2
 8005476:	781b      	ldrb	r3, [r3, #0]
 8005478:	2b20      	cmp	r3, #32
 800547a:	d9e9      	bls.n	8005450 <buffer_skip_whitespace+0x30>
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	689a      	ldr	r2, [r3, #8]
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	685b      	ldr	r3, [r3, #4]
 8005484:	429a      	cmp	r2, r3
 8005486:	d104      	bne.n	8005492 <buffer_skip_whitespace+0x72>
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	689b      	ldr	r3, [r3, #8]
 800548c:	1e5a      	subs	r2, r3, #1
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	609a      	str	r2, [r3, #8]
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	4618      	mov	r0, r3
 8005496:	370c      	adds	r7, #12
 8005498:	46bd      	mov	sp, r7
 800549a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800549e:	4770      	bx	lr

080054a0 <skip_utf8_bom>:
 80054a0:	b580      	push	{r7, lr}
 80054a2:	b082      	sub	sp, #8
 80054a4:	af00      	add	r7, sp, #0
 80054a6:	6078      	str	r0, [r7, #4]
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	2b00      	cmp	r3, #0
 80054ac:	d007      	beq.n	80054be <skip_utf8_bom+0x1e>
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	2b00      	cmp	r3, #0
 80054b4:	d003      	beq.n	80054be <skip_utf8_bom+0x1e>
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	689b      	ldr	r3, [r3, #8]
 80054ba:	2b00      	cmp	r3, #0
 80054bc:	d001      	beq.n	80054c2 <skip_utf8_bom+0x22>
 80054be:	2300      	movs	r3, #0
 80054c0:	e01c      	b.n	80054fc <skip_utf8_bom+0x5c>
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	2b00      	cmp	r3, #0
 80054c6:	d018      	beq.n	80054fa <skip_utf8_bom+0x5a>
 80054c8:	687b      	ldr	r3, [r7, #4]
 80054ca:	689b      	ldr	r3, [r3, #8]
 80054cc:	1d1a      	adds	r2, r3, #4
 80054ce:	687b      	ldr	r3, [r7, #4]
 80054d0:	685b      	ldr	r3, [r3, #4]
 80054d2:	429a      	cmp	r2, r3
 80054d4:	d211      	bcs.n	80054fa <skip_utf8_bom+0x5a>
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	681a      	ldr	r2, [r3, #0]
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	689b      	ldr	r3, [r3, #8]
 80054de:	4413      	add	r3, r2
 80054e0:	2203      	movs	r2, #3
 80054e2:	4908      	ldr	r1, [pc, #32]	; (8005504 <skip_utf8_bom+0x64>)
 80054e4:	4618      	mov	r0, r3
 80054e6:	f00d fcce 	bl	8012e86 <strncmp>
 80054ea:	4603      	mov	r3, r0
 80054ec:	2b00      	cmp	r3, #0
 80054ee:	d104      	bne.n	80054fa <skip_utf8_bom+0x5a>
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	689b      	ldr	r3, [r3, #8]
 80054f4:	1cda      	adds	r2, r3, #3
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	609a      	str	r2, [r3, #8]
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	4618      	mov	r0, r3
 80054fe:	3708      	adds	r7, #8
 8005500:	46bd      	mov	sp, r7
 8005502:	bd80      	pop	{r7, pc}
 8005504:	0801610c 	.word	0x0801610c

08005508 <cJSON_ParseWithOpts>:
 8005508:	b580      	push	{r7, lr}
 800550a:	b086      	sub	sp, #24
 800550c:	af00      	add	r7, sp, #0
 800550e:	60f8      	str	r0, [r7, #12]
 8005510:	60b9      	str	r1, [r7, #8]
 8005512:	607a      	str	r2, [r7, #4]
 8005514:	68fb      	ldr	r3, [r7, #12]
 8005516:	2b00      	cmp	r3, #0
 8005518:	d101      	bne.n	800551e <cJSON_ParseWithOpts+0x16>
 800551a:	2300      	movs	r3, #0
 800551c:	e00c      	b.n	8005538 <cJSON_ParseWithOpts+0x30>
 800551e:	68f8      	ldr	r0, [r7, #12]
 8005520:	f7fa feb6 	bl	8000290 <strlen>
 8005524:	4603      	mov	r3, r0
 8005526:	3301      	adds	r3, #1
 8005528:	617b      	str	r3, [r7, #20]
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	68ba      	ldr	r2, [r7, #8]
 800552e:	6979      	ldr	r1, [r7, #20]
 8005530:	68f8      	ldr	r0, [r7, #12]
 8005532:	f000 f805 	bl	8005540 <cJSON_ParseWithLengthOpts>
 8005536:	4603      	mov	r3, r0
 8005538:	4618      	mov	r0, r3
 800553a:	3718      	adds	r7, #24
 800553c:	46bd      	mov	sp, r7
 800553e:	bd80      	pop	{r7, pc}

08005540 <cJSON_ParseWithLengthOpts>:
 8005540:	b580      	push	{r7, lr}
 8005542:	b08e      	sub	sp, #56	; 0x38
 8005544:	af00      	add	r7, sp, #0
 8005546:	60f8      	str	r0, [r7, #12]
 8005548:	60b9      	str	r1, [r7, #8]
 800554a:	607a      	str	r2, [r7, #4]
 800554c:	603b      	str	r3, [r7, #0]
 800554e:	f107 0318 	add.w	r3, r7, #24
 8005552:	2200      	movs	r2, #0
 8005554:	601a      	str	r2, [r3, #0]
 8005556:	605a      	str	r2, [r3, #4]
 8005558:	609a      	str	r2, [r3, #8]
 800555a:	60da      	str	r2, [r3, #12]
 800555c:	611a      	str	r2, [r3, #16]
 800555e:	615a      	str	r2, [r3, #20]
 8005560:	619a      	str	r2, [r3, #24]
 8005562:	2300      	movs	r3, #0
 8005564:	637b      	str	r3, [r7, #52]	; 0x34
 8005566:	4b41      	ldr	r3, [pc, #260]	; (800566c <cJSON_ParseWithLengthOpts+0x12c>)
 8005568:	2200      	movs	r2, #0
 800556a:	601a      	str	r2, [r3, #0]
 800556c:	4b3f      	ldr	r3, [pc, #252]	; (800566c <cJSON_ParseWithLengthOpts+0x12c>)
 800556e:	2200      	movs	r2, #0
 8005570:	605a      	str	r2, [r3, #4]
 8005572:	68fb      	ldr	r3, [r7, #12]
 8005574:	2b00      	cmp	r3, #0
 8005576:	d042      	beq.n	80055fe <cJSON_ParseWithLengthOpts+0xbe>
 8005578:	68bb      	ldr	r3, [r7, #8]
 800557a:	2b00      	cmp	r3, #0
 800557c:	d03f      	beq.n	80055fe <cJSON_ParseWithLengthOpts+0xbe>
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	61bb      	str	r3, [r7, #24]
 8005582:	68bb      	ldr	r3, [r7, #8]
 8005584:	61fb      	str	r3, [r7, #28]
 8005586:	2300      	movs	r3, #0
 8005588:	623b      	str	r3, [r7, #32]
 800558a:	4a39      	ldr	r2, [pc, #228]	; (8005670 <cJSON_ParseWithLengthOpts+0x130>)
 800558c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005590:	ca07      	ldmia	r2, {r0, r1, r2}
 8005592:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005596:	4836      	ldr	r0, [pc, #216]	; (8005670 <cJSON_ParseWithLengthOpts+0x130>)
 8005598:	f7ff f84a 	bl	8004630 <cJSON_New_Item>
 800559c:	6378      	str	r0, [r7, #52]	; 0x34
 800559e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80055a0:	2b00      	cmp	r3, #0
 80055a2:	d02e      	beq.n	8005602 <cJSON_ParseWithLengthOpts+0xc2>
 80055a4:	f107 0318 	add.w	r3, r7, #24
 80055a8:	4618      	mov	r0, r3
 80055aa:	f7ff ff79 	bl	80054a0 <skip_utf8_bom>
 80055ae:	4603      	mov	r3, r0
 80055b0:	4618      	mov	r0, r3
 80055b2:	f7ff ff35 	bl	8005420 <buffer_skip_whitespace>
 80055b6:	4603      	mov	r3, r0
 80055b8:	4619      	mov	r1, r3
 80055ba:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80055bc:	f000 f8fc 	bl	80057b8 <parse_value>
 80055c0:	4603      	mov	r3, r0
 80055c2:	2b00      	cmp	r3, #0
 80055c4:	d01f      	beq.n	8005606 <cJSON_ParseWithLengthOpts+0xc6>
 80055c6:	683b      	ldr	r3, [r7, #0]
 80055c8:	2b00      	cmp	r3, #0
 80055ca:	d00e      	beq.n	80055ea <cJSON_ParseWithLengthOpts+0xaa>
 80055cc:	f107 0318 	add.w	r3, r7, #24
 80055d0:	4618      	mov	r0, r3
 80055d2:	f7ff ff25 	bl	8005420 <buffer_skip_whitespace>
 80055d6:	6a3a      	ldr	r2, [r7, #32]
 80055d8:	69fb      	ldr	r3, [r7, #28]
 80055da:	429a      	cmp	r2, r3
 80055dc:	d215      	bcs.n	800560a <cJSON_ParseWithLengthOpts+0xca>
 80055de:	69ba      	ldr	r2, [r7, #24]
 80055e0:	6a3b      	ldr	r3, [r7, #32]
 80055e2:	4413      	add	r3, r2
 80055e4:	781b      	ldrb	r3, [r3, #0]
 80055e6:	2b00      	cmp	r3, #0
 80055e8:	d10f      	bne.n	800560a <cJSON_ParseWithLengthOpts+0xca>
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	2b00      	cmp	r3, #0
 80055ee:	d004      	beq.n	80055fa <cJSON_ParseWithLengthOpts+0xba>
 80055f0:	69ba      	ldr	r2, [r7, #24]
 80055f2:	6a3b      	ldr	r3, [r7, #32]
 80055f4:	441a      	add	r2, r3
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	601a      	str	r2, [r3, #0]
 80055fa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80055fc:	e031      	b.n	8005662 <cJSON_ParseWithLengthOpts+0x122>
 80055fe:	bf00      	nop
 8005600:	e004      	b.n	800560c <cJSON_ParseWithLengthOpts+0xcc>
 8005602:	bf00      	nop
 8005604:	e002      	b.n	800560c <cJSON_ParseWithLengthOpts+0xcc>
 8005606:	bf00      	nop
 8005608:	e000      	b.n	800560c <cJSON_ParseWithLengthOpts+0xcc>
 800560a:	bf00      	nop
 800560c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800560e:	2b00      	cmp	r3, #0
 8005610:	d002      	beq.n	8005618 <cJSON_ParseWithLengthOpts+0xd8>
 8005612:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8005614:	f7ff f822 	bl	800465c <cJSON_Delete>
 8005618:	68fb      	ldr	r3, [r7, #12]
 800561a:	2b00      	cmp	r3, #0
 800561c:	d020      	beq.n	8005660 <cJSON_ParseWithLengthOpts+0x120>
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	613b      	str	r3, [r7, #16]
 8005622:	2300      	movs	r3, #0
 8005624:	617b      	str	r3, [r7, #20]
 8005626:	6a3a      	ldr	r2, [r7, #32]
 8005628:	69fb      	ldr	r3, [r7, #28]
 800562a:	429a      	cmp	r2, r3
 800562c:	d202      	bcs.n	8005634 <cJSON_ParseWithLengthOpts+0xf4>
 800562e:	6a3b      	ldr	r3, [r7, #32]
 8005630:	617b      	str	r3, [r7, #20]
 8005632:	e005      	b.n	8005640 <cJSON_ParseWithLengthOpts+0x100>
 8005634:	69fb      	ldr	r3, [r7, #28]
 8005636:	2b00      	cmp	r3, #0
 8005638:	d002      	beq.n	8005640 <cJSON_ParseWithLengthOpts+0x100>
 800563a:	69fb      	ldr	r3, [r7, #28]
 800563c:	3b01      	subs	r3, #1
 800563e:	617b      	str	r3, [r7, #20]
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	2b00      	cmp	r3, #0
 8005644:	d004      	beq.n	8005650 <cJSON_ParseWithLengthOpts+0x110>
 8005646:	693a      	ldr	r2, [r7, #16]
 8005648:	697b      	ldr	r3, [r7, #20]
 800564a:	441a      	add	r2, r3
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	601a      	str	r2, [r3, #0]
 8005650:	4b06      	ldr	r3, [pc, #24]	; (800566c <cJSON_ParseWithLengthOpts+0x12c>)
 8005652:	461a      	mov	r2, r3
 8005654:	f107 0310 	add.w	r3, r7, #16
 8005658:	e893 0003 	ldmia.w	r3, {r0, r1}
 800565c:	e882 0003 	stmia.w	r2, {r0, r1}
 8005660:	2300      	movs	r3, #0
 8005662:	4618      	mov	r0, r3
 8005664:	3738      	adds	r7, #56	; 0x38
 8005666:	46bd      	mov	sp, r7
 8005668:	bd80      	pop	{r7, pc}
 800566a:	bf00      	nop
 800566c:	200002a8 	.word	0x200002a8
 8005670:	20000048 	.word	0x20000048

08005674 <cJSON_Parse>:
 8005674:	b580      	push	{r7, lr}
 8005676:	b082      	sub	sp, #8
 8005678:	af00      	add	r7, sp, #0
 800567a:	6078      	str	r0, [r7, #4]
 800567c:	2200      	movs	r2, #0
 800567e:	2100      	movs	r1, #0
 8005680:	6878      	ldr	r0, [r7, #4]
 8005682:	f7ff ff41 	bl	8005508 <cJSON_ParseWithOpts>
 8005686:	4603      	mov	r3, r0
 8005688:	4618      	mov	r0, r3
 800568a:	3708      	adds	r7, #8
 800568c:	46bd      	mov	sp, r7
 800568e:	bd80      	pop	{r7, pc}

08005690 <print>:
 8005690:	b580      	push	{r7, lr}
 8005692:	b08e      	sub	sp, #56	; 0x38
 8005694:	af00      	add	r7, sp, #0
 8005696:	60f8      	str	r0, [r7, #12]
 8005698:	60b9      	str	r1, [r7, #8]
 800569a:	607a      	str	r2, [r7, #4]
 800569c:	2300      	movs	r3, #0
 800569e:	637b      	str	r3, [r7, #52]	; 0x34
 80056a0:	f107 0310 	add.w	r3, r7, #16
 80056a4:	2224      	movs	r2, #36	; 0x24
 80056a6:	2100      	movs	r1, #0
 80056a8:	4618      	mov	r0, r3
 80056aa:	f00d fbc7 	bl	8012e3c <memset>
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	681b      	ldr	r3, [r3, #0]
 80056b2:	4a38      	ldr	r2, [pc, #224]	; (8005794 <print+0x104>)
 80056b4:	6812      	ldr	r2, [r2, #0]
 80056b6:	4610      	mov	r0, r2
 80056b8:	4798      	blx	r3
 80056ba:	4603      	mov	r3, r0
 80056bc:	613b      	str	r3, [r7, #16]
 80056be:	4b35      	ldr	r3, [pc, #212]	; (8005794 <print+0x104>)
 80056c0:	681b      	ldr	r3, [r3, #0]
 80056c2:	617b      	str	r3, [r7, #20]
 80056c4:	68bb      	ldr	r3, [r7, #8]
 80056c6:	627b      	str	r3, [r7, #36]	; 0x24
 80056c8:	687a      	ldr	r2, [r7, #4]
 80056ca:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80056ce:	ca07      	ldmia	r2, {r0, r1, r2}
 80056d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80056d4:	693b      	ldr	r3, [r7, #16]
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	d040      	beq.n	800575c <print+0xcc>
 80056da:	f107 0310 	add.w	r3, r7, #16
 80056de:	4619      	mov	r1, r3
 80056e0:	68f8      	ldr	r0, [r7, #12]
 80056e2:	f000 f955 	bl	8005990 <print_value>
 80056e6:	4603      	mov	r3, r0
 80056e8:	2b00      	cmp	r3, #0
 80056ea:	d039      	beq.n	8005760 <print+0xd0>
 80056ec:	f107 0310 	add.w	r3, r7, #16
 80056f0:	4618      	mov	r0, r3
 80056f2:	f7ff f96b 	bl	80049cc <update_offset>
 80056f6:	687b      	ldr	r3, [r7, #4]
 80056f8:	689b      	ldr	r3, [r3, #8]
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	d00d      	beq.n	800571a <print+0x8a>
 80056fe:	687b      	ldr	r3, [r7, #4]
 8005700:	689b      	ldr	r3, [r3, #8]
 8005702:	6938      	ldr	r0, [r7, #16]
 8005704:	69ba      	ldr	r2, [r7, #24]
 8005706:	3201      	adds	r2, #1
 8005708:	4611      	mov	r1, r2
 800570a:	4798      	blx	r3
 800570c:	6378      	str	r0, [r7, #52]	; 0x34
 800570e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005710:	2b00      	cmp	r3, #0
 8005712:	d027      	beq.n	8005764 <print+0xd4>
 8005714:	2300      	movs	r3, #0
 8005716:	613b      	str	r3, [r7, #16]
 8005718:	e01e      	b.n	8005758 <print+0xc8>
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	681b      	ldr	r3, [r3, #0]
 800571e:	69ba      	ldr	r2, [r7, #24]
 8005720:	3201      	adds	r2, #1
 8005722:	4610      	mov	r0, r2
 8005724:	4798      	blx	r3
 8005726:	6378      	str	r0, [r7, #52]	; 0x34
 8005728:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800572a:	2b00      	cmp	r3, #0
 800572c:	d01c      	beq.n	8005768 <print+0xd8>
 800572e:	6939      	ldr	r1, [r7, #16]
 8005730:	69bb      	ldr	r3, [r7, #24]
 8005732:	1c5a      	adds	r2, r3, #1
 8005734:	697b      	ldr	r3, [r7, #20]
 8005736:	4293      	cmp	r3, r2
 8005738:	bf28      	it	cs
 800573a:	4613      	movcs	r3, r2
 800573c:	461a      	mov	r2, r3
 800573e:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8005740:	f00d fc87 	bl	8013052 <memcpy>
 8005744:	69bb      	ldr	r3, [r7, #24]
 8005746:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8005748:	4413      	add	r3, r2
 800574a:	2200      	movs	r2, #0
 800574c:	701a      	strb	r2, [r3, #0]
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	685b      	ldr	r3, [r3, #4]
 8005752:	693a      	ldr	r2, [r7, #16]
 8005754:	4610      	mov	r0, r2
 8005756:	4798      	blx	r3
 8005758:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800575a:	e016      	b.n	800578a <print+0xfa>
 800575c:	bf00      	nop
 800575e:	e004      	b.n	800576a <print+0xda>
 8005760:	bf00      	nop
 8005762:	e002      	b.n	800576a <print+0xda>
 8005764:	bf00      	nop
 8005766:	e000      	b.n	800576a <print+0xda>
 8005768:	bf00      	nop
 800576a:	693b      	ldr	r3, [r7, #16]
 800576c:	2b00      	cmp	r3, #0
 800576e:	d004      	beq.n	800577a <print+0xea>
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	685b      	ldr	r3, [r3, #4]
 8005774:	693a      	ldr	r2, [r7, #16]
 8005776:	4610      	mov	r0, r2
 8005778:	4798      	blx	r3
 800577a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800577c:	2b00      	cmp	r3, #0
 800577e:	d003      	beq.n	8005788 <print+0xf8>
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	685b      	ldr	r3, [r3, #4]
 8005784:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8005786:	4798      	blx	r3
 8005788:	2300      	movs	r3, #0
 800578a:	4618      	mov	r0, r3
 800578c:	3738      	adds	r7, #56	; 0x38
 800578e:	46bd      	mov	sp, r7
 8005790:	bd80      	pop	{r7, pc}
 8005792:	bf00      	nop
 8005794:	08016788 	.word	0x08016788

08005798 <cJSON_Print>:
 8005798:	b580      	push	{r7, lr}
 800579a:	b082      	sub	sp, #8
 800579c:	af00      	add	r7, sp, #0
 800579e:	6078      	str	r0, [r7, #4]
 80057a0:	4a04      	ldr	r2, [pc, #16]	; (80057b4 <cJSON_Print+0x1c>)
 80057a2:	2101      	movs	r1, #1
 80057a4:	6878      	ldr	r0, [r7, #4]
 80057a6:	f7ff ff73 	bl	8005690 <print>
 80057aa:	4603      	mov	r3, r0
 80057ac:	4618      	mov	r0, r3
 80057ae:	3708      	adds	r7, #8
 80057b0:	46bd      	mov	sp, r7
 80057b2:	bd80      	pop	{r7, pc}
 80057b4:	20000048 	.word	0x20000048

080057b8 <parse_value>:
 80057b8:	b580      	push	{r7, lr}
 80057ba:	b082      	sub	sp, #8
 80057bc:	af00      	add	r7, sp, #0
 80057be:	6078      	str	r0, [r7, #4]
 80057c0:	6039      	str	r1, [r7, #0]
 80057c2:	683b      	ldr	r3, [r7, #0]
 80057c4:	2b00      	cmp	r3, #0
 80057c6:	d003      	beq.n	80057d0 <parse_value+0x18>
 80057c8:	683b      	ldr	r3, [r7, #0]
 80057ca:	681b      	ldr	r3, [r3, #0]
 80057cc:	2b00      	cmp	r3, #0
 80057ce:	d101      	bne.n	80057d4 <parse_value+0x1c>
 80057d0:	2300      	movs	r3, #0
 80057d2:	e0d2      	b.n	800597a <parse_value+0x1c2>
 80057d4:	683b      	ldr	r3, [r7, #0]
 80057d6:	2b00      	cmp	r3, #0
 80057d8:	d01d      	beq.n	8005816 <parse_value+0x5e>
 80057da:	683b      	ldr	r3, [r7, #0]
 80057dc:	689b      	ldr	r3, [r3, #8]
 80057de:	1d1a      	adds	r2, r3, #4
 80057e0:	683b      	ldr	r3, [r7, #0]
 80057e2:	685b      	ldr	r3, [r3, #4]
 80057e4:	429a      	cmp	r2, r3
 80057e6:	d816      	bhi.n	8005816 <parse_value+0x5e>
 80057e8:	683b      	ldr	r3, [r7, #0]
 80057ea:	681a      	ldr	r2, [r3, #0]
 80057ec:	683b      	ldr	r3, [r7, #0]
 80057ee:	689b      	ldr	r3, [r3, #8]
 80057f0:	4413      	add	r3, r2
 80057f2:	2204      	movs	r2, #4
 80057f4:	4963      	ldr	r1, [pc, #396]	; (8005984 <parse_value+0x1cc>)
 80057f6:	4618      	mov	r0, r3
 80057f8:	f00d fb45 	bl	8012e86 <strncmp>
 80057fc:	4603      	mov	r3, r0
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d109      	bne.n	8005816 <parse_value+0x5e>
 8005802:	687b      	ldr	r3, [r7, #4]
 8005804:	2204      	movs	r2, #4
 8005806:	60da      	str	r2, [r3, #12]
 8005808:	683b      	ldr	r3, [r7, #0]
 800580a:	689b      	ldr	r3, [r3, #8]
 800580c:	1d1a      	adds	r2, r3, #4
 800580e:	683b      	ldr	r3, [r7, #0]
 8005810:	609a      	str	r2, [r3, #8]
 8005812:	2301      	movs	r3, #1
 8005814:	e0b1      	b.n	800597a <parse_value+0x1c2>
 8005816:	683b      	ldr	r3, [r7, #0]
 8005818:	2b00      	cmp	r3, #0
 800581a:	d01d      	beq.n	8005858 <parse_value+0xa0>
 800581c:	683b      	ldr	r3, [r7, #0]
 800581e:	689b      	ldr	r3, [r3, #8]
 8005820:	1d5a      	adds	r2, r3, #5
 8005822:	683b      	ldr	r3, [r7, #0]
 8005824:	685b      	ldr	r3, [r3, #4]
 8005826:	429a      	cmp	r2, r3
 8005828:	d816      	bhi.n	8005858 <parse_value+0xa0>
 800582a:	683b      	ldr	r3, [r7, #0]
 800582c:	681a      	ldr	r2, [r3, #0]
 800582e:	683b      	ldr	r3, [r7, #0]
 8005830:	689b      	ldr	r3, [r3, #8]
 8005832:	4413      	add	r3, r2
 8005834:	2205      	movs	r2, #5
 8005836:	4954      	ldr	r1, [pc, #336]	; (8005988 <parse_value+0x1d0>)
 8005838:	4618      	mov	r0, r3
 800583a:	f00d fb24 	bl	8012e86 <strncmp>
 800583e:	4603      	mov	r3, r0
 8005840:	2b00      	cmp	r3, #0
 8005842:	d109      	bne.n	8005858 <parse_value+0xa0>
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	2201      	movs	r2, #1
 8005848:	60da      	str	r2, [r3, #12]
 800584a:	683b      	ldr	r3, [r7, #0]
 800584c:	689b      	ldr	r3, [r3, #8]
 800584e:	1d5a      	adds	r2, r3, #5
 8005850:	683b      	ldr	r3, [r7, #0]
 8005852:	609a      	str	r2, [r3, #8]
 8005854:	2301      	movs	r3, #1
 8005856:	e090      	b.n	800597a <parse_value+0x1c2>
 8005858:	683b      	ldr	r3, [r7, #0]
 800585a:	2b00      	cmp	r3, #0
 800585c:	d020      	beq.n	80058a0 <parse_value+0xe8>
 800585e:	683b      	ldr	r3, [r7, #0]
 8005860:	689b      	ldr	r3, [r3, #8]
 8005862:	1d1a      	adds	r2, r3, #4
 8005864:	683b      	ldr	r3, [r7, #0]
 8005866:	685b      	ldr	r3, [r3, #4]
 8005868:	429a      	cmp	r2, r3
 800586a:	d819      	bhi.n	80058a0 <parse_value+0xe8>
 800586c:	683b      	ldr	r3, [r7, #0]
 800586e:	681a      	ldr	r2, [r3, #0]
 8005870:	683b      	ldr	r3, [r7, #0]
 8005872:	689b      	ldr	r3, [r3, #8]
 8005874:	4413      	add	r3, r2
 8005876:	2204      	movs	r2, #4
 8005878:	4944      	ldr	r1, [pc, #272]	; (800598c <parse_value+0x1d4>)
 800587a:	4618      	mov	r0, r3
 800587c:	f00d fb03 	bl	8012e86 <strncmp>
 8005880:	4603      	mov	r3, r0
 8005882:	2b00      	cmp	r3, #0
 8005884:	d10c      	bne.n	80058a0 <parse_value+0xe8>
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	2202      	movs	r2, #2
 800588a:	60da      	str	r2, [r3, #12]
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	2201      	movs	r2, #1
 8005890:	615a      	str	r2, [r3, #20]
 8005892:	683b      	ldr	r3, [r7, #0]
 8005894:	689b      	ldr	r3, [r3, #8]
 8005896:	1d1a      	adds	r2, r3, #4
 8005898:	683b      	ldr	r3, [r7, #0]
 800589a:	609a      	str	r2, [r3, #8]
 800589c:	2301      	movs	r3, #1
 800589e:	e06c      	b.n	800597a <parse_value+0x1c2>
 80058a0:	683b      	ldr	r3, [r7, #0]
 80058a2:	2b00      	cmp	r3, #0
 80058a4:	d013      	beq.n	80058ce <parse_value+0x116>
 80058a6:	683b      	ldr	r3, [r7, #0]
 80058a8:	689a      	ldr	r2, [r3, #8]
 80058aa:	683b      	ldr	r3, [r7, #0]
 80058ac:	685b      	ldr	r3, [r3, #4]
 80058ae:	429a      	cmp	r2, r3
 80058b0:	d20d      	bcs.n	80058ce <parse_value+0x116>
 80058b2:	683b      	ldr	r3, [r7, #0]
 80058b4:	681a      	ldr	r2, [r3, #0]
 80058b6:	683b      	ldr	r3, [r7, #0]
 80058b8:	689b      	ldr	r3, [r3, #8]
 80058ba:	4413      	add	r3, r2
 80058bc:	781b      	ldrb	r3, [r3, #0]
 80058be:	2b22      	cmp	r3, #34	; 0x22
 80058c0:	d105      	bne.n	80058ce <parse_value+0x116>
 80058c2:	6839      	ldr	r1, [r7, #0]
 80058c4:	6878      	ldr	r0, [r7, #4]
 80058c6:	f7ff fb25 	bl	8004f14 <parse_string>
 80058ca:	4603      	mov	r3, r0
 80058cc:	e055      	b.n	800597a <parse_value+0x1c2>
 80058ce:	683b      	ldr	r3, [r7, #0]
 80058d0:	2b00      	cmp	r3, #0
 80058d2:	d023      	beq.n	800591c <parse_value+0x164>
 80058d4:	683b      	ldr	r3, [r7, #0]
 80058d6:	689a      	ldr	r2, [r3, #8]
 80058d8:	683b      	ldr	r3, [r7, #0]
 80058da:	685b      	ldr	r3, [r3, #4]
 80058dc:	429a      	cmp	r2, r3
 80058de:	d21d      	bcs.n	800591c <parse_value+0x164>
 80058e0:	683b      	ldr	r3, [r7, #0]
 80058e2:	681a      	ldr	r2, [r3, #0]
 80058e4:	683b      	ldr	r3, [r7, #0]
 80058e6:	689b      	ldr	r3, [r3, #8]
 80058e8:	4413      	add	r3, r2
 80058ea:	781b      	ldrb	r3, [r3, #0]
 80058ec:	2b2d      	cmp	r3, #45	; 0x2d
 80058ee:	d00f      	beq.n	8005910 <parse_value+0x158>
 80058f0:	683b      	ldr	r3, [r7, #0]
 80058f2:	681a      	ldr	r2, [r3, #0]
 80058f4:	683b      	ldr	r3, [r7, #0]
 80058f6:	689b      	ldr	r3, [r3, #8]
 80058f8:	4413      	add	r3, r2
 80058fa:	781b      	ldrb	r3, [r3, #0]
 80058fc:	2b2f      	cmp	r3, #47	; 0x2f
 80058fe:	d90d      	bls.n	800591c <parse_value+0x164>
 8005900:	683b      	ldr	r3, [r7, #0]
 8005902:	681a      	ldr	r2, [r3, #0]
 8005904:	683b      	ldr	r3, [r7, #0]
 8005906:	689b      	ldr	r3, [r3, #8]
 8005908:	4413      	add	r3, r2
 800590a:	781b      	ldrb	r3, [r3, #0]
 800590c:	2b39      	cmp	r3, #57	; 0x39
 800590e:	d805      	bhi.n	800591c <parse_value+0x164>
 8005910:	6839      	ldr	r1, [r7, #0]
 8005912:	6878      	ldr	r0, [r7, #4]
 8005914:	f7fe fef4 	bl	8004700 <parse_number>
 8005918:	4603      	mov	r3, r0
 800591a:	e02e      	b.n	800597a <parse_value+0x1c2>
 800591c:	683b      	ldr	r3, [r7, #0]
 800591e:	2b00      	cmp	r3, #0
 8005920:	d013      	beq.n	800594a <parse_value+0x192>
 8005922:	683b      	ldr	r3, [r7, #0]
 8005924:	689a      	ldr	r2, [r3, #8]
 8005926:	683b      	ldr	r3, [r7, #0]
 8005928:	685b      	ldr	r3, [r3, #4]
 800592a:	429a      	cmp	r2, r3
 800592c:	d20d      	bcs.n	800594a <parse_value+0x192>
 800592e:	683b      	ldr	r3, [r7, #0]
 8005930:	681a      	ldr	r2, [r3, #0]
 8005932:	683b      	ldr	r3, [r7, #0]
 8005934:	689b      	ldr	r3, [r3, #8]
 8005936:	4413      	add	r3, r2
 8005938:	781b      	ldrb	r3, [r3, #0]
 800593a:	2b5b      	cmp	r3, #91	; 0x5b
 800593c:	d105      	bne.n	800594a <parse_value+0x192>
 800593e:	6839      	ldr	r1, [r7, #0]
 8005940:	6878      	ldr	r0, [r7, #4]
 8005942:	f000 f909 	bl	8005b58 <parse_array>
 8005946:	4603      	mov	r3, r0
 8005948:	e017      	b.n	800597a <parse_value+0x1c2>
 800594a:	683b      	ldr	r3, [r7, #0]
 800594c:	2b00      	cmp	r3, #0
 800594e:	d013      	beq.n	8005978 <parse_value+0x1c0>
 8005950:	683b      	ldr	r3, [r7, #0]
 8005952:	689a      	ldr	r2, [r3, #8]
 8005954:	683b      	ldr	r3, [r7, #0]
 8005956:	685b      	ldr	r3, [r3, #4]
 8005958:	429a      	cmp	r2, r3
 800595a:	d20d      	bcs.n	8005978 <parse_value+0x1c0>
 800595c:	683b      	ldr	r3, [r7, #0]
 800595e:	681a      	ldr	r2, [r3, #0]
 8005960:	683b      	ldr	r3, [r7, #0]
 8005962:	689b      	ldr	r3, [r3, #8]
 8005964:	4413      	add	r3, r2
 8005966:	781b      	ldrb	r3, [r3, #0]
 8005968:	2b7b      	cmp	r3, #123	; 0x7b
 800596a:	d105      	bne.n	8005978 <parse_value+0x1c0>
 800596c:	6839      	ldr	r1, [r7, #0]
 800596e:	6878      	ldr	r0, [r7, #4]
 8005970:	f000 fa3c 	bl	8005dec <parse_object>
 8005974:	4603      	mov	r3, r0
 8005976:	e000      	b.n	800597a <parse_value+0x1c2>
 8005978:	2300      	movs	r3, #0
 800597a:	4618      	mov	r0, r3
 800597c:	3708      	adds	r7, #8
 800597e:	46bd      	mov	sp, r7
 8005980:	bd80      	pop	{r7, pc}
 8005982:	bf00      	nop
 8005984:	080160e0 	.word	0x080160e0
 8005988:	08016110 	.word	0x08016110
 800598c:	08016118 	.word	0x08016118

08005990 <print_value>:
 8005990:	b580      	push	{r7, lr}
 8005992:	b084      	sub	sp, #16
 8005994:	af00      	add	r7, sp, #0
 8005996:	6078      	str	r0, [r7, #4]
 8005998:	6039      	str	r1, [r7, #0]
 800599a:	2300      	movs	r3, #0
 800599c:	60fb      	str	r3, [r7, #12]
 800599e:	687b      	ldr	r3, [r7, #4]
 80059a0:	2b00      	cmp	r3, #0
 80059a2:	d002      	beq.n	80059aa <print_value+0x1a>
 80059a4:	683b      	ldr	r3, [r7, #0]
 80059a6:	2b00      	cmp	r3, #0
 80059a8:	d101      	bne.n	80059ae <print_value+0x1e>
 80059aa:	2300      	movs	r3, #0
 80059ac:	e0c9      	b.n	8005b42 <print_value+0x1b2>
 80059ae:	687b      	ldr	r3, [r7, #4]
 80059b0:	68db      	ldr	r3, [r3, #12]
 80059b2:	b2db      	uxtb	r3, r3
 80059b4:	2b80      	cmp	r3, #128	; 0x80
 80059b6:	f000 808e 	beq.w	8005ad6 <print_value+0x146>
 80059ba:	2b80      	cmp	r3, #128	; 0x80
 80059bc:	f300 80c0 	bgt.w	8005b40 <print_value+0x1b0>
 80059c0:	2b20      	cmp	r3, #32
 80059c2:	dc49      	bgt.n	8005a58 <print_value+0xc8>
 80059c4:	2b00      	cmp	r3, #0
 80059c6:	f340 80bb 	ble.w	8005b40 <print_value+0x1b0>
 80059ca:	3b01      	subs	r3, #1
 80059cc:	2b1f      	cmp	r3, #31
 80059ce:	f200 80b7 	bhi.w	8005b40 <print_value+0x1b0>
 80059d2:	a201      	add	r2, pc, #4	; (adr r2, 80059d8 <print_value+0x48>)
 80059d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80059d8:	08005a83 	.word	0x08005a83
 80059dc:	08005aa7 	.word	0x08005aa7
 80059e0:	08005b41 	.word	0x08005b41
 80059e4:	08005a5f 	.word	0x08005a5f
 80059e8:	08005b41 	.word	0x08005b41
 80059ec:	08005b41 	.word	0x08005b41
 80059f0:	08005b41 	.word	0x08005b41
 80059f4:	08005acb 	.word	0x08005acb
 80059f8:	08005b41 	.word	0x08005b41
 80059fc:	08005b41 	.word	0x08005b41
 8005a00:	08005b41 	.word	0x08005b41
 8005a04:	08005b41 	.word	0x08005b41
 8005a08:	08005b41 	.word	0x08005b41
 8005a0c:	08005b41 	.word	0x08005b41
 8005a10:	08005b41 	.word	0x08005b41
 8005a14:	08005b1d 	.word	0x08005b1d
 8005a18:	08005b41 	.word	0x08005b41
 8005a1c:	08005b41 	.word	0x08005b41
 8005a20:	08005b41 	.word	0x08005b41
 8005a24:	08005b41 	.word	0x08005b41
 8005a28:	08005b41 	.word	0x08005b41
 8005a2c:	08005b41 	.word	0x08005b41
 8005a30:	08005b41 	.word	0x08005b41
 8005a34:	08005b41 	.word	0x08005b41
 8005a38:	08005b41 	.word	0x08005b41
 8005a3c:	08005b41 	.word	0x08005b41
 8005a40:	08005b41 	.word	0x08005b41
 8005a44:	08005b41 	.word	0x08005b41
 8005a48:	08005b41 	.word	0x08005b41
 8005a4c:	08005b41 	.word	0x08005b41
 8005a50:	08005b41 	.word	0x08005b41
 8005a54:	08005b29 	.word	0x08005b29
 8005a58:	2b40      	cmp	r3, #64	; 0x40
 8005a5a:	d06b      	beq.n	8005b34 <print_value+0x1a4>
 8005a5c:	e070      	b.n	8005b40 <print_value+0x1b0>
 8005a5e:	2105      	movs	r1, #5
 8005a60:	6838      	ldr	r0, [r7, #0]
 8005a62:	f7fe ff19 	bl	8004898 <ensure>
 8005a66:	60f8      	str	r0, [r7, #12]
 8005a68:	68fb      	ldr	r3, [r7, #12]
 8005a6a:	2b00      	cmp	r3, #0
 8005a6c:	d101      	bne.n	8005a72 <print_value+0xe2>
 8005a6e:	2300      	movs	r3, #0
 8005a70:	e067      	b.n	8005b42 <print_value+0x1b2>
 8005a72:	68fb      	ldr	r3, [r7, #12]
 8005a74:	4a35      	ldr	r2, [pc, #212]	; (8005b4c <print_value+0x1bc>)
 8005a76:	6810      	ldr	r0, [r2, #0]
 8005a78:	6018      	str	r0, [r3, #0]
 8005a7a:	7912      	ldrb	r2, [r2, #4]
 8005a7c:	711a      	strb	r2, [r3, #4]
 8005a7e:	2301      	movs	r3, #1
 8005a80:	e05f      	b.n	8005b42 <print_value+0x1b2>
 8005a82:	2106      	movs	r1, #6
 8005a84:	6838      	ldr	r0, [r7, #0]
 8005a86:	f7fe ff07 	bl	8004898 <ensure>
 8005a8a:	60f8      	str	r0, [r7, #12]
 8005a8c:	68fb      	ldr	r3, [r7, #12]
 8005a8e:	2b00      	cmp	r3, #0
 8005a90:	d101      	bne.n	8005a96 <print_value+0x106>
 8005a92:	2300      	movs	r3, #0
 8005a94:	e055      	b.n	8005b42 <print_value+0x1b2>
 8005a96:	68fb      	ldr	r3, [r7, #12]
 8005a98:	4a2d      	ldr	r2, [pc, #180]	; (8005b50 <print_value+0x1c0>)
 8005a9a:	6810      	ldr	r0, [r2, #0]
 8005a9c:	6018      	str	r0, [r3, #0]
 8005a9e:	8892      	ldrh	r2, [r2, #4]
 8005aa0:	809a      	strh	r2, [r3, #4]
 8005aa2:	2301      	movs	r3, #1
 8005aa4:	e04d      	b.n	8005b42 <print_value+0x1b2>
 8005aa6:	2105      	movs	r1, #5
 8005aa8:	6838      	ldr	r0, [r7, #0]
 8005aaa:	f7fe fef5 	bl	8004898 <ensure>
 8005aae:	60f8      	str	r0, [r7, #12]
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	2b00      	cmp	r3, #0
 8005ab4:	d101      	bne.n	8005aba <print_value+0x12a>
 8005ab6:	2300      	movs	r3, #0
 8005ab8:	e043      	b.n	8005b42 <print_value+0x1b2>
 8005aba:	68fb      	ldr	r3, [r7, #12]
 8005abc:	4a25      	ldr	r2, [pc, #148]	; (8005b54 <print_value+0x1c4>)
 8005abe:	6810      	ldr	r0, [r2, #0]
 8005ac0:	6018      	str	r0, [r3, #0]
 8005ac2:	7912      	ldrb	r2, [r2, #4]
 8005ac4:	711a      	strb	r2, [r3, #4]
 8005ac6:	2301      	movs	r3, #1
 8005ac8:	e03b      	b.n	8005b42 <print_value+0x1b2>
 8005aca:	6839      	ldr	r1, [r7, #0]
 8005acc:	6878      	ldr	r0, [r7, #4]
 8005ace:	f7fe ffe7 	bl	8004aa0 <print_number>
 8005ad2:	4603      	mov	r3, r0
 8005ad4:	e035      	b.n	8005b42 <print_value+0x1b2>
 8005ad6:	2300      	movs	r3, #0
 8005ad8:	60bb      	str	r3, [r7, #8]
 8005ada:	687b      	ldr	r3, [r7, #4]
 8005adc:	691b      	ldr	r3, [r3, #16]
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d101      	bne.n	8005ae6 <print_value+0x156>
 8005ae2:	2300      	movs	r3, #0
 8005ae4:	e02d      	b.n	8005b42 <print_value+0x1b2>
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	691b      	ldr	r3, [r3, #16]
 8005aea:	4618      	mov	r0, r3
 8005aec:	f7fa fbd0 	bl	8000290 <strlen>
 8005af0:	4603      	mov	r3, r0
 8005af2:	3301      	adds	r3, #1
 8005af4:	60bb      	str	r3, [r7, #8]
 8005af6:	68b9      	ldr	r1, [r7, #8]
 8005af8:	6838      	ldr	r0, [r7, #0]
 8005afa:	f7fe fecd 	bl	8004898 <ensure>
 8005afe:	60f8      	str	r0, [r7, #12]
 8005b00:	68fb      	ldr	r3, [r7, #12]
 8005b02:	2b00      	cmp	r3, #0
 8005b04:	d101      	bne.n	8005b0a <print_value+0x17a>
 8005b06:	2300      	movs	r3, #0
 8005b08:	e01b      	b.n	8005b42 <print_value+0x1b2>
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	691b      	ldr	r3, [r3, #16]
 8005b0e:	68ba      	ldr	r2, [r7, #8]
 8005b10:	4619      	mov	r1, r3
 8005b12:	68f8      	ldr	r0, [r7, #12]
 8005b14:	f00d fa9d 	bl	8013052 <memcpy>
 8005b18:	2301      	movs	r3, #1
 8005b1a:	e012      	b.n	8005b42 <print_value+0x1b2>
 8005b1c:	6839      	ldr	r1, [r7, #0]
 8005b1e:	6878      	ldr	r0, [r7, #4]
 8005b20:	f7ff fc6e 	bl	8005400 <print_string>
 8005b24:	4603      	mov	r3, r0
 8005b26:	e00c      	b.n	8005b42 <print_value+0x1b2>
 8005b28:	6839      	ldr	r1, [r7, #0]
 8005b2a:	6878      	ldr	r0, [r7, #4]
 8005b2c:	f000 f8d8 	bl	8005ce0 <print_array>
 8005b30:	4603      	mov	r3, r0
 8005b32:	e006      	b.n	8005b42 <print_value+0x1b2>
 8005b34:	6839      	ldr	r1, [r7, #0]
 8005b36:	6878      	ldr	r0, [r7, #4]
 8005b38:	f000 fa57 	bl	8005fea <print_object>
 8005b3c:	4603      	mov	r3, r0
 8005b3e:	e000      	b.n	8005b42 <print_value+0x1b2>
 8005b40:	2300      	movs	r3, #0
 8005b42:	4618      	mov	r0, r3
 8005b44:	3710      	adds	r7, #16
 8005b46:	46bd      	mov	sp, r7
 8005b48:	bd80      	pop	{r7, pc}
 8005b4a:	bf00      	nop
 8005b4c:	080160e0 	.word	0x080160e0
 8005b50:	08016110 	.word	0x08016110
 8005b54:	08016118 	.word	0x08016118

08005b58 <parse_array>:
 8005b58:	b580      	push	{r7, lr}
 8005b5a:	b086      	sub	sp, #24
 8005b5c:	af00      	add	r7, sp, #0
 8005b5e:	6078      	str	r0, [r7, #4]
 8005b60:	6039      	str	r1, [r7, #0]
 8005b62:	2300      	movs	r3, #0
 8005b64:	617b      	str	r3, [r7, #20]
 8005b66:	2300      	movs	r3, #0
 8005b68:	613b      	str	r3, [r7, #16]
 8005b6a:	683b      	ldr	r3, [r7, #0]
 8005b6c:	68db      	ldr	r3, [r3, #12]
 8005b6e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005b72:	d301      	bcc.n	8005b78 <parse_array+0x20>
 8005b74:	2300      	movs	r3, #0
 8005b76:	e0af      	b.n	8005cd8 <parse_array+0x180>
 8005b78:	683b      	ldr	r3, [r7, #0]
 8005b7a:	68db      	ldr	r3, [r3, #12]
 8005b7c:	1c5a      	adds	r2, r3, #1
 8005b7e:	683b      	ldr	r3, [r7, #0]
 8005b80:	60da      	str	r2, [r3, #12]
 8005b82:	683b      	ldr	r3, [r7, #0]
 8005b84:	681a      	ldr	r2, [r3, #0]
 8005b86:	683b      	ldr	r3, [r7, #0]
 8005b88:	689b      	ldr	r3, [r3, #8]
 8005b8a:	4413      	add	r3, r2
 8005b8c:	781b      	ldrb	r3, [r3, #0]
 8005b8e:	2b5b      	cmp	r3, #91	; 0x5b
 8005b90:	f040 8094 	bne.w	8005cbc <parse_array+0x164>
 8005b94:	683b      	ldr	r3, [r7, #0]
 8005b96:	689b      	ldr	r3, [r3, #8]
 8005b98:	1c5a      	adds	r2, r3, #1
 8005b9a:	683b      	ldr	r3, [r7, #0]
 8005b9c:	609a      	str	r2, [r3, #8]
 8005b9e:	6838      	ldr	r0, [r7, #0]
 8005ba0:	f7ff fc3e 	bl	8005420 <buffer_skip_whitespace>
 8005ba4:	683b      	ldr	r3, [r7, #0]
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d00d      	beq.n	8005bc6 <parse_array+0x6e>
 8005baa:	683b      	ldr	r3, [r7, #0]
 8005bac:	689a      	ldr	r2, [r3, #8]
 8005bae:	683b      	ldr	r3, [r7, #0]
 8005bb0:	685b      	ldr	r3, [r3, #4]
 8005bb2:	429a      	cmp	r2, r3
 8005bb4:	d207      	bcs.n	8005bc6 <parse_array+0x6e>
 8005bb6:	683b      	ldr	r3, [r7, #0]
 8005bb8:	681a      	ldr	r2, [r3, #0]
 8005bba:	683b      	ldr	r3, [r7, #0]
 8005bbc:	689b      	ldr	r3, [r3, #8]
 8005bbe:	4413      	add	r3, r2
 8005bc0:	781b      	ldrb	r3, [r3, #0]
 8005bc2:	2b5d      	cmp	r3, #93	; 0x5d
 8005bc4:	d061      	beq.n	8005c8a <parse_array+0x132>
 8005bc6:	683b      	ldr	r3, [r7, #0]
 8005bc8:	2b00      	cmp	r3, #0
 8005bca:	d005      	beq.n	8005bd8 <parse_array+0x80>
 8005bcc:	683b      	ldr	r3, [r7, #0]
 8005bce:	689a      	ldr	r2, [r3, #8]
 8005bd0:	683b      	ldr	r3, [r7, #0]
 8005bd2:	685b      	ldr	r3, [r3, #4]
 8005bd4:	429a      	cmp	r2, r3
 8005bd6:	d305      	bcc.n	8005be4 <parse_array+0x8c>
 8005bd8:	683b      	ldr	r3, [r7, #0]
 8005bda:	689b      	ldr	r3, [r3, #8]
 8005bdc:	1e5a      	subs	r2, r3, #1
 8005bde:	683b      	ldr	r3, [r7, #0]
 8005be0:	609a      	str	r2, [r3, #8]
 8005be2:	e072      	b.n	8005cca <parse_array+0x172>
 8005be4:	683b      	ldr	r3, [r7, #0]
 8005be6:	689b      	ldr	r3, [r3, #8]
 8005be8:	1e5a      	subs	r2, r3, #1
 8005bea:	683b      	ldr	r3, [r7, #0]
 8005bec:	609a      	str	r2, [r3, #8]
 8005bee:	683b      	ldr	r3, [r7, #0]
 8005bf0:	3310      	adds	r3, #16
 8005bf2:	4618      	mov	r0, r3
 8005bf4:	f7fe fd1c 	bl	8004630 <cJSON_New_Item>
 8005bf8:	60f8      	str	r0, [r7, #12]
 8005bfa:	68fb      	ldr	r3, [r7, #12]
 8005bfc:	2b00      	cmp	r3, #0
 8005bfe:	d05f      	beq.n	8005cc0 <parse_array+0x168>
 8005c00:	697b      	ldr	r3, [r7, #20]
 8005c02:	2b00      	cmp	r3, #0
 8005c04:	d104      	bne.n	8005c10 <parse_array+0xb8>
 8005c06:	68fb      	ldr	r3, [r7, #12]
 8005c08:	617b      	str	r3, [r7, #20]
 8005c0a:	697b      	ldr	r3, [r7, #20]
 8005c0c:	613b      	str	r3, [r7, #16]
 8005c0e:	e007      	b.n	8005c20 <parse_array+0xc8>
 8005c10:	693b      	ldr	r3, [r7, #16]
 8005c12:	68fa      	ldr	r2, [r7, #12]
 8005c14:	601a      	str	r2, [r3, #0]
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	693a      	ldr	r2, [r7, #16]
 8005c1a:	605a      	str	r2, [r3, #4]
 8005c1c:	68fb      	ldr	r3, [r7, #12]
 8005c1e:	613b      	str	r3, [r7, #16]
 8005c20:	683b      	ldr	r3, [r7, #0]
 8005c22:	689b      	ldr	r3, [r3, #8]
 8005c24:	1c5a      	adds	r2, r3, #1
 8005c26:	683b      	ldr	r3, [r7, #0]
 8005c28:	609a      	str	r2, [r3, #8]
 8005c2a:	6838      	ldr	r0, [r7, #0]
 8005c2c:	f7ff fbf8 	bl	8005420 <buffer_skip_whitespace>
 8005c30:	6839      	ldr	r1, [r7, #0]
 8005c32:	6938      	ldr	r0, [r7, #16]
 8005c34:	f7ff fdc0 	bl	80057b8 <parse_value>
 8005c38:	4603      	mov	r3, r0
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	d042      	beq.n	8005cc4 <parse_array+0x16c>
 8005c3e:	6838      	ldr	r0, [r7, #0]
 8005c40:	f7ff fbee 	bl	8005420 <buffer_skip_whitespace>
 8005c44:	683b      	ldr	r3, [r7, #0]
 8005c46:	2b00      	cmp	r3, #0
 8005c48:	d00d      	beq.n	8005c66 <parse_array+0x10e>
 8005c4a:	683b      	ldr	r3, [r7, #0]
 8005c4c:	689a      	ldr	r2, [r3, #8]
 8005c4e:	683b      	ldr	r3, [r7, #0]
 8005c50:	685b      	ldr	r3, [r3, #4]
 8005c52:	429a      	cmp	r2, r3
 8005c54:	d207      	bcs.n	8005c66 <parse_array+0x10e>
 8005c56:	683b      	ldr	r3, [r7, #0]
 8005c58:	681a      	ldr	r2, [r3, #0]
 8005c5a:	683b      	ldr	r3, [r7, #0]
 8005c5c:	689b      	ldr	r3, [r3, #8]
 8005c5e:	4413      	add	r3, r2
 8005c60:	781b      	ldrb	r3, [r3, #0]
 8005c62:	2b2c      	cmp	r3, #44	; 0x2c
 8005c64:	d0c3      	beq.n	8005bee <parse_array+0x96>
 8005c66:	683b      	ldr	r3, [r7, #0]
 8005c68:	2b00      	cmp	r3, #0
 8005c6a:	d02d      	beq.n	8005cc8 <parse_array+0x170>
 8005c6c:	683b      	ldr	r3, [r7, #0]
 8005c6e:	689a      	ldr	r2, [r3, #8]
 8005c70:	683b      	ldr	r3, [r7, #0]
 8005c72:	685b      	ldr	r3, [r3, #4]
 8005c74:	429a      	cmp	r2, r3
 8005c76:	d227      	bcs.n	8005cc8 <parse_array+0x170>
 8005c78:	683b      	ldr	r3, [r7, #0]
 8005c7a:	681a      	ldr	r2, [r3, #0]
 8005c7c:	683b      	ldr	r3, [r7, #0]
 8005c7e:	689b      	ldr	r3, [r3, #8]
 8005c80:	4413      	add	r3, r2
 8005c82:	781b      	ldrb	r3, [r3, #0]
 8005c84:	2b5d      	cmp	r3, #93	; 0x5d
 8005c86:	d11f      	bne.n	8005cc8 <parse_array+0x170>
 8005c88:	e000      	b.n	8005c8c <parse_array+0x134>
 8005c8a:	bf00      	nop
 8005c8c:	683b      	ldr	r3, [r7, #0]
 8005c8e:	68db      	ldr	r3, [r3, #12]
 8005c90:	1e5a      	subs	r2, r3, #1
 8005c92:	683b      	ldr	r3, [r7, #0]
 8005c94:	60da      	str	r2, [r3, #12]
 8005c96:	697b      	ldr	r3, [r7, #20]
 8005c98:	2b00      	cmp	r3, #0
 8005c9a:	d002      	beq.n	8005ca2 <parse_array+0x14a>
 8005c9c:	697b      	ldr	r3, [r7, #20]
 8005c9e:	693a      	ldr	r2, [r7, #16]
 8005ca0:	605a      	str	r2, [r3, #4]
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	2220      	movs	r2, #32
 8005ca6:	60da      	str	r2, [r3, #12]
 8005ca8:	687b      	ldr	r3, [r7, #4]
 8005caa:	697a      	ldr	r2, [r7, #20]
 8005cac:	609a      	str	r2, [r3, #8]
 8005cae:	683b      	ldr	r3, [r7, #0]
 8005cb0:	689b      	ldr	r3, [r3, #8]
 8005cb2:	1c5a      	adds	r2, r3, #1
 8005cb4:	683b      	ldr	r3, [r7, #0]
 8005cb6:	609a      	str	r2, [r3, #8]
 8005cb8:	2301      	movs	r3, #1
 8005cba:	e00d      	b.n	8005cd8 <parse_array+0x180>
 8005cbc:	bf00      	nop
 8005cbe:	e004      	b.n	8005cca <parse_array+0x172>
 8005cc0:	bf00      	nop
 8005cc2:	e002      	b.n	8005cca <parse_array+0x172>
 8005cc4:	bf00      	nop
 8005cc6:	e000      	b.n	8005cca <parse_array+0x172>
 8005cc8:	bf00      	nop
 8005cca:	697b      	ldr	r3, [r7, #20]
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	d002      	beq.n	8005cd6 <parse_array+0x17e>
 8005cd0:	6978      	ldr	r0, [r7, #20]
 8005cd2:	f7fe fcc3 	bl	800465c <cJSON_Delete>
 8005cd6:	2300      	movs	r3, #0
 8005cd8:	4618      	mov	r0, r3
 8005cda:	3718      	adds	r7, #24
 8005cdc:	46bd      	mov	sp, r7
 8005cde:	bd80      	pop	{r7, pc}

08005ce0 <print_array>:
 8005ce0:	b580      	push	{r7, lr}
 8005ce2:	b086      	sub	sp, #24
 8005ce4:	af00      	add	r7, sp, #0
 8005ce6:	6078      	str	r0, [r7, #4]
 8005ce8:	6039      	str	r1, [r7, #0]
 8005cea:	2300      	movs	r3, #0
 8005cec:	617b      	str	r3, [r7, #20]
 8005cee:	2300      	movs	r3, #0
 8005cf0:	60fb      	str	r3, [r7, #12]
 8005cf2:	687b      	ldr	r3, [r7, #4]
 8005cf4:	689b      	ldr	r3, [r3, #8]
 8005cf6:	613b      	str	r3, [r7, #16]
 8005cf8:	683b      	ldr	r3, [r7, #0]
 8005cfa:	2b00      	cmp	r3, #0
 8005cfc:	d101      	bne.n	8005d02 <print_array+0x22>
 8005cfe:	2300      	movs	r3, #0
 8005d00:	e070      	b.n	8005de4 <print_array+0x104>
 8005d02:	2101      	movs	r1, #1
 8005d04:	6838      	ldr	r0, [r7, #0]
 8005d06:	f7fe fdc7 	bl	8004898 <ensure>
 8005d0a:	6178      	str	r0, [r7, #20]
 8005d0c:	697b      	ldr	r3, [r7, #20]
 8005d0e:	2b00      	cmp	r3, #0
 8005d10:	d101      	bne.n	8005d16 <print_array+0x36>
 8005d12:	2300      	movs	r3, #0
 8005d14:	e066      	b.n	8005de4 <print_array+0x104>
 8005d16:	697b      	ldr	r3, [r7, #20]
 8005d18:	225b      	movs	r2, #91	; 0x5b
 8005d1a:	701a      	strb	r2, [r3, #0]
 8005d1c:	683b      	ldr	r3, [r7, #0]
 8005d1e:	689b      	ldr	r3, [r3, #8]
 8005d20:	1c5a      	adds	r2, r3, #1
 8005d22:	683b      	ldr	r3, [r7, #0]
 8005d24:	609a      	str	r2, [r3, #8]
 8005d26:	683b      	ldr	r3, [r7, #0]
 8005d28:	68db      	ldr	r3, [r3, #12]
 8005d2a:	1c5a      	adds	r2, r3, #1
 8005d2c:	683b      	ldr	r3, [r7, #0]
 8005d2e:	60da      	str	r2, [r3, #12]
 8005d30:	e03d      	b.n	8005dae <print_array+0xce>
 8005d32:	6839      	ldr	r1, [r7, #0]
 8005d34:	6938      	ldr	r0, [r7, #16]
 8005d36:	f7ff fe2b 	bl	8005990 <print_value>
 8005d3a:	4603      	mov	r3, r0
 8005d3c:	2b00      	cmp	r3, #0
 8005d3e:	d101      	bne.n	8005d44 <print_array+0x64>
 8005d40:	2300      	movs	r3, #0
 8005d42:	e04f      	b.n	8005de4 <print_array+0x104>
 8005d44:	6838      	ldr	r0, [r7, #0]
 8005d46:	f7fe fe41 	bl	80049cc <update_offset>
 8005d4a:	693b      	ldr	r3, [r7, #16]
 8005d4c:	681b      	ldr	r3, [r3, #0]
 8005d4e:	2b00      	cmp	r3, #0
 8005d50:	d02a      	beq.n	8005da8 <print_array+0xc8>
 8005d52:	683b      	ldr	r3, [r7, #0]
 8005d54:	695b      	ldr	r3, [r3, #20]
 8005d56:	2b00      	cmp	r3, #0
 8005d58:	d001      	beq.n	8005d5e <print_array+0x7e>
 8005d5a:	2302      	movs	r3, #2
 8005d5c:	e000      	b.n	8005d60 <print_array+0x80>
 8005d5e:	2301      	movs	r3, #1
 8005d60:	60fb      	str	r3, [r7, #12]
 8005d62:	68fb      	ldr	r3, [r7, #12]
 8005d64:	3301      	adds	r3, #1
 8005d66:	4619      	mov	r1, r3
 8005d68:	6838      	ldr	r0, [r7, #0]
 8005d6a:	f7fe fd95 	bl	8004898 <ensure>
 8005d6e:	6178      	str	r0, [r7, #20]
 8005d70:	697b      	ldr	r3, [r7, #20]
 8005d72:	2b00      	cmp	r3, #0
 8005d74:	d101      	bne.n	8005d7a <print_array+0x9a>
 8005d76:	2300      	movs	r3, #0
 8005d78:	e034      	b.n	8005de4 <print_array+0x104>
 8005d7a:	697b      	ldr	r3, [r7, #20]
 8005d7c:	1c5a      	adds	r2, r3, #1
 8005d7e:	617a      	str	r2, [r7, #20]
 8005d80:	222c      	movs	r2, #44	; 0x2c
 8005d82:	701a      	strb	r2, [r3, #0]
 8005d84:	683b      	ldr	r3, [r7, #0]
 8005d86:	695b      	ldr	r3, [r3, #20]
 8005d88:	2b00      	cmp	r3, #0
 8005d8a:	d004      	beq.n	8005d96 <print_array+0xb6>
 8005d8c:	697b      	ldr	r3, [r7, #20]
 8005d8e:	1c5a      	adds	r2, r3, #1
 8005d90:	617a      	str	r2, [r7, #20]
 8005d92:	2220      	movs	r2, #32
 8005d94:	701a      	strb	r2, [r3, #0]
 8005d96:	697b      	ldr	r3, [r7, #20]
 8005d98:	2200      	movs	r2, #0
 8005d9a:	701a      	strb	r2, [r3, #0]
 8005d9c:	683b      	ldr	r3, [r7, #0]
 8005d9e:	689a      	ldr	r2, [r3, #8]
 8005da0:	68fb      	ldr	r3, [r7, #12]
 8005da2:	441a      	add	r2, r3
 8005da4:	683b      	ldr	r3, [r7, #0]
 8005da6:	609a      	str	r2, [r3, #8]
 8005da8:	693b      	ldr	r3, [r7, #16]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	613b      	str	r3, [r7, #16]
 8005dae:	693b      	ldr	r3, [r7, #16]
 8005db0:	2b00      	cmp	r3, #0
 8005db2:	d1be      	bne.n	8005d32 <print_array+0x52>
 8005db4:	2102      	movs	r1, #2
 8005db6:	6838      	ldr	r0, [r7, #0]
 8005db8:	f7fe fd6e 	bl	8004898 <ensure>
 8005dbc:	6178      	str	r0, [r7, #20]
 8005dbe:	697b      	ldr	r3, [r7, #20]
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d101      	bne.n	8005dc8 <print_array+0xe8>
 8005dc4:	2300      	movs	r3, #0
 8005dc6:	e00d      	b.n	8005de4 <print_array+0x104>
 8005dc8:	697b      	ldr	r3, [r7, #20]
 8005dca:	1c5a      	adds	r2, r3, #1
 8005dcc:	617a      	str	r2, [r7, #20]
 8005dce:	225d      	movs	r2, #93	; 0x5d
 8005dd0:	701a      	strb	r2, [r3, #0]
 8005dd2:	697b      	ldr	r3, [r7, #20]
 8005dd4:	2200      	movs	r2, #0
 8005dd6:	701a      	strb	r2, [r3, #0]
 8005dd8:	683b      	ldr	r3, [r7, #0]
 8005dda:	68db      	ldr	r3, [r3, #12]
 8005ddc:	1e5a      	subs	r2, r3, #1
 8005dde:	683b      	ldr	r3, [r7, #0]
 8005de0:	60da      	str	r2, [r3, #12]
 8005de2:	2301      	movs	r3, #1
 8005de4:	4618      	mov	r0, r3
 8005de6:	3718      	adds	r7, #24
 8005de8:	46bd      	mov	sp, r7
 8005dea:	bd80      	pop	{r7, pc}

08005dec <parse_object>:
 8005dec:	b580      	push	{r7, lr}
 8005dee:	b086      	sub	sp, #24
 8005df0:	af00      	add	r7, sp, #0
 8005df2:	6078      	str	r0, [r7, #4]
 8005df4:	6039      	str	r1, [r7, #0]
 8005df6:	2300      	movs	r3, #0
 8005df8:	617b      	str	r3, [r7, #20]
 8005dfa:	2300      	movs	r3, #0
 8005dfc:	613b      	str	r3, [r7, #16]
 8005dfe:	683b      	ldr	r3, [r7, #0]
 8005e00:	68db      	ldr	r3, [r3, #12]
 8005e02:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005e06:	d301      	bcc.n	8005e0c <parse_object+0x20>
 8005e08:	2300      	movs	r3, #0
 8005e0a:	e0ea      	b.n	8005fe2 <parse_object+0x1f6>
 8005e0c:	683b      	ldr	r3, [r7, #0]
 8005e0e:	68db      	ldr	r3, [r3, #12]
 8005e10:	1c5a      	adds	r2, r3, #1
 8005e12:	683b      	ldr	r3, [r7, #0]
 8005e14:	60da      	str	r2, [r3, #12]
 8005e16:	683b      	ldr	r3, [r7, #0]
 8005e18:	2b00      	cmp	r3, #0
 8005e1a:	f000 80d0 	beq.w	8005fbe <parse_object+0x1d2>
 8005e1e:	683b      	ldr	r3, [r7, #0]
 8005e20:	689a      	ldr	r2, [r3, #8]
 8005e22:	683b      	ldr	r3, [r7, #0]
 8005e24:	685b      	ldr	r3, [r3, #4]
 8005e26:	429a      	cmp	r2, r3
 8005e28:	f080 80c9 	bcs.w	8005fbe <parse_object+0x1d2>
 8005e2c:	683b      	ldr	r3, [r7, #0]
 8005e2e:	681a      	ldr	r2, [r3, #0]
 8005e30:	683b      	ldr	r3, [r7, #0]
 8005e32:	689b      	ldr	r3, [r3, #8]
 8005e34:	4413      	add	r3, r2
 8005e36:	781b      	ldrb	r3, [r3, #0]
 8005e38:	2b7b      	cmp	r3, #123	; 0x7b
 8005e3a:	f040 80c0 	bne.w	8005fbe <parse_object+0x1d2>
 8005e3e:	683b      	ldr	r3, [r7, #0]
 8005e40:	689b      	ldr	r3, [r3, #8]
 8005e42:	1c5a      	adds	r2, r3, #1
 8005e44:	683b      	ldr	r3, [r7, #0]
 8005e46:	609a      	str	r2, [r3, #8]
 8005e48:	6838      	ldr	r0, [r7, #0]
 8005e4a:	f7ff fae9 	bl	8005420 <buffer_skip_whitespace>
 8005e4e:	683b      	ldr	r3, [r7, #0]
 8005e50:	2b00      	cmp	r3, #0
 8005e52:	d00e      	beq.n	8005e72 <parse_object+0x86>
 8005e54:	683b      	ldr	r3, [r7, #0]
 8005e56:	689a      	ldr	r2, [r3, #8]
 8005e58:	683b      	ldr	r3, [r7, #0]
 8005e5a:	685b      	ldr	r3, [r3, #4]
 8005e5c:	429a      	cmp	r2, r3
 8005e5e:	d208      	bcs.n	8005e72 <parse_object+0x86>
 8005e60:	683b      	ldr	r3, [r7, #0]
 8005e62:	681a      	ldr	r2, [r3, #0]
 8005e64:	683b      	ldr	r3, [r7, #0]
 8005e66:	689b      	ldr	r3, [r3, #8]
 8005e68:	4413      	add	r3, r2
 8005e6a:	781b      	ldrb	r3, [r3, #0]
 8005e6c:	2b7d      	cmp	r3, #125	; 0x7d
 8005e6e:	f000 808d 	beq.w	8005f8c <parse_object+0x1a0>
 8005e72:	683b      	ldr	r3, [r7, #0]
 8005e74:	2b00      	cmp	r3, #0
 8005e76:	d005      	beq.n	8005e84 <parse_object+0x98>
 8005e78:	683b      	ldr	r3, [r7, #0]
 8005e7a:	689a      	ldr	r2, [r3, #8]
 8005e7c:	683b      	ldr	r3, [r7, #0]
 8005e7e:	685b      	ldr	r3, [r3, #4]
 8005e80:	429a      	cmp	r2, r3
 8005e82:	d305      	bcc.n	8005e90 <parse_object+0xa4>
 8005e84:	683b      	ldr	r3, [r7, #0]
 8005e86:	689b      	ldr	r3, [r3, #8]
 8005e88:	1e5a      	subs	r2, r3, #1
 8005e8a:	683b      	ldr	r3, [r7, #0]
 8005e8c:	609a      	str	r2, [r3, #8]
 8005e8e:	e0a1      	b.n	8005fd4 <parse_object+0x1e8>
 8005e90:	683b      	ldr	r3, [r7, #0]
 8005e92:	689b      	ldr	r3, [r3, #8]
 8005e94:	1e5a      	subs	r2, r3, #1
 8005e96:	683b      	ldr	r3, [r7, #0]
 8005e98:	609a      	str	r2, [r3, #8]
 8005e9a:	683b      	ldr	r3, [r7, #0]
 8005e9c:	3310      	adds	r3, #16
 8005e9e:	4618      	mov	r0, r3
 8005ea0:	f7fe fbc6 	bl	8004630 <cJSON_New_Item>
 8005ea4:	60f8      	str	r0, [r7, #12]
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	2b00      	cmp	r3, #0
 8005eaa:	f000 808a 	beq.w	8005fc2 <parse_object+0x1d6>
 8005eae:	697b      	ldr	r3, [r7, #20]
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	d104      	bne.n	8005ebe <parse_object+0xd2>
 8005eb4:	68fb      	ldr	r3, [r7, #12]
 8005eb6:	617b      	str	r3, [r7, #20]
 8005eb8:	697b      	ldr	r3, [r7, #20]
 8005eba:	613b      	str	r3, [r7, #16]
 8005ebc:	e007      	b.n	8005ece <parse_object+0xe2>
 8005ebe:	693b      	ldr	r3, [r7, #16]
 8005ec0:	68fa      	ldr	r2, [r7, #12]
 8005ec2:	601a      	str	r2, [r3, #0]
 8005ec4:	68fb      	ldr	r3, [r7, #12]
 8005ec6:	693a      	ldr	r2, [r7, #16]
 8005ec8:	605a      	str	r2, [r3, #4]
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	613b      	str	r3, [r7, #16]
 8005ece:	683b      	ldr	r3, [r7, #0]
 8005ed0:	689b      	ldr	r3, [r3, #8]
 8005ed2:	1c5a      	adds	r2, r3, #1
 8005ed4:	683b      	ldr	r3, [r7, #0]
 8005ed6:	609a      	str	r2, [r3, #8]
 8005ed8:	6838      	ldr	r0, [r7, #0]
 8005eda:	f7ff faa1 	bl	8005420 <buffer_skip_whitespace>
 8005ede:	6839      	ldr	r1, [r7, #0]
 8005ee0:	6938      	ldr	r0, [r7, #16]
 8005ee2:	f7ff f817 	bl	8004f14 <parse_string>
 8005ee6:	4603      	mov	r3, r0
 8005ee8:	2b00      	cmp	r3, #0
 8005eea:	d06c      	beq.n	8005fc6 <parse_object+0x1da>
 8005eec:	6838      	ldr	r0, [r7, #0]
 8005eee:	f7ff fa97 	bl	8005420 <buffer_skip_whitespace>
 8005ef2:	693b      	ldr	r3, [r7, #16]
 8005ef4:	691a      	ldr	r2, [r3, #16]
 8005ef6:	693b      	ldr	r3, [r7, #16]
 8005ef8:	621a      	str	r2, [r3, #32]
 8005efa:	693b      	ldr	r3, [r7, #16]
 8005efc:	2200      	movs	r2, #0
 8005efe:	611a      	str	r2, [r3, #16]
 8005f00:	683b      	ldr	r3, [r7, #0]
 8005f02:	2b00      	cmp	r3, #0
 8005f04:	d061      	beq.n	8005fca <parse_object+0x1de>
 8005f06:	683b      	ldr	r3, [r7, #0]
 8005f08:	689a      	ldr	r2, [r3, #8]
 8005f0a:	683b      	ldr	r3, [r7, #0]
 8005f0c:	685b      	ldr	r3, [r3, #4]
 8005f0e:	429a      	cmp	r2, r3
 8005f10:	d25b      	bcs.n	8005fca <parse_object+0x1de>
 8005f12:	683b      	ldr	r3, [r7, #0]
 8005f14:	681a      	ldr	r2, [r3, #0]
 8005f16:	683b      	ldr	r3, [r7, #0]
 8005f18:	689b      	ldr	r3, [r3, #8]
 8005f1a:	4413      	add	r3, r2
 8005f1c:	781b      	ldrb	r3, [r3, #0]
 8005f1e:	2b3a      	cmp	r3, #58	; 0x3a
 8005f20:	d153      	bne.n	8005fca <parse_object+0x1de>
 8005f22:	683b      	ldr	r3, [r7, #0]
 8005f24:	689b      	ldr	r3, [r3, #8]
 8005f26:	1c5a      	adds	r2, r3, #1
 8005f28:	683b      	ldr	r3, [r7, #0]
 8005f2a:	609a      	str	r2, [r3, #8]
 8005f2c:	6838      	ldr	r0, [r7, #0]
 8005f2e:	f7ff fa77 	bl	8005420 <buffer_skip_whitespace>
 8005f32:	6839      	ldr	r1, [r7, #0]
 8005f34:	6938      	ldr	r0, [r7, #16]
 8005f36:	f7ff fc3f 	bl	80057b8 <parse_value>
 8005f3a:	4603      	mov	r3, r0
 8005f3c:	2b00      	cmp	r3, #0
 8005f3e:	d046      	beq.n	8005fce <parse_object+0x1e2>
 8005f40:	6838      	ldr	r0, [r7, #0]
 8005f42:	f7ff fa6d 	bl	8005420 <buffer_skip_whitespace>
 8005f46:	683b      	ldr	r3, [r7, #0]
 8005f48:	2b00      	cmp	r3, #0
 8005f4a:	d00d      	beq.n	8005f68 <parse_object+0x17c>
 8005f4c:	683b      	ldr	r3, [r7, #0]
 8005f4e:	689a      	ldr	r2, [r3, #8]
 8005f50:	683b      	ldr	r3, [r7, #0]
 8005f52:	685b      	ldr	r3, [r3, #4]
 8005f54:	429a      	cmp	r2, r3
 8005f56:	d207      	bcs.n	8005f68 <parse_object+0x17c>
 8005f58:	683b      	ldr	r3, [r7, #0]
 8005f5a:	681a      	ldr	r2, [r3, #0]
 8005f5c:	683b      	ldr	r3, [r7, #0]
 8005f5e:	689b      	ldr	r3, [r3, #8]
 8005f60:	4413      	add	r3, r2
 8005f62:	781b      	ldrb	r3, [r3, #0]
 8005f64:	2b2c      	cmp	r3, #44	; 0x2c
 8005f66:	d098      	beq.n	8005e9a <parse_object+0xae>
 8005f68:	683b      	ldr	r3, [r7, #0]
 8005f6a:	2b00      	cmp	r3, #0
 8005f6c:	d031      	beq.n	8005fd2 <parse_object+0x1e6>
 8005f6e:	683b      	ldr	r3, [r7, #0]
 8005f70:	689a      	ldr	r2, [r3, #8]
 8005f72:	683b      	ldr	r3, [r7, #0]
 8005f74:	685b      	ldr	r3, [r3, #4]
 8005f76:	429a      	cmp	r2, r3
 8005f78:	d22b      	bcs.n	8005fd2 <parse_object+0x1e6>
 8005f7a:	683b      	ldr	r3, [r7, #0]
 8005f7c:	681a      	ldr	r2, [r3, #0]
 8005f7e:	683b      	ldr	r3, [r7, #0]
 8005f80:	689b      	ldr	r3, [r3, #8]
 8005f82:	4413      	add	r3, r2
 8005f84:	781b      	ldrb	r3, [r3, #0]
 8005f86:	2b7d      	cmp	r3, #125	; 0x7d
 8005f88:	d123      	bne.n	8005fd2 <parse_object+0x1e6>
 8005f8a:	e000      	b.n	8005f8e <parse_object+0x1a2>
 8005f8c:	bf00      	nop
 8005f8e:	683b      	ldr	r3, [r7, #0]
 8005f90:	68db      	ldr	r3, [r3, #12]
 8005f92:	1e5a      	subs	r2, r3, #1
 8005f94:	683b      	ldr	r3, [r7, #0]
 8005f96:	60da      	str	r2, [r3, #12]
 8005f98:	697b      	ldr	r3, [r7, #20]
 8005f9a:	2b00      	cmp	r3, #0
 8005f9c:	d002      	beq.n	8005fa4 <parse_object+0x1b8>
 8005f9e:	697b      	ldr	r3, [r7, #20]
 8005fa0:	693a      	ldr	r2, [r7, #16]
 8005fa2:	605a      	str	r2, [r3, #4]
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	2240      	movs	r2, #64	; 0x40
 8005fa8:	60da      	str	r2, [r3, #12]
 8005faa:	687b      	ldr	r3, [r7, #4]
 8005fac:	697a      	ldr	r2, [r7, #20]
 8005fae:	609a      	str	r2, [r3, #8]
 8005fb0:	683b      	ldr	r3, [r7, #0]
 8005fb2:	689b      	ldr	r3, [r3, #8]
 8005fb4:	1c5a      	adds	r2, r3, #1
 8005fb6:	683b      	ldr	r3, [r7, #0]
 8005fb8:	609a      	str	r2, [r3, #8]
 8005fba:	2301      	movs	r3, #1
 8005fbc:	e011      	b.n	8005fe2 <parse_object+0x1f6>
 8005fbe:	bf00      	nop
 8005fc0:	e008      	b.n	8005fd4 <parse_object+0x1e8>
 8005fc2:	bf00      	nop
 8005fc4:	e006      	b.n	8005fd4 <parse_object+0x1e8>
 8005fc6:	bf00      	nop
 8005fc8:	e004      	b.n	8005fd4 <parse_object+0x1e8>
 8005fca:	bf00      	nop
 8005fcc:	e002      	b.n	8005fd4 <parse_object+0x1e8>
 8005fce:	bf00      	nop
 8005fd0:	e000      	b.n	8005fd4 <parse_object+0x1e8>
 8005fd2:	bf00      	nop
 8005fd4:	697b      	ldr	r3, [r7, #20]
 8005fd6:	2b00      	cmp	r3, #0
 8005fd8:	d002      	beq.n	8005fe0 <parse_object+0x1f4>
 8005fda:	6978      	ldr	r0, [r7, #20]
 8005fdc:	f7fe fb3e 	bl	800465c <cJSON_Delete>
 8005fe0:	2300      	movs	r3, #0
 8005fe2:	4618      	mov	r0, r3
 8005fe4:	3718      	adds	r7, #24
 8005fe6:	46bd      	mov	sp, r7
 8005fe8:	bd80      	pop	{r7, pc}

08005fea <print_object>:
 8005fea:	b580      	push	{r7, lr}
 8005fec:	b088      	sub	sp, #32
 8005fee:	af00      	add	r7, sp, #0
 8005ff0:	6078      	str	r0, [r7, #4]
 8005ff2:	6039      	str	r1, [r7, #0]
 8005ff4:	2300      	movs	r3, #0
 8005ff6:	61fb      	str	r3, [r7, #28]
 8005ff8:	2300      	movs	r3, #0
 8005ffa:	60fb      	str	r3, [r7, #12]
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	689b      	ldr	r3, [r3, #8]
 8006000:	61bb      	str	r3, [r7, #24]
 8006002:	683b      	ldr	r3, [r7, #0]
 8006004:	2b00      	cmp	r3, #0
 8006006:	d101      	bne.n	800600c <print_object+0x22>
 8006008:	2300      	movs	r3, #0
 800600a:	e108      	b.n	800621e <print_object+0x234>
 800600c:	683b      	ldr	r3, [r7, #0]
 800600e:	695b      	ldr	r3, [r3, #20]
 8006010:	2b00      	cmp	r3, #0
 8006012:	d001      	beq.n	8006018 <print_object+0x2e>
 8006014:	2302      	movs	r3, #2
 8006016:	e000      	b.n	800601a <print_object+0x30>
 8006018:	2301      	movs	r3, #1
 800601a:	60fb      	str	r3, [r7, #12]
 800601c:	68fb      	ldr	r3, [r7, #12]
 800601e:	3301      	adds	r3, #1
 8006020:	4619      	mov	r1, r3
 8006022:	6838      	ldr	r0, [r7, #0]
 8006024:	f7fe fc38 	bl	8004898 <ensure>
 8006028:	61f8      	str	r0, [r7, #28]
 800602a:	69fb      	ldr	r3, [r7, #28]
 800602c:	2b00      	cmp	r3, #0
 800602e:	d101      	bne.n	8006034 <print_object+0x4a>
 8006030:	2300      	movs	r3, #0
 8006032:	e0f4      	b.n	800621e <print_object+0x234>
 8006034:	69fb      	ldr	r3, [r7, #28]
 8006036:	1c5a      	adds	r2, r3, #1
 8006038:	61fa      	str	r2, [r7, #28]
 800603a:	227b      	movs	r2, #123	; 0x7b
 800603c:	701a      	strb	r2, [r3, #0]
 800603e:	683b      	ldr	r3, [r7, #0]
 8006040:	68db      	ldr	r3, [r3, #12]
 8006042:	1c5a      	adds	r2, r3, #1
 8006044:	683b      	ldr	r3, [r7, #0]
 8006046:	60da      	str	r2, [r3, #12]
 8006048:	683b      	ldr	r3, [r7, #0]
 800604a:	695b      	ldr	r3, [r3, #20]
 800604c:	2b00      	cmp	r3, #0
 800604e:	d004      	beq.n	800605a <print_object+0x70>
 8006050:	69fb      	ldr	r3, [r7, #28]
 8006052:	1c5a      	adds	r2, r3, #1
 8006054:	61fa      	str	r2, [r7, #28]
 8006056:	220a      	movs	r2, #10
 8006058:	701a      	strb	r2, [r3, #0]
 800605a:	683b      	ldr	r3, [r7, #0]
 800605c:	689a      	ldr	r2, [r3, #8]
 800605e:	68fb      	ldr	r3, [r7, #12]
 8006060:	441a      	add	r2, r3
 8006062:	683b      	ldr	r3, [r7, #0]
 8006064:	609a      	str	r2, [r3, #8]
 8006066:	e0a0      	b.n	80061aa <print_object+0x1c0>
 8006068:	683b      	ldr	r3, [r7, #0]
 800606a:	695b      	ldr	r3, [r3, #20]
 800606c:	2b00      	cmp	r3, #0
 800606e:	d022      	beq.n	80060b6 <print_object+0xcc>
 8006070:	683b      	ldr	r3, [r7, #0]
 8006072:	68db      	ldr	r3, [r3, #12]
 8006074:	4619      	mov	r1, r3
 8006076:	6838      	ldr	r0, [r7, #0]
 8006078:	f7fe fc0e 	bl	8004898 <ensure>
 800607c:	61f8      	str	r0, [r7, #28]
 800607e:	69fb      	ldr	r3, [r7, #28]
 8006080:	2b00      	cmp	r3, #0
 8006082:	d101      	bne.n	8006088 <print_object+0x9e>
 8006084:	2300      	movs	r3, #0
 8006086:	e0ca      	b.n	800621e <print_object+0x234>
 8006088:	2300      	movs	r3, #0
 800608a:	617b      	str	r3, [r7, #20]
 800608c:	e007      	b.n	800609e <print_object+0xb4>
 800608e:	69fb      	ldr	r3, [r7, #28]
 8006090:	1c5a      	adds	r2, r3, #1
 8006092:	61fa      	str	r2, [r7, #28]
 8006094:	2209      	movs	r2, #9
 8006096:	701a      	strb	r2, [r3, #0]
 8006098:	697b      	ldr	r3, [r7, #20]
 800609a:	3301      	adds	r3, #1
 800609c:	617b      	str	r3, [r7, #20]
 800609e:	683b      	ldr	r3, [r7, #0]
 80060a0:	68db      	ldr	r3, [r3, #12]
 80060a2:	697a      	ldr	r2, [r7, #20]
 80060a4:	429a      	cmp	r2, r3
 80060a6:	d3f2      	bcc.n	800608e <print_object+0xa4>
 80060a8:	683b      	ldr	r3, [r7, #0]
 80060aa:	689a      	ldr	r2, [r3, #8]
 80060ac:	683b      	ldr	r3, [r7, #0]
 80060ae:	68db      	ldr	r3, [r3, #12]
 80060b0:	441a      	add	r2, r3
 80060b2:	683b      	ldr	r3, [r7, #0]
 80060b4:	609a      	str	r2, [r3, #8]
 80060b6:	69bb      	ldr	r3, [r7, #24]
 80060b8:	6a1b      	ldr	r3, [r3, #32]
 80060ba:	6839      	ldr	r1, [r7, #0]
 80060bc:	4618      	mov	r0, r3
 80060be:	f7ff f86f 	bl	80051a0 <print_string_ptr>
 80060c2:	4603      	mov	r3, r0
 80060c4:	2b00      	cmp	r3, #0
 80060c6:	d101      	bne.n	80060cc <print_object+0xe2>
 80060c8:	2300      	movs	r3, #0
 80060ca:	e0a8      	b.n	800621e <print_object+0x234>
 80060cc:	6838      	ldr	r0, [r7, #0]
 80060ce:	f7fe fc7d 	bl	80049cc <update_offset>
 80060d2:	683b      	ldr	r3, [r7, #0]
 80060d4:	695b      	ldr	r3, [r3, #20]
 80060d6:	2b00      	cmp	r3, #0
 80060d8:	d001      	beq.n	80060de <print_object+0xf4>
 80060da:	2302      	movs	r3, #2
 80060dc:	e000      	b.n	80060e0 <print_object+0xf6>
 80060de:	2301      	movs	r3, #1
 80060e0:	60fb      	str	r3, [r7, #12]
 80060e2:	68f9      	ldr	r1, [r7, #12]
 80060e4:	6838      	ldr	r0, [r7, #0]
 80060e6:	f7fe fbd7 	bl	8004898 <ensure>
 80060ea:	61f8      	str	r0, [r7, #28]
 80060ec:	69fb      	ldr	r3, [r7, #28]
 80060ee:	2b00      	cmp	r3, #0
 80060f0:	d101      	bne.n	80060f6 <print_object+0x10c>
 80060f2:	2300      	movs	r3, #0
 80060f4:	e093      	b.n	800621e <print_object+0x234>
 80060f6:	69fb      	ldr	r3, [r7, #28]
 80060f8:	1c5a      	adds	r2, r3, #1
 80060fa:	61fa      	str	r2, [r7, #28]
 80060fc:	223a      	movs	r2, #58	; 0x3a
 80060fe:	701a      	strb	r2, [r3, #0]
 8006100:	683b      	ldr	r3, [r7, #0]
 8006102:	695b      	ldr	r3, [r3, #20]
 8006104:	2b00      	cmp	r3, #0
 8006106:	d004      	beq.n	8006112 <print_object+0x128>
 8006108:	69fb      	ldr	r3, [r7, #28]
 800610a:	1c5a      	adds	r2, r3, #1
 800610c:	61fa      	str	r2, [r7, #28]
 800610e:	2209      	movs	r2, #9
 8006110:	701a      	strb	r2, [r3, #0]
 8006112:	683b      	ldr	r3, [r7, #0]
 8006114:	689a      	ldr	r2, [r3, #8]
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	441a      	add	r2, r3
 800611a:	683b      	ldr	r3, [r7, #0]
 800611c:	609a      	str	r2, [r3, #8]
 800611e:	6839      	ldr	r1, [r7, #0]
 8006120:	69b8      	ldr	r0, [r7, #24]
 8006122:	f7ff fc35 	bl	8005990 <print_value>
 8006126:	4603      	mov	r3, r0
 8006128:	2b00      	cmp	r3, #0
 800612a:	d101      	bne.n	8006130 <print_object+0x146>
 800612c:	2300      	movs	r3, #0
 800612e:	e076      	b.n	800621e <print_object+0x234>
 8006130:	6838      	ldr	r0, [r7, #0]
 8006132:	f7fe fc4b 	bl	80049cc <update_offset>
 8006136:	683b      	ldr	r3, [r7, #0]
 8006138:	695b      	ldr	r3, [r3, #20]
 800613a:	2b00      	cmp	r3, #0
 800613c:	d001      	beq.n	8006142 <print_object+0x158>
 800613e:	2201      	movs	r2, #1
 8006140:	e000      	b.n	8006144 <print_object+0x15a>
 8006142:	2200      	movs	r2, #0
 8006144:	69bb      	ldr	r3, [r7, #24]
 8006146:	681b      	ldr	r3, [r3, #0]
 8006148:	2b00      	cmp	r3, #0
 800614a:	d001      	beq.n	8006150 <print_object+0x166>
 800614c:	2301      	movs	r3, #1
 800614e:	e000      	b.n	8006152 <print_object+0x168>
 8006150:	2300      	movs	r3, #0
 8006152:	4413      	add	r3, r2
 8006154:	60fb      	str	r3, [r7, #12]
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	3301      	adds	r3, #1
 800615a:	4619      	mov	r1, r3
 800615c:	6838      	ldr	r0, [r7, #0]
 800615e:	f7fe fb9b 	bl	8004898 <ensure>
 8006162:	61f8      	str	r0, [r7, #28]
 8006164:	69fb      	ldr	r3, [r7, #28]
 8006166:	2b00      	cmp	r3, #0
 8006168:	d101      	bne.n	800616e <print_object+0x184>
 800616a:	2300      	movs	r3, #0
 800616c:	e057      	b.n	800621e <print_object+0x234>
 800616e:	69bb      	ldr	r3, [r7, #24]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	2b00      	cmp	r3, #0
 8006174:	d004      	beq.n	8006180 <print_object+0x196>
 8006176:	69fb      	ldr	r3, [r7, #28]
 8006178:	1c5a      	adds	r2, r3, #1
 800617a:	61fa      	str	r2, [r7, #28]
 800617c:	222c      	movs	r2, #44	; 0x2c
 800617e:	701a      	strb	r2, [r3, #0]
 8006180:	683b      	ldr	r3, [r7, #0]
 8006182:	695b      	ldr	r3, [r3, #20]
 8006184:	2b00      	cmp	r3, #0
 8006186:	d004      	beq.n	8006192 <print_object+0x1a8>
 8006188:	69fb      	ldr	r3, [r7, #28]
 800618a:	1c5a      	adds	r2, r3, #1
 800618c:	61fa      	str	r2, [r7, #28]
 800618e:	220a      	movs	r2, #10
 8006190:	701a      	strb	r2, [r3, #0]
 8006192:	69fb      	ldr	r3, [r7, #28]
 8006194:	2200      	movs	r2, #0
 8006196:	701a      	strb	r2, [r3, #0]
 8006198:	683b      	ldr	r3, [r7, #0]
 800619a:	689a      	ldr	r2, [r3, #8]
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	441a      	add	r2, r3
 80061a0:	683b      	ldr	r3, [r7, #0]
 80061a2:	609a      	str	r2, [r3, #8]
 80061a4:	69bb      	ldr	r3, [r7, #24]
 80061a6:	681b      	ldr	r3, [r3, #0]
 80061a8:	61bb      	str	r3, [r7, #24]
 80061aa:	69bb      	ldr	r3, [r7, #24]
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	f47f af5b 	bne.w	8006068 <print_object+0x7e>
 80061b2:	683b      	ldr	r3, [r7, #0]
 80061b4:	695b      	ldr	r3, [r3, #20]
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	d003      	beq.n	80061c2 <print_object+0x1d8>
 80061ba:	683b      	ldr	r3, [r7, #0]
 80061bc:	68db      	ldr	r3, [r3, #12]
 80061be:	3301      	adds	r3, #1
 80061c0:	e000      	b.n	80061c4 <print_object+0x1da>
 80061c2:	2302      	movs	r3, #2
 80061c4:	4619      	mov	r1, r3
 80061c6:	6838      	ldr	r0, [r7, #0]
 80061c8:	f7fe fb66 	bl	8004898 <ensure>
 80061cc:	61f8      	str	r0, [r7, #28]
 80061ce:	69fb      	ldr	r3, [r7, #28]
 80061d0:	2b00      	cmp	r3, #0
 80061d2:	d101      	bne.n	80061d8 <print_object+0x1ee>
 80061d4:	2300      	movs	r3, #0
 80061d6:	e022      	b.n	800621e <print_object+0x234>
 80061d8:	683b      	ldr	r3, [r7, #0]
 80061da:	695b      	ldr	r3, [r3, #20]
 80061dc:	2b00      	cmp	r3, #0
 80061de:	d010      	beq.n	8006202 <print_object+0x218>
 80061e0:	2300      	movs	r3, #0
 80061e2:	613b      	str	r3, [r7, #16]
 80061e4:	e007      	b.n	80061f6 <print_object+0x20c>
 80061e6:	69fb      	ldr	r3, [r7, #28]
 80061e8:	1c5a      	adds	r2, r3, #1
 80061ea:	61fa      	str	r2, [r7, #28]
 80061ec:	2209      	movs	r2, #9
 80061ee:	701a      	strb	r2, [r3, #0]
 80061f0:	693b      	ldr	r3, [r7, #16]
 80061f2:	3301      	adds	r3, #1
 80061f4:	613b      	str	r3, [r7, #16]
 80061f6:	683b      	ldr	r3, [r7, #0]
 80061f8:	68db      	ldr	r3, [r3, #12]
 80061fa:	3b01      	subs	r3, #1
 80061fc:	693a      	ldr	r2, [r7, #16]
 80061fe:	429a      	cmp	r2, r3
 8006200:	d3f1      	bcc.n	80061e6 <print_object+0x1fc>
 8006202:	69fb      	ldr	r3, [r7, #28]
 8006204:	1c5a      	adds	r2, r3, #1
 8006206:	61fa      	str	r2, [r7, #28]
 8006208:	227d      	movs	r2, #125	; 0x7d
 800620a:	701a      	strb	r2, [r3, #0]
 800620c:	69fb      	ldr	r3, [r7, #28]
 800620e:	2200      	movs	r2, #0
 8006210:	701a      	strb	r2, [r3, #0]
 8006212:	683b      	ldr	r3, [r7, #0]
 8006214:	68db      	ldr	r3, [r3, #12]
 8006216:	1e5a      	subs	r2, r3, #1
 8006218:	683b      	ldr	r3, [r7, #0]
 800621a:	60da      	str	r2, [r3, #12]
 800621c:	2301      	movs	r3, #1
 800621e:	4618      	mov	r0, r3
 8006220:	3720      	adds	r7, #32
 8006222:	46bd      	mov	sp, r7
 8006224:	bd80      	pop	{r7, pc}

08006226 <get_array_item>:
 8006226:	b480      	push	{r7}
 8006228:	b085      	sub	sp, #20
 800622a:	af00      	add	r7, sp, #0
 800622c:	6078      	str	r0, [r7, #4]
 800622e:	6039      	str	r1, [r7, #0]
 8006230:	2300      	movs	r3, #0
 8006232:	60fb      	str	r3, [r7, #12]
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	2b00      	cmp	r3, #0
 8006238:	d101      	bne.n	800623e <get_array_item+0x18>
 800623a:	2300      	movs	r3, #0
 800623c:	e010      	b.n	8006260 <get_array_item+0x3a>
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	689b      	ldr	r3, [r3, #8]
 8006242:	60fb      	str	r3, [r7, #12]
 8006244:	e005      	b.n	8006252 <get_array_item+0x2c>
 8006246:	683b      	ldr	r3, [r7, #0]
 8006248:	3b01      	subs	r3, #1
 800624a:	603b      	str	r3, [r7, #0]
 800624c:	68fb      	ldr	r3, [r7, #12]
 800624e:	681b      	ldr	r3, [r3, #0]
 8006250:	60fb      	str	r3, [r7, #12]
 8006252:	68fb      	ldr	r3, [r7, #12]
 8006254:	2b00      	cmp	r3, #0
 8006256:	d002      	beq.n	800625e <get_array_item+0x38>
 8006258:	683b      	ldr	r3, [r7, #0]
 800625a:	2b00      	cmp	r3, #0
 800625c:	d1f3      	bne.n	8006246 <get_array_item+0x20>
 800625e:	68fb      	ldr	r3, [r7, #12]
 8006260:	4618      	mov	r0, r3
 8006262:	3714      	adds	r7, #20
 8006264:	46bd      	mov	sp, r7
 8006266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800626a:	4770      	bx	lr

0800626c <cJSON_GetArrayItem>:
 800626c:	b580      	push	{r7, lr}
 800626e:	b082      	sub	sp, #8
 8006270:	af00      	add	r7, sp, #0
 8006272:	6078      	str	r0, [r7, #4]
 8006274:	6039      	str	r1, [r7, #0]
 8006276:	683b      	ldr	r3, [r7, #0]
 8006278:	2b00      	cmp	r3, #0
 800627a:	da01      	bge.n	8006280 <cJSON_GetArrayItem+0x14>
 800627c:	2300      	movs	r3, #0
 800627e:	e005      	b.n	800628c <cJSON_GetArrayItem+0x20>
 8006280:	683b      	ldr	r3, [r7, #0]
 8006282:	4619      	mov	r1, r3
 8006284:	6878      	ldr	r0, [r7, #4]
 8006286:	f7ff ffce 	bl	8006226 <get_array_item>
 800628a:	4603      	mov	r3, r0
 800628c:	4618      	mov	r0, r3
 800628e:	3708      	adds	r7, #8
 8006290:	46bd      	mov	sp, r7
 8006292:	bd80      	pop	{r7, pc}

08006294 <get_object_item>:
 8006294:	b580      	push	{r7, lr}
 8006296:	b086      	sub	sp, #24
 8006298:	af00      	add	r7, sp, #0
 800629a:	60f8      	str	r0, [r7, #12]
 800629c:	60b9      	str	r1, [r7, #8]
 800629e:	607a      	str	r2, [r7, #4]
 80062a0:	2300      	movs	r3, #0
 80062a2:	617b      	str	r3, [r7, #20]
 80062a4:	68fb      	ldr	r3, [r7, #12]
 80062a6:	2b00      	cmp	r3, #0
 80062a8:	d002      	beq.n	80062b0 <get_object_item+0x1c>
 80062aa:	68bb      	ldr	r3, [r7, #8]
 80062ac:	2b00      	cmp	r3, #0
 80062ae:	d101      	bne.n	80062b4 <get_object_item+0x20>
 80062b0:	2300      	movs	r3, #0
 80062b2:	e033      	b.n	800631c <get_object_item+0x88>
 80062b4:	68fb      	ldr	r3, [r7, #12]
 80062b6:	689b      	ldr	r3, [r3, #8]
 80062b8:	617b      	str	r3, [r7, #20]
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	2b00      	cmp	r3, #0
 80062be:	d017      	beq.n	80062f0 <get_object_item+0x5c>
 80062c0:	e002      	b.n	80062c8 <get_object_item+0x34>
 80062c2:	697b      	ldr	r3, [r7, #20]
 80062c4:	681b      	ldr	r3, [r3, #0]
 80062c6:	617b      	str	r3, [r7, #20]
 80062c8:	697b      	ldr	r3, [r7, #20]
 80062ca:	2b00      	cmp	r3, #0
 80062cc:	d01c      	beq.n	8006308 <get_object_item+0x74>
 80062ce:	697b      	ldr	r3, [r7, #20]
 80062d0:	6a1b      	ldr	r3, [r3, #32]
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d018      	beq.n	8006308 <get_object_item+0x74>
 80062d6:	697b      	ldr	r3, [r7, #20]
 80062d8:	6a1b      	ldr	r3, [r3, #32]
 80062da:	4619      	mov	r1, r3
 80062dc:	68b8      	ldr	r0, [r7, #8]
 80062de:	f7f9 ff77 	bl	80001d0 <strcmp>
 80062e2:	4603      	mov	r3, r0
 80062e4:	2b00      	cmp	r3, #0
 80062e6:	d1ec      	bne.n	80062c2 <get_object_item+0x2e>
 80062e8:	e00e      	b.n	8006308 <get_object_item+0x74>
 80062ea:	697b      	ldr	r3, [r7, #20]
 80062ec:	681b      	ldr	r3, [r3, #0]
 80062ee:	617b      	str	r3, [r7, #20]
 80062f0:	697b      	ldr	r3, [r7, #20]
 80062f2:	2b00      	cmp	r3, #0
 80062f4:	d008      	beq.n	8006308 <get_object_item+0x74>
 80062f6:	697b      	ldr	r3, [r7, #20]
 80062f8:	6a1b      	ldr	r3, [r3, #32]
 80062fa:	4619      	mov	r1, r3
 80062fc:	68b8      	ldr	r0, [r7, #8]
 80062fe:	f7fe f903 	bl	8004508 <case_insensitive_strcmp>
 8006302:	4603      	mov	r3, r0
 8006304:	2b00      	cmp	r3, #0
 8006306:	d1f0      	bne.n	80062ea <get_object_item+0x56>
 8006308:	697b      	ldr	r3, [r7, #20]
 800630a:	2b00      	cmp	r3, #0
 800630c:	d003      	beq.n	8006316 <get_object_item+0x82>
 800630e:	697b      	ldr	r3, [r7, #20]
 8006310:	6a1b      	ldr	r3, [r3, #32]
 8006312:	2b00      	cmp	r3, #0
 8006314:	d101      	bne.n	800631a <get_object_item+0x86>
 8006316:	2300      	movs	r3, #0
 8006318:	e000      	b.n	800631c <get_object_item+0x88>
 800631a:	697b      	ldr	r3, [r7, #20]
 800631c:	4618      	mov	r0, r3
 800631e:	3718      	adds	r7, #24
 8006320:	46bd      	mov	sp, r7
 8006322:	bd80      	pop	{r7, pc}

08006324 <cJSON_GetObjectItemCaseSensitive>:
 8006324:	b580      	push	{r7, lr}
 8006326:	b082      	sub	sp, #8
 8006328:	af00      	add	r7, sp, #0
 800632a:	6078      	str	r0, [r7, #4]
 800632c:	6039      	str	r1, [r7, #0]
 800632e:	2201      	movs	r2, #1
 8006330:	6839      	ldr	r1, [r7, #0]
 8006332:	6878      	ldr	r0, [r7, #4]
 8006334:	f7ff ffae 	bl	8006294 <get_object_item>
 8006338:	4603      	mov	r3, r0
 800633a:	4618      	mov	r0, r3
 800633c:	3708      	adds	r7, #8
 800633e:	46bd      	mov	sp, r7
 8006340:	bd80      	pop	{r7, pc}

08006342 <suffix_object>:
 8006342:	b480      	push	{r7}
 8006344:	b083      	sub	sp, #12
 8006346:	af00      	add	r7, sp, #0
 8006348:	6078      	str	r0, [r7, #4]
 800634a:	6039      	str	r1, [r7, #0]
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	683a      	ldr	r2, [r7, #0]
 8006350:	601a      	str	r2, [r3, #0]
 8006352:	683b      	ldr	r3, [r7, #0]
 8006354:	687a      	ldr	r2, [r7, #4]
 8006356:	605a      	str	r2, [r3, #4]
 8006358:	bf00      	nop
 800635a:	370c      	adds	r7, #12
 800635c:	46bd      	mov	sp, r7
 800635e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006362:	4770      	bx	lr

08006364 <add_item_to_array>:
 8006364:	b580      	push	{r7, lr}
 8006366:	b084      	sub	sp, #16
 8006368:	af00      	add	r7, sp, #0
 800636a:	6078      	str	r0, [r7, #4]
 800636c:	6039      	str	r1, [r7, #0]
 800636e:	2300      	movs	r3, #0
 8006370:	60fb      	str	r3, [r7, #12]
 8006372:	683b      	ldr	r3, [r7, #0]
 8006374:	2b00      	cmp	r3, #0
 8006376:	d006      	beq.n	8006386 <add_item_to_array+0x22>
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	2b00      	cmp	r3, #0
 800637c:	d003      	beq.n	8006386 <add_item_to_array+0x22>
 800637e:	687a      	ldr	r2, [r7, #4]
 8006380:	683b      	ldr	r3, [r7, #0]
 8006382:	429a      	cmp	r2, r3
 8006384:	d101      	bne.n	800638a <add_item_to_array+0x26>
 8006386:	2300      	movs	r3, #0
 8006388:	e01e      	b.n	80063c8 <add_item_to_array+0x64>
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	689b      	ldr	r3, [r3, #8]
 800638e:	60fb      	str	r3, [r7, #12]
 8006390:	68fb      	ldr	r3, [r7, #12]
 8006392:	2b00      	cmp	r3, #0
 8006394:	d109      	bne.n	80063aa <add_item_to_array+0x46>
 8006396:	687b      	ldr	r3, [r7, #4]
 8006398:	683a      	ldr	r2, [r7, #0]
 800639a:	609a      	str	r2, [r3, #8]
 800639c:	683b      	ldr	r3, [r7, #0]
 800639e:	683a      	ldr	r2, [r7, #0]
 80063a0:	605a      	str	r2, [r3, #4]
 80063a2:	683b      	ldr	r3, [r7, #0]
 80063a4:	2200      	movs	r2, #0
 80063a6:	601a      	str	r2, [r3, #0]
 80063a8:	e00d      	b.n	80063c6 <add_item_to_array+0x62>
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	685b      	ldr	r3, [r3, #4]
 80063ae:	2b00      	cmp	r3, #0
 80063b0:	d009      	beq.n	80063c6 <add_item_to_array+0x62>
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	685b      	ldr	r3, [r3, #4]
 80063b6:	6839      	ldr	r1, [r7, #0]
 80063b8:	4618      	mov	r0, r3
 80063ba:	f7ff ffc2 	bl	8006342 <suffix_object>
 80063be:	687b      	ldr	r3, [r7, #4]
 80063c0:	689b      	ldr	r3, [r3, #8]
 80063c2:	683a      	ldr	r2, [r7, #0]
 80063c4:	605a      	str	r2, [r3, #4]
 80063c6:	2301      	movs	r3, #1
 80063c8:	4618      	mov	r0, r3
 80063ca:	3710      	adds	r7, #16
 80063cc:	46bd      	mov	sp, r7
 80063ce:	bd80      	pop	{r7, pc}

080063d0 <cJSON_AddItemToArray>:
 80063d0:	b580      	push	{r7, lr}
 80063d2:	b082      	sub	sp, #8
 80063d4:	af00      	add	r7, sp, #0
 80063d6:	6078      	str	r0, [r7, #4]
 80063d8:	6039      	str	r1, [r7, #0]
 80063da:	6839      	ldr	r1, [r7, #0]
 80063dc:	6878      	ldr	r0, [r7, #4]
 80063de:	f7ff ffc1 	bl	8006364 <add_item_to_array>
 80063e2:	4603      	mov	r3, r0
 80063e4:	4618      	mov	r0, r3
 80063e6:	3708      	adds	r7, #8
 80063e8:	46bd      	mov	sp, r7
 80063ea:	bd80      	pop	{r7, pc}

080063ec <cast_away_const>:
 80063ec:	b480      	push	{r7}
 80063ee:	b083      	sub	sp, #12
 80063f0:	af00      	add	r7, sp, #0
 80063f2:	6078      	str	r0, [r7, #4]
 80063f4:	687b      	ldr	r3, [r7, #4]
 80063f6:	4618      	mov	r0, r3
 80063f8:	370c      	adds	r7, #12
 80063fa:	46bd      	mov	sp, r7
 80063fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006400:	4770      	bx	lr

08006402 <add_item_to_object>:
 8006402:	b580      	push	{r7, lr}
 8006404:	b086      	sub	sp, #24
 8006406:	af00      	add	r7, sp, #0
 8006408:	60f8      	str	r0, [r7, #12]
 800640a:	60b9      	str	r1, [r7, #8]
 800640c:	607a      	str	r2, [r7, #4]
 800640e:	603b      	str	r3, [r7, #0]
 8006410:	2300      	movs	r3, #0
 8006412:	617b      	str	r3, [r7, #20]
 8006414:	2300      	movs	r3, #0
 8006416:	613b      	str	r3, [r7, #16]
 8006418:	68fb      	ldr	r3, [r7, #12]
 800641a:	2b00      	cmp	r3, #0
 800641c:	d009      	beq.n	8006432 <add_item_to_object+0x30>
 800641e:	68bb      	ldr	r3, [r7, #8]
 8006420:	2b00      	cmp	r3, #0
 8006422:	d006      	beq.n	8006432 <add_item_to_object+0x30>
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	2b00      	cmp	r3, #0
 8006428:	d003      	beq.n	8006432 <add_item_to_object+0x30>
 800642a:	68fa      	ldr	r2, [r7, #12]
 800642c:	687b      	ldr	r3, [r7, #4]
 800642e:	429a      	cmp	r2, r3
 8006430:	d101      	bne.n	8006436 <add_item_to_object+0x34>
 8006432:	2300      	movs	r3, #0
 8006434:	e036      	b.n	80064a4 <add_item_to_object+0xa2>
 8006436:	6a3b      	ldr	r3, [r7, #32]
 8006438:	2b00      	cmp	r3, #0
 800643a:	d009      	beq.n	8006450 <add_item_to_object+0x4e>
 800643c:	68b8      	ldr	r0, [r7, #8]
 800643e:	f7ff ffd5 	bl	80063ec <cast_away_const>
 8006442:	6178      	str	r0, [r7, #20]
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	68db      	ldr	r3, [r3, #12]
 8006448:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800644c:	613b      	str	r3, [r7, #16]
 800644e:	e00e      	b.n	800646e <add_item_to_object+0x6c>
 8006450:	6839      	ldr	r1, [r7, #0]
 8006452:	68b8      	ldr	r0, [r7, #8]
 8006454:	f7fe f8c4 	bl	80045e0 <cJSON_strdup>
 8006458:	6178      	str	r0, [r7, #20]
 800645a:	697b      	ldr	r3, [r7, #20]
 800645c:	2b00      	cmp	r3, #0
 800645e:	d101      	bne.n	8006464 <add_item_to_object+0x62>
 8006460:	2300      	movs	r3, #0
 8006462:	e01f      	b.n	80064a4 <add_item_to_object+0xa2>
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	68db      	ldr	r3, [r3, #12]
 8006468:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800646c:	613b      	str	r3, [r7, #16]
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	68db      	ldr	r3, [r3, #12]
 8006472:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006476:	2b00      	cmp	r3, #0
 8006478:	d109      	bne.n	800648e <add_item_to_object+0x8c>
 800647a:	687b      	ldr	r3, [r7, #4]
 800647c:	6a1b      	ldr	r3, [r3, #32]
 800647e:	2b00      	cmp	r3, #0
 8006480:	d005      	beq.n	800648e <add_item_to_object+0x8c>
 8006482:	683b      	ldr	r3, [r7, #0]
 8006484:	685b      	ldr	r3, [r3, #4]
 8006486:	687a      	ldr	r2, [r7, #4]
 8006488:	6a12      	ldr	r2, [r2, #32]
 800648a:	4610      	mov	r0, r2
 800648c:	4798      	blx	r3
 800648e:	687b      	ldr	r3, [r7, #4]
 8006490:	697a      	ldr	r2, [r7, #20]
 8006492:	621a      	str	r2, [r3, #32]
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	693a      	ldr	r2, [r7, #16]
 8006498:	60da      	str	r2, [r3, #12]
 800649a:	6879      	ldr	r1, [r7, #4]
 800649c:	68f8      	ldr	r0, [r7, #12]
 800649e:	f7ff ff61 	bl	8006364 <add_item_to_array>
 80064a2:	4603      	mov	r3, r0
 80064a4:	4618      	mov	r0, r3
 80064a6:	3718      	adds	r7, #24
 80064a8:	46bd      	mov	sp, r7
 80064aa:	bd80      	pop	{r7, pc}

080064ac <cJSON_AddItemToObject>:
 80064ac:	b580      	push	{r7, lr}
 80064ae:	b086      	sub	sp, #24
 80064b0:	af02      	add	r7, sp, #8
 80064b2:	60f8      	str	r0, [r7, #12]
 80064b4:	60b9      	str	r1, [r7, #8]
 80064b6:	607a      	str	r2, [r7, #4]
 80064b8:	2300      	movs	r3, #0
 80064ba:	9300      	str	r3, [sp, #0]
 80064bc:	4b05      	ldr	r3, [pc, #20]	; (80064d4 <cJSON_AddItemToObject+0x28>)
 80064be:	687a      	ldr	r2, [r7, #4]
 80064c0:	68b9      	ldr	r1, [r7, #8]
 80064c2:	68f8      	ldr	r0, [r7, #12]
 80064c4:	f7ff ff9d 	bl	8006402 <add_item_to_object>
 80064c8:	4603      	mov	r3, r0
 80064ca:	4618      	mov	r0, r3
 80064cc:	3710      	adds	r7, #16
 80064ce:	46bd      	mov	sp, r7
 80064d0:	bd80      	pop	{r7, pc}
 80064d2:	bf00      	nop
 80064d4:	20000048 	.word	0x20000048

080064d8 <cJSON_AddNumberToObject>:
 80064d8:	b580      	push	{r7, lr}
 80064da:	b088      	sub	sp, #32
 80064dc:	af02      	add	r7, sp, #8
 80064de:	60f8      	str	r0, [r7, #12]
 80064e0:	60b9      	str	r1, [r7, #8]
 80064e2:	ed87 0b00 	vstr	d0, [r7]
 80064e6:	ed97 0b00 	vldr	d0, [r7]
 80064ea:	f000 f83d 	bl	8006568 <cJSON_CreateNumber>
 80064ee:	6178      	str	r0, [r7, #20]
 80064f0:	2300      	movs	r3, #0
 80064f2:	9300      	str	r3, [sp, #0]
 80064f4:	4b09      	ldr	r3, [pc, #36]	; (800651c <cJSON_AddNumberToObject+0x44>)
 80064f6:	697a      	ldr	r2, [r7, #20]
 80064f8:	68b9      	ldr	r1, [r7, #8]
 80064fa:	68f8      	ldr	r0, [r7, #12]
 80064fc:	f7ff ff81 	bl	8006402 <add_item_to_object>
 8006500:	4603      	mov	r3, r0
 8006502:	2b00      	cmp	r3, #0
 8006504:	d001      	beq.n	800650a <cJSON_AddNumberToObject+0x32>
 8006506:	697b      	ldr	r3, [r7, #20]
 8006508:	e003      	b.n	8006512 <cJSON_AddNumberToObject+0x3a>
 800650a:	6978      	ldr	r0, [r7, #20]
 800650c:	f7fe f8a6 	bl	800465c <cJSON_Delete>
 8006510:	2300      	movs	r3, #0
 8006512:	4618      	mov	r0, r3
 8006514:	3718      	adds	r7, #24
 8006516:	46bd      	mov	sp, r7
 8006518:	bd80      	pop	{r7, pc}
 800651a:	bf00      	nop
 800651c:	20000048 	.word	0x20000048

08006520 <cJSON_AddStringToObject>:
 8006520:	b580      	push	{r7, lr}
 8006522:	b088      	sub	sp, #32
 8006524:	af02      	add	r7, sp, #8
 8006526:	60f8      	str	r0, [r7, #12]
 8006528:	60b9      	str	r1, [r7, #8]
 800652a:	607a      	str	r2, [r7, #4]
 800652c:	6878      	ldr	r0, [r7, #4]
 800652e:	f000 f863 	bl	80065f8 <cJSON_CreateString>
 8006532:	6178      	str	r0, [r7, #20]
 8006534:	2300      	movs	r3, #0
 8006536:	9300      	str	r3, [sp, #0]
 8006538:	4b09      	ldr	r3, [pc, #36]	; (8006560 <cJSON_AddStringToObject+0x40>)
 800653a:	697a      	ldr	r2, [r7, #20]
 800653c:	68b9      	ldr	r1, [r7, #8]
 800653e:	68f8      	ldr	r0, [r7, #12]
 8006540:	f7ff ff5f 	bl	8006402 <add_item_to_object>
 8006544:	4603      	mov	r3, r0
 8006546:	2b00      	cmp	r3, #0
 8006548:	d001      	beq.n	800654e <cJSON_AddStringToObject+0x2e>
 800654a:	697b      	ldr	r3, [r7, #20]
 800654c:	e003      	b.n	8006556 <cJSON_AddStringToObject+0x36>
 800654e:	6978      	ldr	r0, [r7, #20]
 8006550:	f7fe f884 	bl	800465c <cJSON_Delete>
 8006554:	2300      	movs	r3, #0
 8006556:	4618      	mov	r0, r3
 8006558:	3718      	adds	r7, #24
 800655a:	46bd      	mov	sp, r7
 800655c:	bd80      	pop	{r7, pc}
 800655e:	bf00      	nop
 8006560:	20000048 	.word	0x20000048
 8006564:	00000000 	.word	0x00000000

08006568 <cJSON_CreateNumber>:
 8006568:	b580      	push	{r7, lr}
 800656a:	b084      	sub	sp, #16
 800656c:	af00      	add	r7, sp, #0
 800656e:	ed87 0b00 	vstr	d0, [r7]
 8006572:	481f      	ldr	r0, [pc, #124]	; (80065f0 <cJSON_CreateNumber+0x88>)
 8006574:	f7fe f85c 	bl	8004630 <cJSON_New_Item>
 8006578:	60f8      	str	r0, [r7, #12]
 800657a:	68fb      	ldr	r3, [r7, #12]
 800657c:	2b00      	cmp	r3, #0
 800657e:	d02c      	beq.n	80065da <cJSON_CreateNumber+0x72>
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	2208      	movs	r2, #8
 8006584:	60da      	str	r2, [r3, #12]
 8006586:	68f9      	ldr	r1, [r7, #12]
 8006588:	e9d7 2300 	ldrd	r2, r3, [r7]
 800658c:	e9c1 2306 	strd	r2, r3, [r1, #24]
 8006590:	a315      	add	r3, pc, #84	; (adr r3, 80065e8 <cJSON_CreateNumber+0x80>)
 8006592:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006596:	e9d7 0100 	ldrd	r0, r1, [r7]
 800659a:	f7fa fac3 	bl	8000b24 <__aeabi_dcmpge>
 800659e:	4603      	mov	r3, r0
 80065a0:	2b00      	cmp	r3, #0
 80065a2:	d004      	beq.n	80065ae <cJSON_CreateNumber+0x46>
 80065a4:	68fb      	ldr	r3, [r7, #12]
 80065a6:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 80065aa:	615a      	str	r2, [r3, #20]
 80065ac:	e015      	b.n	80065da <cJSON_CreateNumber+0x72>
 80065ae:	f04f 0200 	mov.w	r2, #0
 80065b2:	4b10      	ldr	r3, [pc, #64]	; (80065f4 <cJSON_CreateNumber+0x8c>)
 80065b4:	e9d7 0100 	ldrd	r0, r1, [r7]
 80065b8:	f7fa faaa 	bl	8000b10 <__aeabi_dcmple>
 80065bc:	4603      	mov	r3, r0
 80065be:	2b00      	cmp	r3, #0
 80065c0:	d004      	beq.n	80065cc <cJSON_CreateNumber+0x64>
 80065c2:	68fb      	ldr	r3, [r7, #12]
 80065c4:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80065c8:	615a      	str	r2, [r3, #20]
 80065ca:	e006      	b.n	80065da <cJSON_CreateNumber+0x72>
 80065cc:	e9d7 0100 	ldrd	r0, r1, [r7]
 80065d0:	f7fa fad2 	bl	8000b78 <__aeabi_d2iz>
 80065d4:	4602      	mov	r2, r0
 80065d6:	68fb      	ldr	r3, [r7, #12]
 80065d8:	615a      	str	r2, [r3, #20]
 80065da:	68fb      	ldr	r3, [r7, #12]
 80065dc:	4618      	mov	r0, r3
 80065de:	3710      	adds	r7, #16
 80065e0:	46bd      	mov	sp, r7
 80065e2:	bd80      	pop	{r7, pc}
 80065e4:	f3af 8000 	nop.w
 80065e8:	ffc00000 	.word	0xffc00000
 80065ec:	41dfffff 	.word	0x41dfffff
 80065f0:	20000048 	.word	0x20000048
 80065f4:	c1e00000 	.word	0xc1e00000

080065f8 <cJSON_CreateString>:
 80065f8:	b580      	push	{r7, lr}
 80065fa:	b084      	sub	sp, #16
 80065fc:	af00      	add	r7, sp, #0
 80065fe:	6078      	str	r0, [r7, #4]
 8006600:	480f      	ldr	r0, [pc, #60]	; (8006640 <cJSON_CreateString+0x48>)
 8006602:	f7fe f815 	bl	8004630 <cJSON_New_Item>
 8006606:	60f8      	str	r0, [r7, #12]
 8006608:	68fb      	ldr	r3, [r7, #12]
 800660a:	2b00      	cmp	r3, #0
 800660c:	d012      	beq.n	8006634 <cJSON_CreateString+0x3c>
 800660e:	68fb      	ldr	r3, [r7, #12]
 8006610:	2210      	movs	r2, #16
 8006612:	60da      	str	r2, [r3, #12]
 8006614:	490a      	ldr	r1, [pc, #40]	; (8006640 <cJSON_CreateString+0x48>)
 8006616:	6878      	ldr	r0, [r7, #4]
 8006618:	f7fd ffe2 	bl	80045e0 <cJSON_strdup>
 800661c:	4602      	mov	r2, r0
 800661e:	68fb      	ldr	r3, [r7, #12]
 8006620:	611a      	str	r2, [r3, #16]
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	691b      	ldr	r3, [r3, #16]
 8006626:	2b00      	cmp	r3, #0
 8006628:	d104      	bne.n	8006634 <cJSON_CreateString+0x3c>
 800662a:	68f8      	ldr	r0, [r7, #12]
 800662c:	f7fe f816 	bl	800465c <cJSON_Delete>
 8006630:	2300      	movs	r3, #0
 8006632:	e000      	b.n	8006636 <cJSON_CreateString+0x3e>
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	4618      	mov	r0, r3
 8006638:	3710      	adds	r7, #16
 800663a:	46bd      	mov	sp, r7
 800663c:	bd80      	pop	{r7, pc}
 800663e:	bf00      	nop
 8006640:	20000048 	.word	0x20000048

08006644 <cJSON_CreateArray>:
 8006644:	b580      	push	{r7, lr}
 8006646:	b082      	sub	sp, #8
 8006648:	af00      	add	r7, sp, #0
 800664a:	4807      	ldr	r0, [pc, #28]	; (8006668 <cJSON_CreateArray+0x24>)
 800664c:	f7fd fff0 	bl	8004630 <cJSON_New_Item>
 8006650:	6078      	str	r0, [r7, #4]
 8006652:	687b      	ldr	r3, [r7, #4]
 8006654:	2b00      	cmp	r3, #0
 8006656:	d002      	beq.n	800665e <cJSON_CreateArray+0x1a>
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	2220      	movs	r2, #32
 800665c:	60da      	str	r2, [r3, #12]
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	4618      	mov	r0, r3
 8006662:	3708      	adds	r7, #8
 8006664:	46bd      	mov	sp, r7
 8006666:	bd80      	pop	{r7, pc}
 8006668:	20000048 	.word	0x20000048

0800666c <cJSON_CreateObject>:
 800666c:	b580      	push	{r7, lr}
 800666e:	b082      	sub	sp, #8
 8006670:	af00      	add	r7, sp, #0
 8006672:	4807      	ldr	r0, [pc, #28]	; (8006690 <cJSON_CreateObject+0x24>)
 8006674:	f7fd ffdc 	bl	8004630 <cJSON_New_Item>
 8006678:	6078      	str	r0, [r7, #4]
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	2b00      	cmp	r3, #0
 800667e:	d002      	beq.n	8006686 <cJSON_CreateObject+0x1a>
 8006680:	687b      	ldr	r3, [r7, #4]
 8006682:	2240      	movs	r2, #64	; 0x40
 8006684:	60da      	str	r2, [r3, #12]
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	4618      	mov	r0, r3
 800668a:	3708      	adds	r7, #8
 800668c:	46bd      	mov	sp, r7
 800668e:	bd80      	pop	{r7, pc}
 8006690:	20000048 	.word	0x20000048

08006694 <cJSON_IsTrue>:
 8006694:	b480      	push	{r7}
 8006696:	b083      	sub	sp, #12
 8006698:	af00      	add	r7, sp, #0
 800669a:	6078      	str	r0, [r7, #4]
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	2b00      	cmp	r3, #0
 80066a0:	d101      	bne.n	80066a6 <cJSON_IsTrue+0x12>
 80066a2:	2300      	movs	r3, #0
 80066a4:	e007      	b.n	80066b6 <cJSON_IsTrue+0x22>
 80066a6:	687b      	ldr	r3, [r7, #4]
 80066a8:	68db      	ldr	r3, [r3, #12]
 80066aa:	b2db      	uxtb	r3, r3
 80066ac:	2b02      	cmp	r3, #2
 80066ae:	bf0c      	ite	eq
 80066b0:	2301      	moveq	r3, #1
 80066b2:	2300      	movne	r3, #0
 80066b4:	b2db      	uxtb	r3, r3
 80066b6:	4618      	mov	r0, r3
 80066b8:	370c      	adds	r7, #12
 80066ba:	46bd      	mov	sp, r7
 80066bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066c0:	4770      	bx	lr

080066c2 <cJSON_IsBool>:
 80066c2:	b480      	push	{r7}
 80066c4:	b083      	sub	sp, #12
 80066c6:	af00      	add	r7, sp, #0
 80066c8:	6078      	str	r0, [r7, #4]
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	2b00      	cmp	r3, #0
 80066ce:	d101      	bne.n	80066d4 <cJSON_IsBool+0x12>
 80066d0:	2300      	movs	r3, #0
 80066d2:	e008      	b.n	80066e6 <cJSON_IsBool+0x24>
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	68db      	ldr	r3, [r3, #12]
 80066d8:	f003 0303 	and.w	r3, r3, #3
 80066dc:	2b00      	cmp	r3, #0
 80066de:	bf14      	ite	ne
 80066e0:	2301      	movne	r3, #1
 80066e2:	2300      	moveq	r3, #0
 80066e4:	b2db      	uxtb	r3, r3
 80066e6:	4618      	mov	r0, r3
 80066e8:	370c      	adds	r7, #12
 80066ea:	46bd      	mov	sp, r7
 80066ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066f0:	4770      	bx	lr

080066f2 <cJSON_IsNumber>:
 80066f2:	b480      	push	{r7}
 80066f4:	b083      	sub	sp, #12
 80066f6:	af00      	add	r7, sp, #0
 80066f8:	6078      	str	r0, [r7, #4]
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	d101      	bne.n	8006704 <cJSON_IsNumber+0x12>
 8006700:	2300      	movs	r3, #0
 8006702:	e007      	b.n	8006714 <cJSON_IsNumber+0x22>
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	68db      	ldr	r3, [r3, #12]
 8006708:	b2db      	uxtb	r3, r3
 800670a:	2b08      	cmp	r3, #8
 800670c:	bf0c      	ite	eq
 800670e:	2301      	moveq	r3, #1
 8006710:	2300      	movne	r3, #0
 8006712:	b2db      	uxtb	r3, r3
 8006714:	4618      	mov	r0, r3
 8006716:	370c      	adds	r7, #12
 8006718:	46bd      	mov	sp, r7
 800671a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800671e:	4770      	bx	lr

08006720 <cJSON_IsString>:
 8006720:	b480      	push	{r7}
 8006722:	b083      	sub	sp, #12
 8006724:	af00      	add	r7, sp, #0
 8006726:	6078      	str	r0, [r7, #4]
 8006728:	687b      	ldr	r3, [r7, #4]
 800672a:	2b00      	cmp	r3, #0
 800672c:	d101      	bne.n	8006732 <cJSON_IsString+0x12>
 800672e:	2300      	movs	r3, #0
 8006730:	e007      	b.n	8006742 <cJSON_IsString+0x22>
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	68db      	ldr	r3, [r3, #12]
 8006736:	b2db      	uxtb	r3, r3
 8006738:	2b10      	cmp	r3, #16
 800673a:	bf0c      	ite	eq
 800673c:	2301      	moveq	r3, #1
 800673e:	2300      	movne	r3, #0
 8006740:	b2db      	uxtb	r3, r3
 8006742:	4618      	mov	r0, r3
 8006744:	370c      	adds	r7, #12
 8006746:	46bd      	mov	sp, r7
 8006748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800674c:	4770      	bx	lr

0800674e <cJSON_IsArray>:
 800674e:	b480      	push	{r7}
 8006750:	b083      	sub	sp, #12
 8006752:	af00      	add	r7, sp, #0
 8006754:	6078      	str	r0, [r7, #4]
 8006756:	687b      	ldr	r3, [r7, #4]
 8006758:	2b00      	cmp	r3, #0
 800675a:	d101      	bne.n	8006760 <cJSON_IsArray+0x12>
 800675c:	2300      	movs	r3, #0
 800675e:	e007      	b.n	8006770 <cJSON_IsArray+0x22>
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	68db      	ldr	r3, [r3, #12]
 8006764:	b2db      	uxtb	r3, r3
 8006766:	2b20      	cmp	r3, #32
 8006768:	bf0c      	ite	eq
 800676a:	2301      	moveq	r3, #1
 800676c:	2300      	movne	r3, #0
 800676e:	b2db      	uxtb	r3, r3
 8006770:	4618      	mov	r0, r3
 8006772:	370c      	adds	r7, #12
 8006774:	46bd      	mov	sp, r7
 8006776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800677a:	4770      	bx	lr

0800677c <NewMessageData>:
 800677c:	b480      	push	{r7}
 800677e:	b085      	sub	sp, #20
 8006780:	af00      	add	r7, sp, #0
 8006782:	60f8      	str	r0, [r7, #12]
 8006784:	60b9      	str	r1, [r7, #8]
 8006786:	607a      	str	r2, [r7, #4]
 8006788:	68fb      	ldr	r3, [r7, #12]
 800678a:	68ba      	ldr	r2, [r7, #8]
 800678c:	605a      	str	r2, [r3, #4]
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	687a      	ldr	r2, [r7, #4]
 8006792:	601a      	str	r2, [r3, #0]
 8006794:	bf00      	nop
 8006796:	3714      	adds	r7, #20
 8006798:	46bd      	mov	sp, r7
 800679a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800679e:	4770      	bx	lr

080067a0 <getNextPacketId>:
 80067a0:	b480      	push	{r7}
 80067a2:	b083      	sub	sp, #12
 80067a4:	af00      	add	r7, sp, #0
 80067a6:	6078      	str	r0, [r7, #4]
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80067b0:	4293      	cmp	r3, r2
 80067b2:	d003      	beq.n	80067bc <getNextPacketId+0x1c>
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	681b      	ldr	r3, [r3, #0]
 80067b8:	3301      	adds	r3, #1
 80067ba:	e000      	b.n	80067be <getNextPacketId+0x1e>
 80067bc:	2301      	movs	r3, #1
 80067be:	687a      	ldr	r2, [r7, #4]
 80067c0:	6013      	str	r3, [r2, #0]
 80067c2:	687b      	ldr	r3, [r7, #4]
 80067c4:	681b      	ldr	r3, [r3, #0]
 80067c6:	4618      	mov	r0, r3
 80067c8:	370c      	adds	r7, #12
 80067ca:	46bd      	mov	sp, r7
 80067cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067d0:	4770      	bx	lr

080067d2 <sendPacket>:
 80067d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80067d4:	b087      	sub	sp, #28
 80067d6:	af00      	add	r7, sp, #0
 80067d8:	60f8      	str	r0, [r7, #12]
 80067da:	60b9      	str	r1, [r7, #8]
 80067dc:	607a      	str	r2, [r7, #4]
 80067de:	f04f 33ff 	mov.w	r3, #4294967295
 80067e2:	617b      	str	r3, [r7, #20]
 80067e4:	2300      	movs	r3, #0
 80067e6:	613b      	str	r3, [r7, #16]
 80067e8:	e018      	b.n	800681c <sendPacket+0x4a>
 80067ea:	68fb      	ldr	r3, [r7, #12]
 80067ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80067ee:	689c      	ldr	r4, [r3, #8]
 80067f0:	68fb      	ldr	r3, [r7, #12]
 80067f2:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 80067f4:	68fb      	ldr	r3, [r7, #12]
 80067f6:	691a      	ldr	r2, [r3, #16]
 80067f8:	693b      	ldr	r3, [r7, #16]
 80067fa:	18d6      	adds	r6, r2, r3
 80067fc:	6878      	ldr	r0, [r7, #4]
 80067fe:	f000 fdd9 	bl	80073b4 <TimerLeftMS>
 8006802:	4603      	mov	r3, r0
 8006804:	68ba      	ldr	r2, [r7, #8]
 8006806:	4631      	mov	r1, r6
 8006808:	4628      	mov	r0, r5
 800680a:	47a0      	blx	r4
 800680c:	6178      	str	r0, [r7, #20]
 800680e:	697b      	ldr	r3, [r7, #20]
 8006810:	2b00      	cmp	r3, #0
 8006812:	db0e      	blt.n	8006832 <sendPacket+0x60>
 8006814:	693a      	ldr	r2, [r7, #16]
 8006816:	697b      	ldr	r3, [r7, #20]
 8006818:	4413      	add	r3, r2
 800681a:	613b      	str	r3, [r7, #16]
 800681c:	693a      	ldr	r2, [r7, #16]
 800681e:	68bb      	ldr	r3, [r7, #8]
 8006820:	429a      	cmp	r2, r3
 8006822:	da07      	bge.n	8006834 <sendPacket+0x62>
 8006824:	6878      	ldr	r0, [r7, #4]
 8006826:	f000 fd83 	bl	8007330 <TimerIsExpired>
 800682a:	4603      	mov	r3, r0
 800682c:	2b00      	cmp	r3, #0
 800682e:	d0dc      	beq.n	80067ea <sendPacket+0x18>
 8006830:	e000      	b.n	8006834 <sendPacket+0x62>
 8006832:	bf00      	nop
 8006834:	693a      	ldr	r2, [r7, #16]
 8006836:	68bb      	ldr	r3, [r7, #8]
 8006838:	429a      	cmp	r2, r3
 800683a:	d10b      	bne.n	8006854 <sendPacket+0x82>
 800683c:	68fb      	ldr	r3, [r7, #12]
 800683e:	f103 0254 	add.w	r2, r3, #84	; 0x54
 8006842:	68fb      	ldr	r3, [r7, #12]
 8006844:	699b      	ldr	r3, [r3, #24]
 8006846:	4619      	mov	r1, r3
 8006848:	4610      	mov	r0, r2
 800684a:	f000 fd9b 	bl	8007384 <TimerCountdown>
 800684e:	2300      	movs	r3, #0
 8006850:	617b      	str	r3, [r7, #20]
 8006852:	e002      	b.n	800685a <sendPacket+0x88>
 8006854:	f04f 33ff 	mov.w	r3, #4294967295
 8006858:	617b      	str	r3, [r7, #20]
 800685a:	697b      	ldr	r3, [r7, #20]
 800685c:	4618      	mov	r0, r3
 800685e:	371c      	adds	r7, #28
 8006860:	46bd      	mov	sp, r7
 8006862:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006864 <MQTTClientInit>:
 8006864:	b580      	push	{r7, lr}
 8006866:	b086      	sub	sp, #24
 8006868:	af00      	add	r7, sp, #0
 800686a:	60f8      	str	r0, [r7, #12]
 800686c:	60b9      	str	r1, [r7, #8]
 800686e:	607a      	str	r2, [r7, #4]
 8006870:	603b      	str	r3, [r7, #0]
 8006872:	68fb      	ldr	r3, [r7, #12]
 8006874:	68ba      	ldr	r2, [r7, #8]
 8006876:	651a      	str	r2, [r3, #80]	; 0x50
 8006878:	2300      	movs	r3, #0
 800687a:	617b      	str	r3, [r7, #20]
 800687c:	e009      	b.n	8006892 <MQTTClientInit+0x2e>
 800687e:	68fa      	ldr	r2, [r7, #12]
 8006880:	697b      	ldr	r3, [r7, #20]
 8006882:	3304      	adds	r3, #4
 8006884:	00db      	lsls	r3, r3, #3
 8006886:	4413      	add	r3, r2
 8006888:	2200      	movs	r2, #0
 800688a:	605a      	str	r2, [r3, #4]
 800688c:	697b      	ldr	r3, [r7, #20]
 800688e:	3301      	adds	r3, #1
 8006890:	617b      	str	r3, [r7, #20]
 8006892:	697b      	ldr	r3, [r7, #20]
 8006894:	2b04      	cmp	r3, #4
 8006896:	ddf2      	ble.n	800687e <MQTTClientInit+0x1a>
 8006898:	68fb      	ldr	r3, [r7, #12]
 800689a:	687a      	ldr	r2, [r7, #4]
 800689c:	605a      	str	r2, [r3, #4]
 800689e:	68fb      	ldr	r3, [r7, #12]
 80068a0:	683a      	ldr	r2, [r7, #0]
 80068a2:	611a      	str	r2, [r3, #16]
 80068a4:	68fb      	ldr	r3, [r7, #12]
 80068a6:	6a3a      	ldr	r2, [r7, #32]
 80068a8:	609a      	str	r2, [r3, #8]
 80068aa:	68fb      	ldr	r3, [r7, #12]
 80068ac:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80068ae:	615a      	str	r2, [r3, #20]
 80068b0:	68fb      	ldr	r3, [r7, #12]
 80068b2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80068b4:	60da      	str	r2, [r3, #12]
 80068b6:	68fb      	ldr	r3, [r7, #12]
 80068b8:	2200      	movs	r2, #0
 80068ba:	621a      	str	r2, [r3, #32]
 80068bc:	68fb      	ldr	r3, [r7, #12]
 80068be:	2200      	movs	r2, #0
 80068c0:	771a      	strb	r2, [r3, #28]
 80068c2:	68fb      	ldr	r3, [r7, #12]
 80068c4:	2200      	movs	r2, #0
 80068c6:	64da      	str	r2, [r3, #76]	; 0x4c
 80068c8:	68fb      	ldr	r3, [r7, #12]
 80068ca:	2201      	movs	r2, #1
 80068cc:	601a      	str	r2, [r3, #0]
 80068ce:	68fb      	ldr	r3, [r7, #12]
 80068d0:	3354      	adds	r3, #84	; 0x54
 80068d2:	4618      	mov	r0, r3
 80068d4:	f000 fd1e 	bl	8007314 <TimerInit>
 80068d8:	bf00      	nop
 80068da:	3718      	adds	r7, #24
 80068dc:	46bd      	mov	sp, r7
 80068de:	bd80      	pop	{r7, pc}

080068e0 <decodePacket>:
 80068e0:	b590      	push	{r4, r7, lr}
 80068e2:	b08b      	sub	sp, #44	; 0x2c
 80068e4:	af00      	add	r7, sp, #0
 80068e6:	60f8      	str	r0, [r7, #12]
 80068e8:	60b9      	str	r1, [r7, #8]
 80068ea:	607a      	str	r2, [r7, #4]
 80068ec:	2301      	movs	r3, #1
 80068ee:	627b      	str	r3, [r7, #36]	; 0x24
 80068f0:	2300      	movs	r3, #0
 80068f2:	623b      	str	r3, [r7, #32]
 80068f4:	2304      	movs	r3, #4
 80068f6:	61fb      	str	r3, [r7, #28]
 80068f8:	68bb      	ldr	r3, [r7, #8]
 80068fa:	2200      	movs	r2, #0
 80068fc:	601a      	str	r2, [r3, #0]
 80068fe:	f04f 33ff 	mov.w	r3, #4294967295
 8006902:	61bb      	str	r3, [r7, #24]
 8006904:	6a3b      	ldr	r3, [r7, #32]
 8006906:	3301      	adds	r3, #1
 8006908:	623b      	str	r3, [r7, #32]
 800690a:	6a3a      	ldr	r2, [r7, #32]
 800690c:	69fb      	ldr	r3, [r7, #28]
 800690e:	429a      	cmp	r2, r3
 8006910:	dd03      	ble.n	800691a <decodePacket+0x3a>
 8006912:	f04f 33ff 	mov.w	r3, #4294967295
 8006916:	61bb      	str	r3, [r7, #24]
 8006918:	e021      	b.n	800695e <decodePacket+0x7e>
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800691e:	685c      	ldr	r4, [r3, #4]
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8006924:	f107 0117 	add.w	r1, r7, #23
 8006928:	687b      	ldr	r3, [r7, #4]
 800692a:	2201      	movs	r2, #1
 800692c:	47a0      	blx	r4
 800692e:	61b8      	str	r0, [r7, #24]
 8006930:	69bb      	ldr	r3, [r7, #24]
 8006932:	2b01      	cmp	r3, #1
 8006934:	d112      	bne.n	800695c <decodePacket+0x7c>
 8006936:	68bb      	ldr	r3, [r7, #8]
 8006938:	681a      	ldr	r2, [r3, #0]
 800693a:	7dfb      	ldrb	r3, [r7, #23]
 800693c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006940:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006942:	fb01 f303 	mul.w	r3, r1, r3
 8006946:	441a      	add	r2, r3
 8006948:	68bb      	ldr	r3, [r7, #8]
 800694a:	601a      	str	r2, [r3, #0]
 800694c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800694e:	01db      	lsls	r3, r3, #7
 8006950:	627b      	str	r3, [r7, #36]	; 0x24
 8006952:	7dfb      	ldrb	r3, [r7, #23]
 8006954:	b25b      	sxtb	r3, r3
 8006956:	2b00      	cmp	r3, #0
 8006958:	dbd1      	blt.n	80068fe <decodePacket+0x1e>
 800695a:	e000      	b.n	800695e <decodePacket+0x7e>
 800695c:	bf00      	nop
 800695e:	6a3b      	ldr	r3, [r7, #32]
 8006960:	4618      	mov	r0, r3
 8006962:	372c      	adds	r7, #44	; 0x2c
 8006964:	46bd      	mov	sp, r7
 8006966:	bd90      	pop	{r4, r7, pc}

08006968 <readPacket>:
 8006968:	b5f0      	push	{r4, r5, r6, r7, lr}
 800696a:	b089      	sub	sp, #36	; 0x24
 800696c:	af00      	add	r7, sp, #0
 800696e:	60f8      	str	r0, [r7, #12]
 8006970:	60b9      	str	r1, [r7, #8]
 8006972:	f04f 33ff 	mov.w	r3, #4294967295
 8006976:	61fb      	str	r3, [r7, #28]
 8006978:	2300      	movs	r3, #0
 800697a:	617b      	str	r3, [r7, #20]
 800697c:	2300      	movs	r3, #0
 800697e:	61bb      	str	r3, [r7, #24]
 8006980:	2300      	movs	r3, #0
 8006982:	613b      	str	r3, [r7, #16]
 8006984:	68fb      	ldr	r3, [r7, #12]
 8006986:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006988:	685c      	ldr	r4, [r3, #4]
 800698a:	68fb      	ldr	r3, [r7, #12]
 800698c:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800698e:	68fb      	ldr	r3, [r7, #12]
 8006990:	695e      	ldr	r6, [r3, #20]
 8006992:	68b8      	ldr	r0, [r7, #8]
 8006994:	f000 fd0e 	bl	80073b4 <TimerLeftMS>
 8006998:	4603      	mov	r3, r0
 800699a:	2201      	movs	r2, #1
 800699c:	4631      	mov	r1, r6
 800699e:	4628      	mov	r0, r5
 80069a0:	47a0      	blx	r4
 80069a2:	4603      	mov	r3, r0
 80069a4:	2b01      	cmp	r3, #1
 80069a6:	d13b      	bne.n	8006a20 <readPacket+0xb8>
 80069a8:	2301      	movs	r3, #1
 80069aa:	61bb      	str	r3, [r7, #24]
 80069ac:	68b8      	ldr	r0, [r7, #8]
 80069ae:	f000 fd01 	bl	80073b4 <TimerLeftMS>
 80069b2:	4602      	mov	r2, r0
 80069b4:	f107 0310 	add.w	r3, r7, #16
 80069b8:	4619      	mov	r1, r3
 80069ba:	68f8      	ldr	r0, [r7, #12]
 80069bc:	f7ff ff90 	bl	80068e0 <decodePacket>
 80069c0:	68fb      	ldr	r3, [r7, #12]
 80069c2:	695b      	ldr	r3, [r3, #20]
 80069c4:	3301      	adds	r3, #1
 80069c6:	693a      	ldr	r2, [r7, #16]
 80069c8:	4611      	mov	r1, r2
 80069ca:	4618      	mov	r0, r3
 80069cc:	f001 f866 	bl	8007a9c <MQTTPacket_encode>
 80069d0:	4602      	mov	r2, r0
 80069d2:	69bb      	ldr	r3, [r7, #24]
 80069d4:	4413      	add	r3, r2
 80069d6:	61bb      	str	r3, [r7, #24]
 80069d8:	693b      	ldr	r3, [r7, #16]
 80069da:	2b00      	cmp	r3, #0
 80069dc:	dd16      	ble.n	8006a0c <readPacket+0xa4>
 80069de:	68fb      	ldr	r3, [r7, #12]
 80069e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80069e2:	685c      	ldr	r4, [r3, #4]
 80069e4:	68fb      	ldr	r3, [r7, #12]
 80069e6:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	695a      	ldr	r2, [r3, #20]
 80069ec:	69bb      	ldr	r3, [r7, #24]
 80069ee:	18d6      	adds	r6, r2, r3
 80069f0:	693b      	ldr	r3, [r7, #16]
 80069f2:	607b      	str	r3, [r7, #4]
 80069f4:	68b8      	ldr	r0, [r7, #8]
 80069f6:	f000 fcdd 	bl	80073b4 <TimerLeftMS>
 80069fa:	4603      	mov	r3, r0
 80069fc:	687a      	ldr	r2, [r7, #4]
 80069fe:	4631      	mov	r1, r6
 8006a00:	4628      	mov	r0, r5
 8006a02:	47a0      	blx	r4
 8006a04:	4602      	mov	r2, r0
 8006a06:	693b      	ldr	r3, [r7, #16]
 8006a08:	429a      	cmp	r2, r3
 8006a0a:	d10b      	bne.n	8006a24 <readPacket+0xbc>
 8006a0c:	68fb      	ldr	r3, [r7, #12]
 8006a0e:	695b      	ldr	r3, [r3, #20]
 8006a10:	781b      	ldrb	r3, [r3, #0]
 8006a12:	753b      	strb	r3, [r7, #20]
 8006a14:	7d3b      	ldrb	r3, [r7, #20]
 8006a16:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006a1a:	b2db      	uxtb	r3, r3
 8006a1c:	61fb      	str	r3, [r7, #28]
 8006a1e:	e002      	b.n	8006a26 <readPacket+0xbe>
 8006a20:	bf00      	nop
 8006a22:	e000      	b.n	8006a26 <readPacket+0xbe>
 8006a24:	bf00      	nop
 8006a26:	69fb      	ldr	r3, [r7, #28]
 8006a28:	4618      	mov	r0, r3
 8006a2a:	3724      	adds	r7, #36	; 0x24
 8006a2c:	46bd      	mov	sp, r7
 8006a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006a30 <isTopicMatched>:
 8006a30:	b480      	push	{r7}
 8006a32:	b087      	sub	sp, #28
 8006a34:	af00      	add	r7, sp, #0
 8006a36:	6078      	str	r0, [r7, #4]
 8006a38:	6039      	str	r1, [r7, #0]
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	617b      	str	r3, [r7, #20]
 8006a3e:	683b      	ldr	r3, [r7, #0]
 8006a40:	689b      	ldr	r3, [r3, #8]
 8006a42:	613b      	str	r3, [r7, #16]
 8006a44:	683b      	ldr	r3, [r7, #0]
 8006a46:	685b      	ldr	r3, [r3, #4]
 8006a48:	461a      	mov	r2, r3
 8006a4a:	693b      	ldr	r3, [r7, #16]
 8006a4c:	4413      	add	r3, r2
 8006a4e:	60bb      	str	r3, [r7, #8]
 8006a50:	e039      	b.n	8006ac6 <isTopicMatched+0x96>
 8006a52:	693b      	ldr	r3, [r7, #16]
 8006a54:	781b      	ldrb	r3, [r3, #0]
 8006a56:	2b2f      	cmp	r3, #47	; 0x2f
 8006a58:	d103      	bne.n	8006a62 <isTopicMatched+0x32>
 8006a5a:	697b      	ldr	r3, [r7, #20]
 8006a5c:	781b      	ldrb	r3, [r3, #0]
 8006a5e:	2b2f      	cmp	r3, #47	; 0x2f
 8006a60:	d13a      	bne.n	8006ad8 <isTopicMatched+0xa8>
 8006a62:	697b      	ldr	r3, [r7, #20]
 8006a64:	781b      	ldrb	r3, [r3, #0]
 8006a66:	2b2b      	cmp	r3, #43	; 0x2b
 8006a68:	d009      	beq.n	8006a7e <isTopicMatched+0x4e>
 8006a6a:	697b      	ldr	r3, [r7, #20]
 8006a6c:	781b      	ldrb	r3, [r3, #0]
 8006a6e:	2b23      	cmp	r3, #35	; 0x23
 8006a70:	d005      	beq.n	8006a7e <isTopicMatched+0x4e>
 8006a72:	697b      	ldr	r3, [r7, #20]
 8006a74:	781a      	ldrb	r2, [r3, #0]
 8006a76:	693b      	ldr	r3, [r7, #16]
 8006a78:	781b      	ldrb	r3, [r3, #0]
 8006a7a:	429a      	cmp	r2, r3
 8006a7c:	d12e      	bne.n	8006adc <isTopicMatched+0xac>
 8006a7e:	697b      	ldr	r3, [r7, #20]
 8006a80:	781b      	ldrb	r3, [r3, #0]
 8006a82:	2b2b      	cmp	r3, #43	; 0x2b
 8006a84:	d112      	bne.n	8006aac <isTopicMatched+0x7c>
 8006a86:	693b      	ldr	r3, [r7, #16]
 8006a88:	3301      	adds	r3, #1
 8006a8a:	60fb      	str	r3, [r7, #12]
 8006a8c:	e005      	b.n	8006a9a <isTopicMatched+0x6a>
 8006a8e:	693b      	ldr	r3, [r7, #16]
 8006a90:	3301      	adds	r3, #1
 8006a92:	613b      	str	r3, [r7, #16]
 8006a94:	693b      	ldr	r3, [r7, #16]
 8006a96:	3301      	adds	r3, #1
 8006a98:	60fb      	str	r3, [r7, #12]
 8006a9a:	68fa      	ldr	r2, [r7, #12]
 8006a9c:	68bb      	ldr	r3, [r7, #8]
 8006a9e:	429a      	cmp	r2, r3
 8006aa0:	d20b      	bcs.n	8006aba <isTopicMatched+0x8a>
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	781b      	ldrb	r3, [r3, #0]
 8006aa6:	2b2f      	cmp	r3, #47	; 0x2f
 8006aa8:	d1f1      	bne.n	8006a8e <isTopicMatched+0x5e>
 8006aaa:	e006      	b.n	8006aba <isTopicMatched+0x8a>
 8006aac:	697b      	ldr	r3, [r7, #20]
 8006aae:	781b      	ldrb	r3, [r3, #0]
 8006ab0:	2b23      	cmp	r3, #35	; 0x23
 8006ab2:	d102      	bne.n	8006aba <isTopicMatched+0x8a>
 8006ab4:	68bb      	ldr	r3, [r7, #8]
 8006ab6:	3b01      	subs	r3, #1
 8006ab8:	613b      	str	r3, [r7, #16]
 8006aba:	697b      	ldr	r3, [r7, #20]
 8006abc:	3301      	adds	r3, #1
 8006abe:	617b      	str	r3, [r7, #20]
 8006ac0:	693b      	ldr	r3, [r7, #16]
 8006ac2:	3301      	adds	r3, #1
 8006ac4:	613b      	str	r3, [r7, #16]
 8006ac6:	697b      	ldr	r3, [r7, #20]
 8006ac8:	781b      	ldrb	r3, [r3, #0]
 8006aca:	2b00      	cmp	r3, #0
 8006acc:	d007      	beq.n	8006ade <isTopicMatched+0xae>
 8006ace:	693a      	ldr	r2, [r7, #16]
 8006ad0:	68bb      	ldr	r3, [r7, #8]
 8006ad2:	429a      	cmp	r2, r3
 8006ad4:	d3bd      	bcc.n	8006a52 <isTopicMatched+0x22>
 8006ad6:	e002      	b.n	8006ade <isTopicMatched+0xae>
 8006ad8:	bf00      	nop
 8006ada:	e000      	b.n	8006ade <isTopicMatched+0xae>
 8006adc:	bf00      	nop
 8006ade:	693a      	ldr	r2, [r7, #16]
 8006ae0:	68bb      	ldr	r3, [r7, #8]
 8006ae2:	429a      	cmp	r2, r3
 8006ae4:	d105      	bne.n	8006af2 <isTopicMatched+0xc2>
 8006ae6:	697b      	ldr	r3, [r7, #20]
 8006ae8:	781b      	ldrb	r3, [r3, #0]
 8006aea:	2b00      	cmp	r3, #0
 8006aec:	d101      	bne.n	8006af2 <isTopicMatched+0xc2>
 8006aee:	2301      	movs	r3, #1
 8006af0:	e000      	b.n	8006af4 <isTopicMatched+0xc4>
 8006af2:	2300      	movs	r3, #0
 8006af4:	b2db      	uxtb	r3, r3
 8006af6:	4618      	mov	r0, r3
 8006af8:	371c      	adds	r7, #28
 8006afa:	46bd      	mov	sp, r7
 8006afc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b00:	4770      	bx	lr

08006b02 <deliverMessage>:
 8006b02:	b580      	push	{r7, lr}
 8006b04:	b08a      	sub	sp, #40	; 0x28
 8006b06:	af00      	add	r7, sp, #0
 8006b08:	60f8      	str	r0, [r7, #12]
 8006b0a:	60b9      	str	r1, [r7, #8]
 8006b0c:	607a      	str	r2, [r7, #4]
 8006b0e:	f04f 33ff 	mov.w	r3, #4294967295
 8006b12:	623b      	str	r3, [r7, #32]
 8006b14:	2300      	movs	r3, #0
 8006b16:	627b      	str	r3, [r7, #36]	; 0x24
 8006b18:	e03f      	b.n	8006b9a <deliverMessage+0x98>
 8006b1a:	68fa      	ldr	r2, [r7, #12]
 8006b1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b1e:	3304      	adds	r3, #4
 8006b20:	00db      	lsls	r3, r3, #3
 8006b22:	4413      	add	r3, r2
 8006b24:	685b      	ldr	r3, [r3, #4]
 8006b26:	2b00      	cmp	r3, #0
 8006b28:	d034      	beq.n	8006b94 <deliverMessage+0x92>
 8006b2a:	68fa      	ldr	r2, [r7, #12]
 8006b2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b2e:	3304      	adds	r3, #4
 8006b30:	00db      	lsls	r3, r3, #3
 8006b32:	4413      	add	r3, r2
 8006b34:	685b      	ldr	r3, [r3, #4]
 8006b36:	4619      	mov	r1, r3
 8006b38:	68b8      	ldr	r0, [r7, #8]
 8006b3a:	f001 f97f 	bl	8007e3c <MQTTPacket_equals>
 8006b3e:	4603      	mov	r3, r0
 8006b40:	2b00      	cmp	r3, #0
 8006b42:	d10c      	bne.n	8006b5e <deliverMessage+0x5c>
 8006b44:	68fa      	ldr	r2, [r7, #12]
 8006b46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b48:	3304      	adds	r3, #4
 8006b4a:	00db      	lsls	r3, r3, #3
 8006b4c:	4413      	add	r3, r2
 8006b4e:	685b      	ldr	r3, [r3, #4]
 8006b50:	68b9      	ldr	r1, [r7, #8]
 8006b52:	4618      	mov	r0, r3
 8006b54:	f7ff ff6c 	bl	8006a30 <isTopicMatched>
 8006b58:	4603      	mov	r3, r0
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d01a      	beq.n	8006b94 <deliverMessage+0x92>
 8006b5e:	68fa      	ldr	r2, [r7, #12]
 8006b60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b62:	3304      	adds	r3, #4
 8006b64:	00db      	lsls	r3, r3, #3
 8006b66:	4413      	add	r3, r2
 8006b68:	689b      	ldr	r3, [r3, #8]
 8006b6a:	2b00      	cmp	r3, #0
 8006b6c:	d012      	beq.n	8006b94 <deliverMessage+0x92>
 8006b6e:	f107 0318 	add.w	r3, r7, #24
 8006b72:	687a      	ldr	r2, [r7, #4]
 8006b74:	68b9      	ldr	r1, [r7, #8]
 8006b76:	4618      	mov	r0, r3
 8006b78:	f7ff fe00 	bl	800677c <NewMessageData>
 8006b7c:	68fa      	ldr	r2, [r7, #12]
 8006b7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b80:	3304      	adds	r3, #4
 8006b82:	00db      	lsls	r3, r3, #3
 8006b84:	4413      	add	r3, r2
 8006b86:	689b      	ldr	r3, [r3, #8]
 8006b88:	f107 0218 	add.w	r2, r7, #24
 8006b8c:	4610      	mov	r0, r2
 8006b8e:	4798      	blx	r3
 8006b90:	2300      	movs	r3, #0
 8006b92:	623b      	str	r3, [r7, #32]
 8006b94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b96:	3301      	adds	r3, #1
 8006b98:	627b      	str	r3, [r7, #36]	; 0x24
 8006b9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b9c:	2b04      	cmp	r3, #4
 8006b9e:	ddbc      	ble.n	8006b1a <deliverMessage+0x18>
 8006ba0:	6a3b      	ldr	r3, [r7, #32]
 8006ba2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006ba6:	d112      	bne.n	8006bce <deliverMessage+0xcc>
 8006ba8:	68fb      	ldr	r3, [r7, #12]
 8006baa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006bac:	2b00      	cmp	r3, #0
 8006bae:	d00e      	beq.n	8006bce <deliverMessage+0xcc>
 8006bb0:	f107 0310 	add.w	r3, r7, #16
 8006bb4:	687a      	ldr	r2, [r7, #4]
 8006bb6:	68b9      	ldr	r1, [r7, #8]
 8006bb8:	4618      	mov	r0, r3
 8006bba:	f7ff fddf 	bl	800677c <NewMessageData>
 8006bbe:	68fb      	ldr	r3, [r7, #12]
 8006bc0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006bc2:	f107 0210 	add.w	r2, r7, #16
 8006bc6:	4610      	mov	r0, r2
 8006bc8:	4798      	blx	r3
 8006bca:	2300      	movs	r3, #0
 8006bcc:	623b      	str	r3, [r7, #32]
 8006bce:	6a3b      	ldr	r3, [r7, #32]
 8006bd0:	4618      	mov	r0, r3
 8006bd2:	3728      	adds	r7, #40	; 0x28
 8006bd4:	46bd      	mov	sp, r7
 8006bd6:	bd80      	pop	{r7, pc}

08006bd8 <keepalive>:
 8006bd8:	b580      	push	{r7, lr}
 8006bda:	b086      	sub	sp, #24
 8006bdc:	af00      	add	r7, sp, #0
 8006bde:	6078      	str	r0, [r7, #4]
 8006be0:	f04f 33ff 	mov.w	r3, #4294967295
 8006be4:	617b      	str	r3, [r7, #20]
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	699b      	ldr	r3, [r3, #24]
 8006bea:	2b00      	cmp	r3, #0
 8006bec:	d102      	bne.n	8006bf4 <keepalive+0x1c>
 8006bee:	2300      	movs	r3, #0
 8006bf0:	617b      	str	r3, [r7, #20]
 8006bf2:	e033      	b.n	8006c5c <keepalive+0x84>
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	3354      	adds	r3, #84	; 0x54
 8006bf8:	4618      	mov	r0, r3
 8006bfa:	f000 fb99 	bl	8007330 <TimerIsExpired>
 8006bfe:	4603      	mov	r3, r0
 8006c00:	2b00      	cmp	r3, #0
 8006c02:	d02a      	beq.n	8006c5a <keepalive+0x82>
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	7f1b      	ldrb	r3, [r3, #28]
 8006c08:	2b00      	cmp	r3, #0
 8006c0a:	d126      	bne.n	8006c5a <keepalive+0x82>
 8006c0c:	f107 0308 	add.w	r3, r7, #8
 8006c10:	4618      	mov	r0, r3
 8006c12:	f000 fb7f 	bl	8007314 <TimerInit>
 8006c16:	f107 0308 	add.w	r3, r7, #8
 8006c1a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8006c1e:	4618      	mov	r0, r3
 8006c20:	f000 fb9c 	bl	800735c <TimerCountdownMS>
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	691a      	ldr	r2, [r3, #16]
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	689b      	ldr	r3, [r3, #8]
 8006c2c:	4619      	mov	r1, r3
 8006c2e:	4610      	mov	r0, r2
 8006c30:	f000 fe68 	bl	8007904 <MQTTSerialize_pingreq>
 8006c34:	6138      	str	r0, [r7, #16]
 8006c36:	693b      	ldr	r3, [r7, #16]
 8006c38:	2b00      	cmp	r3, #0
 8006c3a:	dd0f      	ble.n	8006c5c <keepalive+0x84>
 8006c3c:	f107 0308 	add.w	r3, r7, #8
 8006c40:	461a      	mov	r2, r3
 8006c42:	6939      	ldr	r1, [r7, #16]
 8006c44:	6878      	ldr	r0, [r7, #4]
 8006c46:	f7ff fdc4 	bl	80067d2 <sendPacket>
 8006c4a:	6178      	str	r0, [r7, #20]
 8006c4c:	697b      	ldr	r3, [r7, #20]
 8006c4e:	2b00      	cmp	r3, #0
 8006c50:	d104      	bne.n	8006c5c <keepalive+0x84>
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	2201      	movs	r2, #1
 8006c56:	771a      	strb	r2, [r3, #28]
 8006c58:	e000      	b.n	8006c5c <keepalive+0x84>
 8006c5a:	bf00      	nop
 8006c5c:	697b      	ldr	r3, [r7, #20]
 8006c5e:	4618      	mov	r0, r3
 8006c60:	3718      	adds	r7, #24
 8006c62:	46bd      	mov	sp, r7
 8006c64:	bd80      	pop	{r7, pc}
	...

08006c68 <cycle>:
 8006c68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c6a:	b095      	sub	sp, #84	; 0x54
 8006c6c:	af06      	add	r7, sp, #24
 8006c6e:	6078      	str	r0, [r7, #4]
 8006c70:	6039      	str	r1, [r7, #0]
 8006c72:	6839      	ldr	r1, [r7, #0]
 8006c74:	6878      	ldr	r0, [r7, #4]
 8006c76:	f7ff fe77 	bl	8006968 <readPacket>
 8006c7a:	4603      	mov	r3, r0
 8006c7c:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8006c7e:	2300      	movs	r3, #0
 8006c80:	637b      	str	r3, [r7, #52]	; 0x34
 8006c82:	2300      	movs	r3, #0
 8006c84:	633b      	str	r3, [r7, #48]	; 0x30
 8006c86:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8006c88:	3b02      	subs	r3, #2
 8006c8a:	2b0b      	cmp	r3, #11
 8006c8c:	f200 80c0 	bhi.w	8006e10 <cycle+0x1a8>
 8006c90:	a201      	add	r2, pc, #4	; (adr r2, 8006c98 <cycle+0x30>)
 8006c92:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006c96:	bf00      	nop
 8006c98:	08006e11 	.word	0x08006e11
 8006c9c:	08006cc9 	.word	0x08006cc9
 8006ca0:	08006e11 	.word	0x08006e11
 8006ca4:	08006d91 	.word	0x08006d91
 8006ca8:	08006e11 	.word	0x08006e11
 8006cac:	08006e11 	.word	0x08006e11
 8006cb0:	08006e11 	.word	0x08006e11
 8006cb4:	08006e11 	.word	0x08006e11
 8006cb8:	08006e11 	.word	0x08006e11
 8006cbc:	08006e11 	.word	0x08006e11
 8006cc0:	08006e11 	.word	0x08006e11
 8006cc4:	08006e03 	.word	0x08006e03
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	695b      	ldr	r3, [r3, #20]
 8006ccc:	687a      	ldr	r2, [r7, #4]
 8006cce:	68d2      	ldr	r2, [r2, #12]
 8006cd0:	4616      	mov	r6, r2
 8006cd2:	f107 0210 	add.w	r2, r7, #16
 8006cd6:	1d15      	adds	r5, r2, #4
 8006cd8:	f107 0210 	add.w	r2, r7, #16
 8006cdc:	1c54      	adds	r4, r2, #1
 8006cde:	f107 010c 	add.w	r1, r7, #12
 8006ce2:	f107 0210 	add.w	r2, r7, #16
 8006ce6:	1c90      	adds	r0, r2, #2
 8006ce8:	9604      	str	r6, [sp, #16]
 8006cea:	9303      	str	r3, [sp, #12]
 8006cec:	f107 0310 	add.w	r3, r7, #16
 8006cf0:	330c      	adds	r3, #12
 8006cf2:	9302      	str	r3, [sp, #8]
 8006cf4:	f107 0310 	add.w	r3, r7, #16
 8006cf8:	3308      	adds	r3, #8
 8006cfa:	9301      	str	r3, [sp, #4]
 8006cfc:	f107 0320 	add.w	r3, r7, #32
 8006d00:	9300      	str	r3, [sp, #0]
 8006d02:	462b      	mov	r3, r5
 8006d04:	4622      	mov	r2, r4
 8006d06:	f000 fe0c 	bl	8007922 <MQTTDeserialize_publish>
 8006d0a:	4603      	mov	r3, r0
 8006d0c:	2b01      	cmp	r3, #1
 8006d0e:	f040 8083 	bne.w	8006e18 <cycle+0x1b0>
 8006d12:	68fb      	ldr	r3, [r7, #12]
 8006d14:	b2db      	uxtb	r3, r3
 8006d16:	743b      	strb	r3, [r7, #16]
 8006d18:	f107 0210 	add.w	r2, r7, #16
 8006d1c:	f107 0320 	add.w	r3, r7, #32
 8006d20:	4619      	mov	r1, r3
 8006d22:	6878      	ldr	r0, [r7, #4]
 8006d24:	f7ff feed 	bl	8006b02 <deliverMessage>
 8006d28:	7c3b      	ldrb	r3, [r7, #16]
 8006d2a:	2b00      	cmp	r3, #0
 8006d2c:	d06d      	beq.n	8006e0a <cycle+0x1a2>
 8006d2e:	7c3b      	ldrb	r3, [r7, #16]
 8006d30:	2b01      	cmp	r3, #1
 8006d32:	d10c      	bne.n	8006d4e <cycle+0xe6>
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	6918      	ldr	r0, [r3, #16]
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	689b      	ldr	r3, [r3, #8]
 8006d3c:	4619      	mov	r1, r3
 8006d3e:	8abb      	ldrh	r3, [r7, #20]
 8006d40:	9300      	str	r3, [sp, #0]
 8006d42:	2300      	movs	r3, #0
 8006d44:	2204      	movs	r2, #4
 8006d46:	f001 f946 	bl	8007fd6 <MQTTSerialize_ack>
 8006d4a:	6378      	str	r0, [r7, #52]	; 0x34
 8006d4c:	e00e      	b.n	8006d6c <cycle+0x104>
 8006d4e:	7c3b      	ldrb	r3, [r7, #16]
 8006d50:	2b02      	cmp	r3, #2
 8006d52:	d10b      	bne.n	8006d6c <cycle+0x104>
 8006d54:	687b      	ldr	r3, [r7, #4]
 8006d56:	6918      	ldr	r0, [r3, #16]
 8006d58:	687b      	ldr	r3, [r7, #4]
 8006d5a:	689b      	ldr	r3, [r3, #8]
 8006d5c:	4619      	mov	r1, r3
 8006d5e:	8abb      	ldrh	r3, [r7, #20]
 8006d60:	9300      	str	r3, [sp, #0]
 8006d62:	2300      	movs	r3, #0
 8006d64:	2205      	movs	r2, #5
 8006d66:	f001 f936 	bl	8007fd6 <MQTTSerialize_ack>
 8006d6a:	6378      	str	r0, [r7, #52]	; 0x34
 8006d6c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006d6e:	2b00      	cmp	r3, #0
 8006d70:	dc03      	bgt.n	8006d7a <cycle+0x112>
 8006d72:	f04f 33ff 	mov.w	r3, #4294967295
 8006d76:	633b      	str	r3, [r7, #48]	; 0x30
 8006d78:	e005      	b.n	8006d86 <cycle+0x11e>
 8006d7a:	683a      	ldr	r2, [r7, #0]
 8006d7c:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8006d7e:	6878      	ldr	r0, [r7, #4]
 8006d80:	f7ff fd27 	bl	80067d2 <sendPacket>
 8006d84:	6338      	str	r0, [r7, #48]	; 0x30
 8006d86:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006d88:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006d8c:	d13d      	bne.n	8006e0a <cycle+0x1a2>
 8006d8e:	e044      	b.n	8006e1a <cycle+0x1b2>
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	695c      	ldr	r4, [r3, #20]
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	68db      	ldr	r3, [r3, #12]
 8006d98:	f107 020a 	add.w	r2, r7, #10
 8006d9c:	f107 0109 	add.w	r1, r7, #9
 8006da0:	f107 0008 	add.w	r0, r7, #8
 8006da4:	9300      	str	r3, [sp, #0]
 8006da6:	4623      	mov	r3, r4
 8006da8:	f000 fe2d 	bl	8007a06 <MQTTDeserialize_ack>
 8006dac:	4603      	mov	r3, r0
 8006dae:	2b01      	cmp	r3, #1
 8006db0:	d003      	beq.n	8006dba <cycle+0x152>
 8006db2:	f04f 33ff 	mov.w	r3, #4294967295
 8006db6:	633b      	str	r3, [r7, #48]	; 0x30
 8006db8:	e01e      	b.n	8006df8 <cycle+0x190>
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	6918      	ldr	r0, [r3, #16]
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	689b      	ldr	r3, [r3, #8]
 8006dc2:	4619      	mov	r1, r3
 8006dc4:	897b      	ldrh	r3, [r7, #10]
 8006dc6:	9300      	str	r3, [sp, #0]
 8006dc8:	2300      	movs	r3, #0
 8006dca:	2206      	movs	r2, #6
 8006dcc:	f001 f903 	bl	8007fd6 <MQTTSerialize_ack>
 8006dd0:	6378      	str	r0, [r7, #52]	; 0x34
 8006dd2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006dd4:	2b00      	cmp	r3, #0
 8006dd6:	dc03      	bgt.n	8006de0 <cycle+0x178>
 8006dd8:	f04f 33ff 	mov.w	r3, #4294967295
 8006ddc:	633b      	str	r3, [r7, #48]	; 0x30
 8006dde:	e00b      	b.n	8006df8 <cycle+0x190>
 8006de0:	683a      	ldr	r2, [r7, #0]
 8006de2:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8006de4:	6878      	ldr	r0, [r7, #4]
 8006de6:	f7ff fcf4 	bl	80067d2 <sendPacket>
 8006dea:	6338      	str	r0, [r7, #48]	; 0x30
 8006dec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006dee:	2b00      	cmp	r3, #0
 8006df0:	d002      	beq.n	8006df8 <cycle+0x190>
 8006df2:	f04f 33ff 	mov.w	r3, #4294967295
 8006df6:	633b      	str	r3, [r7, #48]	; 0x30
 8006df8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006dfa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006dfe:	d106      	bne.n	8006e0e <cycle+0x1a6>
 8006e00:	e00b      	b.n	8006e1a <cycle+0x1b2>
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	2200      	movs	r2, #0
 8006e06:	771a      	strb	r2, [r3, #28]
 8006e08:	e002      	b.n	8006e10 <cycle+0x1a8>
 8006e0a:	bf00      	nop
 8006e0c:	e000      	b.n	8006e10 <cycle+0x1a8>
 8006e0e:	bf00      	nop
 8006e10:	6878      	ldr	r0, [r7, #4]
 8006e12:	f7ff fee1 	bl	8006bd8 <keepalive>
 8006e16:	e000      	b.n	8006e1a <cycle+0x1b2>
 8006e18:	bf00      	nop
 8006e1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006e1c:	2b00      	cmp	r3, #0
 8006e1e:	d101      	bne.n	8006e24 <cycle+0x1bc>
 8006e20:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8006e22:	633b      	str	r3, [r7, #48]	; 0x30
 8006e24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006e26:	4618      	mov	r0, r3
 8006e28:	373c      	adds	r7, #60	; 0x3c
 8006e2a:	46bd      	mov	sp, r7
 8006e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e2e:	bf00      	nop

08006e30 <MQTTYield>:
 8006e30:	b580      	push	{r7, lr}
 8006e32:	b086      	sub	sp, #24
 8006e34:	af00      	add	r7, sp, #0
 8006e36:	6078      	str	r0, [r7, #4]
 8006e38:	6039      	str	r1, [r7, #0]
 8006e3a:	2300      	movs	r3, #0
 8006e3c:	617b      	str	r3, [r7, #20]
 8006e3e:	f107 030c 	add.w	r3, r7, #12
 8006e42:	4618      	mov	r0, r3
 8006e44:	f000 fa66 	bl	8007314 <TimerInit>
 8006e48:	683a      	ldr	r2, [r7, #0]
 8006e4a:	f107 030c 	add.w	r3, r7, #12
 8006e4e:	4611      	mov	r1, r2
 8006e50:	4618      	mov	r0, r3
 8006e52:	f000 fa83 	bl	800735c <TimerCountdownMS>
 8006e56:	f107 030c 	add.w	r3, r7, #12
 8006e5a:	4619      	mov	r1, r3
 8006e5c:	6878      	ldr	r0, [r7, #4]
 8006e5e:	f7ff ff03 	bl	8006c68 <cycle>
 8006e62:	4603      	mov	r3, r0
 8006e64:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006e68:	d102      	bne.n	8006e70 <MQTTYield+0x40>
 8006e6a:	f04f 33ff 	mov.w	r3, #4294967295
 8006e6e:	617b      	str	r3, [r7, #20]
 8006e70:	697b      	ldr	r3, [r7, #20]
 8006e72:	4618      	mov	r0, r3
 8006e74:	3718      	adds	r7, #24
 8006e76:	46bd      	mov	sp, r7
 8006e78:	bd80      	pop	{r7, pc}

08006e7a <waitfor>:
 8006e7a:	b580      	push	{r7, lr}
 8006e7c:	b086      	sub	sp, #24
 8006e7e:	af00      	add	r7, sp, #0
 8006e80:	60f8      	str	r0, [r7, #12]
 8006e82:	60b9      	str	r1, [r7, #8]
 8006e84:	607a      	str	r2, [r7, #4]
 8006e86:	f04f 33ff 	mov.w	r3, #4294967295
 8006e8a:	617b      	str	r3, [r7, #20]
 8006e8c:	6878      	ldr	r0, [r7, #4]
 8006e8e:	f000 fa4f 	bl	8007330 <TimerIsExpired>
 8006e92:	4603      	mov	r3, r0
 8006e94:	2b00      	cmp	r3, #0
 8006e96:	d109      	bne.n	8006eac <waitfor+0x32>
 8006e98:	6879      	ldr	r1, [r7, #4]
 8006e9a:	68f8      	ldr	r0, [r7, #12]
 8006e9c:	f7ff fee4 	bl	8006c68 <cycle>
 8006ea0:	6178      	str	r0, [r7, #20]
 8006ea2:	697a      	ldr	r2, [r7, #20]
 8006ea4:	68bb      	ldr	r3, [r7, #8]
 8006ea6:	429a      	cmp	r2, r3
 8006ea8:	d1f0      	bne.n	8006e8c <waitfor+0x12>
 8006eaa:	e000      	b.n	8006eae <waitfor+0x34>
 8006eac:	bf00      	nop
 8006eae:	697b      	ldr	r3, [r7, #20]
 8006eb0:	4618      	mov	r0, r3
 8006eb2:	3718      	adds	r7, #24
 8006eb4:	46bd      	mov	sp, r7
 8006eb6:	bd80      	pop	{r7, pc}

08006eb8 <MQTTConnect>:
 8006eb8:	b580      	push	{r7, lr}
 8006eba:	b09e      	sub	sp, #120	; 0x78
 8006ebc:	af00      	add	r7, sp, #0
 8006ebe:	6078      	str	r0, [r7, #4]
 8006ec0:	6039      	str	r1, [r7, #0]
 8006ec2:	f04f 33ff 	mov.w	r3, #4294967295
 8006ec6:	677b      	str	r3, [r7, #116]	; 0x74
 8006ec8:	4a3d      	ldr	r2, [pc, #244]	; (8006fc0 <MQTTConnect+0x108>)
 8006eca:	f107 0310 	add.w	r3, r7, #16
 8006ece:	4611      	mov	r1, r2
 8006ed0:	2258      	movs	r2, #88	; 0x58
 8006ed2:	4618      	mov	r0, r3
 8006ed4:	f00c f8bd 	bl	8013052 <memcpy>
 8006ed8:	2300      	movs	r3, #0
 8006eda:	673b      	str	r3, [r7, #112]	; 0x70
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	6a1b      	ldr	r3, [r3, #32]
 8006ee0:	2b00      	cmp	r3, #0
 8006ee2:	d15d      	bne.n	8006fa0 <MQTTConnect+0xe8>
 8006ee4:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8006ee8:	4618      	mov	r0, r3
 8006eea:	f000 fa13 	bl	8007314 <TimerInit>
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	685a      	ldr	r2, [r3, #4]
 8006ef2:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8006ef6:	4611      	mov	r1, r2
 8006ef8:	4618      	mov	r0, r3
 8006efa:	f000 fa2f 	bl	800735c <TimerCountdownMS>
 8006efe:	683b      	ldr	r3, [r7, #0]
 8006f00:	2b00      	cmp	r3, #0
 8006f02:	d102      	bne.n	8006f0a <MQTTConnect+0x52>
 8006f04:	f107 0310 	add.w	r3, r7, #16
 8006f08:	603b      	str	r3, [r7, #0]
 8006f0a:	683b      	ldr	r3, [r7, #0]
 8006f0c:	8b1b      	ldrh	r3, [r3, #24]
 8006f0e:	461a      	mov	r2, r3
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	619a      	str	r2, [r3, #24]
 8006f14:	687b      	ldr	r3, [r7, #4]
 8006f16:	f103 0254 	add.w	r2, r3, #84	; 0x54
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	699b      	ldr	r3, [r3, #24]
 8006f1e:	4619      	mov	r1, r3
 8006f20:	4610      	mov	r0, r2
 8006f22:	f000 fa2f 	bl	8007384 <TimerCountdown>
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	6918      	ldr	r0, [r3, #16]
 8006f2a:	687b      	ldr	r3, [r7, #4]
 8006f2c:	689b      	ldr	r3, [r3, #8]
 8006f2e:	683a      	ldr	r2, [r7, #0]
 8006f30:	4619      	mov	r1, r3
 8006f32:	f000 fb5f 	bl	80075f4 <MQTTSerialize_connect>
 8006f36:	6738      	str	r0, [r7, #112]	; 0x70
 8006f38:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8006f3a:	2b00      	cmp	r3, #0
 8006f3c:	dd32      	ble.n	8006fa4 <MQTTConnect+0xec>
 8006f3e:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8006f42:	461a      	mov	r2, r3
 8006f44:	6f39      	ldr	r1, [r7, #112]	; 0x70
 8006f46:	6878      	ldr	r0, [r7, #4]
 8006f48:	f7ff fc43 	bl	80067d2 <sendPacket>
 8006f4c:	6778      	str	r0, [r7, #116]	; 0x74
 8006f4e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8006f50:	2b00      	cmp	r3, #0
 8006f52:	d129      	bne.n	8006fa8 <MQTTConnect+0xf0>
 8006f54:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8006f58:	461a      	mov	r2, r3
 8006f5a:	2102      	movs	r1, #2
 8006f5c:	6878      	ldr	r0, [r7, #4]
 8006f5e:	f7ff ff8c 	bl	8006e7a <waitfor>
 8006f62:	4603      	mov	r3, r0
 8006f64:	2b02      	cmp	r3, #2
 8006f66:	d117      	bne.n	8006f98 <MQTTConnect+0xe0>
 8006f68:	23ff      	movs	r3, #255	; 0xff
 8006f6a:	73fb      	strb	r3, [r7, #15]
 8006f6c:	2300      	movs	r3, #0
 8006f6e:	73bb      	strb	r3, [r7, #14]
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	695a      	ldr	r2, [r3, #20]
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	68db      	ldr	r3, [r3, #12]
 8006f78:	f107 010f 	add.w	r1, r7, #15
 8006f7c:	f107 000e 	add.w	r0, r7, #14
 8006f80:	f000 fc24 	bl	80077cc <MQTTDeserialize_connack>
 8006f84:	4603      	mov	r3, r0
 8006f86:	2b01      	cmp	r3, #1
 8006f88:	d102      	bne.n	8006f90 <MQTTConnect+0xd8>
 8006f8a:	7bfb      	ldrb	r3, [r7, #15]
 8006f8c:	677b      	str	r3, [r7, #116]	; 0x74
 8006f8e:	e00c      	b.n	8006faa <MQTTConnect+0xf2>
 8006f90:	f04f 33ff 	mov.w	r3, #4294967295
 8006f94:	677b      	str	r3, [r7, #116]	; 0x74
 8006f96:	e008      	b.n	8006faa <MQTTConnect+0xf2>
 8006f98:	f04f 33ff 	mov.w	r3, #4294967295
 8006f9c:	677b      	str	r3, [r7, #116]	; 0x74
 8006f9e:	e004      	b.n	8006faa <MQTTConnect+0xf2>
 8006fa0:	bf00      	nop
 8006fa2:	e002      	b.n	8006faa <MQTTConnect+0xf2>
 8006fa4:	bf00      	nop
 8006fa6:	e000      	b.n	8006faa <MQTTConnect+0xf2>
 8006fa8:	bf00      	nop
 8006faa:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8006fac:	2b00      	cmp	r3, #0
 8006fae:	d102      	bne.n	8006fb6 <MQTTConnect+0xfe>
 8006fb0:	687b      	ldr	r3, [r7, #4]
 8006fb2:	2201      	movs	r2, #1
 8006fb4:	621a      	str	r2, [r3, #32]
 8006fb6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8006fb8:	4618      	mov	r0, r3
 8006fba:	3778      	adds	r7, #120	; 0x78
 8006fbc:	46bd      	mov	sp, r7
 8006fbe:	bd80      	pop	{r7, pc}
 8006fc0:	08016120 	.word	0x08016120

08006fc4 <MQTTSubscribe>:
 8006fc4:	b5b0      	push	{r4, r5, r7, lr}
 8006fc6:	b094      	sub	sp, #80	; 0x50
 8006fc8:	af04      	add	r7, sp, #16
 8006fca:	60f8      	str	r0, [r7, #12]
 8006fcc:	60b9      	str	r1, [r7, #8]
 8006fce:	603b      	str	r3, [r7, #0]
 8006fd0:	4613      	mov	r3, r2
 8006fd2:	71fb      	strb	r3, [r7, #7]
 8006fd4:	f04f 33ff 	mov.w	r3, #4294967295
 8006fd8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006fda:	2300      	movs	r3, #0
 8006fdc:	637b      	str	r3, [r7, #52]	; 0x34
 8006fde:	2300      	movs	r3, #0
 8006fe0:	623b      	str	r3, [r7, #32]
 8006fe2:	2300      	movs	r3, #0
 8006fe4:	627b      	str	r3, [r7, #36]	; 0x24
 8006fe6:	2300      	movs	r3, #0
 8006fe8:	62bb      	str	r3, [r7, #40]	; 0x28
 8006fea:	68bb      	ldr	r3, [r7, #8]
 8006fec:	623b      	str	r3, [r7, #32]
 8006fee:	79fb      	ldrb	r3, [r7, #7]
 8006ff0:	77fb      	strb	r3, [r7, #31]
 8006ff2:	68fb      	ldr	r3, [r7, #12]
 8006ff4:	6a1b      	ldr	r3, [r3, #32]
 8006ff6:	2b00      	cmp	r3, #0
 8006ff8:	f000 8083 	beq.w	8007102 <MQTTSubscribe+0x13e>
 8006ffc:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007000:	4618      	mov	r0, r3
 8007002:	f000 f987 	bl	8007314 <TimerInit>
 8007006:	68fb      	ldr	r3, [r7, #12]
 8007008:	685a      	ldr	r2, [r3, #4]
 800700a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800700e:	4611      	mov	r1, r2
 8007010:	4618      	mov	r0, r3
 8007012:	f000 f9a3 	bl	800735c <TimerCountdownMS>
 8007016:	68fb      	ldr	r3, [r7, #12]
 8007018:	691c      	ldr	r4, [r3, #16]
 800701a:	68fb      	ldr	r3, [r7, #12]
 800701c:	689b      	ldr	r3, [r3, #8]
 800701e:	461d      	mov	r5, r3
 8007020:	68f8      	ldr	r0, [r7, #12]
 8007022:	f7ff fbbd 	bl	80067a0 <getNextPacketId>
 8007026:	4603      	mov	r3, r0
 8007028:	b29a      	uxth	r2, r3
 800702a:	f107 031f 	add.w	r3, r7, #31
 800702e:	9302      	str	r3, [sp, #8]
 8007030:	f107 0320 	add.w	r3, r7, #32
 8007034:	9301      	str	r3, [sp, #4]
 8007036:	2301      	movs	r3, #1
 8007038:	9300      	str	r3, [sp, #0]
 800703a:	4613      	mov	r3, r2
 800703c:	2200      	movs	r2, #0
 800703e:	4629      	mov	r1, r5
 8007040:	4620      	mov	r0, r4
 8007042:	f001 f844 	bl	80080ce <MQTTSerialize_subscribe>
 8007046:	6378      	str	r0, [r7, #52]	; 0x34
 8007048:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800704a:	2b00      	cmp	r3, #0
 800704c:	dd5b      	ble.n	8007106 <MQTTSubscribe+0x142>
 800704e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007052:	461a      	mov	r2, r3
 8007054:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8007056:	68f8      	ldr	r0, [r7, #12]
 8007058:	f7ff fbbb 	bl	80067d2 <sendPacket>
 800705c:	63f8      	str	r0, [r7, #60]	; 0x3c
 800705e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007060:	2b00      	cmp	r3, #0
 8007062:	d152      	bne.n	800710a <MQTTSubscribe+0x146>
 8007064:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007068:	461a      	mov	r2, r3
 800706a:	2109      	movs	r1, #9
 800706c:	68f8      	ldr	r0, [r7, #12]
 800706e:	f7ff ff04 	bl	8006e7a <waitfor>
 8007072:	4603      	mov	r3, r0
 8007074:	2b09      	cmp	r3, #9
 8007076:	d140      	bne.n	80070fa <MQTTSubscribe+0x136>
 8007078:	2300      	movs	r3, #0
 800707a:	61bb      	str	r3, [r7, #24]
 800707c:	f04f 33ff 	mov.w	r3, #4294967295
 8007080:	617b      	str	r3, [r7, #20]
 8007082:	68fb      	ldr	r3, [r7, #12]
 8007084:	695b      	ldr	r3, [r3, #20]
 8007086:	68fa      	ldr	r2, [r7, #12]
 8007088:	68d2      	ldr	r2, [r2, #12]
 800708a:	4614      	mov	r4, r2
 800708c:	f107 0114 	add.w	r1, r7, #20
 8007090:	f107 0218 	add.w	r2, r7, #24
 8007094:	f107 0012 	add.w	r0, r7, #18
 8007098:	9401      	str	r4, [sp, #4]
 800709a:	9300      	str	r3, [sp, #0]
 800709c:	460b      	mov	r3, r1
 800709e:	2101      	movs	r1, #1
 80070a0:	f001 f88f 	bl	80081c2 <MQTTDeserialize_suback>
 80070a4:	4603      	mov	r3, r0
 80070a6:	2b01      	cmp	r3, #1
 80070a8:	d101      	bne.n	80070ae <MQTTSubscribe+0xea>
 80070aa:	697b      	ldr	r3, [r7, #20]
 80070ac:	63fb      	str	r3, [r7, #60]	; 0x3c
 80070ae:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80070b0:	2b80      	cmp	r3, #128	; 0x80
 80070b2:	d02b      	beq.n	800710c <MQTTSubscribe+0x148>
 80070b4:	2300      	movs	r3, #0
 80070b6:	63bb      	str	r3, [r7, #56]	; 0x38
 80070b8:	e01b      	b.n	80070f2 <MQTTSubscribe+0x12e>
 80070ba:	68fa      	ldr	r2, [r7, #12]
 80070bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070be:	3304      	adds	r3, #4
 80070c0:	00db      	lsls	r3, r3, #3
 80070c2:	4413      	add	r3, r2
 80070c4:	685b      	ldr	r3, [r3, #4]
 80070c6:	2b00      	cmp	r3, #0
 80070c8:	d110      	bne.n	80070ec <MQTTSubscribe+0x128>
 80070ca:	68fa      	ldr	r2, [r7, #12]
 80070cc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070ce:	3304      	adds	r3, #4
 80070d0:	00db      	lsls	r3, r3, #3
 80070d2:	4413      	add	r3, r2
 80070d4:	68ba      	ldr	r2, [r7, #8]
 80070d6:	605a      	str	r2, [r3, #4]
 80070d8:	68fa      	ldr	r2, [r7, #12]
 80070da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070dc:	3304      	adds	r3, #4
 80070de:	00db      	lsls	r3, r3, #3
 80070e0:	4413      	add	r3, r2
 80070e2:	683a      	ldr	r2, [r7, #0]
 80070e4:	609a      	str	r2, [r3, #8]
 80070e6:	2300      	movs	r3, #0
 80070e8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80070ea:	e00f      	b.n	800710c <MQTTSubscribe+0x148>
 80070ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070ee:	3301      	adds	r3, #1
 80070f0:	63bb      	str	r3, [r7, #56]	; 0x38
 80070f2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070f4:	2b04      	cmp	r3, #4
 80070f6:	dde0      	ble.n	80070ba <MQTTSubscribe+0xf6>
 80070f8:	e008      	b.n	800710c <MQTTSubscribe+0x148>
 80070fa:	f04f 33ff 	mov.w	r3, #4294967295
 80070fe:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007100:	e004      	b.n	800710c <MQTTSubscribe+0x148>
 8007102:	bf00      	nop
 8007104:	e002      	b.n	800710c <MQTTSubscribe+0x148>
 8007106:	bf00      	nop
 8007108:	e000      	b.n	800710c <MQTTSubscribe+0x148>
 800710a:	bf00      	nop
 800710c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800710e:	4618      	mov	r0, r3
 8007110:	3740      	adds	r7, #64	; 0x40
 8007112:	46bd      	mov	sp, r7
 8007114:	bdb0      	pop	{r4, r5, r7, pc}

08007116 <MQTTPublish>:
 8007116:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007118:	b097      	sub	sp, #92	; 0x5c
 800711a:	af08      	add	r7, sp, #32
 800711c:	60f8      	str	r0, [r7, #12]
 800711e:	60b9      	str	r1, [r7, #8]
 8007120:	607a      	str	r2, [r7, #4]
 8007122:	f04f 33ff 	mov.w	r3, #4294967295
 8007126:	637b      	str	r3, [r7, #52]	; 0x34
 8007128:	2300      	movs	r3, #0
 800712a:	61fb      	str	r3, [r7, #28]
 800712c:	2300      	movs	r3, #0
 800712e:	623b      	str	r3, [r7, #32]
 8007130:	2300      	movs	r3, #0
 8007132:	627b      	str	r3, [r7, #36]	; 0x24
 8007134:	68bb      	ldr	r3, [r7, #8]
 8007136:	61fb      	str	r3, [r7, #28]
 8007138:	2300      	movs	r3, #0
 800713a:	633b      	str	r3, [r7, #48]	; 0x30
 800713c:	68fb      	ldr	r3, [r7, #12]
 800713e:	6a1b      	ldr	r3, [r3, #32]
 8007140:	2b00      	cmp	r3, #0
 8007142:	f000 809b 	beq.w	800727c <MQTTPublish+0x166>
 8007146:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800714a:	4618      	mov	r0, r3
 800714c:	f000 f8e2 	bl	8007314 <TimerInit>
 8007150:	68fb      	ldr	r3, [r7, #12]
 8007152:	685a      	ldr	r2, [r3, #4]
 8007154:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8007158:	4611      	mov	r1, r2
 800715a:	4618      	mov	r0, r3
 800715c:	f000 f8fe 	bl	800735c <TimerCountdownMS>
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	781b      	ldrb	r3, [r3, #0]
 8007164:	2b01      	cmp	r3, #1
 8007166:	d003      	beq.n	8007170 <MQTTPublish+0x5a>
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	781b      	ldrb	r3, [r3, #0]
 800716c:	2b02      	cmp	r3, #2
 800716e:	d106      	bne.n	800717e <MQTTPublish+0x68>
 8007170:	68f8      	ldr	r0, [r7, #12]
 8007172:	f7ff fb15 	bl	80067a0 <getNextPacketId>
 8007176:	4603      	mov	r3, r0
 8007178:	b29a      	uxth	r2, r3
 800717a:	687b      	ldr	r3, [r7, #4]
 800717c:	809a      	strh	r2, [r3, #4]
 800717e:	68fb      	ldr	r3, [r7, #12]
 8007180:	691b      	ldr	r3, [r3, #16]
 8007182:	603b      	str	r3, [r7, #0]
 8007184:	68fb      	ldr	r3, [r7, #12]
 8007186:	689b      	ldr	r3, [r3, #8]
 8007188:	469c      	mov	ip, r3
 800718a:	687b      	ldr	r3, [r7, #4]
 800718c:	781b      	ldrb	r3, [r3, #0]
 800718e:	469e      	mov	lr, r3
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	785d      	ldrb	r5, [r3, #1]
 8007194:	687b      	ldr	r3, [r7, #4]
 8007196:	889e      	ldrh	r6, [r3, #4]
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	689b      	ldr	r3, [r3, #8]
 800719c:	687a      	ldr	r2, [r7, #4]
 800719e:	68d2      	ldr	r2, [r2, #12]
 80071a0:	9206      	str	r2, [sp, #24]
 80071a2:	9305      	str	r3, [sp, #20]
 80071a4:	ac02      	add	r4, sp, #8
 80071a6:	f107 031c 	add.w	r3, r7, #28
 80071aa:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80071ae:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80071b2:	9601      	str	r6, [sp, #4]
 80071b4:	9500      	str	r5, [sp, #0]
 80071b6:	4673      	mov	r3, lr
 80071b8:	2200      	movs	r2, #0
 80071ba:	4661      	mov	r1, ip
 80071bc:	6838      	ldr	r0, [r7, #0]
 80071be:	f000 fe94 	bl	8007eea <MQTTSerialize_publish>
 80071c2:	6338      	str	r0, [r7, #48]	; 0x30
 80071c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80071c6:	2b00      	cmp	r3, #0
 80071c8:	dd5a      	ble.n	8007280 <MQTTPublish+0x16a>
 80071ca:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80071ce:	461a      	mov	r2, r3
 80071d0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80071d2:	68f8      	ldr	r0, [r7, #12]
 80071d4:	f7ff fafd 	bl	80067d2 <sendPacket>
 80071d8:	6378      	str	r0, [r7, #52]	; 0x34
 80071da:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80071dc:	2b00      	cmp	r3, #0
 80071de:	d151      	bne.n	8007284 <MQTTPublish+0x16e>
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	781b      	ldrb	r3, [r3, #0]
 80071e4:	2b01      	cmp	r3, #1
 80071e6:	d122      	bne.n	800722e <MQTTPublish+0x118>
 80071e8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80071ec:	461a      	mov	r2, r3
 80071ee:	2104      	movs	r1, #4
 80071f0:	68f8      	ldr	r0, [r7, #12]
 80071f2:	f7ff fe42 	bl	8006e7a <waitfor>
 80071f6:	4603      	mov	r3, r0
 80071f8:	2b04      	cmp	r3, #4
 80071fa:	d114      	bne.n	8007226 <MQTTPublish+0x110>
 80071fc:	68fb      	ldr	r3, [r7, #12]
 80071fe:	695c      	ldr	r4, [r3, #20]
 8007200:	68fb      	ldr	r3, [r7, #12]
 8007202:	68db      	ldr	r3, [r3, #12]
 8007204:	f107 021a 	add.w	r2, r7, #26
 8007208:	f107 0119 	add.w	r1, r7, #25
 800720c:	f107 0018 	add.w	r0, r7, #24
 8007210:	9300      	str	r3, [sp, #0]
 8007212:	4623      	mov	r3, r4
 8007214:	f000 fbf7 	bl	8007a06 <MQTTDeserialize_ack>
 8007218:	4603      	mov	r3, r0
 800721a:	2b01      	cmp	r3, #1
 800721c:	d035      	beq.n	800728a <MQTTPublish+0x174>
 800721e:	f04f 33ff 	mov.w	r3, #4294967295
 8007222:	637b      	str	r3, [r7, #52]	; 0x34
 8007224:	e031      	b.n	800728a <MQTTPublish+0x174>
 8007226:	f04f 33ff 	mov.w	r3, #4294967295
 800722a:	637b      	str	r3, [r7, #52]	; 0x34
 800722c:	e02d      	b.n	800728a <MQTTPublish+0x174>
 800722e:	687b      	ldr	r3, [r7, #4]
 8007230:	781b      	ldrb	r3, [r3, #0]
 8007232:	2b02      	cmp	r3, #2
 8007234:	d128      	bne.n	8007288 <MQTTPublish+0x172>
 8007236:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800723a:	461a      	mov	r2, r3
 800723c:	2107      	movs	r1, #7
 800723e:	68f8      	ldr	r0, [r7, #12]
 8007240:	f7ff fe1b 	bl	8006e7a <waitfor>
 8007244:	4603      	mov	r3, r0
 8007246:	2b07      	cmp	r3, #7
 8007248:	d114      	bne.n	8007274 <MQTTPublish+0x15e>
 800724a:	68fb      	ldr	r3, [r7, #12]
 800724c:	695c      	ldr	r4, [r3, #20]
 800724e:	68fb      	ldr	r3, [r7, #12]
 8007250:	68db      	ldr	r3, [r3, #12]
 8007252:	f107 0216 	add.w	r2, r7, #22
 8007256:	f107 0115 	add.w	r1, r7, #21
 800725a:	f107 0014 	add.w	r0, r7, #20
 800725e:	9300      	str	r3, [sp, #0]
 8007260:	4623      	mov	r3, r4
 8007262:	f000 fbd0 	bl	8007a06 <MQTTDeserialize_ack>
 8007266:	4603      	mov	r3, r0
 8007268:	2b01      	cmp	r3, #1
 800726a:	d00e      	beq.n	800728a <MQTTPublish+0x174>
 800726c:	f04f 33ff 	mov.w	r3, #4294967295
 8007270:	637b      	str	r3, [r7, #52]	; 0x34
 8007272:	e00a      	b.n	800728a <MQTTPublish+0x174>
 8007274:	f04f 33ff 	mov.w	r3, #4294967295
 8007278:	637b      	str	r3, [r7, #52]	; 0x34
 800727a:	e006      	b.n	800728a <MQTTPublish+0x174>
 800727c:	bf00      	nop
 800727e:	e004      	b.n	800728a <MQTTPublish+0x174>
 8007280:	bf00      	nop
 8007282:	e002      	b.n	800728a <MQTTPublish+0x174>
 8007284:	bf00      	nop
 8007286:	e000      	b.n	800728a <MQTTPublish+0x174>
 8007288:	bf00      	nop
 800728a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800728c:	4618      	mov	r0, r3
 800728e:	373c      	adds	r7, #60	; 0x3c
 8007290:	46bd      	mov	sp, r7
 8007292:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007294 <MQTTDisconnect>:
 8007294:	b580      	push	{r7, lr}
 8007296:	b086      	sub	sp, #24
 8007298:	af00      	add	r7, sp, #0
 800729a:	6078      	str	r0, [r7, #4]
 800729c:	f04f 33ff 	mov.w	r3, #4294967295
 80072a0:	617b      	str	r3, [r7, #20]
 80072a2:	2300      	movs	r3, #0
 80072a4:	613b      	str	r3, [r7, #16]
 80072a6:	f107 0308 	add.w	r3, r7, #8
 80072aa:	4618      	mov	r0, r3
 80072ac:	f000 f832 	bl	8007314 <TimerInit>
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	685a      	ldr	r2, [r3, #4]
 80072b4:	f107 0308 	add.w	r3, r7, #8
 80072b8:	4611      	mov	r1, r2
 80072ba:	4618      	mov	r0, r3
 80072bc:	f000 f84e 	bl	800735c <TimerCountdownMS>
 80072c0:	687b      	ldr	r3, [r7, #4]
 80072c2:	691a      	ldr	r2, [r3, #16]
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	689b      	ldr	r3, [r3, #8]
 80072c8:	4619      	mov	r1, r3
 80072ca:	4610      	mov	r0, r2
 80072cc:	f000 fb0b 	bl	80078e6 <MQTTSerialize_disconnect>
 80072d0:	6138      	str	r0, [r7, #16]
 80072d2:	693b      	ldr	r3, [r7, #16]
 80072d4:	2b00      	cmp	r3, #0
 80072d6:	dd07      	ble.n	80072e8 <MQTTDisconnect+0x54>
 80072d8:	f107 0308 	add.w	r3, r7, #8
 80072dc:	461a      	mov	r2, r3
 80072de:	6939      	ldr	r1, [r7, #16]
 80072e0:	6878      	ldr	r0, [r7, #4]
 80072e2:	f7ff fa76 	bl	80067d2 <sendPacket>
 80072e6:	6178      	str	r0, [r7, #20]
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	2200      	movs	r2, #0
 80072ec:	621a      	str	r2, [r3, #32]
 80072ee:	697b      	ldr	r3, [r7, #20]
 80072f0:	4618      	mov	r0, r3
 80072f2:	3718      	adds	r7, #24
 80072f4:	46bd      	mov	sp, r7
 80072f6:	bd80      	pop	{r7, pc}

080072f8 <MilliTimer_Handler>:
 80072f8:	b480      	push	{r7}
 80072fa:	af00      	add	r7, sp, #0
 80072fc:	4b04      	ldr	r3, [pc, #16]	; (8007310 <MilliTimer_Handler+0x18>)
 80072fe:	681b      	ldr	r3, [r3, #0]
 8007300:	3301      	adds	r3, #1
 8007302:	4a03      	ldr	r2, [pc, #12]	; (8007310 <MilliTimer_Handler+0x18>)
 8007304:	6013      	str	r3, [r2, #0]
 8007306:	bf00      	nop
 8007308:	46bd      	mov	sp, r7
 800730a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800730e:	4770      	bx	lr
 8007310:	200002b0 	.word	0x200002b0

08007314 <TimerInit>:
 8007314:	b480      	push	{r7}
 8007316:	b083      	sub	sp, #12
 8007318:	af00      	add	r7, sp, #0
 800731a:	6078      	str	r0, [r7, #4]
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	2200      	movs	r2, #0
 8007320:	605a      	str	r2, [r3, #4]
 8007322:	bf00      	nop
 8007324:	370c      	adds	r7, #12
 8007326:	46bd      	mov	sp, r7
 8007328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732c:	4770      	bx	lr
	...

08007330 <TimerIsExpired>:
 8007330:	b480      	push	{r7}
 8007332:	b085      	sub	sp, #20
 8007334:	af00      	add	r7, sp, #0
 8007336:	6078      	str	r0, [r7, #4]
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	685a      	ldr	r2, [r3, #4]
 800733c:	4b06      	ldr	r3, [pc, #24]	; (8007358 <TimerIsExpired+0x28>)
 800733e:	681b      	ldr	r3, [r3, #0]
 8007340:	1ad3      	subs	r3, r2, r3
 8007342:	60fb      	str	r3, [r7, #12]
 8007344:	68fb      	ldr	r3, [r7, #12]
 8007346:	0fdb      	lsrs	r3, r3, #31
 8007348:	b2db      	uxtb	r3, r3
 800734a:	4618      	mov	r0, r3
 800734c:	3714      	adds	r7, #20
 800734e:	46bd      	mov	sp, r7
 8007350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007354:	4770      	bx	lr
 8007356:	bf00      	nop
 8007358:	200002b0 	.word	0x200002b0

0800735c <TimerCountdownMS>:
 800735c:	b480      	push	{r7}
 800735e:	b083      	sub	sp, #12
 8007360:	af00      	add	r7, sp, #0
 8007362:	6078      	str	r0, [r7, #4]
 8007364:	6039      	str	r1, [r7, #0]
 8007366:	4b06      	ldr	r3, [pc, #24]	; (8007380 <TimerCountdownMS+0x24>)
 8007368:	681a      	ldr	r2, [r3, #0]
 800736a:	683b      	ldr	r3, [r7, #0]
 800736c:	441a      	add	r2, r3
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	605a      	str	r2, [r3, #4]
 8007372:	bf00      	nop
 8007374:	370c      	adds	r7, #12
 8007376:	46bd      	mov	sp, r7
 8007378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800737c:	4770      	bx	lr
 800737e:	bf00      	nop
 8007380:	200002b0 	.word	0x200002b0

08007384 <TimerCountdown>:
 8007384:	b480      	push	{r7}
 8007386:	b083      	sub	sp, #12
 8007388:	af00      	add	r7, sp, #0
 800738a:	6078      	str	r0, [r7, #4]
 800738c:	6039      	str	r1, [r7, #0]
 800738e:	683b      	ldr	r3, [r7, #0]
 8007390:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007394:	fb03 f202 	mul.w	r2, r3, r2
 8007398:	4b05      	ldr	r3, [pc, #20]	; (80073b0 <TimerCountdown+0x2c>)
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	441a      	add	r2, r3
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	605a      	str	r2, [r3, #4]
 80073a2:	bf00      	nop
 80073a4:	370c      	adds	r7, #12
 80073a6:	46bd      	mov	sp, r7
 80073a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073ac:	4770      	bx	lr
 80073ae:	bf00      	nop
 80073b0:	200002b0 	.word	0x200002b0

080073b4 <TimerLeftMS>:
 80073b4:	b480      	push	{r7}
 80073b6:	b085      	sub	sp, #20
 80073b8:	af00      	add	r7, sp, #0
 80073ba:	6078      	str	r0, [r7, #4]
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	685a      	ldr	r2, [r3, #4]
 80073c0:	4b06      	ldr	r3, [pc, #24]	; (80073dc <TimerLeftMS+0x28>)
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	1ad3      	subs	r3, r2, r3
 80073c6:	60fb      	str	r3, [r7, #12]
 80073c8:	68fb      	ldr	r3, [r7, #12]
 80073ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80073ce:	4618      	mov	r0, r3
 80073d0:	3714      	adds	r7, #20
 80073d2:	46bd      	mov	sp, r7
 80073d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073d8:	4770      	bx	lr
 80073da:	bf00      	nop
 80073dc:	200002b0 	.word	0x200002b0

080073e0 <NewNetwork>:
 80073e0:	b480      	push	{r7}
 80073e2:	b083      	sub	sp, #12
 80073e4:	af00      	add	r7, sp, #0
 80073e6:	6078      	str	r0, [r7, #4]
 80073e8:	6039      	str	r1, [r7, #0]
 80073ea:	687b      	ldr	r3, [r7, #4]
 80073ec:	683a      	ldr	r2, [r7, #0]
 80073ee:	601a      	str	r2, [r3, #0]
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	4a07      	ldr	r2, [pc, #28]	; (8007410 <NewNetwork+0x30>)
 80073f4:	605a      	str	r2, [r3, #4]
 80073f6:	687b      	ldr	r3, [r7, #4]
 80073f8:	4a06      	ldr	r2, [pc, #24]	; (8007414 <NewNetwork+0x34>)
 80073fa:	609a      	str	r2, [r3, #8]
 80073fc:	687b      	ldr	r3, [r7, #4]
 80073fe:	4a06      	ldr	r2, [pc, #24]	; (8007418 <NewNetwork+0x38>)
 8007400:	60da      	str	r2, [r3, #12]
 8007402:	bf00      	nop
 8007404:	370c      	adds	r7, #12
 8007406:	46bd      	mov	sp, r7
 8007408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800740c:	4770      	bx	lr
 800740e:	bf00      	nop
 8007410:	0800741d 	.word	0x0800741d
 8007414:	08007477 	.word	0x08007477
 8007418:	080074bf 	.word	0x080074bf

0800741c <w5x00_read>:
 800741c:	b580      	push	{r7, lr}
 800741e:	b084      	sub	sp, #16
 8007420:	af00      	add	r7, sp, #0
 8007422:	60f8      	str	r0, [r7, #12]
 8007424:	60b9      	str	r1, [r7, #8]
 8007426:	607a      	str	r2, [r7, #4]
 8007428:	603b      	str	r3, [r7, #0]
 800742a:	68fb      	ldr	r3, [r7, #12]
 800742c:	681b      	ldr	r3, [r3, #0]
 800742e:	009b      	lsls	r3, r3, #2
 8007430:	3301      	adds	r3, #1
 8007432:	00db      	lsls	r3, r3, #3
 8007434:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8007438:	4618      	mov	r0, r3
 800743a:	f7fb f919 	bl	8002670 <WIZCHIP_READ>
 800743e:	4603      	mov	r3, r0
 8007440:	2b17      	cmp	r3, #23
 8007442:	d113      	bne.n	800746c <w5x00_read+0x50>
 8007444:	68fb      	ldr	r3, [r7, #12]
 8007446:	681b      	ldr	r3, [r3, #0]
 8007448:	b2db      	uxtb	r3, r3
 800744a:	4618      	mov	r0, r3
 800744c:	f7fb fab5 	bl	80029ba <getSn_RX_RSR>
 8007450:	4603      	mov	r3, r0
 8007452:	2b00      	cmp	r3, #0
 8007454:	d00a      	beq.n	800746c <w5x00_read+0x50>
 8007456:	68fb      	ldr	r3, [r7, #12]
 8007458:	681b      	ldr	r3, [r3, #0]
 800745a:	b2db      	uxtb	r3, r3
 800745c:	687a      	ldr	r2, [r7, #4]
 800745e:	b292      	uxth	r2, r2
 8007460:	68b9      	ldr	r1, [r7, #8]
 8007462:	4618      	mov	r0, r3
 8007464:	f7fb ffc2 	bl	80033ec <recv>
 8007468:	4603      	mov	r3, r0
 800746a:	e000      	b.n	800746e <w5x00_read+0x52>
 800746c:	2300      	movs	r3, #0
 800746e:	4618      	mov	r0, r3
 8007470:	3710      	adds	r7, #16
 8007472:	46bd      	mov	sp, r7
 8007474:	bd80      	pop	{r7, pc}

08007476 <w5x00_write>:
 8007476:	b580      	push	{r7, lr}
 8007478:	b084      	sub	sp, #16
 800747a:	af00      	add	r7, sp, #0
 800747c:	60f8      	str	r0, [r7, #12]
 800747e:	60b9      	str	r1, [r7, #8]
 8007480:	607a      	str	r2, [r7, #4]
 8007482:	603b      	str	r3, [r7, #0]
 8007484:	68fb      	ldr	r3, [r7, #12]
 8007486:	681b      	ldr	r3, [r3, #0]
 8007488:	009b      	lsls	r3, r3, #2
 800748a:	3301      	adds	r3, #1
 800748c:	00db      	lsls	r3, r3, #3
 800748e:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8007492:	4618      	mov	r0, r3
 8007494:	f7fb f8ec 	bl	8002670 <WIZCHIP_READ>
 8007498:	4603      	mov	r3, r0
 800749a:	2b17      	cmp	r3, #23
 800749c:	d10a      	bne.n	80074b4 <w5x00_write+0x3e>
 800749e:	68fb      	ldr	r3, [r7, #12]
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	b2db      	uxtb	r3, r3
 80074a4:	687a      	ldr	r2, [r7, #4]
 80074a6:	b292      	uxth	r2, r2
 80074a8:	68b9      	ldr	r1, [r7, #8]
 80074aa:	4618      	mov	r0, r3
 80074ac:	f7fb fea4 	bl	80031f8 <send>
 80074b0:	4603      	mov	r3, r0
 80074b2:	e000      	b.n	80074b6 <w5x00_write+0x40>
 80074b4:	2300      	movs	r3, #0
 80074b6:	4618      	mov	r0, r3
 80074b8:	3710      	adds	r7, #16
 80074ba:	46bd      	mov	sp, r7
 80074bc:	bd80      	pop	{r7, pc}

080074be <w5x00_disconnect>:
 80074be:	b580      	push	{r7, lr}
 80074c0:	b082      	sub	sp, #8
 80074c2:	af00      	add	r7, sp, #0
 80074c4:	6078      	str	r0, [r7, #4]
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	681b      	ldr	r3, [r3, #0]
 80074ca:	b2db      	uxtb	r3, r3
 80074cc:	4618      	mov	r0, r3
 80074ce:	f7fb fe1d 	bl	800310c <disconnect>
 80074d2:	bf00      	nop
 80074d4:	3708      	adds	r7, #8
 80074d6:	46bd      	mov	sp, r7
 80074d8:	bd80      	pop	{r7, pc}

080074da <ConnectNetwork>:
 80074da:	b580      	push	{r7, lr}
 80074dc:	b086      	sub	sp, #24
 80074de:	af00      	add	r7, sp, #0
 80074e0:	60f8      	str	r0, [r7, #12]
 80074e2:	60b9      	str	r1, [r7, #8]
 80074e4:	4613      	mov	r3, r2
 80074e6:	80fb      	strh	r3, [r7, #6]
 80074e8:	f243 0339 	movw	r3, #12345	; 0x3039
 80074ec:	82fb      	strh	r3, [r7, #22]
 80074ee:	68fb      	ldr	r3, [r7, #12]
 80074f0:	681b      	ldr	r3, [r3, #0]
 80074f2:	b2d8      	uxtb	r0, r3
 80074f4:	8afa      	ldrh	r2, [r7, #22]
 80074f6:	2300      	movs	r3, #0
 80074f8:	2101      	movs	r1, #1
 80074fa:	f7fb fba9 	bl	8002c50 <socket>
 80074fe:	4603      	mov	r3, r0
 8007500:	461a      	mov	r2, r3
 8007502:	68fb      	ldr	r3, [r7, #12]
 8007504:	681b      	ldr	r3, [r3, #0]
 8007506:	429a      	cmp	r2, r3
 8007508:	d001      	beq.n	800750e <ConnectNetwork+0x34>
 800750a:	2300      	movs	r3, #0
 800750c:	e00d      	b.n	800752a <ConnectNetwork+0x50>
 800750e:	68fb      	ldr	r3, [r7, #12]
 8007510:	681b      	ldr	r3, [r3, #0]
 8007512:	b2db      	uxtb	r3, r3
 8007514:	88fa      	ldrh	r2, [r7, #6]
 8007516:	68b9      	ldr	r1, [r7, #8]
 8007518:	4618      	mov	r0, r3
 800751a:	f7fb fd1b 	bl	8002f54 <connect>
 800751e:	4603      	mov	r3, r0
 8007520:	2b01      	cmp	r3, #1
 8007522:	d001      	beq.n	8007528 <ConnectNetwork+0x4e>
 8007524:	2300      	movs	r3, #0
 8007526:	e000      	b.n	800752a <ConnectNetwork+0x50>
 8007528:	2301      	movs	r3, #1
 800752a:	4618      	mov	r0, r3
 800752c:	3718      	adds	r7, #24
 800752e:	46bd      	mov	sp, r7
 8007530:	bd80      	pop	{r7, pc}

08007532 <MQTTSerialize_connectLength>:
 8007532:	b590      	push	{r4, r7, lr}
 8007534:	b085      	sub	sp, #20
 8007536:	af00      	add	r7, sp, #0
 8007538:	6078      	str	r0, [r7, #4]
 800753a:	2300      	movs	r3, #0
 800753c:	60fb      	str	r3, [r7, #12]
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	7a1b      	ldrb	r3, [r3, #8]
 8007542:	2b03      	cmp	r3, #3
 8007544:	d102      	bne.n	800754c <MQTTSerialize_connectLength+0x1a>
 8007546:	230c      	movs	r3, #12
 8007548:	60fb      	str	r3, [r7, #12]
 800754a:	e005      	b.n	8007558 <MQTTSerialize_connectLength+0x26>
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	7a1b      	ldrb	r3, [r3, #8]
 8007550:	2b04      	cmp	r3, #4
 8007552:	d101      	bne.n	8007558 <MQTTSerialize_connectLength+0x26>
 8007554:	230a      	movs	r3, #10
 8007556:	60fb      	str	r3, [r7, #12]
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	330c      	adds	r3, #12
 800755c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8007560:	f000 fc53 	bl	8007e0a <MQTTstrlen>
 8007564:	4603      	mov	r3, r0
 8007566:	3302      	adds	r3, #2
 8007568:	68fa      	ldr	r2, [r7, #12]
 800756a:	4413      	add	r3, r2
 800756c:	60fb      	str	r3, [r7, #12]
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	7edb      	ldrb	r3, [r3, #27]
 8007572:	2b00      	cmp	r3, #0
 8007574:	d013      	beq.n	800759e <MQTTSerialize_connectLength+0x6c>
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	3324      	adds	r3, #36	; 0x24
 800757a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800757e:	f000 fc44 	bl	8007e0a <MQTTstrlen>
 8007582:	4603      	mov	r3, r0
 8007584:	1c9c      	adds	r4, r3, #2
 8007586:	687b      	ldr	r3, [r7, #4]
 8007588:	3330      	adds	r3, #48	; 0x30
 800758a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800758e:	f000 fc3c 	bl	8007e0a <MQTTstrlen>
 8007592:	4603      	mov	r3, r0
 8007594:	4423      	add	r3, r4
 8007596:	3302      	adds	r3, #2
 8007598:	68fa      	ldr	r2, [r7, #12]
 800759a:	4413      	add	r3, r2
 800759c:	60fb      	str	r3, [r7, #12]
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075a2:	2b00      	cmp	r3, #0
 80075a4:	d103      	bne.n	80075ae <MQTTSerialize_connectLength+0x7c>
 80075a6:	687b      	ldr	r3, [r7, #4]
 80075a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80075aa:	2b00      	cmp	r3, #0
 80075ac:	d00a      	beq.n	80075c4 <MQTTSerialize_connectLength+0x92>
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	3340      	adds	r3, #64	; 0x40
 80075b2:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80075b6:	f000 fc28 	bl	8007e0a <MQTTstrlen>
 80075ba:	4603      	mov	r3, r0
 80075bc:	3302      	adds	r3, #2
 80075be:	68fa      	ldr	r2, [r7, #12]
 80075c0:	4413      	add	r3, r2
 80075c2:	60fb      	str	r3, [r7, #12]
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80075c8:	2b00      	cmp	r3, #0
 80075ca:	d103      	bne.n	80075d4 <MQTTSerialize_connectLength+0xa2>
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80075d0:	2b00      	cmp	r3, #0
 80075d2:	d00a      	beq.n	80075ea <MQTTSerialize_connectLength+0xb8>
 80075d4:	687b      	ldr	r3, [r7, #4]
 80075d6:	334c      	adds	r3, #76	; 0x4c
 80075d8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80075dc:	f000 fc15 	bl	8007e0a <MQTTstrlen>
 80075e0:	4603      	mov	r3, r0
 80075e2:	3302      	adds	r3, #2
 80075e4:	68fa      	ldr	r2, [r7, #12]
 80075e6:	4413      	add	r3, r2
 80075e8:	60fb      	str	r3, [r7, #12]
 80075ea:	68fb      	ldr	r3, [r7, #12]
 80075ec:	4618      	mov	r0, r3
 80075ee:	3714      	adds	r7, #20
 80075f0:	46bd      	mov	sp, r7
 80075f2:	bd90      	pop	{r4, r7, pc}

080075f4 <MQTTSerialize_connect>:
 80075f4:	b580      	push	{r7, lr}
 80075f6:	b08a      	sub	sp, #40	; 0x28
 80075f8:	af00      	add	r7, sp, #0
 80075fa:	60f8      	str	r0, [r7, #12]
 80075fc:	60b9      	str	r1, [r7, #8]
 80075fe:	607a      	str	r2, [r7, #4]
 8007600:	68fb      	ldr	r3, [r7, #12]
 8007602:	61fb      	str	r3, [r7, #28]
 8007604:	2300      	movs	r3, #0
 8007606:	61bb      	str	r3, [r7, #24]
 8007608:	2300      	movs	r3, #0
 800760a:	617b      	str	r3, [r7, #20]
 800760c:	2300      	movs	r3, #0
 800760e:	623b      	str	r3, [r7, #32]
 8007610:	f04f 33ff 	mov.w	r3, #4294967295
 8007614:	627b      	str	r3, [r7, #36]	; 0x24
 8007616:	6878      	ldr	r0, [r7, #4]
 8007618:	f7ff ff8b 	bl	8007532 <MQTTSerialize_connectLength>
 800761c:	6238      	str	r0, [r7, #32]
 800761e:	6a38      	ldr	r0, [r7, #32]
 8007620:	f000 faa8 	bl	8007b74 <MQTTPacket_len>
 8007624:	4602      	mov	r2, r0
 8007626:	68bb      	ldr	r3, [r7, #8]
 8007628:	4293      	cmp	r3, r2
 800762a:	da03      	bge.n	8007634 <MQTTSerialize_connect+0x40>
 800762c:	f06f 0301 	mvn.w	r3, #1
 8007630:	627b      	str	r3, [r7, #36]	; 0x24
 8007632:	e0c2      	b.n	80077ba <MQTTSerialize_connect+0x1c6>
 8007634:	2300      	movs	r3, #0
 8007636:	763b      	strb	r3, [r7, #24]
 8007638:	7e3b      	ldrb	r3, [r7, #24]
 800763a:	2201      	movs	r2, #1
 800763c:	f362 1307 	bfi	r3, r2, #4, #4
 8007640:	763b      	strb	r3, [r7, #24]
 8007642:	7e3a      	ldrb	r2, [r7, #24]
 8007644:	f107 031c 	add.w	r3, r7, #28
 8007648:	4611      	mov	r1, r2
 800764a:	4618      	mov	r0, r3
 800764c:	f000 fb21 	bl	8007c92 <writeChar>
 8007650:	69fb      	ldr	r3, [r7, #28]
 8007652:	6a39      	ldr	r1, [r7, #32]
 8007654:	4618      	mov	r0, r3
 8007656:	f000 fa21 	bl	8007a9c <MQTTPacket_encode>
 800765a:	4602      	mov	r2, r0
 800765c:	69fb      	ldr	r3, [r7, #28]
 800765e:	4413      	add	r3, r2
 8007660:	61fb      	str	r3, [r7, #28]
 8007662:	687b      	ldr	r3, [r7, #4]
 8007664:	7a1b      	ldrb	r3, [r3, #8]
 8007666:	2b04      	cmp	r3, #4
 8007668:	d10c      	bne.n	8007684 <MQTTSerialize_connect+0x90>
 800766a:	f107 031c 	add.w	r3, r7, #28
 800766e:	4955      	ldr	r1, [pc, #340]	; (80077c4 <MQTTSerialize_connect+0x1d0>)
 8007670:	4618      	mov	r0, r3
 8007672:	f000 fb4c 	bl	8007d0e <writeCString>
 8007676:	f107 031c 	add.w	r3, r7, #28
 800767a:	2104      	movs	r1, #4
 800767c:	4618      	mov	r0, r3
 800767e:	f000 fb08 	bl	8007c92 <writeChar>
 8007682:	e00b      	b.n	800769c <MQTTSerialize_connect+0xa8>
 8007684:	f107 031c 	add.w	r3, r7, #28
 8007688:	494f      	ldr	r1, [pc, #316]	; (80077c8 <MQTTSerialize_connect+0x1d4>)
 800768a:	4618      	mov	r0, r3
 800768c:	f000 fb3f 	bl	8007d0e <writeCString>
 8007690:	f107 031c 	add.w	r3, r7, #28
 8007694:	2103      	movs	r1, #3
 8007696:	4618      	mov	r0, r3
 8007698:	f000 fafb 	bl	8007c92 <writeChar>
 800769c:	2300      	movs	r3, #0
 800769e:	753b      	strb	r3, [r7, #20]
 80076a0:	687b      	ldr	r3, [r7, #4]
 80076a2:	7e9b      	ldrb	r3, [r3, #26]
 80076a4:	f003 0301 	and.w	r3, r3, #1
 80076a8:	b2da      	uxtb	r2, r3
 80076aa:	7d3b      	ldrb	r3, [r7, #20]
 80076ac:	f362 0341 	bfi	r3, r2, #1, #1
 80076b0:	753b      	strb	r3, [r7, #20]
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	7edb      	ldrb	r3, [r3, #27]
 80076b6:	2b00      	cmp	r3, #0
 80076b8:	bf14      	ite	ne
 80076ba:	2301      	movne	r3, #1
 80076bc:	2300      	moveq	r3, #0
 80076be:	b2da      	uxtb	r2, r3
 80076c0:	7d3b      	ldrb	r3, [r7, #20]
 80076c2:	f362 0382 	bfi	r3, r2, #2, #1
 80076c6:	753b      	strb	r3, [r7, #20]
 80076c8:	7d3b      	ldrb	r3, [r7, #20]
 80076ca:	f003 0304 	and.w	r3, r3, #4
 80076ce:	b2db      	uxtb	r3, r3
 80076d0:	2b00      	cmp	r3, #0
 80076d2:	d013      	beq.n	80076fc <MQTTSerialize_connect+0x108>
 80076d4:	687b      	ldr	r3, [r7, #4]
 80076d6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80076da:	f003 0303 	and.w	r3, r3, #3
 80076de:	b2da      	uxtb	r2, r3
 80076e0:	7d3b      	ldrb	r3, [r7, #20]
 80076e2:	f362 03c4 	bfi	r3, r2, #3, #2
 80076e6:	753b      	strb	r3, [r7, #20]
 80076e8:	687b      	ldr	r3, [r7, #4]
 80076ea:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80076ee:	f003 0301 	and.w	r3, r3, #1
 80076f2:	b2da      	uxtb	r2, r3
 80076f4:	7d3b      	ldrb	r3, [r7, #20]
 80076f6:	f362 1345 	bfi	r3, r2, #5, #1
 80076fa:	753b      	strb	r3, [r7, #20]
 80076fc:	687b      	ldr	r3, [r7, #4]
 80076fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007700:	2b00      	cmp	r3, #0
 8007702:	d103      	bne.n	800770c <MQTTSerialize_connect+0x118>
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007708:	2b00      	cmp	r3, #0
 800770a:	d003      	beq.n	8007714 <MQTTSerialize_connect+0x120>
 800770c:	7d3b      	ldrb	r3, [r7, #20]
 800770e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007712:	753b      	strb	r3, [r7, #20]
 8007714:	687b      	ldr	r3, [r7, #4]
 8007716:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007718:	2b00      	cmp	r3, #0
 800771a:	d103      	bne.n	8007724 <MQTTSerialize_connect+0x130>
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007720:	2b00      	cmp	r3, #0
 8007722:	d003      	beq.n	800772c <MQTTSerialize_connect+0x138>
 8007724:	7d3b      	ldrb	r3, [r7, #20]
 8007726:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800772a:	753b      	strb	r3, [r7, #20]
 800772c:	7d3a      	ldrb	r2, [r7, #20]
 800772e:	f107 031c 	add.w	r3, r7, #28
 8007732:	4611      	mov	r1, r2
 8007734:	4618      	mov	r0, r3
 8007736:	f000 faac 	bl	8007c92 <writeChar>
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	8b1b      	ldrh	r3, [r3, #24]
 800773e:	461a      	mov	r2, r3
 8007740:	f107 031c 	add.w	r3, r7, #28
 8007744:	4611      	mov	r1, r2
 8007746:	4618      	mov	r0, r3
 8007748:	f000 fab8 	bl	8007cbc <writeInt>
 800774c:	687b      	ldr	r3, [r7, #4]
 800774e:	f107 001c 	add.w	r0, r7, #28
 8007752:	330c      	adds	r3, #12
 8007754:	cb0e      	ldmia	r3, {r1, r2, r3}
 8007756:	f000 faf9 	bl	8007d4c <writeMQTTString>
 800775a:	687b      	ldr	r3, [r7, #4]
 800775c:	7edb      	ldrb	r3, [r3, #27]
 800775e:	2b00      	cmp	r3, #0
 8007760:	d00d      	beq.n	800777e <MQTTSerialize_connect+0x18a>
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	f107 001c 	add.w	r0, r7, #28
 8007768:	3324      	adds	r3, #36	; 0x24
 800776a:	cb0e      	ldmia	r3, {r1, r2, r3}
 800776c:	f000 faee 	bl	8007d4c <writeMQTTString>
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	f107 001c 	add.w	r0, r7, #28
 8007776:	3330      	adds	r3, #48	; 0x30
 8007778:	cb0e      	ldmia	r3, {r1, r2, r3}
 800777a:	f000 fae7 	bl	8007d4c <writeMQTTString>
 800777e:	7d3b      	ldrb	r3, [r7, #20]
 8007780:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007784:	b2db      	uxtb	r3, r3
 8007786:	2b00      	cmp	r3, #0
 8007788:	d006      	beq.n	8007798 <MQTTSerialize_connect+0x1a4>
 800778a:	687b      	ldr	r3, [r7, #4]
 800778c:	f107 001c 	add.w	r0, r7, #28
 8007790:	3340      	adds	r3, #64	; 0x40
 8007792:	cb0e      	ldmia	r3, {r1, r2, r3}
 8007794:	f000 fada 	bl	8007d4c <writeMQTTString>
 8007798:	7d3b      	ldrb	r3, [r7, #20]
 800779a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800779e:	b2db      	uxtb	r3, r3
 80077a0:	2b00      	cmp	r3, #0
 80077a2:	d006      	beq.n	80077b2 <MQTTSerialize_connect+0x1be>
 80077a4:	687b      	ldr	r3, [r7, #4]
 80077a6:	f107 001c 	add.w	r0, r7, #28
 80077aa:	334c      	adds	r3, #76	; 0x4c
 80077ac:	cb0e      	ldmia	r3, {r1, r2, r3}
 80077ae:	f000 facd 	bl	8007d4c <writeMQTTString>
 80077b2:	69fa      	ldr	r2, [r7, #28]
 80077b4:	68fb      	ldr	r3, [r7, #12]
 80077b6:	1ad3      	subs	r3, r2, r3
 80077b8:	627b      	str	r3, [r7, #36]	; 0x24
 80077ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80077bc:	4618      	mov	r0, r3
 80077be:	3728      	adds	r7, #40	; 0x28
 80077c0:	46bd      	mov	sp, r7
 80077c2:	bd80      	pop	{r7, pc}
 80077c4:	08016178 	.word	0x08016178
 80077c8:	08016180 	.word	0x08016180

080077cc <MQTTDeserialize_connack>:
 80077cc:	b580      	push	{r7, lr}
 80077ce:	b08a      	sub	sp, #40	; 0x28
 80077d0:	af00      	add	r7, sp, #0
 80077d2:	60f8      	str	r0, [r7, #12]
 80077d4:	60b9      	str	r1, [r7, #8]
 80077d6:	607a      	str	r2, [r7, #4]
 80077d8:	603b      	str	r3, [r7, #0]
 80077da:	2300      	movs	r3, #0
 80077dc:	61fb      	str	r3, [r7, #28]
 80077de:	687b      	ldr	r3, [r7, #4]
 80077e0:	61bb      	str	r3, [r7, #24]
 80077e2:	2300      	movs	r3, #0
 80077e4:	623b      	str	r3, [r7, #32]
 80077e6:	2300      	movs	r3, #0
 80077e8:	627b      	str	r3, [r7, #36]	; 0x24
 80077ea:	2300      	movs	r3, #0
 80077ec:	613b      	str	r3, [r7, #16]
 80077ee:	f107 0318 	add.w	r3, r7, #24
 80077f2:	4618      	mov	r0, r3
 80077f4:	f000 fa39 	bl	8007c6a <readChar>
 80077f8:	4603      	mov	r3, r0
 80077fa:	773b      	strb	r3, [r7, #28]
 80077fc:	7f3b      	ldrb	r3, [r7, #28]
 80077fe:	f023 030f 	bic.w	r3, r3, #15
 8007802:	b2db      	uxtb	r3, r3
 8007804:	2b20      	cmp	r3, #32
 8007806:	d12e      	bne.n	8007866 <MQTTDeserialize_connack+0x9a>
 8007808:	69bb      	ldr	r3, [r7, #24]
 800780a:	f107 0214 	add.w	r2, r7, #20
 800780e:	4611      	mov	r1, r2
 8007810:	4618      	mov	r0, r3
 8007812:	f000 f9f9 	bl	8007c08 <MQTTPacket_decodeBuf>
 8007816:	6278      	str	r0, [r7, #36]	; 0x24
 8007818:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800781a:	69bb      	ldr	r3, [r7, #24]
 800781c:	4413      	add	r3, r2
 800781e:	61bb      	str	r3, [r7, #24]
 8007820:	69bb      	ldr	r3, [r7, #24]
 8007822:	697a      	ldr	r2, [r7, #20]
 8007824:	4413      	add	r3, r2
 8007826:	623b      	str	r3, [r7, #32]
 8007828:	69bb      	ldr	r3, [r7, #24]
 800782a:	6a3a      	ldr	r2, [r7, #32]
 800782c:	1ad3      	subs	r3, r2, r3
 800782e:	2b01      	cmp	r3, #1
 8007830:	dd1b      	ble.n	800786a <MQTTDeserialize_connack+0x9e>
 8007832:	f107 0318 	add.w	r3, r7, #24
 8007836:	4618      	mov	r0, r3
 8007838:	f000 fa17 	bl	8007c6a <readChar>
 800783c:	4603      	mov	r3, r0
 800783e:	743b      	strb	r3, [r7, #16]
 8007840:	7c3b      	ldrb	r3, [r7, #16]
 8007842:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8007846:	b2db      	uxtb	r3, r3
 8007848:	461a      	mov	r2, r3
 800784a:	68fb      	ldr	r3, [r7, #12]
 800784c:	701a      	strb	r2, [r3, #0]
 800784e:	f107 0318 	add.w	r3, r7, #24
 8007852:	4618      	mov	r0, r3
 8007854:	f000 fa09 	bl	8007c6a <readChar>
 8007858:	4603      	mov	r3, r0
 800785a:	461a      	mov	r2, r3
 800785c:	68bb      	ldr	r3, [r7, #8]
 800785e:	701a      	strb	r2, [r3, #0]
 8007860:	2301      	movs	r3, #1
 8007862:	627b      	str	r3, [r7, #36]	; 0x24
 8007864:	e002      	b.n	800786c <MQTTDeserialize_connack+0xa0>
 8007866:	bf00      	nop
 8007868:	e000      	b.n	800786c <MQTTDeserialize_connack+0xa0>
 800786a:	bf00      	nop
 800786c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800786e:	4618      	mov	r0, r3
 8007870:	3728      	adds	r7, #40	; 0x28
 8007872:	46bd      	mov	sp, r7
 8007874:	bd80      	pop	{r7, pc}

08007876 <MQTTSerialize_zero>:
 8007876:	b580      	push	{r7, lr}
 8007878:	b088      	sub	sp, #32
 800787a:	af00      	add	r7, sp, #0
 800787c:	60f8      	str	r0, [r7, #12]
 800787e:	60b9      	str	r1, [r7, #8]
 8007880:	4613      	mov	r3, r2
 8007882:	71fb      	strb	r3, [r7, #7]
 8007884:	2300      	movs	r3, #0
 8007886:	61bb      	str	r3, [r7, #24]
 8007888:	f04f 33ff 	mov.w	r3, #4294967295
 800788c:	61fb      	str	r3, [r7, #28]
 800788e:	68fb      	ldr	r3, [r7, #12]
 8007890:	617b      	str	r3, [r7, #20]
 8007892:	68bb      	ldr	r3, [r7, #8]
 8007894:	2b01      	cmp	r3, #1
 8007896:	dc03      	bgt.n	80078a0 <MQTTSerialize_zero+0x2a>
 8007898:	f06f 0301 	mvn.w	r3, #1
 800789c:	61fb      	str	r3, [r7, #28]
 800789e:	e01d      	b.n	80078dc <MQTTSerialize_zero+0x66>
 80078a0:	2300      	movs	r3, #0
 80078a2:	763b      	strb	r3, [r7, #24]
 80078a4:	79fb      	ldrb	r3, [r7, #7]
 80078a6:	f003 030f 	and.w	r3, r3, #15
 80078aa:	b2da      	uxtb	r2, r3
 80078ac:	7e3b      	ldrb	r3, [r7, #24]
 80078ae:	f362 1307 	bfi	r3, r2, #4, #4
 80078b2:	763b      	strb	r3, [r7, #24]
 80078b4:	7e3a      	ldrb	r2, [r7, #24]
 80078b6:	f107 0314 	add.w	r3, r7, #20
 80078ba:	4611      	mov	r1, r2
 80078bc:	4618      	mov	r0, r3
 80078be:	f000 f9e8 	bl	8007c92 <writeChar>
 80078c2:	697b      	ldr	r3, [r7, #20]
 80078c4:	2100      	movs	r1, #0
 80078c6:	4618      	mov	r0, r3
 80078c8:	f000 f8e8 	bl	8007a9c <MQTTPacket_encode>
 80078cc:	4602      	mov	r2, r0
 80078ce:	697b      	ldr	r3, [r7, #20]
 80078d0:	4413      	add	r3, r2
 80078d2:	617b      	str	r3, [r7, #20]
 80078d4:	697a      	ldr	r2, [r7, #20]
 80078d6:	68fb      	ldr	r3, [r7, #12]
 80078d8:	1ad3      	subs	r3, r2, r3
 80078da:	61fb      	str	r3, [r7, #28]
 80078dc:	69fb      	ldr	r3, [r7, #28]
 80078de:	4618      	mov	r0, r3
 80078e0:	3720      	adds	r7, #32
 80078e2:	46bd      	mov	sp, r7
 80078e4:	bd80      	pop	{r7, pc}

080078e6 <MQTTSerialize_disconnect>:
 80078e6:	b580      	push	{r7, lr}
 80078e8:	b082      	sub	sp, #8
 80078ea:	af00      	add	r7, sp, #0
 80078ec:	6078      	str	r0, [r7, #4]
 80078ee:	6039      	str	r1, [r7, #0]
 80078f0:	220e      	movs	r2, #14
 80078f2:	6839      	ldr	r1, [r7, #0]
 80078f4:	6878      	ldr	r0, [r7, #4]
 80078f6:	f7ff ffbe 	bl	8007876 <MQTTSerialize_zero>
 80078fa:	4603      	mov	r3, r0
 80078fc:	4618      	mov	r0, r3
 80078fe:	3708      	adds	r7, #8
 8007900:	46bd      	mov	sp, r7
 8007902:	bd80      	pop	{r7, pc}

08007904 <MQTTSerialize_pingreq>:
 8007904:	b580      	push	{r7, lr}
 8007906:	b082      	sub	sp, #8
 8007908:	af00      	add	r7, sp, #0
 800790a:	6078      	str	r0, [r7, #4]
 800790c:	6039      	str	r1, [r7, #0]
 800790e:	220c      	movs	r2, #12
 8007910:	6839      	ldr	r1, [r7, #0]
 8007912:	6878      	ldr	r0, [r7, #4]
 8007914:	f7ff ffaf 	bl	8007876 <MQTTSerialize_zero>
 8007918:	4603      	mov	r3, r0
 800791a:	4618      	mov	r0, r3
 800791c:	3708      	adds	r7, #8
 800791e:	46bd      	mov	sp, r7
 8007920:	bd80      	pop	{r7, pc}

08007922 <MQTTDeserialize_publish>:
 8007922:	b580      	push	{r7, lr}
 8007924:	b08a      	sub	sp, #40	; 0x28
 8007926:	af00      	add	r7, sp, #0
 8007928:	60f8      	str	r0, [r7, #12]
 800792a:	60b9      	str	r1, [r7, #8]
 800792c:	607a      	str	r2, [r7, #4]
 800792e:	603b      	str	r3, [r7, #0]
 8007930:	2300      	movs	r3, #0
 8007932:	61fb      	str	r3, [r7, #28]
 8007934:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007936:	61bb      	str	r3, [r7, #24]
 8007938:	2300      	movs	r3, #0
 800793a:	623b      	str	r3, [r7, #32]
 800793c:	2300      	movs	r3, #0
 800793e:	627b      	str	r3, [r7, #36]	; 0x24
 8007940:	2300      	movs	r3, #0
 8007942:	617b      	str	r3, [r7, #20]
 8007944:	f107 0318 	add.w	r3, r7, #24
 8007948:	4618      	mov	r0, r3
 800794a:	f000 f98e 	bl	8007c6a <readChar>
 800794e:	4603      	mov	r3, r0
 8007950:	773b      	strb	r3, [r7, #28]
 8007952:	7f3b      	ldrb	r3, [r7, #28]
 8007954:	f023 030f 	bic.w	r3, r3, #15
 8007958:	b2db      	uxtb	r3, r3
 800795a:	2b30      	cmp	r3, #48	; 0x30
 800795c:	d14b      	bne.n	80079f6 <MQTTDeserialize_publish+0xd4>
 800795e:	7f3b      	ldrb	r3, [r7, #28]
 8007960:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8007964:	b2db      	uxtb	r3, r3
 8007966:	461a      	mov	r2, r3
 8007968:	68fb      	ldr	r3, [r7, #12]
 800796a:	701a      	strb	r2, [r3, #0]
 800796c:	7f3b      	ldrb	r3, [r7, #28]
 800796e:	f3c3 0341 	ubfx	r3, r3, #1, #2
 8007972:	b2db      	uxtb	r3, r3
 8007974:	461a      	mov	r2, r3
 8007976:	68bb      	ldr	r3, [r7, #8]
 8007978:	601a      	str	r2, [r3, #0]
 800797a:	7f3b      	ldrb	r3, [r7, #28]
 800797c:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8007980:	b2db      	uxtb	r3, r3
 8007982:	461a      	mov	r2, r3
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	701a      	strb	r2, [r3, #0]
 8007988:	69bb      	ldr	r3, [r7, #24]
 800798a:	f107 0214 	add.w	r2, r7, #20
 800798e:	4611      	mov	r1, r2
 8007990:	4618      	mov	r0, r3
 8007992:	f000 f939 	bl	8007c08 <MQTTPacket_decodeBuf>
 8007996:	6278      	str	r0, [r7, #36]	; 0x24
 8007998:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800799a:	69bb      	ldr	r3, [r7, #24]
 800799c:	4413      	add	r3, r2
 800799e:	61bb      	str	r3, [r7, #24]
 80079a0:	69bb      	ldr	r3, [r7, #24]
 80079a2:	697a      	ldr	r2, [r7, #20]
 80079a4:	4413      	add	r3, r2
 80079a6:	623b      	str	r3, [r7, #32]
 80079a8:	f107 0318 	add.w	r3, r7, #24
 80079ac:	6a3a      	ldr	r2, [r7, #32]
 80079ae:	4619      	mov	r1, r3
 80079b0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80079b2:	f000 f9f9 	bl	8007da8 <readMQTTLenString>
 80079b6:	4603      	mov	r3, r0
 80079b8:	2b00      	cmp	r3, #0
 80079ba:	d01e      	beq.n	80079fa <MQTTDeserialize_publish+0xd8>
 80079bc:	69bb      	ldr	r3, [r7, #24]
 80079be:	6a3a      	ldr	r2, [r7, #32]
 80079c0:	1ad3      	subs	r3, r2, r3
 80079c2:	2b00      	cmp	r3, #0
 80079c4:	db19      	blt.n	80079fa <MQTTDeserialize_publish+0xd8>
 80079c6:	68bb      	ldr	r3, [r7, #8]
 80079c8:	681b      	ldr	r3, [r3, #0]
 80079ca:	2b00      	cmp	r3, #0
 80079cc:	dd08      	ble.n	80079e0 <MQTTDeserialize_publish+0xbe>
 80079ce:	f107 0318 	add.w	r3, r7, #24
 80079d2:	4618      	mov	r0, r3
 80079d4:	f000 f92e 	bl	8007c34 <readInt>
 80079d8:	4603      	mov	r3, r0
 80079da:	b29a      	uxth	r2, r3
 80079dc:	683b      	ldr	r3, [r7, #0]
 80079de:	801a      	strh	r2, [r3, #0]
 80079e0:	69bb      	ldr	r3, [r7, #24]
 80079e2:	6a3a      	ldr	r2, [r7, #32]
 80079e4:	1ad2      	subs	r2, r2, r3
 80079e6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80079e8:	601a      	str	r2, [r3, #0]
 80079ea:	69ba      	ldr	r2, [r7, #24]
 80079ec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80079ee:	601a      	str	r2, [r3, #0]
 80079f0:	2301      	movs	r3, #1
 80079f2:	627b      	str	r3, [r7, #36]	; 0x24
 80079f4:	e002      	b.n	80079fc <MQTTDeserialize_publish+0xda>
 80079f6:	bf00      	nop
 80079f8:	e000      	b.n	80079fc <MQTTDeserialize_publish+0xda>
 80079fa:	bf00      	nop
 80079fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80079fe:	4618      	mov	r0, r3
 8007a00:	3728      	adds	r7, #40	; 0x28
 8007a02:	46bd      	mov	sp, r7
 8007a04:	bd80      	pop	{r7, pc}

08007a06 <MQTTDeserialize_ack>:
 8007a06:	b580      	push	{r7, lr}
 8007a08:	b08a      	sub	sp, #40	; 0x28
 8007a0a:	af00      	add	r7, sp, #0
 8007a0c:	60f8      	str	r0, [r7, #12]
 8007a0e:	60b9      	str	r1, [r7, #8]
 8007a10:	607a      	str	r2, [r7, #4]
 8007a12:	603b      	str	r3, [r7, #0]
 8007a14:	2300      	movs	r3, #0
 8007a16:	61fb      	str	r3, [r7, #28]
 8007a18:	683b      	ldr	r3, [r7, #0]
 8007a1a:	61bb      	str	r3, [r7, #24]
 8007a1c:	2300      	movs	r3, #0
 8007a1e:	623b      	str	r3, [r7, #32]
 8007a20:	2300      	movs	r3, #0
 8007a22:	627b      	str	r3, [r7, #36]	; 0x24
 8007a24:	f107 0318 	add.w	r3, r7, #24
 8007a28:	4618      	mov	r0, r3
 8007a2a:	f000 f91e 	bl	8007c6a <readChar>
 8007a2e:	4603      	mov	r3, r0
 8007a30:	773b      	strb	r3, [r7, #28]
 8007a32:	7f3b      	ldrb	r3, [r7, #28]
 8007a34:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8007a38:	b2db      	uxtb	r3, r3
 8007a3a:	461a      	mov	r2, r3
 8007a3c:	68bb      	ldr	r3, [r7, #8]
 8007a3e:	701a      	strb	r2, [r3, #0]
 8007a40:	7f3b      	ldrb	r3, [r7, #28]
 8007a42:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007a46:	b2db      	uxtb	r3, r3
 8007a48:	461a      	mov	r2, r3
 8007a4a:	68fb      	ldr	r3, [r7, #12]
 8007a4c:	701a      	strb	r2, [r3, #0]
 8007a4e:	69bb      	ldr	r3, [r7, #24]
 8007a50:	f107 0214 	add.w	r2, r7, #20
 8007a54:	4611      	mov	r1, r2
 8007a56:	4618      	mov	r0, r3
 8007a58:	f000 f8d6 	bl	8007c08 <MQTTPacket_decodeBuf>
 8007a5c:	6278      	str	r0, [r7, #36]	; 0x24
 8007a5e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007a60:	69bb      	ldr	r3, [r7, #24]
 8007a62:	4413      	add	r3, r2
 8007a64:	61bb      	str	r3, [r7, #24]
 8007a66:	69bb      	ldr	r3, [r7, #24]
 8007a68:	697a      	ldr	r2, [r7, #20]
 8007a6a:	4413      	add	r3, r2
 8007a6c:	623b      	str	r3, [r7, #32]
 8007a6e:	69bb      	ldr	r3, [r7, #24]
 8007a70:	6a3a      	ldr	r2, [r7, #32]
 8007a72:	1ad3      	subs	r3, r2, r3
 8007a74:	2b01      	cmp	r3, #1
 8007a76:	dd0b      	ble.n	8007a90 <MQTTDeserialize_ack+0x8a>
 8007a78:	f107 0318 	add.w	r3, r7, #24
 8007a7c:	4618      	mov	r0, r3
 8007a7e:	f000 f8d9 	bl	8007c34 <readInt>
 8007a82:	4603      	mov	r3, r0
 8007a84:	b29a      	uxth	r2, r3
 8007a86:	687b      	ldr	r3, [r7, #4]
 8007a88:	801a      	strh	r2, [r3, #0]
 8007a8a:	2301      	movs	r3, #1
 8007a8c:	627b      	str	r3, [r7, #36]	; 0x24
 8007a8e:	e000      	b.n	8007a92 <MQTTDeserialize_ack+0x8c>
 8007a90:	bf00      	nop
 8007a92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007a94:	4618      	mov	r0, r3
 8007a96:	3728      	adds	r7, #40	; 0x28
 8007a98:	46bd      	mov	sp, r7
 8007a9a:	bd80      	pop	{r7, pc}

08007a9c <MQTTPacket_encode>:
 8007a9c:	b480      	push	{r7}
 8007a9e:	b085      	sub	sp, #20
 8007aa0:	af00      	add	r7, sp, #0
 8007aa2:	6078      	str	r0, [r7, #4]
 8007aa4:	6039      	str	r1, [r7, #0]
 8007aa6:	2300      	movs	r3, #0
 8007aa8:	60fb      	str	r3, [r7, #12]
 8007aaa:	683b      	ldr	r3, [r7, #0]
 8007aac:	425a      	negs	r2, r3
 8007aae:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007ab2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8007ab6:	bf58      	it	pl
 8007ab8:	4253      	negpl	r3, r2
 8007aba:	72fb      	strb	r3, [r7, #11]
 8007abc:	683b      	ldr	r3, [r7, #0]
 8007abe:	2b00      	cmp	r3, #0
 8007ac0:	da00      	bge.n	8007ac4 <MQTTPacket_encode+0x28>
 8007ac2:	337f      	adds	r3, #127	; 0x7f
 8007ac4:	11db      	asrs	r3, r3, #7
 8007ac6:	603b      	str	r3, [r7, #0]
 8007ac8:	683b      	ldr	r3, [r7, #0]
 8007aca:	2b00      	cmp	r3, #0
 8007acc:	dd03      	ble.n	8007ad6 <MQTTPacket_encode+0x3a>
 8007ace:	7afb      	ldrb	r3, [r7, #11]
 8007ad0:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8007ad4:	72fb      	strb	r3, [r7, #11]
 8007ad6:	68fb      	ldr	r3, [r7, #12]
 8007ad8:	1c5a      	adds	r2, r3, #1
 8007ada:	60fa      	str	r2, [r7, #12]
 8007adc:	461a      	mov	r2, r3
 8007ade:	687b      	ldr	r3, [r7, #4]
 8007ae0:	4413      	add	r3, r2
 8007ae2:	7afa      	ldrb	r2, [r7, #11]
 8007ae4:	701a      	strb	r2, [r3, #0]
 8007ae6:	683b      	ldr	r3, [r7, #0]
 8007ae8:	2b00      	cmp	r3, #0
 8007aea:	dcde      	bgt.n	8007aaa <MQTTPacket_encode+0xe>
 8007aec:	68fb      	ldr	r3, [r7, #12]
 8007aee:	4618      	mov	r0, r3
 8007af0:	3714      	adds	r7, #20
 8007af2:	46bd      	mov	sp, r7
 8007af4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007af8:	4770      	bx	lr

08007afa <MQTTPacket_decode>:
 8007afa:	b580      	push	{r7, lr}
 8007afc:	b086      	sub	sp, #24
 8007afe:	af00      	add	r7, sp, #0
 8007b00:	6078      	str	r0, [r7, #4]
 8007b02:	6039      	str	r1, [r7, #0]
 8007b04:	2301      	movs	r3, #1
 8007b06:	617b      	str	r3, [r7, #20]
 8007b08:	2300      	movs	r3, #0
 8007b0a:	613b      	str	r3, [r7, #16]
 8007b0c:	683b      	ldr	r3, [r7, #0]
 8007b0e:	2200      	movs	r2, #0
 8007b10:	601a      	str	r2, [r3, #0]
 8007b12:	f04f 33ff 	mov.w	r3, #4294967295
 8007b16:	60fb      	str	r3, [r7, #12]
 8007b18:	693b      	ldr	r3, [r7, #16]
 8007b1a:	3301      	adds	r3, #1
 8007b1c:	613b      	str	r3, [r7, #16]
 8007b1e:	693b      	ldr	r3, [r7, #16]
 8007b20:	2b04      	cmp	r3, #4
 8007b22:	dd03      	ble.n	8007b2c <MQTTPacket_decode+0x32>
 8007b24:	f04f 33ff 	mov.w	r3, #4294967295
 8007b28:	60fb      	str	r3, [r7, #12]
 8007b2a:	e01d      	b.n	8007b68 <MQTTPacket_decode+0x6e>
 8007b2c:	f107 020b 	add.w	r2, r7, #11
 8007b30:	687b      	ldr	r3, [r7, #4]
 8007b32:	2101      	movs	r1, #1
 8007b34:	4610      	mov	r0, r2
 8007b36:	4798      	blx	r3
 8007b38:	60f8      	str	r0, [r7, #12]
 8007b3a:	68fb      	ldr	r3, [r7, #12]
 8007b3c:	2b01      	cmp	r3, #1
 8007b3e:	d112      	bne.n	8007b66 <MQTTPacket_decode+0x6c>
 8007b40:	683b      	ldr	r3, [r7, #0]
 8007b42:	681a      	ldr	r2, [r3, #0]
 8007b44:	7afb      	ldrb	r3, [r7, #11]
 8007b46:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007b4a:	6979      	ldr	r1, [r7, #20]
 8007b4c:	fb01 f303 	mul.w	r3, r1, r3
 8007b50:	441a      	add	r2, r3
 8007b52:	683b      	ldr	r3, [r7, #0]
 8007b54:	601a      	str	r2, [r3, #0]
 8007b56:	697b      	ldr	r3, [r7, #20]
 8007b58:	01db      	lsls	r3, r3, #7
 8007b5a:	617b      	str	r3, [r7, #20]
 8007b5c:	7afb      	ldrb	r3, [r7, #11]
 8007b5e:	b25b      	sxtb	r3, r3
 8007b60:	2b00      	cmp	r3, #0
 8007b62:	dbd6      	blt.n	8007b12 <MQTTPacket_decode+0x18>
 8007b64:	e000      	b.n	8007b68 <MQTTPacket_decode+0x6e>
 8007b66:	bf00      	nop
 8007b68:	693b      	ldr	r3, [r7, #16]
 8007b6a:	4618      	mov	r0, r3
 8007b6c:	3718      	adds	r7, #24
 8007b6e:	46bd      	mov	sp, r7
 8007b70:	bd80      	pop	{r7, pc}
	...

08007b74 <MQTTPacket_len>:
 8007b74:	b480      	push	{r7}
 8007b76:	b083      	sub	sp, #12
 8007b78:	af00      	add	r7, sp, #0
 8007b7a:	6078      	str	r0, [r7, #4]
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	3301      	adds	r3, #1
 8007b80:	607b      	str	r3, [r7, #4]
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	2b7f      	cmp	r3, #127	; 0x7f
 8007b86:	dc03      	bgt.n	8007b90 <MQTTPacket_len+0x1c>
 8007b88:	687b      	ldr	r3, [r7, #4]
 8007b8a:	3301      	adds	r3, #1
 8007b8c:	607b      	str	r3, [r7, #4]
 8007b8e:	e012      	b.n	8007bb6 <MQTTPacket_len+0x42>
 8007b90:	687b      	ldr	r3, [r7, #4]
 8007b92:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007b96:	da03      	bge.n	8007ba0 <MQTTPacket_len+0x2c>
 8007b98:	687b      	ldr	r3, [r7, #4]
 8007b9a:	3302      	adds	r3, #2
 8007b9c:	607b      	str	r3, [r7, #4]
 8007b9e:	e00a      	b.n	8007bb6 <MQTTPacket_len+0x42>
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	4a08      	ldr	r2, [pc, #32]	; (8007bc4 <MQTTPacket_len+0x50>)
 8007ba4:	4293      	cmp	r3, r2
 8007ba6:	dc03      	bgt.n	8007bb0 <MQTTPacket_len+0x3c>
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	3303      	adds	r3, #3
 8007bac:	607b      	str	r3, [r7, #4]
 8007bae:	e002      	b.n	8007bb6 <MQTTPacket_len+0x42>
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	3304      	adds	r3, #4
 8007bb4:	607b      	str	r3, [r7, #4]
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	4618      	mov	r0, r3
 8007bba:	370c      	adds	r7, #12
 8007bbc:	46bd      	mov	sp, r7
 8007bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bc2:	4770      	bx	lr
 8007bc4:	001ffffe 	.word	0x001ffffe

08007bc8 <bufchar>:
 8007bc8:	b480      	push	{r7}
 8007bca:	b085      	sub	sp, #20
 8007bcc:	af00      	add	r7, sp, #0
 8007bce:	6078      	str	r0, [r7, #4]
 8007bd0:	6039      	str	r1, [r7, #0]
 8007bd2:	2300      	movs	r3, #0
 8007bd4:	60fb      	str	r3, [r7, #12]
 8007bd6:	e00a      	b.n	8007bee <bufchar+0x26>
 8007bd8:	4b0a      	ldr	r3, [pc, #40]	; (8007c04 <bufchar+0x3c>)
 8007bda:	681b      	ldr	r3, [r3, #0]
 8007bdc:	1c5a      	adds	r2, r3, #1
 8007bde:	4909      	ldr	r1, [pc, #36]	; (8007c04 <bufchar+0x3c>)
 8007be0:	600a      	str	r2, [r1, #0]
 8007be2:	781a      	ldrb	r2, [r3, #0]
 8007be4:	687b      	ldr	r3, [r7, #4]
 8007be6:	701a      	strb	r2, [r3, #0]
 8007be8:	68fb      	ldr	r3, [r7, #12]
 8007bea:	3301      	adds	r3, #1
 8007bec:	60fb      	str	r3, [r7, #12]
 8007bee:	68fa      	ldr	r2, [r7, #12]
 8007bf0:	683b      	ldr	r3, [r7, #0]
 8007bf2:	429a      	cmp	r2, r3
 8007bf4:	dbf0      	blt.n	8007bd8 <bufchar+0x10>
 8007bf6:	683b      	ldr	r3, [r7, #0]
 8007bf8:	4618      	mov	r0, r3
 8007bfa:	3714      	adds	r7, #20
 8007bfc:	46bd      	mov	sp, r7
 8007bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c02:	4770      	bx	lr
 8007c04:	200002b4 	.word	0x200002b4

08007c08 <MQTTPacket_decodeBuf>:
 8007c08:	b580      	push	{r7, lr}
 8007c0a:	b082      	sub	sp, #8
 8007c0c:	af00      	add	r7, sp, #0
 8007c0e:	6078      	str	r0, [r7, #4]
 8007c10:	6039      	str	r1, [r7, #0]
 8007c12:	4a06      	ldr	r2, [pc, #24]	; (8007c2c <MQTTPacket_decodeBuf+0x24>)
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	6013      	str	r3, [r2, #0]
 8007c18:	6839      	ldr	r1, [r7, #0]
 8007c1a:	4805      	ldr	r0, [pc, #20]	; (8007c30 <MQTTPacket_decodeBuf+0x28>)
 8007c1c:	f7ff ff6d 	bl	8007afa <MQTTPacket_decode>
 8007c20:	4603      	mov	r3, r0
 8007c22:	4618      	mov	r0, r3
 8007c24:	3708      	adds	r7, #8
 8007c26:	46bd      	mov	sp, r7
 8007c28:	bd80      	pop	{r7, pc}
 8007c2a:	bf00      	nop
 8007c2c:	200002b4 	.word	0x200002b4
 8007c30:	08007bc9 	.word	0x08007bc9

08007c34 <readInt>:
 8007c34:	b480      	push	{r7}
 8007c36:	b085      	sub	sp, #20
 8007c38:	af00      	add	r7, sp, #0
 8007c3a:	6078      	str	r0, [r7, #4]
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	681b      	ldr	r3, [r3, #0]
 8007c40:	60fb      	str	r3, [r7, #12]
 8007c42:	68fb      	ldr	r3, [r7, #12]
 8007c44:	781b      	ldrb	r3, [r3, #0]
 8007c46:	021b      	lsls	r3, r3, #8
 8007c48:	68fa      	ldr	r2, [r7, #12]
 8007c4a:	3201      	adds	r2, #1
 8007c4c:	7812      	ldrb	r2, [r2, #0]
 8007c4e:	4413      	add	r3, r2
 8007c50:	60bb      	str	r3, [r7, #8]
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	681b      	ldr	r3, [r3, #0]
 8007c56:	1c9a      	adds	r2, r3, #2
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	601a      	str	r2, [r3, #0]
 8007c5c:	68bb      	ldr	r3, [r7, #8]
 8007c5e:	4618      	mov	r0, r3
 8007c60:	3714      	adds	r7, #20
 8007c62:	46bd      	mov	sp, r7
 8007c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c68:	4770      	bx	lr

08007c6a <readChar>:
 8007c6a:	b480      	push	{r7}
 8007c6c:	b085      	sub	sp, #20
 8007c6e:	af00      	add	r7, sp, #0
 8007c70:	6078      	str	r0, [r7, #4]
 8007c72:	687b      	ldr	r3, [r7, #4]
 8007c74:	681b      	ldr	r3, [r3, #0]
 8007c76:	781b      	ldrb	r3, [r3, #0]
 8007c78:	73fb      	strb	r3, [r7, #15]
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	1c5a      	adds	r2, r3, #1
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	601a      	str	r2, [r3, #0]
 8007c84:	7bfb      	ldrb	r3, [r7, #15]
 8007c86:	4618      	mov	r0, r3
 8007c88:	3714      	adds	r7, #20
 8007c8a:	46bd      	mov	sp, r7
 8007c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c90:	4770      	bx	lr

08007c92 <writeChar>:
 8007c92:	b480      	push	{r7}
 8007c94:	b083      	sub	sp, #12
 8007c96:	af00      	add	r7, sp, #0
 8007c98:	6078      	str	r0, [r7, #4]
 8007c9a:	460b      	mov	r3, r1
 8007c9c:	70fb      	strb	r3, [r7, #3]
 8007c9e:	687b      	ldr	r3, [r7, #4]
 8007ca0:	681b      	ldr	r3, [r3, #0]
 8007ca2:	78fa      	ldrb	r2, [r7, #3]
 8007ca4:	701a      	strb	r2, [r3, #0]
 8007ca6:	687b      	ldr	r3, [r7, #4]
 8007ca8:	681b      	ldr	r3, [r3, #0]
 8007caa:	1c5a      	adds	r2, r3, #1
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	601a      	str	r2, [r3, #0]
 8007cb0:	bf00      	nop
 8007cb2:	370c      	adds	r7, #12
 8007cb4:	46bd      	mov	sp, r7
 8007cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cba:	4770      	bx	lr

08007cbc <writeInt>:
 8007cbc:	b480      	push	{r7}
 8007cbe:	b083      	sub	sp, #12
 8007cc0:	af00      	add	r7, sp, #0
 8007cc2:	6078      	str	r0, [r7, #4]
 8007cc4:	6039      	str	r1, [r7, #0]
 8007cc6:	683b      	ldr	r3, [r7, #0]
 8007cc8:	2b00      	cmp	r3, #0
 8007cca:	da00      	bge.n	8007cce <writeInt+0x12>
 8007ccc:	33ff      	adds	r3, #255	; 0xff
 8007cce:	121b      	asrs	r3, r3, #8
 8007cd0:	461a      	mov	r2, r3
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	681b      	ldr	r3, [r3, #0]
 8007cd6:	b2d2      	uxtb	r2, r2
 8007cd8:	701a      	strb	r2, [r3, #0]
 8007cda:	687b      	ldr	r3, [r7, #4]
 8007cdc:	681b      	ldr	r3, [r3, #0]
 8007cde:	1c5a      	adds	r2, r3, #1
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	601a      	str	r2, [r3, #0]
 8007ce4:	683b      	ldr	r3, [r7, #0]
 8007ce6:	425a      	negs	r2, r3
 8007ce8:	b2db      	uxtb	r3, r3
 8007cea:	b2d2      	uxtb	r2, r2
 8007cec:	bf58      	it	pl
 8007cee:	4253      	negpl	r3, r2
 8007cf0:	687a      	ldr	r2, [r7, #4]
 8007cf2:	6812      	ldr	r2, [r2, #0]
 8007cf4:	b2db      	uxtb	r3, r3
 8007cf6:	7013      	strb	r3, [r2, #0]
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	681b      	ldr	r3, [r3, #0]
 8007cfc:	1c5a      	adds	r2, r3, #1
 8007cfe:	687b      	ldr	r3, [r7, #4]
 8007d00:	601a      	str	r2, [r3, #0]
 8007d02:	bf00      	nop
 8007d04:	370c      	adds	r7, #12
 8007d06:	46bd      	mov	sp, r7
 8007d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d0c:	4770      	bx	lr

08007d0e <writeCString>:
 8007d0e:	b580      	push	{r7, lr}
 8007d10:	b084      	sub	sp, #16
 8007d12:	af00      	add	r7, sp, #0
 8007d14:	6078      	str	r0, [r7, #4]
 8007d16:	6039      	str	r1, [r7, #0]
 8007d18:	6838      	ldr	r0, [r7, #0]
 8007d1a:	f7f8 fab9 	bl	8000290 <strlen>
 8007d1e:	4603      	mov	r3, r0
 8007d20:	60fb      	str	r3, [r7, #12]
 8007d22:	68f9      	ldr	r1, [r7, #12]
 8007d24:	6878      	ldr	r0, [r7, #4]
 8007d26:	f7ff ffc9 	bl	8007cbc <writeInt>
 8007d2a:	687b      	ldr	r3, [r7, #4]
 8007d2c:	681b      	ldr	r3, [r3, #0]
 8007d2e:	68fa      	ldr	r2, [r7, #12]
 8007d30:	6839      	ldr	r1, [r7, #0]
 8007d32:	4618      	mov	r0, r3
 8007d34:	f00b f98d 	bl	8013052 <memcpy>
 8007d38:	687b      	ldr	r3, [r7, #4]
 8007d3a:	681a      	ldr	r2, [r3, #0]
 8007d3c:	68fb      	ldr	r3, [r7, #12]
 8007d3e:	441a      	add	r2, r3
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	601a      	str	r2, [r3, #0]
 8007d44:	bf00      	nop
 8007d46:	3710      	adds	r7, #16
 8007d48:	46bd      	mov	sp, r7
 8007d4a:	bd80      	pop	{r7, pc}

08007d4c <writeMQTTString>:
 8007d4c:	b580      	push	{r7, lr}
 8007d4e:	b084      	sub	sp, #16
 8007d50:	af00      	add	r7, sp, #0
 8007d52:	60f8      	str	r0, [r7, #12]
 8007d54:	4638      	mov	r0, r7
 8007d56:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8007d5a:	687b      	ldr	r3, [r7, #4]
 8007d5c:	2b00      	cmp	r3, #0
 8007d5e:	dd12      	ble.n	8007d86 <writeMQTTString+0x3a>
 8007d60:	687b      	ldr	r3, [r7, #4]
 8007d62:	4619      	mov	r1, r3
 8007d64:	68f8      	ldr	r0, [r7, #12]
 8007d66:	f7ff ffa9 	bl	8007cbc <writeInt>
 8007d6a:	68fb      	ldr	r3, [r7, #12]
 8007d6c:	681b      	ldr	r3, [r3, #0]
 8007d6e:	68b9      	ldr	r1, [r7, #8]
 8007d70:	687a      	ldr	r2, [r7, #4]
 8007d72:	4618      	mov	r0, r3
 8007d74:	f00b f96d 	bl	8013052 <memcpy>
 8007d78:	68fb      	ldr	r3, [r7, #12]
 8007d7a:	681b      	ldr	r3, [r3, #0]
 8007d7c:	687a      	ldr	r2, [r7, #4]
 8007d7e:	441a      	add	r2, r3
 8007d80:	68fb      	ldr	r3, [r7, #12]
 8007d82:	601a      	str	r2, [r3, #0]
 8007d84:	e00c      	b.n	8007da0 <writeMQTTString+0x54>
 8007d86:	683b      	ldr	r3, [r7, #0]
 8007d88:	2b00      	cmp	r3, #0
 8007d8a:	d005      	beq.n	8007d98 <writeMQTTString+0x4c>
 8007d8c:	683b      	ldr	r3, [r7, #0]
 8007d8e:	4619      	mov	r1, r3
 8007d90:	68f8      	ldr	r0, [r7, #12]
 8007d92:	f7ff ffbc 	bl	8007d0e <writeCString>
 8007d96:	e003      	b.n	8007da0 <writeMQTTString+0x54>
 8007d98:	2100      	movs	r1, #0
 8007d9a:	68f8      	ldr	r0, [r7, #12]
 8007d9c:	f7ff ff8e 	bl	8007cbc <writeInt>
 8007da0:	bf00      	nop
 8007da2:	3710      	adds	r7, #16
 8007da4:	46bd      	mov	sp, r7
 8007da6:	bd80      	pop	{r7, pc}

08007da8 <readMQTTLenString>:
 8007da8:	b580      	push	{r7, lr}
 8007daa:	b086      	sub	sp, #24
 8007dac:	af00      	add	r7, sp, #0
 8007dae:	60f8      	str	r0, [r7, #12]
 8007db0:	60b9      	str	r1, [r7, #8]
 8007db2:	607a      	str	r2, [r7, #4]
 8007db4:	2300      	movs	r3, #0
 8007db6:	617b      	str	r3, [r7, #20]
 8007db8:	68bb      	ldr	r3, [r7, #8]
 8007dba:	681b      	ldr	r3, [r3, #0]
 8007dbc:	687a      	ldr	r2, [r7, #4]
 8007dbe:	1ad3      	subs	r3, r2, r3
 8007dc0:	2b01      	cmp	r3, #1
 8007dc2:	dd1a      	ble.n	8007dfa <readMQTTLenString+0x52>
 8007dc4:	68b8      	ldr	r0, [r7, #8]
 8007dc6:	f7ff ff35 	bl	8007c34 <readInt>
 8007dca:	4602      	mov	r2, r0
 8007dcc:	68fb      	ldr	r3, [r7, #12]
 8007dce:	605a      	str	r2, [r3, #4]
 8007dd0:	68bb      	ldr	r3, [r7, #8]
 8007dd2:	681b      	ldr	r3, [r3, #0]
 8007dd4:	68fa      	ldr	r2, [r7, #12]
 8007dd6:	6852      	ldr	r2, [r2, #4]
 8007dd8:	4413      	add	r3, r2
 8007dda:	687a      	ldr	r2, [r7, #4]
 8007ddc:	429a      	cmp	r2, r3
 8007dde:	d30c      	bcc.n	8007dfa <readMQTTLenString+0x52>
 8007de0:	68bb      	ldr	r3, [r7, #8]
 8007de2:	681a      	ldr	r2, [r3, #0]
 8007de4:	68fb      	ldr	r3, [r7, #12]
 8007de6:	609a      	str	r2, [r3, #8]
 8007de8:	68bb      	ldr	r3, [r7, #8]
 8007dea:	681b      	ldr	r3, [r3, #0]
 8007dec:	68fa      	ldr	r2, [r7, #12]
 8007dee:	6852      	ldr	r2, [r2, #4]
 8007df0:	441a      	add	r2, r3
 8007df2:	68bb      	ldr	r3, [r7, #8]
 8007df4:	601a      	str	r2, [r3, #0]
 8007df6:	2301      	movs	r3, #1
 8007df8:	617b      	str	r3, [r7, #20]
 8007dfa:	68fb      	ldr	r3, [r7, #12]
 8007dfc:	2200      	movs	r2, #0
 8007dfe:	601a      	str	r2, [r3, #0]
 8007e00:	697b      	ldr	r3, [r7, #20]
 8007e02:	4618      	mov	r0, r3
 8007e04:	3718      	adds	r7, #24
 8007e06:	46bd      	mov	sp, r7
 8007e08:	bd80      	pop	{r7, pc}

08007e0a <MQTTstrlen>:
 8007e0a:	b580      	push	{r7, lr}
 8007e0c:	b086      	sub	sp, #24
 8007e0e:	af00      	add	r7, sp, #0
 8007e10:	1d3b      	adds	r3, r7, #4
 8007e12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007e16:	2300      	movs	r3, #0
 8007e18:	617b      	str	r3, [r7, #20]
 8007e1a:	687b      	ldr	r3, [r7, #4]
 8007e1c:	2b00      	cmp	r3, #0
 8007e1e:	d006      	beq.n	8007e2e <MQTTstrlen+0x24>
 8007e20:	687b      	ldr	r3, [r7, #4]
 8007e22:	4618      	mov	r0, r3
 8007e24:	f7f8 fa34 	bl	8000290 <strlen>
 8007e28:	4603      	mov	r3, r0
 8007e2a:	617b      	str	r3, [r7, #20]
 8007e2c:	e001      	b.n	8007e32 <MQTTstrlen+0x28>
 8007e2e:	68bb      	ldr	r3, [r7, #8]
 8007e30:	617b      	str	r3, [r7, #20]
 8007e32:	697b      	ldr	r3, [r7, #20]
 8007e34:	4618      	mov	r0, r3
 8007e36:	3718      	adds	r7, #24
 8007e38:	46bd      	mov	sp, r7
 8007e3a:	bd80      	pop	{r7, pc}

08007e3c <MQTTPacket_equals>:
 8007e3c:	b580      	push	{r7, lr}
 8007e3e:	b086      	sub	sp, #24
 8007e40:	af00      	add	r7, sp, #0
 8007e42:	6078      	str	r0, [r7, #4]
 8007e44:	6039      	str	r1, [r7, #0]
 8007e46:	2300      	movs	r3, #0
 8007e48:	617b      	str	r3, [r7, #20]
 8007e4a:	2300      	movs	r3, #0
 8007e4c:	60fb      	str	r3, [r7, #12]
 8007e4e:	687b      	ldr	r3, [r7, #4]
 8007e50:	681b      	ldr	r3, [r3, #0]
 8007e52:	2b00      	cmp	r3, #0
 8007e54:	d00a      	beq.n	8007e6c <MQTTPacket_equals+0x30>
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	681b      	ldr	r3, [r3, #0]
 8007e5a:	613b      	str	r3, [r7, #16]
 8007e5c:	687b      	ldr	r3, [r7, #4]
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	4618      	mov	r0, r3
 8007e62:	f7f8 fa15 	bl	8000290 <strlen>
 8007e66:	4603      	mov	r3, r0
 8007e68:	617b      	str	r3, [r7, #20]
 8007e6a:	e005      	b.n	8007e78 <MQTTPacket_equals+0x3c>
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	689b      	ldr	r3, [r3, #8]
 8007e70:	613b      	str	r3, [r7, #16]
 8007e72:	687b      	ldr	r3, [r7, #4]
 8007e74:	685b      	ldr	r3, [r3, #4]
 8007e76:	617b      	str	r3, [r7, #20]
 8007e78:	6838      	ldr	r0, [r7, #0]
 8007e7a:	f7f8 fa09 	bl	8000290 <strlen>
 8007e7e:	4603      	mov	r3, r0
 8007e80:	60fb      	str	r3, [r7, #12]
 8007e82:	697a      	ldr	r2, [r7, #20]
 8007e84:	68fb      	ldr	r3, [r7, #12]
 8007e86:	429a      	cmp	r2, r3
 8007e88:	d10a      	bne.n	8007ea0 <MQTTPacket_equals+0x64>
 8007e8a:	697b      	ldr	r3, [r7, #20]
 8007e8c:	461a      	mov	r2, r3
 8007e8e:	6839      	ldr	r1, [r7, #0]
 8007e90:	6938      	ldr	r0, [r7, #16]
 8007e92:	f00a fff8 	bl	8012e86 <strncmp>
 8007e96:	4603      	mov	r3, r0
 8007e98:	2b00      	cmp	r3, #0
 8007e9a:	d101      	bne.n	8007ea0 <MQTTPacket_equals+0x64>
 8007e9c:	2301      	movs	r3, #1
 8007e9e:	e000      	b.n	8007ea2 <MQTTPacket_equals+0x66>
 8007ea0:	2300      	movs	r3, #0
 8007ea2:	4618      	mov	r0, r3
 8007ea4:	3718      	adds	r7, #24
 8007ea6:	46bd      	mov	sp, r7
 8007ea8:	bd80      	pop	{r7, pc}

08007eaa <MQTTSerialize_publishLength>:
 8007eaa:	b580      	push	{r7, lr}
 8007eac:	b086      	sub	sp, #24
 8007eae:	af00      	add	r7, sp, #0
 8007eb0:	60f8      	str	r0, [r7, #12]
 8007eb2:	4638      	mov	r0, r7
 8007eb4:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8007eb8:	2300      	movs	r3, #0
 8007eba:	617b      	str	r3, [r7, #20]
 8007ebc:	463b      	mov	r3, r7
 8007ebe:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8007ec2:	f7ff ffa2 	bl	8007e0a <MQTTstrlen>
 8007ec6:	4603      	mov	r3, r0
 8007ec8:	1c9a      	adds	r2, r3, #2
 8007eca:	6a3b      	ldr	r3, [r7, #32]
 8007ecc:	4413      	add	r3, r2
 8007ece:	697a      	ldr	r2, [r7, #20]
 8007ed0:	4413      	add	r3, r2
 8007ed2:	617b      	str	r3, [r7, #20]
 8007ed4:	68fb      	ldr	r3, [r7, #12]
 8007ed6:	2b00      	cmp	r3, #0
 8007ed8:	dd02      	ble.n	8007ee0 <MQTTSerialize_publishLength+0x36>
 8007eda:	697b      	ldr	r3, [r7, #20]
 8007edc:	3302      	adds	r3, #2
 8007ede:	617b      	str	r3, [r7, #20]
 8007ee0:	697b      	ldr	r3, [r7, #20]
 8007ee2:	4618      	mov	r0, r3
 8007ee4:	3718      	adds	r7, #24
 8007ee6:	46bd      	mov	sp, r7
 8007ee8:	bd80      	pop	{r7, pc}

08007eea <MQTTSerialize_publish>:
 8007eea:	b580      	push	{r7, lr}
 8007eec:	b08a      	sub	sp, #40	; 0x28
 8007eee:	af02      	add	r7, sp, #8
 8007ef0:	60f8      	str	r0, [r7, #12]
 8007ef2:	60b9      	str	r1, [r7, #8]
 8007ef4:	603b      	str	r3, [r7, #0]
 8007ef6:	4613      	mov	r3, r2
 8007ef8:	71fb      	strb	r3, [r7, #7]
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	617b      	str	r3, [r7, #20]
 8007efe:	2300      	movs	r3, #0
 8007f00:	613b      	str	r3, [r7, #16]
 8007f02:	2300      	movs	r3, #0
 8007f04:	61bb      	str	r3, [r7, #24]
 8007f06:	2300      	movs	r3, #0
 8007f08:	61fb      	str	r3, [r7, #28]
 8007f0a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007f0c:	9300      	str	r3, [sp, #0]
 8007f0e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8007f12:	cb0e      	ldmia	r3, {r1, r2, r3}
 8007f14:	6838      	ldr	r0, [r7, #0]
 8007f16:	f7ff ffc8 	bl	8007eaa <MQTTSerialize_publishLength>
 8007f1a:	61b8      	str	r0, [r7, #24]
 8007f1c:	69b8      	ldr	r0, [r7, #24]
 8007f1e:	f7ff fe29 	bl	8007b74 <MQTTPacket_len>
 8007f22:	4602      	mov	r2, r0
 8007f24:	68bb      	ldr	r3, [r7, #8]
 8007f26:	4293      	cmp	r3, r2
 8007f28:	da03      	bge.n	8007f32 <MQTTSerialize_publish+0x48>
 8007f2a:	f06f 0301 	mvn.w	r3, #1
 8007f2e:	61fb      	str	r3, [r7, #28]
 8007f30:	e04c      	b.n	8007fcc <MQTTSerialize_publish+0xe2>
 8007f32:	7c3b      	ldrb	r3, [r7, #16]
 8007f34:	2203      	movs	r2, #3
 8007f36:	f362 1307 	bfi	r3, r2, #4, #4
 8007f3a:	743b      	strb	r3, [r7, #16]
 8007f3c:	79fb      	ldrb	r3, [r7, #7]
 8007f3e:	f003 0301 	and.w	r3, r3, #1
 8007f42:	b2da      	uxtb	r2, r3
 8007f44:	7c3b      	ldrb	r3, [r7, #16]
 8007f46:	f362 03c3 	bfi	r3, r2, #3, #1
 8007f4a:	743b      	strb	r3, [r7, #16]
 8007f4c:	683b      	ldr	r3, [r7, #0]
 8007f4e:	f003 0303 	and.w	r3, r3, #3
 8007f52:	b2da      	uxtb	r2, r3
 8007f54:	7c3b      	ldrb	r3, [r7, #16]
 8007f56:	f362 0342 	bfi	r3, r2, #1, #2
 8007f5a:	743b      	strb	r3, [r7, #16]
 8007f5c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8007f60:	f003 0301 	and.w	r3, r3, #1
 8007f64:	b2da      	uxtb	r2, r3
 8007f66:	7c3b      	ldrb	r3, [r7, #16]
 8007f68:	f362 0300 	bfi	r3, r2, #0, #1
 8007f6c:	743b      	strb	r3, [r7, #16]
 8007f6e:	7c3a      	ldrb	r2, [r7, #16]
 8007f70:	f107 0314 	add.w	r3, r7, #20
 8007f74:	4611      	mov	r1, r2
 8007f76:	4618      	mov	r0, r3
 8007f78:	f7ff fe8b 	bl	8007c92 <writeChar>
 8007f7c:	697b      	ldr	r3, [r7, #20]
 8007f7e:	69b9      	ldr	r1, [r7, #24]
 8007f80:	4618      	mov	r0, r3
 8007f82:	f7ff fd8b 	bl	8007a9c <MQTTPacket_encode>
 8007f86:	4602      	mov	r2, r0
 8007f88:	697b      	ldr	r3, [r7, #20]
 8007f8a:	4413      	add	r3, r2
 8007f8c:	617b      	str	r3, [r7, #20]
 8007f8e:	f107 0014 	add.w	r0, r7, #20
 8007f92:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8007f96:	cb0e      	ldmia	r3, {r1, r2, r3}
 8007f98:	f7ff fed8 	bl	8007d4c <writeMQTTString>
 8007f9c:	683b      	ldr	r3, [r7, #0]
 8007f9e:	2b00      	cmp	r3, #0
 8007fa0:	dd06      	ble.n	8007fb0 <MQTTSerialize_publish+0xc6>
 8007fa2:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 8007fa4:	f107 0314 	add.w	r3, r7, #20
 8007fa8:	4611      	mov	r1, r2
 8007faa:	4618      	mov	r0, r3
 8007fac:	f7ff fe86 	bl	8007cbc <writeInt>
 8007fb0:	697b      	ldr	r3, [r7, #20]
 8007fb2:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8007fb4:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8007fb6:	4618      	mov	r0, r3
 8007fb8:	f00b f84b 	bl	8013052 <memcpy>
 8007fbc:	697a      	ldr	r2, [r7, #20]
 8007fbe:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007fc0:	4413      	add	r3, r2
 8007fc2:	617b      	str	r3, [r7, #20]
 8007fc4:	697a      	ldr	r2, [r7, #20]
 8007fc6:	68fb      	ldr	r3, [r7, #12]
 8007fc8:	1ad3      	subs	r3, r2, r3
 8007fca:	61fb      	str	r3, [r7, #28]
 8007fcc:	69fb      	ldr	r3, [r7, #28]
 8007fce:	4618      	mov	r0, r3
 8007fd0:	3720      	adds	r7, #32
 8007fd2:	46bd      	mov	sp, r7
 8007fd4:	bd80      	pop	{r7, pc}

08007fd6 <MQTTSerialize_ack>:
 8007fd6:	b580      	push	{r7, lr}
 8007fd8:	b088      	sub	sp, #32
 8007fda:	af00      	add	r7, sp, #0
 8007fdc:	60f8      	str	r0, [r7, #12]
 8007fde:	60b9      	str	r1, [r7, #8]
 8007fe0:	4611      	mov	r1, r2
 8007fe2:	461a      	mov	r2, r3
 8007fe4:	460b      	mov	r3, r1
 8007fe6:	71fb      	strb	r3, [r7, #7]
 8007fe8:	4613      	mov	r3, r2
 8007fea:	71bb      	strb	r3, [r7, #6]
 8007fec:	2300      	movs	r3, #0
 8007fee:	61bb      	str	r3, [r7, #24]
 8007ff0:	2300      	movs	r3, #0
 8007ff2:	61fb      	str	r3, [r7, #28]
 8007ff4:	68fb      	ldr	r3, [r7, #12]
 8007ff6:	617b      	str	r3, [r7, #20]
 8007ff8:	68bb      	ldr	r3, [r7, #8]
 8007ffa:	2b03      	cmp	r3, #3
 8007ffc:	dc03      	bgt.n	8008006 <MQTTSerialize_ack+0x30>
 8007ffe:	f06f 0301 	mvn.w	r3, #1
 8008002:	61fb      	str	r3, [r7, #28]
 8008004:	e037      	b.n	8008076 <MQTTSerialize_ack+0xa0>
 8008006:	79fb      	ldrb	r3, [r7, #7]
 8008008:	f003 030f 	and.w	r3, r3, #15
 800800c:	b2da      	uxtb	r2, r3
 800800e:	7e3b      	ldrb	r3, [r7, #24]
 8008010:	f362 1307 	bfi	r3, r2, #4, #4
 8008014:	763b      	strb	r3, [r7, #24]
 8008016:	79bb      	ldrb	r3, [r7, #6]
 8008018:	f003 0301 	and.w	r3, r3, #1
 800801c:	b2da      	uxtb	r2, r3
 800801e:	7e3b      	ldrb	r3, [r7, #24]
 8008020:	f362 03c3 	bfi	r3, r2, #3, #1
 8008024:	763b      	strb	r3, [r7, #24]
 8008026:	79fb      	ldrb	r3, [r7, #7]
 8008028:	2b06      	cmp	r3, #6
 800802a:	bf0c      	ite	eq
 800802c:	2301      	moveq	r3, #1
 800802e:	2300      	movne	r3, #0
 8008030:	b2db      	uxtb	r3, r3
 8008032:	f003 0303 	and.w	r3, r3, #3
 8008036:	b2da      	uxtb	r2, r3
 8008038:	7e3b      	ldrb	r3, [r7, #24]
 800803a:	f362 0342 	bfi	r3, r2, #1, #2
 800803e:	763b      	strb	r3, [r7, #24]
 8008040:	7e3a      	ldrb	r2, [r7, #24]
 8008042:	f107 0314 	add.w	r3, r7, #20
 8008046:	4611      	mov	r1, r2
 8008048:	4618      	mov	r0, r3
 800804a:	f7ff fe22 	bl	8007c92 <writeChar>
 800804e:	697b      	ldr	r3, [r7, #20]
 8008050:	2102      	movs	r1, #2
 8008052:	4618      	mov	r0, r3
 8008054:	f7ff fd22 	bl	8007a9c <MQTTPacket_encode>
 8008058:	4602      	mov	r2, r0
 800805a:	697b      	ldr	r3, [r7, #20]
 800805c:	4413      	add	r3, r2
 800805e:	617b      	str	r3, [r7, #20]
 8008060:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 8008062:	f107 0314 	add.w	r3, r7, #20
 8008066:	4611      	mov	r1, r2
 8008068:	4618      	mov	r0, r3
 800806a:	f7ff fe27 	bl	8007cbc <writeInt>
 800806e:	697a      	ldr	r2, [r7, #20]
 8008070:	68fb      	ldr	r3, [r7, #12]
 8008072:	1ad3      	subs	r3, r2, r3
 8008074:	61fb      	str	r3, [r7, #28]
 8008076:	69fb      	ldr	r3, [r7, #28]
 8008078:	4618      	mov	r0, r3
 800807a:	3720      	adds	r7, #32
 800807c:	46bd      	mov	sp, r7
 800807e:	bd80      	pop	{r7, pc}

08008080 <MQTTSerialize_subscribeLength>:
 8008080:	b580      	push	{r7, lr}
 8008082:	b084      	sub	sp, #16
 8008084:	af00      	add	r7, sp, #0
 8008086:	6078      	str	r0, [r7, #4]
 8008088:	6039      	str	r1, [r7, #0]
 800808a:	2302      	movs	r3, #2
 800808c:	60bb      	str	r3, [r7, #8]
 800808e:	2300      	movs	r3, #0
 8008090:	60fb      	str	r3, [r7, #12]
 8008092:	e013      	b.n	80080bc <MQTTSerialize_subscribeLength+0x3c>
 8008094:	68fa      	ldr	r2, [r7, #12]
 8008096:	4613      	mov	r3, r2
 8008098:	005b      	lsls	r3, r3, #1
 800809a:	4413      	add	r3, r2
 800809c:	009b      	lsls	r3, r3, #2
 800809e:	461a      	mov	r2, r3
 80080a0:	683b      	ldr	r3, [r7, #0]
 80080a2:	4413      	add	r3, r2
 80080a4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80080a8:	f7ff feaf 	bl	8007e0a <MQTTstrlen>
 80080ac:	4603      	mov	r3, r0
 80080ae:	3303      	adds	r3, #3
 80080b0:	68ba      	ldr	r2, [r7, #8]
 80080b2:	4413      	add	r3, r2
 80080b4:	60bb      	str	r3, [r7, #8]
 80080b6:	68fb      	ldr	r3, [r7, #12]
 80080b8:	3301      	adds	r3, #1
 80080ba:	60fb      	str	r3, [r7, #12]
 80080bc:	68fa      	ldr	r2, [r7, #12]
 80080be:	687b      	ldr	r3, [r7, #4]
 80080c0:	429a      	cmp	r2, r3
 80080c2:	dbe7      	blt.n	8008094 <MQTTSerialize_subscribeLength+0x14>
 80080c4:	68bb      	ldr	r3, [r7, #8]
 80080c6:	4618      	mov	r0, r3
 80080c8:	3710      	adds	r7, #16
 80080ca:	46bd      	mov	sp, r7
 80080cc:	bd80      	pop	{r7, pc}

080080ce <MQTTSerialize_subscribe>:
 80080ce:	b580      	push	{r7, lr}
 80080d0:	b08a      	sub	sp, #40	; 0x28
 80080d2:	af00      	add	r7, sp, #0
 80080d4:	60f8      	str	r0, [r7, #12]
 80080d6:	60b9      	str	r1, [r7, #8]
 80080d8:	4611      	mov	r1, r2
 80080da:	461a      	mov	r2, r3
 80080dc:	460b      	mov	r3, r1
 80080de:	71fb      	strb	r3, [r7, #7]
 80080e0:	4613      	mov	r3, r2
 80080e2:	80bb      	strh	r3, [r7, #4]
 80080e4:	68fb      	ldr	r3, [r7, #12]
 80080e6:	61bb      	str	r3, [r7, #24]
 80080e8:	2300      	movs	r3, #0
 80080ea:	617b      	str	r3, [r7, #20]
 80080ec:	2300      	movs	r3, #0
 80080ee:	61fb      	str	r3, [r7, #28]
 80080f0:	2300      	movs	r3, #0
 80080f2:	627b      	str	r3, [r7, #36]	; 0x24
 80080f4:	2300      	movs	r3, #0
 80080f6:	623b      	str	r3, [r7, #32]
 80080f8:	6b79      	ldr	r1, [r7, #52]	; 0x34
 80080fa:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80080fc:	f7ff ffc0 	bl	8008080 <MQTTSerialize_subscribeLength>
 8008100:	61f8      	str	r0, [r7, #28]
 8008102:	69f8      	ldr	r0, [r7, #28]
 8008104:	f7ff fd36 	bl	8007b74 <MQTTPacket_len>
 8008108:	4602      	mov	r2, r0
 800810a:	68bb      	ldr	r3, [r7, #8]
 800810c:	4293      	cmp	r3, r2
 800810e:	da03      	bge.n	8008118 <MQTTSerialize_subscribe+0x4a>
 8008110:	f06f 0301 	mvn.w	r3, #1
 8008114:	627b      	str	r3, [r7, #36]	; 0x24
 8008116:	e04f      	b.n	80081b8 <MQTTSerialize_subscribe+0xea>
 8008118:	2300      	movs	r3, #0
 800811a:	753b      	strb	r3, [r7, #20]
 800811c:	7d3b      	ldrb	r3, [r7, #20]
 800811e:	2208      	movs	r2, #8
 8008120:	f362 1307 	bfi	r3, r2, #4, #4
 8008124:	753b      	strb	r3, [r7, #20]
 8008126:	79fb      	ldrb	r3, [r7, #7]
 8008128:	f003 0301 	and.w	r3, r3, #1
 800812c:	b2da      	uxtb	r2, r3
 800812e:	7d3b      	ldrb	r3, [r7, #20]
 8008130:	f362 03c3 	bfi	r3, r2, #3, #1
 8008134:	753b      	strb	r3, [r7, #20]
 8008136:	7d3b      	ldrb	r3, [r7, #20]
 8008138:	2201      	movs	r2, #1
 800813a:	f362 0342 	bfi	r3, r2, #1, #2
 800813e:	753b      	strb	r3, [r7, #20]
 8008140:	7d3a      	ldrb	r2, [r7, #20]
 8008142:	f107 0318 	add.w	r3, r7, #24
 8008146:	4611      	mov	r1, r2
 8008148:	4618      	mov	r0, r3
 800814a:	f7ff fda2 	bl	8007c92 <writeChar>
 800814e:	69bb      	ldr	r3, [r7, #24]
 8008150:	69f9      	ldr	r1, [r7, #28]
 8008152:	4618      	mov	r0, r3
 8008154:	f7ff fca2 	bl	8007a9c <MQTTPacket_encode>
 8008158:	4602      	mov	r2, r0
 800815a:	69bb      	ldr	r3, [r7, #24]
 800815c:	4413      	add	r3, r2
 800815e:	61bb      	str	r3, [r7, #24]
 8008160:	88ba      	ldrh	r2, [r7, #4]
 8008162:	f107 0318 	add.w	r3, r7, #24
 8008166:	4611      	mov	r1, r2
 8008168:	4618      	mov	r0, r3
 800816a:	f7ff fda7 	bl	8007cbc <writeInt>
 800816e:	2300      	movs	r3, #0
 8008170:	623b      	str	r3, [r7, #32]
 8008172:	e019      	b.n	80081a8 <MQTTSerialize_subscribe+0xda>
 8008174:	6a3a      	ldr	r2, [r7, #32]
 8008176:	4613      	mov	r3, r2
 8008178:	005b      	lsls	r3, r3, #1
 800817a:	4413      	add	r3, r2
 800817c:	009b      	lsls	r3, r3, #2
 800817e:	461a      	mov	r2, r3
 8008180:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008182:	4413      	add	r3, r2
 8008184:	f107 0018 	add.w	r0, r7, #24
 8008188:	cb0e      	ldmia	r3, {r1, r2, r3}
 800818a:	f7ff fddf 	bl	8007d4c <writeMQTTString>
 800818e:	6a3b      	ldr	r3, [r7, #32]
 8008190:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8008192:	4413      	add	r3, r2
 8008194:	781a      	ldrb	r2, [r3, #0]
 8008196:	f107 0318 	add.w	r3, r7, #24
 800819a:	4611      	mov	r1, r2
 800819c:	4618      	mov	r0, r3
 800819e:	f7ff fd78 	bl	8007c92 <writeChar>
 80081a2:	6a3b      	ldr	r3, [r7, #32]
 80081a4:	3301      	adds	r3, #1
 80081a6:	623b      	str	r3, [r7, #32]
 80081a8:	6a3a      	ldr	r2, [r7, #32]
 80081aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80081ac:	429a      	cmp	r2, r3
 80081ae:	dbe1      	blt.n	8008174 <MQTTSerialize_subscribe+0xa6>
 80081b0:	69ba      	ldr	r2, [r7, #24]
 80081b2:	68fb      	ldr	r3, [r7, #12]
 80081b4:	1ad3      	subs	r3, r2, r3
 80081b6:	627b      	str	r3, [r7, #36]	; 0x24
 80081b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80081ba:	4618      	mov	r0, r3
 80081bc:	3728      	adds	r7, #40	; 0x28
 80081be:	46bd      	mov	sp, r7
 80081c0:	bd80      	pop	{r7, pc}

080081c2 <MQTTDeserialize_suback>:
 80081c2:	b580      	push	{r7, lr}
 80081c4:	b08a      	sub	sp, #40	; 0x28
 80081c6:	af00      	add	r7, sp, #0
 80081c8:	60f8      	str	r0, [r7, #12]
 80081ca:	60b9      	str	r1, [r7, #8]
 80081cc:	607a      	str	r2, [r7, #4]
 80081ce:	603b      	str	r3, [r7, #0]
 80081d0:	2300      	movs	r3, #0
 80081d2:	61fb      	str	r3, [r7, #28]
 80081d4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80081d6:	61bb      	str	r3, [r7, #24]
 80081d8:	2300      	movs	r3, #0
 80081da:	623b      	str	r3, [r7, #32]
 80081dc:	2300      	movs	r3, #0
 80081de:	627b      	str	r3, [r7, #36]	; 0x24
 80081e0:	f107 0318 	add.w	r3, r7, #24
 80081e4:	4618      	mov	r0, r3
 80081e6:	f7ff fd40 	bl	8007c6a <readChar>
 80081ea:	4603      	mov	r3, r0
 80081ec:	773b      	strb	r3, [r7, #28]
 80081ee:	7f3b      	ldrb	r3, [r7, #28]
 80081f0:	f023 030f 	bic.w	r3, r3, #15
 80081f4:	b2db      	uxtb	r3, r3
 80081f6:	2b90      	cmp	r3, #144	; 0x90
 80081f8:	d142      	bne.n	8008280 <MQTTDeserialize_suback+0xbe>
 80081fa:	69bb      	ldr	r3, [r7, #24]
 80081fc:	f107 0214 	add.w	r2, r7, #20
 8008200:	4611      	mov	r1, r2
 8008202:	4618      	mov	r0, r3
 8008204:	f7ff fd00 	bl	8007c08 <MQTTPacket_decodeBuf>
 8008208:	6278      	str	r0, [r7, #36]	; 0x24
 800820a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800820c:	69bb      	ldr	r3, [r7, #24]
 800820e:	4413      	add	r3, r2
 8008210:	61bb      	str	r3, [r7, #24]
 8008212:	69bb      	ldr	r3, [r7, #24]
 8008214:	697a      	ldr	r2, [r7, #20]
 8008216:	4413      	add	r3, r2
 8008218:	623b      	str	r3, [r7, #32]
 800821a:	69bb      	ldr	r3, [r7, #24]
 800821c:	6a3a      	ldr	r2, [r7, #32]
 800821e:	1ad3      	subs	r3, r2, r3
 8008220:	2b01      	cmp	r3, #1
 8008222:	dd2f      	ble.n	8008284 <MQTTDeserialize_suback+0xc2>
 8008224:	f107 0318 	add.w	r3, r7, #24
 8008228:	4618      	mov	r0, r3
 800822a:	f7ff fd03 	bl	8007c34 <readInt>
 800822e:	4603      	mov	r3, r0
 8008230:	b29a      	uxth	r2, r3
 8008232:	68fb      	ldr	r3, [r7, #12]
 8008234:	801a      	strh	r2, [r3, #0]
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	2200      	movs	r2, #0
 800823a:	601a      	str	r2, [r3, #0]
 800823c:	e019      	b.n	8008272 <MQTTDeserialize_suback+0xb0>
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	681b      	ldr	r3, [r3, #0]
 8008242:	68ba      	ldr	r2, [r7, #8]
 8008244:	429a      	cmp	r2, r3
 8008246:	da03      	bge.n	8008250 <MQTTDeserialize_suback+0x8e>
 8008248:	f04f 33ff 	mov.w	r3, #4294967295
 800824c:	627b      	str	r3, [r7, #36]	; 0x24
 800824e:	e01a      	b.n	8008286 <MQTTDeserialize_suback+0xc4>
 8008250:	f107 0318 	add.w	r3, r7, #24
 8008254:	4618      	mov	r0, r3
 8008256:	f7ff fd08 	bl	8007c6a <readChar>
 800825a:	4603      	mov	r3, r0
 800825c:	4618      	mov	r0, r3
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	681b      	ldr	r3, [r3, #0]
 8008262:	1c59      	adds	r1, r3, #1
 8008264:	687a      	ldr	r2, [r7, #4]
 8008266:	6011      	str	r1, [r2, #0]
 8008268:	009b      	lsls	r3, r3, #2
 800826a:	683a      	ldr	r2, [r7, #0]
 800826c:	4413      	add	r3, r2
 800826e:	4602      	mov	r2, r0
 8008270:	601a      	str	r2, [r3, #0]
 8008272:	69bb      	ldr	r3, [r7, #24]
 8008274:	6a3a      	ldr	r2, [r7, #32]
 8008276:	429a      	cmp	r2, r3
 8008278:	d8e1      	bhi.n	800823e <MQTTDeserialize_suback+0x7c>
 800827a:	2301      	movs	r3, #1
 800827c:	627b      	str	r3, [r7, #36]	; 0x24
 800827e:	e002      	b.n	8008286 <MQTTDeserialize_suback+0xc4>
 8008280:	bf00      	nop
 8008282:	e000      	b.n	8008286 <MQTTDeserialize_suback+0xc4>
 8008284:	bf00      	nop
 8008286:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008288:	4618      	mov	r0, r3
 800828a:	3728      	adds	r7, #40	; 0x28
 800828c:	46bd      	mov	sp, r7
 800828e:	bd80      	pop	{r7, pc}

08008290 <_ZN14CircularBufferC1Ev>:
// CircularBuffer.cpp
#include "CircularBuffer.h"

CircularBuffer::CircularBuffer() : head(0), tail(0) {}
 8008290:	b480      	push	{r7}
 8008292:	b083      	sub	sp, #12
 8008294:	af00      	add	r7, sp, #0
 8008296:	6078      	str	r0, [r7, #4]
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	2200      	movs	r2, #0
 800829c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 80082a0:	687b      	ldr	r3, [r7, #4]
 80082a2:	2200      	movs	r2, #0
 80082a4:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80082a8:	687b      	ldr	r3, [r7, #4]
 80082aa:	4618      	mov	r0, r3
 80082ac:	370c      	adds	r7, #12
 80082ae:	46bd      	mov	sp, r7
 80082b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082b4:	4770      	bx	lr

080082b6 <_ZN15EthernetManagerD1Ev>:
uint8_t EthernetManager::DHCP_SOCKET = 1;
uint8_t EthernetManager::DNS_SOCKET = 1;

EthernetManager* EthernetManager::instance = nullptr;

EthernetManager::~EthernetManager() {
 80082b6:	b480      	push	{r7}
 80082b8:	b083      	sub	sp, #12
 80082ba:	af00      	add	r7, sp, #0
 80082bc:	6078      	str	r0, [r7, #4]

}
 80082be:	687b      	ldr	r3, [r7, #4]
 80082c0:	4618      	mov	r0, r3
 80082c2:	370c      	adds	r7, #12
 80082c4:	46bd      	mov	sp, r7
 80082c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082ca:	4770      	bx	lr

080082cc <_ZN15EthernetManagerC1Ev>:

EthernetManager::EthernetManager() {
 80082cc:	b480      	push	{r7}
 80082ce:	b083      	sub	sp, #12
 80082d0:	af00      	add	r7, sp, #0
 80082d2:	6078      	str	r0, [r7, #4]
	instance = this;
 80082d4:	4a04      	ldr	r2, [pc, #16]	; (80082e8 <_ZN15EthernetManagerC1Ev+0x1c>)
 80082d6:	687b      	ldr	r3, [r7, #4]
 80082d8:	6013      	str	r3, [r2, #0]
}
 80082da:	687b      	ldr	r3, [r7, #4]
 80082dc:	4618      	mov	r0, r3
 80082de:	370c      	adds	r7, #12
 80082e0:	46bd      	mov	sp, r7
 80082e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082e6:	4770      	bx	lr
 80082e8:	200012b8 	.word	0x200012b8

080082ec <_ZN15EthernetManager4initEP6ConfigP5Utils>:

void EthernetManager::init( Config *conf, Utils *utilClass) {
 80082ec:	b580      	push	{r7, lr}
 80082ee:	b084      	sub	sp, #16
 80082f0:	af00      	add	r7, sp, #0
 80082f2:	60f8      	str	r0, [r7, #12]
 80082f4:	60b9      	str	r1, [r7, #8]
 80082f6:	607a      	str	r2, [r7, #4]
    utils = utilClass;
 80082f8:	68fb      	ldr	r3, [r7, #12]
 80082fa:	687a      	ldr	r2, [r7, #4]
 80082fc:	601a      	str	r2, [r3, #0]
    config = conf;
 80082fe:	68fb      	ldr	r3, [r7, #12]
 8008300:	68ba      	ldr	r2, [r7, #8]
 8008302:	605a      	str	r2, [r3, #4]
    utils->playSound();
 8008304:	f004 f89a 	bl	800c43c <_ZN5Utils9playSoundEv>
    utils->print("Initializing Internet \r\n");
 8008308:	4803      	ldr	r0, [pc, #12]	; (8008318 <_ZN15EthernetManager4initEP6ConfigP5Utils+0x2c>)
 800830a:	f004 f867 	bl	800c3dc <_ZN5Utils5printEPKcz>

}
 800830e:	bf00      	nop
 8008310:	3710      	adds	r7, #16
 8008312:	46bd      	mov	sp, r7
 8008314:	bd80      	pop	{r7, pc}
 8008316:	bf00      	nop
 8008318:	08016188 	.word	0x08016188

0800831c <_ZN15EthernetManager7connectEv>:

bool EthernetManager::connect() {
 800831c:	b580      	push	{r7, lr}
 800831e:	b082      	sub	sp, #8
 8008320:	af00      	add	r7, sp, #0
 8008322:	6078      	str	r0, [r7, #4]

    resetAssert();
 8008324:	6878      	ldr	r0, [r7, #4]
 8008326:	f000 f825 	bl	8008374 <_ZN15EthernetManager11resetAssertEv>
    HAL_Delay(100); // Delay for the reset
 800832a:	2064      	movs	r0, #100	; 0x64
 800832c:	f004 fd0e 	bl	800cd4c <HAL_Delay>
    resetDeassert();
 8008330:	6878      	ldr	r0, [r7, #4]
 8008332:	f000 f82f 	bl	8008394 <_ZN15EthernetManager13resetDeassertEv>
    HAL_Delay(300);
 8008336:	f44f 7096 	mov.w	r0, #300	; 0x12c
 800833a:	f004 fd07 	bl	800cd4c <HAL_Delay>
    if (!initWIZCHIP()) {
 800833e:	6878      	ldr	r0, [r7, #4]
 8008340:	f000 f8ae 	bl	80084a0 <_ZN15EthernetManager11initWIZCHIPEv>
 8008344:	4603      	mov	r3, r0
 8008346:	f083 0301 	eor.w	r3, r3, #1
 800834a:	b2db      	uxtb	r3, r3
 800834c:	2b00      	cmp	r3, #0
 800834e:	d001      	beq.n	8008354 <_ZN15EthernetManager7connectEv+0x38>
    	return false;
 8008350:	2300      	movs	r3, #0
 8008352:	e00b      	b.n	800836c <_ZN15EthernetManager7connectEv+0x50>
    }

    if (! configureNetwork()) {
 8008354:	6878      	ldr	r0, [r7, #4]
 8008356:	f000 f8fd 	bl	8008554 <_ZN15EthernetManager16configureNetworkEv>
 800835a:	4603      	mov	r3, r0
 800835c:	f083 0301 	eor.w	r3, r3, #1
 8008360:	b2db      	uxtb	r3, r3
 8008362:	2b00      	cmp	r3, #0
 8008364:	d001      	beq.n	800836a <_ZN15EthernetManager7connectEv+0x4e>
    	return false;
 8008366:	2300      	movs	r3, #0
 8008368:	e000      	b.n	800836c <_ZN15EthernetManager7connectEv+0x50>
    }

     return true;
 800836a:	2301      	movs	r3, #1

}
 800836c:	4618      	mov	r0, r3
 800836e:	3708      	adds	r7, #8
 8008370:	46bd      	mov	sp, r7
 8008372:	bd80      	pop	{r7, pc}

08008374 <_ZN15EthernetManager11resetAssertEv>:

}



void EthernetManager::resetAssert() {
 8008374:	b580      	push	{r7, lr}
 8008376:	b082      	sub	sp, #8
 8008378:	af00      	add	r7, sp, #0
 800837a:	6078      	str	r0, [r7, #4]

    HAL_GPIO_WritePin(W5x00_RESET_PORT, W5x00_RESET_PIN, GPIO_PIN_RESET);
 800837c:	2200      	movs	r2, #0
 800837e:	2120      	movs	r1, #32
 8008380:	4803      	ldr	r0, [pc, #12]	; (8008390 <_ZN15EthernetManager11resetAssertEv+0x1c>)
 8008382:	f005 fd97 	bl	800deb4 <HAL_GPIO_WritePin>
}
 8008386:	bf00      	nop
 8008388:	3708      	adds	r7, #8
 800838a:	46bd      	mov	sp, r7
 800838c:	bd80      	pop	{r7, pc}
 800838e:	bf00      	nop
 8008390:	40020800 	.word	0x40020800

08008394 <_ZN15EthernetManager13resetDeassertEv>:

void EthernetManager::resetDeassert() {
 8008394:	b580      	push	{r7, lr}
 8008396:	b082      	sub	sp, #8
 8008398:	af00      	add	r7, sp, #0
 800839a:	6078      	str	r0, [r7, #4]

    HAL_GPIO_WritePin(W5x00_RESET_PORT, W5x00_RESET_PIN, GPIO_PIN_SET);
 800839c:	2201      	movs	r2, #1
 800839e:	2120      	movs	r1, #32
 80083a0:	4803      	ldr	r0, [pc, #12]	; (80083b0 <_ZN15EthernetManager13resetDeassertEv+0x1c>)
 80083a2:	f005 fd87 	bl	800deb4 <HAL_GPIO_WritePin>
}
 80083a6:	bf00      	nop
 80083a8:	3708      	adds	r7, #8
 80083aa:	46bd      	mov	sp, r7
 80083ac:	bd80      	pop	{r7, pc}
 80083ae:	bf00      	nop
 80083b0:	40020800 	.word	0x40020800

080083b4 <_ZN15EthernetManager12W5500_SelectEv>:


void EthernetManager::W5500_Select() {
 80083b4:	b580      	push	{r7, lr}
 80083b6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(W5500_CS_GPIO_Port, W5500_CS_Pin, GPIO_PIN_RESET);
 80083b8:	2200      	movs	r2, #0
 80083ba:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80083be:	4802      	ldr	r0, [pc, #8]	; (80083c8 <_ZN15EthernetManager12W5500_SelectEv+0x14>)
 80083c0:	f005 fd78 	bl	800deb4 <HAL_GPIO_WritePin>
}
 80083c4:	bf00      	nop
 80083c6:	bd80      	pop	{r7, pc}
 80083c8:	40020400 	.word	0x40020400

080083cc <_ZN15EthernetManager14W5500_UnselectEv>:


void EthernetManager::W5500_Unselect() {
 80083cc:	b580      	push	{r7, lr}
 80083ce:	af00      	add	r7, sp, #0
	 HAL_GPIO_WritePin(W5500_CS_GPIO_Port, W5500_CS_Pin, GPIO_PIN_SET);
 80083d0:	2201      	movs	r2, #1
 80083d2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80083d6:	4802      	ldr	r0, [pc, #8]	; (80083e0 <_ZN15EthernetManager14W5500_UnselectEv+0x14>)
 80083d8:	f005 fd6c 	bl	800deb4 <HAL_GPIO_WritePin>
}
 80083dc:	bf00      	nop
 80083de:	bd80      	pop	{r7, pc}
 80083e0:	40020400 	.word	0x40020400

080083e4 <_ZN15EthernetManager14W5500_ReadBuffEPht>:


void EthernetManager::W5500_ReadBuff(uint8_t* buff, uint16_t len) {
 80083e4:	b580      	push	{r7, lr}
 80083e6:	b082      	sub	sp, #8
 80083e8:	af00      	add	r7, sp, #0
 80083ea:	6078      	str	r0, [r7, #4]
 80083ec:	460b      	mov	r3, r1
 80083ee:	807b      	strh	r3, [r7, #2]
    HAL_SPI_Receive(&hspi2, buff, len, HAL_MAX_DELAY);
 80083f0:	887a      	ldrh	r2, [r7, #2]
 80083f2:	f04f 33ff 	mov.w	r3, #4294967295
 80083f6:	6879      	ldr	r1, [r7, #4]
 80083f8:	4803      	ldr	r0, [pc, #12]	; (8008408 <_ZN15EthernetManager14W5500_ReadBuffEPht+0x24>)
 80083fa:	f006 fbcc 	bl	800eb96 <HAL_SPI_Receive>
}
 80083fe:	bf00      	nop
 8008400:	3708      	adds	r7, #8
 8008402:	46bd      	mov	sp, r7
 8008404:	bd80      	pop	{r7, pc}
 8008406:	bf00      	nop
 8008408:	2000136c 	.word	0x2000136c

0800840c <_ZN15EthernetManager15W5500_WriteBuffEPht>:

void EthernetManager::W5500_WriteBuff( uint8_t* buff, uint16_t len) {
 800840c:	b580      	push	{r7, lr}
 800840e:	b082      	sub	sp, #8
 8008410:	af00      	add	r7, sp, #0
 8008412:	6078      	str	r0, [r7, #4]
 8008414:	460b      	mov	r3, r1
 8008416:	807b      	strh	r3, [r7, #2]
    HAL_SPI_Transmit(&hspi2, buff, len, HAL_MAX_DELAY);
 8008418:	887a      	ldrh	r2, [r7, #2]
 800841a:	f04f 33ff 	mov.w	r3, #4294967295
 800841e:	6879      	ldr	r1, [r7, #4]
 8008420:	4803      	ldr	r0, [pc, #12]	; (8008430 <_ZN15EthernetManager15W5500_WriteBuffEPht+0x24>)
 8008422:	f006 fa75 	bl	800e910 <HAL_SPI_Transmit>
}
 8008426:	bf00      	nop
 8008428:	3708      	adds	r7, #8
 800842a:	46bd      	mov	sp, r7
 800842c:	bd80      	pop	{r7, pc}
 800842e:	bf00      	nop
 8008430:	2000136c 	.word	0x2000136c

08008434 <_ZN15EthernetManager14W5500_ReadByteEv>:

uint8_t EthernetManager::W5500_ReadByte() {
 8008434:	b580      	push	{r7, lr}
 8008436:	b082      	sub	sp, #8
 8008438:	af00      	add	r7, sp, #0
    uint8_t byte;
    W5500_ReadBuff(&byte, 1);
 800843a:	1dfb      	adds	r3, r7, #7
 800843c:	2101      	movs	r1, #1
 800843e:	4618      	mov	r0, r3
 8008440:	f7ff ffd0 	bl	80083e4 <_ZN15EthernetManager14W5500_ReadBuffEPht>
    return byte;
 8008444:	79fb      	ldrb	r3, [r7, #7]
}
 8008446:	4618      	mov	r0, r3
 8008448:	3708      	adds	r7, #8
 800844a:	46bd      	mov	sp, r7
 800844c:	bd80      	pop	{r7, pc}

0800844e <_ZN15EthernetManager15W5500_WriteByteEh>:

void EthernetManager::W5500_WriteByte(uint8_t byte) {
 800844e:	b580      	push	{r7, lr}
 8008450:	b082      	sub	sp, #8
 8008452:	af00      	add	r7, sp, #0
 8008454:	4603      	mov	r3, r0
 8008456:	71fb      	strb	r3, [r7, #7]
	W5500_WriteBuff(&byte, 1);
 8008458:	1dfb      	adds	r3, r7, #7
 800845a:	2101      	movs	r1, #1
 800845c:	4618      	mov	r0, r3
 800845e:	f7ff ffd5 	bl	800840c <_ZN15EthernetManager15W5500_WriteBuffEPht>
}
 8008462:	bf00      	nop
 8008464:	3708      	adds	r7, #8
 8008466:	46bd      	mov	sp, r7
 8008468:	bd80      	pop	{r7, pc}
	...

0800846c <_ZN15EthernetManager19Callback_IPAssignedEv>:

void EthernetManager::Callback_IPAssigned() {
 800846c:	b580      	push	{r7, lr}
 800846e:	af00      	add	r7, sp, #0
    	if (instance) {
 8008470:	4b06      	ldr	r3, [pc, #24]	; (800848c <_ZN15EthernetManager19Callback_IPAssignedEv+0x20>)
 8008472:	681b      	ldr	r3, [r3, #0]
 8008474:	2b00      	cmp	r3, #0
 8008476:	d006      	beq.n	8008486 <_ZN15EthernetManager19Callback_IPAssignedEv+0x1a>
    		instance->config->setIpAssigned(true);
 8008478:	4b04      	ldr	r3, [pc, #16]	; (800848c <_ZN15EthernetManager19Callback_IPAssignedEv+0x20>)
 800847a:	681b      	ldr	r3, [r3, #0]
 800847c:	685b      	ldr	r3, [r3, #4]
 800847e:	2101      	movs	r1, #1
 8008480:	4618      	mov	r0, r3
 8008482:	f002 faf0 	bl	800aa66 <_ZN6Config13setIpAssignedEb>
    	}
}
 8008486:	bf00      	nop
 8008488:	bd80      	pop	{r7, pc}
 800848a:	bf00      	nop
 800848c:	200012b8 	.word	0x200012b8

08008490 <_ZN15EthernetManager19Callback_IPConflictEv>:

void EthernetManager::Callback_IPConflict() {
 8008490:	b480      	push	{r7}
 8008492:	af00      	add	r7, sp, #0
}
 8008494:	bf00      	nop
 8008496:	46bd      	mov	sp, r7
 8008498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800849c:	4770      	bx	lr
	...

080084a0 <_ZN15EthernetManager11initWIZCHIPEv>:


bool EthernetManager::initWIZCHIP() {
 80084a0:	b590      	push	{r4, r7, lr}
 80084a2:	b089      	sub	sp, #36	; 0x24
 80084a4:	af00      	add	r7, sp, #0
 80084a6:	6078      	str	r0, [r7, #4]
    utils->print("\r\nWIZCHIP Initialization called!\r\n");
 80084a8:	4822      	ldr	r0, [pc, #136]	; (8008534 <_ZN15EthernetManager11initWIZCHIPEv+0x94>)
 80084aa:	f003 ff97 	bl	800c3dc <_ZN5Utils5printEPKcz>
    W5500_Unselect();
 80084ae:	f7ff ff8d 	bl	80083cc <_ZN15EthernetManager14W5500_UnselectEv>
    reg_wizchip_cs_cbfunc(W5500_Select, W5500_Unselect);
 80084b2:	4921      	ldr	r1, [pc, #132]	; (8008538 <_ZN15EthernetManager11initWIZCHIPEv+0x98>)
 80084b4:	4821      	ldr	r0, [pc, #132]	; (800853c <_ZN15EthernetManager11initWIZCHIPEv+0x9c>)
 80084b6:	f7fb fbd7 	bl	8003c68 <reg_wizchip_cs_cbfunc>
    reg_wizchip_spi_cbfunc(W5500_ReadByte, W5500_WriteByte);
 80084ba:	4921      	ldr	r1, [pc, #132]	; (8008540 <_ZN15EthernetManager11initWIZCHIPEv+0xa0>)
 80084bc:	4821      	ldr	r0, [pc, #132]	; (8008544 <_ZN15EthernetManager11initWIZCHIPEv+0xa4>)
 80084be:	f7fb fbf9 	bl	8003cb4 <reg_wizchip_spi_cbfunc>
    reg_wizchip_spiburst_cbfunc(W5500_ReadBuff, W5500_WriteBuff);
 80084c2:	4921      	ldr	r1, [pc, #132]	; (8008548 <_ZN15EthernetManager11initWIZCHIPEv+0xa8>)
 80084c4:	4821      	ldr	r0, [pc, #132]	; (800854c <_ZN15EthernetManager11initWIZCHIPEv+0xac>)
 80084c6:	f7fb fc21 	bl	8003d0c <reg_wizchip_spiburst_cbfunc>

    uint8_t memsize[2][8] = {{2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2}};
 80084ca:	4b21      	ldr	r3, [pc, #132]	; (8008550 <_ZN15EthernetManager11initWIZCHIPEv+0xb0>)
 80084cc:	f107 0410 	add.w	r4, r7, #16
 80084d0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80084d2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    if (ctlwizchip(CW_INIT_WIZCHIP, (void*)memsize) == -1) {
 80084d6:	f107 0310 	add.w	r3, r7, #16
 80084da:	4619      	mov	r1, r3
 80084dc:	2001      	movs	r0, #1
 80084de:	f7fb fc41 	bl	8003d64 <ctlwizchip>
 80084e2:	4603      	mov	r3, r0
 80084e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80084e8:	bf0c      	ite	eq
 80084ea:	2301      	moveq	r3, #1
 80084ec:	2300      	movne	r3, #0
 80084ee:	b2db      	uxtb	r3, r3
 80084f0:	2b00      	cmp	r3, #0
 80084f2:	d001      	beq.n	80084f8 <_ZN15EthernetManager11initWIZCHIPEv+0x58>
        return false;
 80084f4:	2300      	movs	r3, #0
 80084f6:	e019      	b.n	800852c <_ZN15EthernetManager11initWIZCHIPEv+0x8c>
    }
    uint8_t tmp;
  //  uint8_t attempt = 0;
    do {
        if (ctlwizchip(CW_GET_PHYLINK, (void*)&tmp) == -1) {
 80084f8:	f107 030f 	add.w	r3, r7, #15
 80084fc:	4619      	mov	r1, r3
 80084fe:	200f      	movs	r0, #15
 8008500:	f7fb fc30 	bl	8003d64 <ctlwizchip>
 8008504:	4603      	mov	r3, r0
 8008506:	f1b3 3fff 	cmp.w	r3, #4294967295
 800850a:	bf0c      	ite	eq
 800850c:	2301      	moveq	r3, #1
 800850e:	2300      	movne	r3, #0
 8008510:	b2db      	uxtb	r3, r3
 8008512:	2b00      	cmp	r3, #0
 8008514:	d001      	beq.n	800851a <_ZN15EthernetManager11initWIZCHIPEv+0x7a>
         //  Print("UNKNOWN PHY LINK STATUS.\r\n");
        	return false;
 8008516:	2300      	movs	r3, #0
 8008518:	e008      	b.n	800852c <_ZN15EthernetManager11initWIZCHIPEv+0x8c>

        }
    }  while (tmp == PHY_LINK_OFF );
 800851a:	7bfb      	ldrb	r3, [r7, #15]
 800851c:	2b00      	cmp	r3, #0
 800851e:	d0eb      	beq.n	80084f8 <_ZN15EthernetManager11initWIZCHIPEv+0x58>

    if (tmp == PHY_LINK_OFF ) return false;
 8008520:	7bfb      	ldrb	r3, [r7, #15]
 8008522:	2b00      	cmp	r3, #0
 8008524:	d101      	bne.n	800852a <_ZN15EthernetManager11initWIZCHIPEv+0x8a>
 8008526:	2300      	movs	r3, #0
 8008528:	e000      	b.n	800852c <_ZN15EthernetManager11initWIZCHIPEv+0x8c>
    else return true;
 800852a:	2301      	movs	r3, #1
    utils->print("WIZCHIP Initialized successfully.\r\n");
}
 800852c:	4618      	mov	r0, r3
 800852e:	3724      	adds	r7, #36	; 0x24
 8008530:	46bd      	mov	sp, r7
 8008532:	bd90      	pop	{r4, r7, pc}
 8008534:	080161a4 	.word	0x080161a4
 8008538:	080083cd 	.word	0x080083cd
 800853c:	080083b5 	.word	0x080083b5
 8008540:	0800844f 	.word	0x0800844f
 8008544:	08008435 	.word	0x08008435
 8008548:	0800840d 	.word	0x0800840d
 800854c:	080083e5 	.word	0x080083e5
 8008550:	080161c8 	.word	0x080161c8

08008554 <_ZN15EthernetManager16configureNetworkEv>:


bool EthernetManager::configureNetwork() {
 8008554:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008558:	b0a4      	sub	sp, #144	; 0x90
 800855a:	af0e      	add	r7, sp, #56	; 0x38
 800855c:	61f8      	str	r0, [r7, #28]
	utils->print("Initializing Netwok Configuration!!! \r\n");
 800855e:	48ac      	ldr	r0, [pc, #688]	; (8008810 <_ZN15EthernetManager16configureNetworkEv+0x2bc>)
 8008560:	f003 ff3c 	bl	800c3dc <_ZN5Utils5printEPKcz>
       uint8_t mac[6];
       getSHAR(mac); // Assuming you have a function getSHAR to get MAC address
 8008564:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8008568:	2206      	movs	r2, #6
 800856a:	4619      	mov	r1, r3
 800856c:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8008570:	f7fa f918 	bl	80027a4 <WIZCHIP_READ_BUF>
       HAL_Delay(300);
 8008574:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8008578:	f004 fbe8 	bl	800cd4c <HAL_Delay>

       wiz_NetInfo net_info = {
 800857c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008580:	2200      	movs	r2, #0
 8008582:	601a      	str	r2, [r3, #0]
 8008584:	605a      	str	r2, [r3, #4]
 8008586:	609a      	str	r2, [r3, #8]
 8008588:	60da      	str	r2, [r3, #12]
 800858a:	611a      	str	r2, [r3, #16]
 800858c:	f8c3 2013 	str.w	r2, [r3, #19]
 8008590:	2302      	movs	r3, #2
 8008592:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
           {mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]}, // MAC address
 8008596:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
           {0,}, // IP address (will be set by DHCP or static config)
           {0,}, // Gateway (will be set by DHCP or static config)
           {0,}, // Subnet Mask (will be set by DHCP or static config)
           {0,}, // DNS server (will be set by DHCP or static config)
           NETINFO_DHCP // Default to DHCP
       };
 800859a:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
           {mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]}, // MAC address
 800859e:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
       };
 80085a2:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
           {mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]}, // MAC address
 80085a6:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
       };
 80085aa:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
           {mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]}, // MAC address
 80085ae:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
       };
 80085b2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
           {mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]}, // MAC address
 80085b6:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
       };
 80085ba:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
           {mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]}, // MAC address
 80085be:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
       };
 80085c2:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29

       setSHAR(net_info.mac); // Apply MAC address
 80085c6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80085ca:	2206      	movs	r2, #6
 80085cc:	4619      	mov	r1, r3
 80085ce:	f44f 6010 	mov.w	r0, #2304	; 0x900
 80085d2:	f7fa f947 	bl	8002864 <WIZCHIP_WRITE_BUF>

       utils->print("MAC Address: %02X:%02X:%02X:%02X:%02X:%02X\r\n",
                  mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
 80085d6:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
       utils->print("MAC Address: %02X:%02X:%02X:%02X:%02X:%02X\r\n",
 80085da:	4618      	mov	r0, r3
                  mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
 80085dc:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
       utils->print("MAC Address: %02X:%02X:%02X:%02X:%02X:%02X\r\n",
 80085e0:	461c      	mov	r4, r3
                  mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
 80085e2:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
       utils->print("MAC Address: %02X:%02X:%02X:%02X:%02X:%02X\r\n",
 80085e6:	461d      	mov	r5, r3
                  mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
 80085e8:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80085ec:	f897 2040 	ldrb.w	r2, [r7, #64]	; 0x40
 80085f0:	f897 1041 	ldrb.w	r1, [r7, #65]	; 0x41
       utils->print("MAC Address: %02X:%02X:%02X:%02X:%02X:%02X\r\n",
 80085f4:	9102      	str	r1, [sp, #8]
 80085f6:	9201      	str	r2, [sp, #4]
 80085f8:	9300      	str	r3, [sp, #0]
 80085fa:	462b      	mov	r3, r5
 80085fc:	4622      	mov	r2, r4
 80085fe:	4601      	mov	r1, r0
 8008600:	4884      	ldr	r0, [pc, #528]	; (8008814 <_ZN15EthernetManager16configureNetworkEv+0x2c0>)
 8008602:	f003 feeb 	bl	800c3dc <_ZN5Utils5printEPKcz>

       if (config->getDHCPEnabled()) {
 8008606:	69fb      	ldr	r3, [r7, #28]
 8008608:	685b      	ldr	r3, [r3, #4]
 800860a:	4618      	mov	r0, r3
 800860c:	f002 f8e1 	bl	800a7d2 <_ZNK6Config14getDHCPEnabledEv>
 8008610:	4603      	mov	r3, r0
 8008612:	2b00      	cmp	r3, #0
 8008614:	d05d      	beq.n	80086d2 <_ZN15EthernetManager16configureNetworkEv+0x17e>
           // DHCP mode
    	   utils->print("DHCP mode has been enabled@ \r\n");
 8008616:	4880      	ldr	r0, [pc, #512]	; (8008818 <_ZN15EthernetManager16configureNetworkEv+0x2c4>)
 8008618:	f003 fee0 	bl	800c3dc <_ZN5Utils5printEPKcz>
           DHCP_init(DHCP_SOCKET, dhcp_buffer);
 800861c:	4b7f      	ldr	r3, [pc, #508]	; (800881c <_ZN15EthernetManager16configureNetworkEv+0x2c8>)
 800861e:	781b      	ldrb	r3, [r3, #0]
 8008620:	497f      	ldr	r1, [pc, #508]	; (8008820 <_ZN15EthernetManager16configureNetworkEv+0x2cc>)
 8008622:	4618      	mov	r0, r3
 8008624:	f7f9 fede 	bl	80023e4 <DHCP_init>
           reg_dhcp_cbfunc(Callback_IPAssigned, Callback_IPAssigned, Callback_IPConflict);
 8008628:	4a7e      	ldr	r2, [pc, #504]	; (8008824 <_ZN15EthernetManager16configureNetworkEv+0x2d0>)
 800862a:	497f      	ldr	r1, [pc, #508]	; (8008828 <_ZN15EthernetManager16configureNetworkEv+0x2d4>)
 800862c:	487e      	ldr	r0, [pc, #504]	; (8008828 <_ZN15EthernetManager16configureNetworkEv+0x2d4>)
 800862e:	f7f8 fce5 	bl	8000ffc <reg_dhcp_cbfunc>

           uint8_t attempt = 0;
 8008632:	2300      	movs	r3, #0
 8008634:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
           utils->print("Attempting DHCP lease...\r\n");
 8008638:	487c      	ldr	r0, [pc, #496]	; (800882c <_ZN15EthernetManager16configureNetworkEv+0x2d8>)
 800863a:	f003 fecf 	bl	800c3dc <_ZN5Utils5printEPKcz>
           while (!config->getIpAssigned()) {
 800863e:	e00d      	b.n	800865c <_ZN15EthernetManager16configureNetworkEv+0x108>

        	   DHCP_run();
 8008640:	f7f9 fd18 	bl	8002074 <DHCP_run>
        	   HAL_Delay(100);
 8008644:	2064      	movs	r0, #100	; 0x64
 8008646:	f004 fb81 	bl	800cd4c <HAL_Delay>
        	   attempt ++;
 800864a:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 800864e:	3301      	adds	r3, #1
 8008650:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
        	   if(attempt == 10) break;
 8008654:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8008658:	2b0a      	cmp	r3, #10
 800865a:	d00b      	beq.n	8008674 <_ZN15EthernetManager16configureNetworkEv+0x120>
           while (!config->getIpAssigned()) {
 800865c:	69fb      	ldr	r3, [r7, #28]
 800865e:	685b      	ldr	r3, [r3, #4]
 8008660:	4618      	mov	r0, r3
 8008662:	f002 f8c2 	bl	800a7ea <_ZNK6Config13getIpAssignedEv>
 8008666:	4603      	mov	r3, r0
 8008668:	f083 0301 	eor.w	r3, r3, #1
 800866c:	b2db      	uxtb	r3, r3
 800866e:	2b00      	cmp	r3, #0
 8008670:	d1e6      	bne.n	8008640 <_ZN15EthernetManager16configureNetworkEv+0xec>
 8008672:	e000      	b.n	8008676 <_ZN15EthernetManager16configureNetworkEv+0x122>
        	   if(attempt == 10) break;
 8008674:	bf00      	nop

           }
           if (!config->getIpAssigned()) return false;
 8008676:	69fb      	ldr	r3, [r7, #28]
 8008678:	685b      	ldr	r3, [r3, #4]
 800867a:	4618      	mov	r0, r3
 800867c:	f002 f8b5 	bl	800a7ea <_ZNK6Config13getIpAssignedEv>
 8008680:	4603      	mov	r3, r0
 8008682:	f083 0301 	eor.w	r3, r3, #1
 8008686:	b2db      	uxtb	r3, r3
 8008688:	2b00      	cmp	r3, #0
 800868a:	d001      	beq.n	8008690 <_ZN15EthernetManager16configureNetworkEv+0x13c>
 800868c:	2300      	movs	r3, #0
 800868e:	e0ba      	b.n	8008806 <_ZN15EthernetManager16configureNetworkEv+0x2b2>
           // Get network configuration from DHCP
           getIPfromDHCP(net_info.ip);
 8008690:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008694:	3306      	adds	r3, #6
 8008696:	4618      	mov	r0, r3
 8008698:	f7f9 ff34 	bl	8002504 <getIPfromDHCP>
           getGWfromDHCP(net_info.gw);
 800869c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80086a0:	330e      	adds	r3, #14
 80086a2:	4618      	mov	r0, r3
 80086a4:	f7f9 ff4e 	bl	8002544 <getGWfromDHCP>
           getSNfromDHCP(net_info.sn);
 80086a8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80086ac:	330a      	adds	r3, #10
 80086ae:	4618      	mov	r0, r3
 80086b0:	f7f9 ff68 	bl	8002584 <getSNfromDHCP>
           getDNSfromDHCP(net_info.dns);
 80086b4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80086b8:	3312      	adds	r3, #18
 80086ba:	4618      	mov	r0, r3
 80086bc:	f7f9 ff82 	bl	80025c4 <getDNSfromDHCP>

           config->setDHCPNetworkConfig(&net_info);
 80086c0:	69fb      	ldr	r3, [r7, #28]
 80086c2:	685b      	ldr	r3, [r3, #4]
 80086c4:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80086c8:	4611      	mov	r1, r2
 80086ca:	4618      	mov	r0, r3
 80086cc:	f001 ff8a 	bl	800a5e4 <_ZN6Config20setDHCPNetworkConfigEP13wiz_NetInfo_t>
 80086d0:	e045      	b.n	800875e <_ZN15EthernetManager16configureNetworkEv+0x20a>
       } else {
    	   utils->print("STATIC mode has been enabled@ \r\n");
 80086d2:	4857      	ldr	r0, [pc, #348]	; (8008830 <_ZN15EthernetManager16configureNetworkEv+0x2dc>)
 80086d4:	f003 fe82 	bl	800c3dc <_ZN5Utils5printEPKcz>
           // Static IP mode
    	   std::memcpy(net_info.ip, config->getIP().data(), 4); // For std::array
 80086d8:	69fb      	ldr	r3, [r7, #28]
 80086da:	685b      	ldr	r3, [r3, #4]
 80086dc:	4618      	mov	r0, r3
 80086de:	f001 fff8 	bl	800a6d2 <_ZNK6Config5getIPEv>
 80086e2:	4603      	mov	r3, r0
 80086e4:	647b      	str	r3, [r7, #68]	; 0x44
 80086e6:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80086ea:	4618      	mov	r0, r3
 80086ec:	f000 f8a8 	bl	8008840 <_ZNSt5arrayIhLj4EE4dataEv>
 80086f0:	4603      	mov	r3, r0
 80086f2:	681b      	ldr	r3, [r3, #0]
 80086f4:	f8c7 302a 	str.w	r3, [r7, #42]	; 0x2a
    	   std::memcpy(net_info.gw, config->getGateway().data(), 4); // For std::array
 80086f8:	69fb      	ldr	r3, [r7, #28]
 80086fa:	685b      	ldr	r3, [r3, #4]
 80086fc:	4618      	mov	r0, r3
 80086fe:	f002 f805 	bl	800a70c <_ZNK6Config10getGatewayEv>
 8008702:	4603      	mov	r3, r0
 8008704:	64bb      	str	r3, [r7, #72]	; 0x48
 8008706:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800870a:	4618      	mov	r0, r3
 800870c:	f000 f898 	bl	8008840 <_ZNSt5arrayIhLj4EE4dataEv>
 8008710:	4603      	mov	r3, r0
 8008712:	681b      	ldr	r3, [r3, #0]
 8008714:	f8c7 3032 	str.w	r3, [r7, #50]	; 0x32
    	   std::memcpy(net_info.sn, config->getSubnet().data(), 4); // For std::array
 8008718:	69fb      	ldr	r3, [r7, #28]
 800871a:	685b      	ldr	r3, [r3, #4]
 800871c:	4618      	mov	r0, r3
 800871e:	f002 f812 	bl	800a746 <_ZNK6Config9getSubnetEv>
 8008722:	4603      	mov	r3, r0
 8008724:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008726:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800872a:	4618      	mov	r0, r3
 800872c:	f000 f888 	bl	8008840 <_ZNSt5arrayIhLj4EE4dataEv>
 8008730:	4603      	mov	r3, r0
 8008732:	681b      	ldr	r3, [r3, #0]
 8008734:	f8c7 302e 	str.w	r3, [r7, #46]	; 0x2e
    	   std::memcpy(net_info.dns, config->getDNS().data(), 4); // For std::array
 8008738:	69fb      	ldr	r3, [r7, #28]
 800873a:	685b      	ldr	r3, [r3, #4]
 800873c:	4618      	mov	r0, r3
 800873e:	f002 f81f 	bl	800a780 <_ZNK6Config6getDNSEv>
 8008742:	4603      	mov	r3, r0
 8008744:	653b      	str	r3, [r7, #80]	; 0x50
 8008746:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800874a:	4618      	mov	r0, r3
 800874c:	f000 f878 	bl	8008840 <_ZNSt5arrayIhLj4EE4dataEv>
 8008750:	4603      	mov	r3, r0
 8008752:	681b      	ldr	r3, [r3, #0]
 8008754:	f8c7 3036 	str.w	r3, [r7, #54]	; 0x36
           net_info.dhcp = NETINFO_STATIC;
 8008758:	2301      	movs	r3, #1
 800875a:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
       }
       // Apply network settings to WIZnet chip
       wizchip_setnetinfo(&net_info);
 800875e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008762:	4618      	mov	r0, r3
 8008764:	f7fb fe82 	bl	800446c <wizchip_setnetinfo>

       // Print network information
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
                   net_info.ip[0], net_info.ip[1], net_info.ip[2], net_info.ip[3],
 8008768:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 800876c:	469c      	mov	ip, r3
                   net_info.ip[0], net_info.ip[1], net_info.ip[2], net_info.ip[3],
 800876e:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 8008772:	469e      	mov	lr, r3
                   net_info.ip[0], net_info.ip[1], net_info.ip[2], net_info.ip[3],
 8008774:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 8008778:	4698      	mov	r8, r3
                   net_info.ip[0], net_info.ip[1], net_info.ip[2], net_info.ip[3],
 800877a:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 800877e:	4618      	mov	r0, r3
                   net_info.gw[0], net_info.gw[1], net_info.gw[2], net_info.gw[3],
 8008780:	f897 3032 	ldrb.w	r3, [r7, #50]	; 0x32
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 8008784:	461c      	mov	r4, r3
                   net_info.gw[0], net_info.gw[1], net_info.gw[2], net_info.gw[3],
 8008786:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 800878a:	461d      	mov	r5, r3
                   net_info.gw[0], net_info.gw[1], net_info.gw[2], net_info.gw[3],
 800878c:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 8008790:	461e      	mov	r6, r3
                   net_info.gw[0], net_info.gw[1], net_info.gw[2], net_info.gw[3],
 8008792:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 8008796:	61bb      	str	r3, [r7, #24]
                   net_info.sn[0], net_info.sn[1], net_info.sn[2], net_info.sn[3],
 8008798:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 800879c:	617b      	str	r3, [r7, #20]
                   net_info.sn[0], net_info.sn[1], net_info.sn[2], net_info.sn[3],
 800879e:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 80087a2:	613b      	str	r3, [r7, #16]
                   net_info.sn[0], net_info.sn[1], net_info.sn[2], net_info.sn[3],
 80087a4:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 80087a8:	60fb      	str	r3, [r7, #12]
                   net_info.sn[0], net_info.sn[1], net_info.sn[2], net_info.sn[3],
 80087aa:	f897 3031 	ldrb.w	r3, [r7, #49]	; 0x31
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 80087ae:	60bb      	str	r3, [r7, #8]
                   net_info.dns[0], net_info.dns[1], net_info.dns[2], net_info.dns[3]);
 80087b0:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 80087b4:	607b      	str	r3, [r7, #4]
                   net_info.dns[0], net_info.dns[1], net_info.dns[2], net_info.dns[3]);
 80087b6:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 80087ba:	4619      	mov	r1, r3
                   net_info.dns[0], net_info.dns[1], net_info.dns[2], net_info.dns[3]);
 80087bc:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 80087c0:	461a      	mov	r2, r3
                   net_info.dns[0], net_info.dns[1], net_info.dns[2], net_info.dns[3]);
 80087c2:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
       utils->print("IP: %d.%d.%d.%d\r\nGW: %d.%d.%d.%d\r\nNet: %d.%d.%d.%d\r\nDNS: %d.%d.%d.%d\r\n",
 80087c6:	930c      	str	r3, [sp, #48]	; 0x30
 80087c8:	920b      	str	r2, [sp, #44]	; 0x2c
 80087ca:	910a      	str	r1, [sp, #40]	; 0x28
 80087cc:	687a      	ldr	r2, [r7, #4]
 80087ce:	9209      	str	r2, [sp, #36]	; 0x24
 80087d0:	68ba      	ldr	r2, [r7, #8]
 80087d2:	9208      	str	r2, [sp, #32]
 80087d4:	68fa      	ldr	r2, [r7, #12]
 80087d6:	9207      	str	r2, [sp, #28]
 80087d8:	693a      	ldr	r2, [r7, #16]
 80087da:	9206      	str	r2, [sp, #24]
 80087dc:	697a      	ldr	r2, [r7, #20]
 80087de:	9205      	str	r2, [sp, #20]
 80087e0:	69bb      	ldr	r3, [r7, #24]
 80087e2:	9304      	str	r3, [sp, #16]
 80087e4:	9603      	str	r6, [sp, #12]
 80087e6:	9502      	str	r5, [sp, #8]
 80087e8:	9401      	str	r4, [sp, #4]
 80087ea:	9000      	str	r0, [sp, #0]
 80087ec:	4643      	mov	r3, r8
 80087ee:	4672      	mov	r2, lr
 80087f0:	4661      	mov	r1, ip
 80087f2:	4810      	ldr	r0, [pc, #64]	; (8008834 <_ZN15EthernetManager16configureNetworkEv+0x2e0>)
 80087f4:	f003 fdf2 	bl	800c3dc <_ZN5Utils5printEPKcz>

       // Initializing DNS if necessary
       DNS_init(DNS_SOCKET, dns_buffer);
 80087f8:	4b0f      	ldr	r3, [pc, #60]	; (8008838 <_ZN15EthernetManager16configureNetworkEv+0x2e4>)
 80087fa:	781b      	ldrb	r3, [r3, #0]
 80087fc:	490f      	ldr	r1, [pc, #60]	; (800883c <_ZN15EthernetManager16configureNetworkEv+0x2e8>)
 80087fe:	4618      	mov	r0, r3
 8008800:	f7f9 ff1a 	bl	8002638 <DNS_init>

       return true;
 8008804:	2301      	movs	r3, #1
}
 8008806:	4618      	mov	r0, r3
 8008808:	3758      	adds	r7, #88	; 0x58
 800880a:	46bd      	mov	sp, r7
 800880c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008810:	080161d8 	.word	0x080161d8
 8008814:	08016200 	.word	0x08016200
 8008818:	08016230 	.word	0x08016230
 800881c:	20000054 	.word	0x20000054
 8008820:	200002b8 	.word	0x200002b8
 8008824:	08008491 	.word	0x08008491
 8008828:	0800846d 	.word	0x0800846d
 800882c:	08016250 	.word	0x08016250
 8008830:	0801626c 	.word	0x0801626c
 8008834:	08016290 	.word	0x08016290
 8008838:	20000055 	.word	0x20000055
 800883c:	20000ab8 	.word	0x20000ab8

08008840 <_ZNSt5arrayIhLj4EE4dataEv>:
	return _Nm ? _AT_Type::_S_ref(_M_elems, _Nm - 1)
 	           : _AT_Type::_S_ref(_M_elems, 0);
      }

      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
 8008840:	b580      	push	{r7, lr}
 8008842:	b082      	sub	sp, #8
 8008844:	af00      	add	r7, sp, #0
 8008846:	6078      	str	r0, [r7, #4]
      { return _AT_Type::_S_ptr(_M_elems); }
 8008848:	687b      	ldr	r3, [r7, #4]
 800884a:	4618      	mov	r0, r3
 800884c:	f000 f805 	bl	800885a <_ZNSt14__array_traitsIhLj4EE6_S_ptrERA4_Kh>
 8008850:	4603      	mov	r3, r0
 8008852:	4618      	mov	r0, r3
 8008854:	3708      	adds	r7, #8
 8008856:	46bd      	mov	sp, r7
 8008858:	bd80      	pop	{r7, pc}

0800885a <_ZNSt14__array_traitsIhLj4EE6_S_ptrERA4_Kh>:
      _S_ptr(const _Type& __t) noexcept
 800885a:	b480      	push	{r7}
 800885c:	b083      	sub	sp, #12
 800885e:	af00      	add	r7, sp, #0
 8008860:	6078      	str	r0, [r7, #4]
      { return const_cast<_Tp*>(__t); }
 8008862:	687b      	ldr	r3, [r7, #4]
 8008864:	4618      	mov	r0, r3
 8008866:	370c      	adds	r7, #12
 8008868:	46bd      	mov	sp, r7
 800886a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800886e:	4770      	bx	lr

08008870 <_ZN9MuxSelectC1Ev>:

#include "MuxSelect.h"


MuxSelect::MuxSelect() {
 8008870:	b480      	push	{r7}
 8008872:	b083      	sub	sp, #12
 8008874:	af00      	add	r7, sp, #0
 8008876:	6078      	str	r0, [r7, #4]
	muxSelect[0] = {GPIOE,  GPIO_PIN_4};
 8008878:	687b      	ldr	r3, [r7, #4]
 800887a:	4a35      	ldr	r2, [pc, #212]	; (8008950 <_ZN9MuxSelectC1Ev+0xe0>)
 800887c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008880:	e883 0003 	stmia.w	r3, {r0, r1}
	muxSelect[1] = {GPIOE,  GPIO_PIN_5};
 8008884:	687b      	ldr	r3, [r7, #4]
 8008886:	4a33      	ldr	r2, [pc, #204]	; (8008954 <_ZN9MuxSelectC1Ev+0xe4>)
 8008888:	3308      	adds	r3, #8
 800888a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800888e:	e883 0003 	stmia.w	r3, {r0, r1}
	muxSelect[2]  =  {GPIOE,  GPIO_PIN_6};
 8008892:	687b      	ldr	r3, [r7, #4]
 8008894:	4a30      	ldr	r2, [pc, #192]	; (8008958 <_ZN9MuxSelectC1Ev+0xe8>)
 8008896:	3310      	adds	r3, #16
 8008898:	e892 0003 	ldmia.w	r2, {r0, r1}
 800889c:	e883 0003 	stmia.w	r3, {r0, r1}


	analogCase[7] = {GPIO_PIN_RESET, GPIO_PIN_RESET, GPIO_PIN_RESET};
 80088a0:	687b      	ldr	r3, [r7, #4]
 80088a2:	2200      	movs	r2, #0
 80088a4:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 80088a8:	687b      	ldr	r3, [r7, #4]
 80088aa:	2200      	movs	r2, #0
 80088ac:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 80088b0:	687b      	ldr	r3, [r7, #4]
 80088b2:	2200      	movs	r2, #0
 80088b4:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
	analogCase[6] = {GPIO_PIN_RESET, GPIO_PIN_RESET, GPIO_PIN_SET};
 80088b8:	687b      	ldr	r3, [r7, #4]
 80088ba:	2200      	movs	r2, #0
 80088bc:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 80088c0:	687b      	ldr	r3, [r7, #4]
 80088c2:	2200      	movs	r2, #0
 80088c4:	f883 202b 	strb.w	r2, [r3, #43]	; 0x2b
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	2201      	movs	r2, #1
 80088cc:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
	analogCase[5] = {GPIO_PIN_RESET, GPIO_PIN_SET, GPIO_PIN_RESET};
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	2200      	movs	r2, #0
 80088d4:	f883 2027 	strb.w	r2, [r3, #39]	; 0x27
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	2201      	movs	r2, #1
 80088dc:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80088e0:	687b      	ldr	r3, [r7, #4]
 80088e2:	2200      	movs	r2, #0
 80088e4:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
	analogCase[4] = {GPIO_PIN_RESET, GPIO_PIN_SET, GPIO_PIN_SET};
 80088e8:	687b      	ldr	r3, [r7, #4]
 80088ea:	4a1c      	ldr	r2, [pc, #112]	; (800895c <_ZN9MuxSelectC1Ev+0xec>)
 80088ec:	3324      	adds	r3, #36	; 0x24
 80088ee:	6812      	ldr	r2, [r2, #0]
 80088f0:	4611      	mov	r1, r2
 80088f2:	8019      	strh	r1, [r3, #0]
 80088f4:	3302      	adds	r3, #2
 80088f6:	0c12      	lsrs	r2, r2, #16
 80088f8:	701a      	strb	r2, [r3, #0]
	analogCase[3] = {GPIO_PIN_SET, GPIO_PIN_RESET, GPIO_PIN_RESET};
 80088fa:	687b      	ldr	r3, [r7, #4]
 80088fc:	2201      	movs	r2, #1
 80088fe:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	2200      	movs	r2, #0
 8008906:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	2200      	movs	r2, #0
 800890e:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
	analogCase[2] = {GPIO_PIN_SET, GPIO_PIN_RESET, GPIO_PIN_SET};
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	4a12      	ldr	r2, [pc, #72]	; (8008960 <_ZN9MuxSelectC1Ev+0xf0>)
 8008916:	331e      	adds	r3, #30
 8008918:	8811      	ldrh	r1, [r2, #0]
 800891a:	7892      	ldrb	r2, [r2, #2]
 800891c:	8019      	strh	r1, [r3, #0]
 800891e:	709a      	strb	r2, [r3, #2]
	analogCase[1] = {GPIO_PIN_SET, GPIO_PIN_SET, GPIO_PIN_RESET};
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	4a10      	ldr	r2, [pc, #64]	; (8008964 <_ZN9MuxSelectC1Ev+0xf4>)
 8008924:	331b      	adds	r3, #27
 8008926:	8811      	ldrh	r1, [r2, #0]
 8008928:	7892      	ldrb	r2, [r2, #2]
 800892a:	8019      	strh	r1, [r3, #0]
 800892c:	709a      	strb	r2, [r3, #2]
	analogCase[0] = {GPIO_PIN_SET, GPIO_PIN_SET, GPIO_PIN_SET};
 800892e:	687b      	ldr	r3, [r7, #4]
 8008930:	4a0d      	ldr	r2, [pc, #52]	; (8008968 <_ZN9MuxSelectC1Ev+0xf8>)
 8008932:	3318      	adds	r3, #24
 8008934:	6812      	ldr	r2, [r2, #0]
 8008936:	4611      	mov	r1, r2
 8008938:	8019      	strh	r1, [r3, #0]
 800893a:	3302      	adds	r3, #2
 800893c:	0c12      	lsrs	r2, r2, #16
 800893e:	701a      	strb	r2, [r3, #0]

}
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	4618      	mov	r0, r3
 8008944:	370c      	adds	r7, #12
 8008946:	46bd      	mov	sp, r7
 8008948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800894c:	4770      	bx	lr
 800894e:	bf00      	nop
 8008950:	080162d8 	.word	0x080162d8
 8008954:	080162e0 	.word	0x080162e0
 8008958:	080162e8 	.word	0x080162e8
 800895c:	080162f0 	.word	0x080162f0
 8008960:	080162f4 	.word	0x080162f4
 8008964:	080162f8 	.word	0x080162f8
 8008968:	080162fc 	.word	0x080162fc

0800896c <_ZN9MuxSelect4initEP17ADC_HandleTypeDef>:

void MuxSelect::init(ADC_HandleTypeDef* hadc1Instance){
 800896c:	b480      	push	{r7}
 800896e:	b083      	sub	sp, #12
 8008970:	af00      	add	r7, sp, #0
 8008972:	6078      	str	r0, [r7, #4]
 8008974:	6039      	str	r1, [r7, #0]
	hadc1 = hadc1Instance;
 8008976:	687b      	ldr	r3, [r7, #4]
 8008978:	683a      	ldr	r2, [r7, #0]
 800897a:	631a      	str	r2, [r3, #48]	; 0x30
}
 800897c:	bf00      	nop
 800897e:	370c      	adds	r7, #12
 8008980:	46bd      	mov	sp, r7
 8008982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008986:	4770      	bx	lr

08008988 <_ZN9MuxSelect4readEv>:


float MuxSelect::read() {
 8008988:	b580      	push	{r7, lr}
 800898a:	b084      	sub	sp, #16
 800898c:	af00      	add	r7, sp, #0
 800898e:	6078      	str	r0, [r7, #4]
    float voltage = 0.0f;
 8008990:	f04f 0300 	mov.w	r3, #0
 8008994:	60bb      	str	r3, [r7, #8]
    uint32_t adcValue;

    HAL_ADC_Start(hadc1);
 8008996:	687b      	ldr	r3, [r7, #4]
 8008998:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800899a:	4618      	mov	r0, r3
 800899c:	f004 fa3e 	bl	800ce1c <HAL_ADC_Start>
    if (HAL_ADC_PollForConversion(hadc1, 100) == HAL_OK) {
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80089a4:	2164      	movs	r1, #100	; 0x64
 80089a6:	4618      	mov	r0, r3
 80089a8:	f004 fb3d 	bl	800d026 <HAL_ADC_PollForConversion>
 80089ac:	4603      	mov	r3, r0
 80089ae:	2b00      	cmp	r3, #0
 80089b0:	bf0c      	ite	eq
 80089b2:	2301      	moveq	r3, #1
 80089b4:	2300      	movne	r3, #0
 80089b6:	b2db      	uxtb	r3, r3
 80089b8:	2b00      	cmp	r3, #0
 80089ba:	d005      	beq.n	80089c8 <_ZN9MuxSelect4readEv+0x40>
        adcValue = HAL_ADC_GetValue(hadc1);
 80089bc:	687b      	ldr	r3, [r7, #4]
 80089be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80089c0:	4618      	mov	r0, r3
 80089c2:	f004 fccb 	bl	800d35c <HAL_ADC_GetValue>
 80089c6:	60f8      	str	r0, [r7, #12]
    }
    HAL_ADC_Stop(hadc1);
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80089cc:	4618      	mov	r0, r3
 80089ce:	f004 faf7 	bl	800cfc0 <HAL_ADC_Stop>
    voltage = adcValueToVoltage(adcValue, 12, 3.3f);
 80089d2:	ed9f 0a08 	vldr	s0, [pc, #32]	; 80089f4 <_ZN9MuxSelect4readEv+0x6c>
 80089d6:	220c      	movs	r2, #12
 80089d8:	68f9      	ldr	r1, [r7, #12]
 80089da:	6878      	ldr	r0, [r7, #4]
 80089dc:	f000 f80c 	bl	80089f8 <_ZN9MuxSelect17adcValueToVoltageEmhf>
 80089e0:	ed87 0a02 	vstr	s0, [r7, #8]

    return voltage;
 80089e4:	68bb      	ldr	r3, [r7, #8]
 80089e6:	ee07 3a90 	vmov	s15, r3
}
 80089ea:	eeb0 0a67 	vmov.f32	s0, s15
 80089ee:	3710      	adds	r7, #16
 80089f0:	46bd      	mov	sp, r7
 80089f2:	bd80      	pop	{r7, pc}
 80089f4:	40533333 	.word	0x40533333

080089f8 <_ZN9MuxSelect17adcValueToVoltageEmhf>:

float MuxSelect::adcValueToVoltage(uint32_t adcValue, uint8_t resolution, float referenceVoltage) {
 80089f8:	b480      	push	{r7}
 80089fa:	b087      	sub	sp, #28
 80089fc:	af00      	add	r7, sp, #0
 80089fe:	60f8      	str	r0, [r7, #12]
 8008a00:	60b9      	str	r1, [r7, #8]
 8008a02:	4613      	mov	r3, r2
 8008a04:	ed87 0a00 	vstr	s0, [r7]
 8008a08:	71fb      	strb	r3, [r7, #7]
    float measuredVoltage = (adcValue * referenceVoltage) / (1 << resolution);
 8008a0a:	68bb      	ldr	r3, [r7, #8]
 8008a0c:	ee07 3a90 	vmov	s15, r3
 8008a10:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8008a14:	edd7 7a00 	vldr	s15, [r7]
 8008a18:	ee67 6a27 	vmul.f32	s13, s14, s15
 8008a1c:	79fb      	ldrb	r3, [r7, #7]
 8008a1e:	2201      	movs	r2, #1
 8008a20:	fa02 f303 	lsl.w	r3, r2, r3
 8008a24:	ee07 3a90 	vmov	s15, r3
 8008a28:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8008a2c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008a30:	edc7 7a05 	vstr	s15, [r7, #20]
    float scalingFactor = 10.0; // Adjusted based on the voltage divider calculation
 8008a34:	4b07      	ldr	r3, [pc, #28]	; (8008a54 <_ZN9MuxSelect17adcValueToVoltageEmhf+0x5c>)
 8008a36:	613b      	str	r3, [r7, #16]
    return measuredVoltage * scalingFactor;
 8008a38:	ed97 7a05 	vldr	s14, [r7, #20]
 8008a3c:	edd7 7a04 	vldr	s15, [r7, #16]
 8008a40:	ee67 7a27 	vmul.f32	s15, s14, s15

}
 8008a44:	eeb0 0a67 	vmov.f32	s0, s15
 8008a48:	371c      	adds	r7, #28
 8008a4a:	46bd      	mov	sp, r7
 8008a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a50:	4770      	bx	lr
 8008a52:	bf00      	nop
 8008a54:	41200000 	.word	0x41200000

08008a58 <_ZN9MuxSelect12SwitchAnalogEv>:



AnalogReadings MuxSelect::SwitchAnalog() {
 8008a58:	b5b0      	push	{r4, r5, r7, lr}
 8008a5a:	b084      	sub	sp, #16
 8008a5c:	af00      	add	r7, sp, #0
 8008a5e:	6078      	str	r0, [r7, #4]
 8008a60:	6039      	str	r1, [r7, #0]
    static AnalogReadings readings; // Static to maintain lifetime beyond the function call

    for (int i = 0; i < 8; i++) {
 8008a62:	2300      	movs	r3, #0
 8008a64:	60fb      	str	r3, [r7, #12]
 8008a66:	e03d      	b.n	8008ae4 <_ZN9MuxSelect12SwitchAnalogEv+0x8c>
        HAL_GPIO_WritePin(muxSelect[0].port, muxSelect[0].pin, analogCase[i].S0);
 8008a68:	683b      	ldr	r3, [r7, #0]
 8008a6a:	6818      	ldr	r0, [r3, #0]
 8008a6c:	683b      	ldr	r3, [r7, #0]
 8008a6e:	889c      	ldrh	r4, [r3, #4]
 8008a70:	6839      	ldr	r1, [r7, #0]
 8008a72:	68fa      	ldr	r2, [r7, #12]
 8008a74:	4613      	mov	r3, r2
 8008a76:	005b      	lsls	r3, r3, #1
 8008a78:	4413      	add	r3, r2
 8008a7a:	440b      	add	r3, r1
 8008a7c:	331a      	adds	r3, #26
 8008a7e:	781b      	ldrb	r3, [r3, #0]
 8008a80:	461a      	mov	r2, r3
 8008a82:	4621      	mov	r1, r4
 8008a84:	f005 fa16 	bl	800deb4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(muxSelect[1].port, muxSelect[1].pin, analogCase[i].S1);
 8008a88:	683b      	ldr	r3, [r7, #0]
 8008a8a:	6898      	ldr	r0, [r3, #8]
 8008a8c:	683b      	ldr	r3, [r7, #0]
 8008a8e:	899c      	ldrh	r4, [r3, #12]
 8008a90:	6839      	ldr	r1, [r7, #0]
 8008a92:	68fa      	ldr	r2, [r7, #12]
 8008a94:	4613      	mov	r3, r2
 8008a96:	005b      	lsls	r3, r3, #1
 8008a98:	4413      	add	r3, r2
 8008a9a:	440b      	add	r3, r1
 8008a9c:	3319      	adds	r3, #25
 8008a9e:	781b      	ldrb	r3, [r3, #0]
 8008aa0:	461a      	mov	r2, r3
 8008aa2:	4621      	mov	r1, r4
 8008aa4:	f005 fa06 	bl	800deb4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(muxSelect[2].port, muxSelect[2].pin, analogCase[i].S2);
 8008aa8:	683b      	ldr	r3, [r7, #0]
 8008aaa:	6918      	ldr	r0, [r3, #16]
 8008aac:	683b      	ldr	r3, [r7, #0]
 8008aae:	8a9c      	ldrh	r4, [r3, #20]
 8008ab0:	6839      	ldr	r1, [r7, #0]
 8008ab2:	68fa      	ldr	r2, [r7, #12]
 8008ab4:	4613      	mov	r3, r2
 8008ab6:	005b      	lsls	r3, r3, #1
 8008ab8:	4413      	add	r3, r2
 8008aba:	440b      	add	r3, r1
 8008abc:	3318      	adds	r3, #24
 8008abe:	781b      	ldrb	r3, [r3, #0]
 8008ac0:	461a      	mov	r2, r3
 8008ac2:	4621      	mov	r1, r4
 8008ac4:	f005 f9f6 	bl	800deb4 <HAL_GPIO_WritePin>

        readings.values[i] = read();
 8008ac8:	6838      	ldr	r0, [r7, #0]
 8008aca:	f7ff ff5d 	bl	8008988 <_ZN9MuxSelect4readEv>
 8008ace:	eef0 7a40 	vmov.f32	s15, s0
 8008ad2:	4a0d      	ldr	r2, [pc, #52]	; (8008b08 <_ZN9MuxSelect12SwitchAnalogEv+0xb0>)
 8008ad4:	68fb      	ldr	r3, [r7, #12]
 8008ad6:	009b      	lsls	r3, r3, #2
 8008ad8:	4413      	add	r3, r2
 8008ada:	edc3 7a00 	vstr	s15, [r3]
    for (int i = 0; i < 8; i++) {
 8008ade:	68fb      	ldr	r3, [r7, #12]
 8008ae0:	3301      	adds	r3, #1
 8008ae2:	60fb      	str	r3, [r7, #12]
 8008ae4:	68fb      	ldr	r3, [r7, #12]
 8008ae6:	2b07      	cmp	r3, #7
 8008ae8:	ddbe      	ble.n	8008a68 <_ZN9MuxSelect12SwitchAnalogEv+0x10>
      //  HAL_Delay(100);
    }

    return readings; // Return the struct containing the array
 8008aea:	687b      	ldr	r3, [r7, #4]
 8008aec:	4a06      	ldr	r2, [pc, #24]	; (8008b08 <_ZN9MuxSelect12SwitchAnalogEv+0xb0>)
 8008aee:	461c      	mov	r4, r3
 8008af0:	4615      	mov	r5, r2
 8008af2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008af4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008af6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008afa:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8008afe:	6878      	ldr	r0, [r7, #4]
 8008b00:	3710      	adds	r7, #16
 8008b02:	46bd      	mov	sp, r7
 8008b04:	bdb0      	pop	{r4, r5, r7, pc}
 8008b06:	bf00      	nop
 8008b08:	200012bc 	.word	0x200012bc

08008b0c <_ZN11UARTHandlerC1Ev>:
#include "UARTHandler.h"
#include <cstring> // For memset and memcpy
#include <array>
#include <string>

UARTHandler::UARTHandler() : bufferIndex(0), newDataAvailable(false) {
 8008b0c:	b580      	push	{r7, lr}
 8008b0e:	b082      	sub	sp, #8
 8008b10:	af00      	add	r7, sp, #0
 8008b12:	6078      	str	r0, [r7, #4]
 8008b14:	687b      	ldr	r3, [r7, #4]
 8008b16:	3310      	adds	r3, #16
 8008b18:	4618      	mov	r0, r3
 8008b1a:	f7ff fbb9 	bl	8008290 <_ZN14CircularBufferC1Ev>
 8008b1e:	687b      	ldr	r3, [r7, #4]
 8008b20:	2200      	movs	r2, #0
 8008b22:	f8c3 2618 	str.w	r2, [r3, #1560]	; 0x618
 8008b26:	687b      	ldr	r3, [r7, #4]
 8008b28:	2200      	movs	r2, #0
 8008b2a:	f883 261c 	strb.w	r2, [r3, #1564]	; 0x61c
 8008b2e:	687b      	ldr	r3, [r7, #4]
 8008b30:	2200      	movs	r2, #0
 8008b32:	f883 261d 	strb.w	r2, [r3, #1565]	; 0x61d
    memset(receiveBuffer, 0, sizeof(receiveBuffer));
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	f503 6383 	add.w	r3, r3, #1048	; 0x418
 8008b3c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8008b40:	2100      	movs	r1, #0
 8008b42:	4618      	mov	r0, r3
 8008b44:	f00a f97a 	bl	8012e3c <memset>
}
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	4618      	mov	r0, r3
 8008b4c:	3708      	adds	r7, #8
 8008b4e:	46bd      	mov	sp, r7
 8008b50:	bd80      	pop	{r7, pc}

08008b52 <_ZN11UARTHandler4initEP20__UART_HandleTypeDefP5UtilsP6Config>:

void UARTHandler::init(UART_HandleTypeDef* uartHandle, Utils* utilsInstance, Config* configInstance) {
 8008b52:	b580      	push	{r7, lr}
 8008b54:	b086      	sub	sp, #24
 8008b56:	af00      	add	r7, sp, #0
 8008b58:	60f8      	str	r0, [r7, #12]
 8008b5a:	60b9      	str	r1, [r7, #8]
 8008b5c:	607a      	str	r2, [r7, #4]
 8008b5e:	603b      	str	r3, [r7, #0]
    huart = uartHandle;
 8008b60:	68fb      	ldr	r3, [r7, #12]
 8008b62:	68ba      	ldr	r2, [r7, #8]
 8008b64:	609a      	str	r2, [r3, #8]
    utils = utilsInstance;
 8008b66:	68fb      	ldr	r3, [r7, #12]
 8008b68:	687a      	ldr	r2, [r7, #4]
 8008b6a:	601a      	str	r2, [r3, #0]
    config = configInstance;
 8008b6c:	68fb      	ldr	r3, [r7, #12]
 8008b6e:	683a      	ldr	r2, [r7, #0]
 8008b70:	605a      	str	r2, [r3, #4]

    HAL_StatusTypeDef result = HAL_UART_Receive_IT(huart, &rxByte, 1);
 8008b72:	68fb      	ldr	r3, [r7, #12]
 8008b74:	6898      	ldr	r0, [r3, #8]
 8008b76:	68fb      	ldr	r3, [r7, #12]
 8008b78:	330c      	adds	r3, #12
 8008b7a:	2201      	movs	r2, #1
 8008b7c:	4619      	mov	r1, r3
 8008b7e:	f007 f966 	bl	800fe4e <HAL_UART_Receive_IT>
 8008b82:	4603      	mov	r3, r0
 8008b84:	75fb      	strb	r3, [r7, #23]

    if(result != HAL_OK) {

    }
}
 8008b86:	bf00      	nop
 8008b88:	3718      	adds	r7, #24
 8008b8a:	46bd      	mov	sp, r7
 8008b8c:	bd80      	pop	{r7, pc}

08008b8e <_ZN11UARTHandler15setRealTimeDataEb>:

void UARTHandler::setRealTimeData(bool requested){
 8008b8e:	b480      	push	{r7}
 8008b90:	b083      	sub	sp, #12
 8008b92:	af00      	add	r7, sp, #0
 8008b94:	6078      	str	r0, [r7, #4]
 8008b96:	460b      	mov	r3, r1
 8008b98:	70fb      	strb	r3, [r7, #3]
     realTimeData = requested;
 8008b9a:	687b      	ldr	r3, [r7, #4]
 8008b9c:	78fa      	ldrb	r2, [r7, #3]
 8008b9e:	f883 261d 	strb.w	r2, [r3, #1565]	; 0x61d
}
 8008ba2:	bf00      	nop
 8008ba4:	370c      	adds	r7, #12
 8008ba6:	46bd      	mov	sp, r7
 8008ba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bac:	4770      	bx	lr

08008bae <_ZN11UARTHandler15getRealTimeDataEv>:

bool UARTHandler::getRealTimeData(){
 8008bae:	b480      	push	{r7}
 8008bb0:	b083      	sub	sp, #12
 8008bb2:	af00      	add	r7, sp, #0
 8008bb4:	6078      	str	r0, [r7, #4]
	return realTimeData;
 8008bb6:	687b      	ldr	r3, [r7, #4]
 8008bb8:	f893 361d 	ldrb.w	r3, [r3, #1565]	; 0x61d
}
 8008bbc:	4618      	mov	r0, r3
 8008bbe:	370c      	adds	r7, #12
 8008bc0:	46bd      	mov	sp, r7
 8008bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bc6:	4770      	bx	lr

08008bc8 <_ZN11UARTHandler19isNewMessageArrivedEv>:

bool UARTHandler::isNewMessageArrived() {
 8008bc8:	b480      	push	{r7}
 8008bca:	b083      	sub	sp, #12
 8008bcc:	af00      	add	r7, sp, #0
 8008bce:	6078      	str	r0, [r7, #4]
    return newDataAvailable;
 8008bd0:	687b      	ldr	r3, [r7, #4]
 8008bd2:	f893 361c 	ldrb.w	r3, [r3, #1564]	; 0x61c
}
 8008bd6:	4618      	mov	r0, r3
 8008bd8:	370c      	adds	r7, #12
 8008bda:	46bd      	mov	sp, r7
 8008bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008be0:	4770      	bx	lr

08008be2 <_ZN11UARTHandler19setNewDataAvailableEb>:

void UARTHandler::setNewDataAvailable(bool isArrived) {
 8008be2:	b480      	push	{r7}
 8008be4:	b083      	sub	sp, #12
 8008be6:	af00      	add	r7, sp, #0
 8008be8:	6078      	str	r0, [r7, #4]
 8008bea:	460b      	mov	r3, r1
 8008bec:	70fb      	strb	r3, [r7, #3]
    newDataAvailable = isArrived;
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	78fa      	ldrb	r2, [r7, #3]
 8008bf2:	f883 261c 	strb.w	r2, [r3, #1564]	; 0x61c
}
 8008bf6:	bf00      	nop
 8008bf8:	370c      	adds	r7, #12
 8008bfa:	46bd      	mov	sp, r7
 8008bfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c00:	4770      	bx	lr

08008c02 <_ZN11UARTHandler9onReceiveEv>:

void UARTHandler::onReceive() {
 8008c02:	b580      	push	{r7, lr}
 8008c04:	b082      	sub	sp, #8
 8008c06:	af00      	add	r7, sp, #0
 8008c08:	6078      	str	r0, [r7, #4]


    if (bufferIndex < sizeof(receiveBuffer) - 1) {
 8008c0a:	687b      	ldr	r3, [r7, #4]
 8008c0c:	f8d3 3618 	ldr.w	r3, [r3, #1560]	; 0x618
 8008c10:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8008c14:	d822      	bhi.n	8008c5c <_ZN11UARTHandler9onReceiveEv+0x5a>
        receiveBuffer[bufferIndex++] = rxByte;
 8008c16:	687b      	ldr	r3, [r7, #4]
 8008c18:	f8d3 3618 	ldr.w	r3, [r3, #1560]	; 0x618
 8008c1c:	1c59      	adds	r1, r3, #1
 8008c1e:	687a      	ldr	r2, [r7, #4]
 8008c20:	f8c2 1618 	str.w	r1, [r2, #1560]	; 0x618
 8008c24:	687a      	ldr	r2, [r7, #4]
 8008c26:	7b11      	ldrb	r1, [r2, #12]
 8008c28:	687a      	ldr	r2, [r7, #4]
 8008c2a:	4413      	add	r3, r2
 8008c2c:	460a      	mov	r2, r1
 8008c2e:	f883 2418 	strb.w	r2, [r3, #1048]	; 0x418
        // Check for message end (e.g., newline character)
      //  utils->print("Entered to this function \r\n");
        if (rxByte == '\n') {
 8008c32:	687b      	ldr	r3, [r7, #4]
 8008c34:	7b1b      	ldrb	r3, [r3, #12]
 8008c36:	2b0a      	cmp	r3, #10
 8008c38:	d114      	bne.n	8008c64 <_ZN11UARTHandler9onReceiveEv+0x62>
            receiveBuffer[bufferIndex] = '\0';
 8008c3a:	687b      	ldr	r3, [r7, #4]
 8008c3c:	f8d3 3618 	ldr.w	r3, [r3, #1560]	; 0x618
 8008c40:	687a      	ldr	r2, [r7, #4]
 8008c42:	4413      	add	r3, r2
 8008c44:	2200      	movs	r2, #0
 8008c46:	f883 2418 	strb.w	r2, [r3, #1048]	; 0x418

            bufferIndex = 0; // Reset index for the next message
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	2200      	movs	r2, #0
 8008c4e:	f8c3 2618 	str.w	r2, [r3, #1560]	; 0x618
            setNewDataAvailable(true);
 8008c52:	2101      	movs	r1, #1
 8008c54:	6878      	ldr	r0, [r7, #4]
 8008c56:	f7ff ffc4 	bl	8008be2 <_ZN11UARTHandler19setNewDataAvailableEb>
 8008c5a:	e003      	b.n	8008c64 <_ZN11UARTHandler9onReceiveEv+0x62>
        }
    } else {
        // Handle buffer overflow
      //  print("Buffer overflow \r\n");
        bufferIndex = 0; // Reset buffer index
 8008c5c:	687b      	ldr	r3, [r7, #4]
 8008c5e:	2200      	movs	r2, #0
 8008c60:	f8c3 2618 	str.w	r2, [r3, #1560]	; 0x618
    }


    HAL_UART_Receive_IT(huart, &rxByte, 1); // Prepare to receive the next byte
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	6898      	ldr	r0, [r3, #8]
 8008c68:	687b      	ldr	r3, [r7, #4]
 8008c6a:	330c      	adds	r3, #12
 8008c6c:	2201      	movs	r2, #1
 8008c6e:	4619      	mov	r1, r3
 8008c70:	f007 f8ed 	bl	800fe4e <HAL_UART_Receive_IT>

}
 8008c74:	bf00      	nop
 8008c76:	3708      	adds	r7, #8
 8008c78:	46bd      	mov	sp, r7
 8008c7a:	bd80      	pop	{r7, pc}

08008c7c <_ZN11UARTHandler19processReceivedDataEv>:

void UARTHandler::processReceivedData() {
 8008c7c:	b580      	push	{r7, lr}
 8008c7e:	b08a      	sub	sp, #40	; 0x28
 8008c80:	af00      	add	r7, sp, #0
 8008c82:	6078      	str	r0, [r7, #4]
    if (!isNewMessageArrived()) return; // Early exit if no new data
 8008c84:	6878      	ldr	r0, [r7, #4]
 8008c86:	f7ff ff9f 	bl	8008bc8 <_ZN11UARTHandler19isNewMessageArrivedEv>
 8008c8a:	4603      	mov	r3, r0
 8008c8c:	f083 0301 	eor.w	r3, r3, #1
 8008c90:	b2db      	uxtb	r3, r3
 8008c92:	2b00      	cmp	r3, #0
 8008c94:	f040 80c3 	bne.w	8008e1e <_ZN11UARTHandler19processReceivedDataEv+0x1a2>
    cJSON *json = cJSON_Parse(reinterpret_cast<const char*>(receiveBuffer));
 8008c98:	687b      	ldr	r3, [r7, #4]
 8008c9a:	f503 6383 	add.w	r3, r3, #1048	; 0x418
 8008c9e:	4618      	mov	r0, r3
 8008ca0:	f7fc fce8 	bl	8005674 <cJSON_Parse>
 8008ca4:	6278      	str	r0, [r7, #36]	; 0x24
    if (json == NULL) {
 8008ca6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008ca8:	2b00      	cmp	r3, #0
 8008caa:	d10f      	bne.n	8008ccc <_ZN11UARTHandler19processReceivedDataEv+0x50>
        const char *error_ptr = cJSON_GetErrorPtr();
 8008cac:	f7fb fc1e 	bl	80044ec <cJSON_GetErrorPtr>
 8008cb0:	60b8      	str	r0, [r7, #8]
        if (error_ptr != NULL) {
 8008cb2:	68bb      	ldr	r3, [r7, #8]
 8008cb4:	2b00      	cmp	r3, #0
 8008cb6:	f000 809f 	beq.w	8008df8 <_ZN11UARTHandler19processReceivedDataEv+0x17c>
            fprintf(stderr, "Error before: %s\n", error_ptr);
 8008cba:	4b5b      	ldr	r3, [pc, #364]	; (8008e28 <_ZN11UARTHandler19processReceivedDataEv+0x1ac>)
 8008cbc:	681b      	ldr	r3, [r3, #0]
 8008cbe:	68db      	ldr	r3, [r3, #12]
 8008cc0:	68ba      	ldr	r2, [r7, #8]
 8008cc2:	495a      	ldr	r1, [pc, #360]	; (8008e2c <_ZN11UARTHandler19processReceivedDataEv+0x1b0>)
 8008cc4:	4618      	mov	r0, r3
 8008cc6:	f009 ff61 	bl	8012b8c <fiprintf>
 8008cca:	e095      	b.n	8008df8 <_ZN11UARTHandler19processReceivedDataEv+0x17c>
        }
    } else {
        cJSON *commandItem = cJSON_GetObjectItemCaseSensitive(json, "type");
 8008ccc:	4958      	ldr	r1, [pc, #352]	; (8008e30 <_ZN11UARTHandler19processReceivedDataEv+0x1b4>)
 8008cce:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8008cd0:	f7fd fb28 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 8008cd4:	6238      	str	r0, [r7, #32]
        cJSON *item = cJSON_GetObjectItemCaseSensitive(json, "data");
 8008cd6:	4957      	ldr	r1, [pc, #348]	; (8008e34 <_ZN11UARTHandler19processReceivedDataEv+0x1b8>)
 8008cd8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8008cda:	f7fd fb23 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 8008cde:	61f8      	str	r0, [r7, #28]
        if (cJSON_IsNumber(commandItem)) {
 8008ce0:	6a38      	ldr	r0, [r7, #32]
 8008ce2:	f7fd fd06 	bl	80066f2 <cJSON_IsNumber>
 8008ce6:	4603      	mov	r3, r0
 8008ce8:	2b00      	cmp	r3, #0
 8008cea:	bf14      	ite	ne
 8008cec:	2301      	movne	r3, #1
 8008cee:	2300      	moveq	r3, #0
 8008cf0:	b2db      	uxtb	r3, r3
 8008cf2:	2b00      	cmp	r3, #0
 8008cf4:	d07d      	beq.n	8008df2 <_ZN11UARTHandler19processReceivedDataEv+0x176>
            int type = commandItem->valueint;
 8008cf6:	6a3b      	ldr	r3, [r7, #32]
 8008cf8:	695b      	ldr	r3, [r3, #20]
 8008cfa:	61bb      	str	r3, [r7, #24]

            switch(type) {
 8008cfc:	69bb      	ldr	r3, [r7, #24]
 8008cfe:	3b01      	subs	r3, #1
 8008d00:	2b07      	cmp	r3, #7
 8008d02:	d873      	bhi.n	8008dec <_ZN11UARTHandler19processReceivedDataEv+0x170>
 8008d04:	a201      	add	r2, pc, #4	; (adr r2, 8008d0c <_ZN11UARTHandler19processReceivedDataEv+0x90>)
 8008d06:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008d0a:	bf00      	nop
 8008d0c:	08008d2d 	.word	0x08008d2d
 8008d10:	08008d51 	.word	0x08008d51
 8008d14:	08008d89 	.word	0x08008d89
 8008d18:	08008d9b 	.word	0x08008d9b
 8008d1c:	08008dad 	.word	0x08008dad
 8008d20:	08008dbf 	.word	0x08008dbf
 8008d24:	08008dd1 	.word	0x08008dd1
 8008d28:	08008ddf 	.word	0x08008ddf
                case INFO_TYPE: {
                //	 utils->print("Message has been arrived: %d\r\n", type);
                	    char* data = config->getInfoList();
 8008d2c:	687b      	ldr	r3, [r7, #4]
 8008d2e:	685b      	ldr	r3, [r3, #4]
 8008d30:	4618      	mov	r0, r3
 8008d32:	f000 ff2b 	bl	8009b8c <_ZN6Config11getInfoListEv>
 8008d36:	6178      	str	r0, [r7, #20]
                	    size_t data_len = strlen(data);
 8008d38:	6978      	ldr	r0, [r7, #20]
 8008d3a:	f7f7 faa9 	bl	8000290 <strlen>
 8008d3e:	6138      	str	r0, [r7, #16]
                	    HAL_UART_Transmit(&huart1, reinterpret_cast<uint8_t*>(data), data_len, 1000); // +1 for the added "\r"
 8008d40:	693b      	ldr	r3, [r7, #16]
 8008d42:	b29a      	uxth	r2, r3
 8008d44:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008d48:	6979      	ldr	r1, [r7, #20]
 8008d4a:	483b      	ldr	r0, [pc, #236]	; (8008e38 <_ZN11UARTHandler19processReceivedDataEv+0x1bc>)
 8008d4c:	f006 fff4 	bl	800fd38 <HAL_UART_Transmit>
                }
                case REAL_TIME_TYPE: {
                	utils->playSound();
 8008d50:	f003 fb74 	bl	800c43c <_ZN5Utils9playSoundEv>
                	 if (cJSON_IsBool(item)) {
 8008d54:	69f8      	ldr	r0, [r7, #28]
 8008d56:	f7fd fcb4 	bl	80066c2 <cJSON_IsBool>
 8008d5a:	4603      	mov	r3, r0
 8008d5c:	2b00      	cmp	r3, #0
 8008d5e:	bf14      	ite	ne
 8008d60:	2301      	movne	r3, #1
 8008d62:	2300      	moveq	r3, #0
 8008d64:	b2db      	uxtb	r3, r3
 8008d66:	2b00      	cmp	r3, #0
 8008d68:	d042      	beq.n	8008df0 <_ZN11UARTHandler19processReceivedDataEv+0x174>
                       bool status = cJSON_IsTrue(item) ? true : false;
 8008d6a:	69f8      	ldr	r0, [r7, #28]
 8008d6c:	f7fd fc92 	bl	8006694 <cJSON_IsTrue>
 8008d70:	4603      	mov	r3, r0
 8008d72:	2b00      	cmp	r3, #0
 8008d74:	bf14      	ite	ne
 8008d76:	2301      	movne	r3, #1
 8008d78:	2300      	moveq	r3, #0
 8008d7a:	73fb      	strb	r3, [r7, #15]
            	       setRealTimeData(status);
 8008d7c:	7bfb      	ldrb	r3, [r7, #15]
 8008d7e:	4619      	mov	r1, r3
 8008d80:	6878      	ldr	r0, [r7, #4]
 8008d82:	f7ff ff04 	bl	8008b8e <_ZN11UARTHandler15setRealTimeDataEb>
                	 }
                	break;
 8008d86:	e033      	b.n	8008df0 <_ZN11UARTHandler19processReceivedDataEv+0x174>
                }
                case MQTT_SETTING_TYPE: {
                	utils->playSound();
 8008d88:	f003 fb58 	bl	800c43c <_ZN5Utils9playSoundEv>
                	config->setMQTTBroker(item);
 8008d8c:	687b      	ldr	r3, [r7, #4]
 8008d8e:	685b      	ldr	r3, [r3, #4]
 8008d90:	69f9      	ldr	r1, [r7, #28]
 8008d92:	4618      	mov	r0, r3
 8008d94:	f001 fa28 	bl	800a1e8 <_ZN6Config13setMQTTBrokerEP5cJSON>
                //	utils->print("MQTT config has been arrived!!! \r\n");
                    break;
 8008d98:	e02b      	b.n	8008df2 <_ZN11UARTHandler19processReceivedDataEv+0x176>
                }
                case NETWORK_SETTING_TYPE :{
                	config->setNetworkSettings(item);
 8008d9a:	687b      	ldr	r3, [r7, #4]
 8008d9c:	685b      	ldr	r3, [r3, #4]
 8008d9e:	69f9      	ldr	r1, [r7, #28]
 8008da0:	4618      	mov	r0, r3
 8008da2:	f001 f9b5 	bl	800a110 <_ZN6Config18setNetworkSettingsEP5cJSON>
                	utils->playSound();
 8008da6:	f003 fb49 	bl	800c43c <_ZN5Utils9playSoundEv>
                //	utils->print("Netwokr Settings has been successfully configured \r\n");
                    break;
 8008daa:	e022      	b.n	8008df2 <_ZN11UARTHandler19processReceivedDataEv+0x176>
                }
                case ANALOG_NAME: {
                	utils->playSound();
 8008dac:	f003 fb46 	bl	800c43c <_ZN5Utils9playSoundEv>
                	config->setAnalogInputNamesFromJson(json);
 8008db0:	687b      	ldr	r3, [r7, #4]
 8008db2:	685b      	ldr	r3, [r3, #4]
 8008db4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8008db6:	4618      	mov	r0, r3
 8008db8:	f001 fa4e 	bl	800a258 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON>
                //    utils->print("Analog Names has been arrived!!! \r\n");
                    break;
 8008dbc:	e019      	b.n	8008df2 <_ZN11UARTHandler19processReceivedDataEv+0x176>
                }
                case DIGITAL_NAME: {
                	utils->playSound();
 8008dbe:	f003 fb3d 	bl	800c43c <_ZN5Utils9playSoundEv>
                	config->setDigitalInputNamesFromJson(json);
 8008dc2:	687b      	ldr	r3, [r7, #4]
 8008dc4:	685b      	ldr	r3, [r3, #4]
 8008dc6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8008dc8:	4618      	mov	r0, r3
 8008dca:	f001 fad5 	bl	800a378 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON>
            //    	utils->print("Digital Names has been arrived!!! \r\n");
                	break;
 8008dce:	e010      	b.n	8008df2 <_ZN11UARTHandler19processReceivedDataEv+0x176>
                }
                case RELAY_NAME: {
                	config->setRelayNamesFromJson(json);
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	685b      	ldr	r3, [r3, #4]
 8008dd4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8008dd6:	4618      	mov	r0, r3
 8008dd8:	f001 fb74 	bl	800a4c4 <_ZN6Config21setRelayNamesFromJsonEP5cJSON>
            //    	utils->print("Relay Names has been arrived!!! \r\n");
                	break;
 8008ddc:	e009      	b.n	8008df2 <_ZN11UARTHandler19processReceivedDataEv+0x176>
                }

                case RELAY_SWITCH: {
                	utils->usartSwitch(item);
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	681b      	ldr	r3, [r3, #0]
 8008de2:	69f9      	ldr	r1, [r7, #28]
 8008de4:	4618      	mov	r0, r3
 8008de6:	f003 fe8f 	bl	800cb08 <_ZN5Utils11usartSwitchEP5cJSON>
              //  	utils->print("Relay Switch has been arrived \r\n");
                	break;
 8008dea:	e002      	b.n	8008df2 <_ZN11UARTHandler19processReceivedDataEv+0x176>
                }
                default: {
                    // Handle unknown type
                    break;
 8008dec:	bf00      	nop
 8008dee:	e000      	b.n	8008df2 <_ZN11UARTHandler19processReceivedDataEv+0x176>
                	break;
 8008df0:	bf00      	nop
                }
            }
        }
        cJSON_Delete(json); // Ensure json is deleted here to avoid memory leak
 8008df2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8008df4:	f7fb fc32 	bl	800465c <cJSON_Delete>
    }

    setNewDataAvailable(false); // Reset the flag after processing
 8008df8:	2100      	movs	r1, #0
 8008dfa:	6878      	ldr	r0, [r7, #4]
 8008dfc:	f7ff fef1 	bl	8008be2 <_ZN11UARTHandler19setNewDataAvailableEb>
    memset(receiveBuffer, 0, bufferIndex); // Clear the buffer
 8008e00:	687b      	ldr	r3, [r7, #4]
 8008e02:	f503 6083 	add.w	r0, r3, #1048	; 0x418
 8008e06:	687b      	ldr	r3, [r7, #4]
 8008e08:	f8d3 3618 	ldr.w	r3, [r3, #1560]	; 0x618
 8008e0c:	461a      	mov	r2, r3
 8008e0e:	2100      	movs	r1, #0
 8008e10:	f00a f814 	bl	8012e3c <memset>
    bufferIndex = 0; // Ready for new data
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	2200      	movs	r2, #0
 8008e18:	f8c3 2618 	str.w	r2, [r3, #1560]	; 0x618
 8008e1c:	e000      	b.n	8008e20 <_ZN11UARTHandler19processReceivedDataEv+0x1a4>
    if (!isNewMessageArrived()) return; // Early exit if no new data
 8008e1e:	bf00      	nop
}
 8008e20:	3728      	adds	r7, #40	; 0x28
 8008e22:	46bd      	mov	sp, r7
 8008e24:	bd80      	pop	{r7, pc}
 8008e26:	bf00      	nop
 8008e28:	20000228 	.word	0x20000228
 8008e2c:	08016300 	.word	0x08016300
 8008e30:	08016314 	.word	0x08016314
 8008e34:	0801631c 	.word	0x0801631c
 8008e38:	200013c4 	.word	0x200013c4

08008e3c <_ZN11UARTHandler16SendRealTimeDataEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:


void UARTHandler::SendRealTimeData(std::string* data) {
 8008e3c:	b580      	push	{r7, lr}
 8008e3e:	b084      	sub	sp, #16
 8008e40:	af00      	add	r7, sp, #0
 8008e42:	6078      	str	r0, [r7, #4]
 8008e44:	6039      	str	r1, [r7, #0]


    utils->createUSARTRealTime(data);
 8008e46:	687b      	ldr	r3, [r7, #4]
 8008e48:	681b      	ldr	r3, [r3, #0]
 8008e4a:	6839      	ldr	r1, [r7, #0]
 8008e4c:	4618      	mov	r0, r3
 8008e4e:	f003 fcc5 	bl	800c7dc <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    const char* serializedData = data->c_str();
 8008e52:	6838      	ldr	r0, [r7, #0]
 8008e54:	f008 f9d2 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8008e58:	60f8      	str	r0, [r7, #12]
    HAL_UART_Transmit(&huart1, reinterpret_cast<uint8_t*>(const_cast<char*>(serializedData)), strlen(serializedData), 1000);
 8008e5a:	68f8      	ldr	r0, [r7, #12]
 8008e5c:	f7f7 fa18 	bl	8000290 <strlen>
 8008e60:	4603      	mov	r3, r0
 8008e62:	b29a      	uxth	r2, r3
 8008e64:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008e68:	68f9      	ldr	r1, [r7, #12]
 8008e6a:	4803      	ldr	r0, [pc, #12]	; (8008e78 <_ZN11UARTHandler16SendRealTimeDataEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c>)
 8008e6c:	f006 ff64 	bl	800fd38 <HAL_UART_Transmit>

}
 8008e70:	bf00      	nop
 8008e72:	3710      	adds	r7, #16
 8008e74:	46bd      	mov	sp, r7
 8008e76:	bd80      	pop	{r7, pc}
 8008e78:	200013c4 	.word	0x200013c4

08008e7c <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
 8008e7c:	b580      	push	{r7, lr}
 8008e7e:	b082      	sub	sp, #8
 8008e80:	af00      	add	r7, sp, #0
 8008e82:	6078      	str	r0, [r7, #4]
      {
#if __cplusplus >= 201703L
	if (__constant_string_p(__s))
	  return __gnu_cxx::char_traits<char_type>::length(__s);
#endif
	return __builtin_strlen(__s);
 8008e84:	6878      	ldr	r0, [r7, #4]
 8008e86:	f7f7 fa03 	bl	8000290 <strlen>
 8008e8a:	4603      	mov	r3, r0
      }
 8008e8c:	4618      	mov	r0, r3
 8008e8e:	3708      	adds	r7, #8
 8008e90:	46bd      	mov	sp, r7
 8008e92:	bd80      	pop	{r7, pc}

08008e94 <_ZNSt7__cxx119to_stringEi>:

  // DR 1261. Insufficent overloads for to_string / to_wstring

  inline string
  to_string(int __val)
  {
 8008e94:	b590      	push	{r4, r7, lr}
 8008e96:	b087      	sub	sp, #28
 8008e98:	af00      	add	r7, sp, #0
 8008e9a:	6078      	str	r0, [r7, #4]
 8008e9c:	6039      	str	r1, [r7, #0]
    const bool __neg = __val < 0;
 8008e9e:	683b      	ldr	r3, [r7, #0]
 8008ea0:	0fdb      	lsrs	r3, r3, #31
 8008ea2:	75fb      	strb	r3, [r7, #23]
    const unsigned __uval = __neg ? (unsigned)~__val + 1u : __val;
 8008ea4:	7dfb      	ldrb	r3, [r7, #23]
 8008ea6:	2b00      	cmp	r3, #0
 8008ea8:	d002      	beq.n	8008eb0 <_ZNSt7__cxx119to_stringEi+0x1c>
 8008eaa:	683b      	ldr	r3, [r7, #0]
 8008eac:	425b      	negs	r3, r3
 8008eae:	e000      	b.n	8008eb2 <_ZNSt7__cxx119to_stringEi+0x1e>
 8008eb0:	683b      	ldr	r3, [r7, #0]
 8008eb2:	613b      	str	r3, [r7, #16]
    const auto __len = __detail::__to_chars_len(__uval);
 8008eb4:	210a      	movs	r1, #10
 8008eb6:	6938      	ldr	r0, [r7, #16]
 8008eb8:	f001 feab 	bl	800ac12 <_ZNSt8__detail14__to_chars_lenIjEEjT_i>
 8008ebc:	60f8      	str	r0, [r7, #12]
    string __str(__neg + __len, '-');
 8008ebe:	7dfa      	ldrb	r2, [r7, #23]
 8008ec0:	68fb      	ldr	r3, [r7, #12]
 8008ec2:	18d4      	adds	r4, r2, r3
 8008ec4:	f107 0308 	add.w	r3, r7, #8
 8008ec8:	4618      	mov	r0, r3
 8008eca:	f007 ff3d 	bl	8010d48 <_ZNSaIcEC1Ev>
 8008ece:	f107 0308 	add.w	r3, r7, #8
 8008ed2:	222d      	movs	r2, #45	; 0x2d
 8008ed4:	4621      	mov	r1, r4
 8008ed6:	6878      	ldr	r0, [r7, #4]
 8008ed8:	f008 f841 	bl	8010f5e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EjcRKS3_>
 8008edc:	f107 0308 	add.w	r3, r7, #8
 8008ee0:	4618      	mov	r0, r3
 8008ee2:	f007 ff33 	bl	8010d4c <_ZNSaIcED1Ev>
    __detail::__to_chars_10_impl(&__str[__neg], __len, __uval);
 8008ee6:	7dfb      	ldrb	r3, [r7, #23]
 8008ee8:	4619      	mov	r1, r3
 8008eea:	6878      	ldr	r0, [r7, #4]
 8008eec:	f008 f89a 	bl	8011024 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj>
 8008ef0:	4603      	mov	r3, r0
 8008ef2:	693a      	ldr	r2, [r7, #16]
 8008ef4:	68f9      	ldr	r1, [r7, #12]
 8008ef6:	4618      	mov	r0, r3
 8008ef8:	f001 feca 	bl	800ac90 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_>
    return __str;
 8008efc:	bf00      	nop
  }
 8008efe:	6878      	ldr	r0, [r7, #4]
 8008f00:	371c      	adds	r7, #28
 8008f02:	46bd      	mov	sp, r7
 8008f04:	bd90      	pop	{r4, r7, pc}

08008f06 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1Ev>:
    struct array
 8008f06:	b5b0      	push	{r4, r5, r7, lr}
 8008f08:	b082      	sub	sp, #8
 8008f0a:	af00      	add	r7, sp, #0
 8008f0c:	6078      	str	r0, [r7, #4]
 8008f0e:	687b      	ldr	r3, [r7, #4]
 8008f10:	2407      	movs	r4, #7
 8008f12:	461d      	mov	r5, r3
 8008f14:	e004      	b.n	8008f20 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1Ev+0x1a>
 8008f16:	4628      	mov	r0, r5
 8008f18:	f008 f813 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8008f1c:	3518      	adds	r5, #24
 8008f1e:	3c01      	subs	r4, #1
 8008f20:	2c00      	cmp	r4, #0
 8008f22:	daf8      	bge.n	8008f16 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1Ev+0x10>
 8008f24:	687b      	ldr	r3, [r7, #4]
 8008f26:	4618      	mov	r0, r3
 8008f28:	3708      	adds	r7, #8
 8008f2a:	46bd      	mov	sp, r7
 8008f2c:	bdb0      	pop	{r4, r5, r7, pc}

08008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>:
 8008f2e:	b590      	push	{r4, r7, lr}
 8008f30:	b083      	sub	sp, #12
 8008f32:	af00      	add	r7, sp, #0
 8008f34:	6078      	str	r0, [r7, #4]
 8008f36:	687b      	ldr	r3, [r7, #4]
 8008f38:	2b00      	cmp	r3, #0
 8008f3a:	d00a      	beq.n	8008f52 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev+0x24>
 8008f3c:	687b      	ldr	r3, [r7, #4]
 8008f3e:	f103 04c0 	add.w	r4, r3, #192	; 0xc0
 8008f42:	687b      	ldr	r3, [r7, #4]
 8008f44:	429c      	cmp	r4, r3
 8008f46:	d004      	beq.n	8008f52 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev+0x24>
 8008f48:	3c18      	subs	r4, #24
 8008f4a:	4620      	mov	r0, r4
 8008f4c:	f008 f810 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8008f50:	e7f7      	b.n	8008f42 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev+0x14>
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	4618      	mov	r0, r3
 8008f56:	370c      	adds	r7, #12
 8008f58:	46bd      	mov	sp, r7
 8008f5a:	bd90      	pop	{r4, r7, pc}

08008f5c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1Ev>:
 8008f5c:	b5b0      	push	{r4, r5, r7, lr}
 8008f5e:	b082      	sub	sp, #8
 8008f60:	af00      	add	r7, sp, #0
 8008f62:	6078      	str	r0, [r7, #4]
 8008f64:	687b      	ldr	r3, [r7, #4]
 8008f66:	240f      	movs	r4, #15
 8008f68:	461d      	mov	r5, r3
 8008f6a:	e004      	b.n	8008f76 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1Ev+0x1a>
 8008f6c:	4628      	mov	r0, r5
 8008f6e:	f007 ffe8 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8008f72:	3518      	adds	r5, #24
 8008f74:	3c01      	subs	r4, #1
 8008f76:	2c00      	cmp	r4, #0
 8008f78:	daf8      	bge.n	8008f6c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1Ev+0x10>
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	4618      	mov	r0, r3
 8008f7e:	3708      	adds	r7, #8
 8008f80:	46bd      	mov	sp, r7
 8008f82:	bdb0      	pop	{r4, r5, r7, pc}

08008f84 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EED1Ev>:
 8008f84:	b590      	push	{r4, r7, lr}
 8008f86:	b083      	sub	sp, #12
 8008f88:	af00      	add	r7, sp, #0
 8008f8a:	6078      	str	r0, [r7, #4]
 8008f8c:	687b      	ldr	r3, [r7, #4]
 8008f8e:	2b00      	cmp	r3, #0
 8008f90:	d00a      	beq.n	8008fa8 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EED1Ev+0x24>
 8008f92:	687b      	ldr	r3, [r7, #4]
 8008f94:	f503 74c0 	add.w	r4, r3, #384	; 0x180
 8008f98:	687b      	ldr	r3, [r7, #4]
 8008f9a:	429c      	cmp	r4, r3
 8008f9c:	d004      	beq.n	8008fa8 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EED1Ev+0x24>
 8008f9e:	3c18      	subs	r4, #24
 8008fa0:	4620      	mov	r0, r4
 8008fa2:	f007 ffe5 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8008fa6:	e7f7      	b.n	8008f98 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EED1Ev+0x14>
 8008fa8:	687b      	ldr	r3, [r7, #4]
 8008faa:	4618      	mov	r0, r3
 8008fac:	370c      	adds	r7, #12
 8008fae:	46bd      	mov	sp, r7
 8008fb0:	bd90      	pop	{r4, r7, pc}

08008fb2 <_ZN6ConfigC1Ev>:
#include "config.h"

uint8_t mac[6];

Config::Config(){
 8008fb2:	b580      	push	{r7, lr}
 8008fb4:	b082      	sub	sp, #8
 8008fb6:	af00      	add	r7, sp, #0
 8008fb8:	6078      	str	r0, [r7, #4]
 8008fba:	687b      	ldr	r3, [r7, #4]
 8008fbc:	2200      	movs	r2, #0
 8008fbe:	765a      	strb	r2, [r3, #25]
 8008fc0:	687b      	ldr	r3, [r7, #4]
 8008fc2:	3320      	adds	r3, #32
 8008fc4:	4618      	mov	r0, r3
 8008fc6:	f007 ffbc 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8008fca:	687b      	ldr	r3, [r7, #4]
 8008fcc:	3338      	adds	r3, #56	; 0x38
 8008fce:	4618      	mov	r0, r3
 8008fd0:	f007 ffb7 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8008fd4:	687b      	ldr	r3, [r7, #4]
 8008fd6:	3350      	adds	r3, #80	; 0x50
 8008fd8:	4618      	mov	r0, r3
 8008fda:	f007 ffb2 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	3368      	adds	r3, #104	; 0x68
 8008fe2:	4618      	mov	r0, r3
 8008fe4:	f007 ffad 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8008fe8:	687b      	ldr	r3, [r7, #4]
 8008fea:	3380      	adds	r3, #128	; 0x80
 8008fec:	4618      	mov	r0, r3
 8008fee:	f007 ffa8 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8008ff2:	687b      	ldr	r3, [r7, #4]
 8008ff4:	339c      	adds	r3, #156	; 0x9c
 8008ff6:	4618      	mov	r0, r3
 8008ff8:	f7ff ff85 	bl	8008f06 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1Ev>
 8008ffc:	687b      	ldr	r3, [r7, #4]
 8008ffe:	f503 73ae 	add.w	r3, r3, #348	; 0x15c
 8009002:	4618      	mov	r0, r3
 8009004:	f7ff ffaa 	bl	8008f5c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1Ev>
 8009008:	687b      	ldr	r3, [r7, #4]
 800900a:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800900e:	4618      	mov	r0, r3
 8009010:	f7ff ff79 	bl	8008f06 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1Ev>

}
 8009014:	687b      	ldr	r3, [r7, #4]
 8009016:	4618      	mov	r0, r3
 8009018:	3708      	adds	r7, #8
 800901a:	46bd      	mov	sp, r7
 800901c:	bd80      	pop	{r7, pc}
	...

08009020 <_ZN6Config4initEv>:

void Config::init() {
 8009020:	b580      	push	{r7, lr}
 8009022:	f5ad 6d81 	sub.w	sp, sp, #1032	; 0x408
 8009026:	af00      	add	r7, sp, #0
 8009028:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 800902c:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009030:	6018      	str	r0, [r3, #0]

    setBrokerIP({172, 30,1,25});
 8009032:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009036:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800903a:	4ae8      	ldr	r2, [pc, #928]	; (80093dc <_ZN6Config4initEv+0x3bc>)
 800903c:	6812      	ldr	r2, [r2, #0]
 800903e:	601a      	str	r2, [r3, #0]
 8009040:	f107 0208 	add.w	r2, r7, #8
 8009044:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009048:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 800904c:	4611      	mov	r1, r2
 800904e:	6818      	ldr	r0, [r3, #0]
 8009050:	f001 fc8d 	bl	800a96e <_ZN6Config11setBrokerIPERKSt5arrayIhLj4EE>
    setBrokerPort(1883);
 8009054:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009058:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 800905c:	f240 715b 	movw	r1, #1883	; 0x75b
 8009060:	6818      	ldr	r0, [r3, #0]
 8009062:	f001 fc93 	bl	800a98c <_ZN6Config13setBrokerPortEt>
    setIP({192, 168, 200, 158});
 8009066:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 800906a:	f5a3 737f 	sub.w	r3, r3, #1020	; 0x3fc
 800906e:	4adc      	ldr	r2, [pc, #880]	; (80093e0 <_ZN6Config4initEv+0x3c0>)
 8009070:	6812      	ldr	r2, [r2, #0]
 8009072:	601a      	str	r2, [r3, #0]
 8009074:	f107 020c 	add.w	r2, r7, #12
 8009078:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 800907c:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009080:	4611      	mov	r1, r2
 8009082:	6818      	ldr	r0, [r3, #0]
 8009084:	f001 fc91 	bl	800a9aa <_ZN6Config5setIPERKSt5arrayIhLj4EE>
    setGateway({172, 30, 1, 254});
 8009088:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 800908c:	f5a3 737e 	sub.w	r3, r3, #1016	; 0x3f8
 8009090:	4ad4      	ldr	r2, [pc, #848]	; (80093e4 <_ZN6Config4initEv+0x3c4>)
 8009092:	6812      	ldr	r2, [r2, #0]
 8009094:	601a      	str	r2, [r3, #0]
 8009096:	f107 0210 	add.w	r2, r7, #16
 800909a:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 800909e:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 80090a2:	4611      	mov	r1, r2
 80090a4:	6818      	ldr	r0, [r3, #0]
 80090a6:	f001 fc90 	bl	800a9ca <_ZN6Config10setGatewayERKSt5arrayIhLj4EE>
    setSubnet({255, 255, 255, 0});
 80090aa:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 80090ae:	f5a3 737d 	sub.w	r3, r3, #1012	; 0x3f4
 80090b2:	4acd      	ldr	r2, [pc, #820]	; (80093e8 <_ZN6Config4initEv+0x3c8>)
 80090b4:	6812      	ldr	r2, [r2, #0]
 80090b6:	601a      	str	r2, [r3, #0]
 80090b8:	f107 0214 	add.w	r2, r7, #20
 80090bc:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 80090c0:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 80090c4:	4611      	mov	r1, r2
 80090c6:	6818      	ldr	r0, [r3, #0]
 80090c8:	f001 fc8f 	bl	800a9ea <_ZN6Config9setSubnetERKSt5arrayIhLj4EE>
    setDNS({8, 8, 8, 8}); // Google's DNS for example
 80090cc:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 80090d0:	f5a3 737c 	sub.w	r3, r3, #1008	; 0x3f0
 80090d4:	4ac5      	ldr	r2, [pc, #788]	; (80093ec <_ZN6Config4initEv+0x3cc>)
 80090d6:	6812      	ldr	r2, [r2, #0]
 80090d8:	601a      	str	r2, [r3, #0]
 80090da:	f107 0218 	add.w	r2, r7, #24
 80090de:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 80090e2:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 80090e6:	4611      	mov	r1, r2
 80090e8:	6818      	ldr	r0, [r3, #0]
 80090ea:	f001 fc8e 	bl	800aa0a <_ZN6Config6setDNSERKSt5arrayIhLj4EE>
    setKeepAliveInterval(60);
 80090ee:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 80090f2:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 80090f6:	213c      	movs	r1, #60	; 0x3c
 80090f8:	6818      	ldr	r0, [r3, #0]
 80090fa:	f001 fc96 	bl	800aa2a <_ZN6Config20setKeepAliveIntervalEt>
    setDHCPEnabled(true);
 80090fe:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009102:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009106:	2101      	movs	r1, #1
 8009108:	6818      	ldr	r0, [r3, #0]
 800910a:	f001 fc9d 	bl	800aa48 <_ZN6Config14setDHCPEnabledEb>
    setIntervalTime(3); // Example interval time
 800910e:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009112:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009116:	2103      	movs	r1, #3
 8009118:	6818      	ldr	r0, [r3, #0]
 800911a:	f001 fcb3 	bl	800aa84 <_ZN6Config15setIntervalTimeEm>

    setUsername("user");
 800911e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8009122:	4618      	mov	r0, r3
 8009124:	f007 fe10 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009128:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800912c:	f107 031c 	add.w	r3, r7, #28
 8009130:	49af      	ldr	r1, [pc, #700]	; (80093f0 <_ZN6Config4initEv+0x3d0>)
 8009132:	4618      	mov	r0, r3
 8009134:	f008 f8d2 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009138:	f107 021c 	add.w	r2, r7, #28
 800913c:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009140:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009144:	4611      	mov	r1, r2
 8009146:	6818      	ldr	r0, [r3, #0]
 8009148:	f001 fcaa 	bl	800aaa0 <_ZN6Config11setUsernameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800914c:	f107 031c 	add.w	r3, r7, #28
 8009150:	4618      	mov	r0, r3
 8009152:	f007 ff0d 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009156:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800915a:	4618      	mov	r0, r3
 800915c:	f007 fdf6 	bl	8010d4c <_ZNSaIcED1Ev>
    setClientId(std::string(clientId));
 8009160:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009164:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009168:	681b      	ldr	r3, [r3, #0]
 800916a:	f103 0238 	add.w	r2, r3, #56	; 0x38
 800916e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8009172:	4611      	mov	r1, r2
 8009174:	4618      	mov	r0, r3
 8009176:	f008 f87d 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800917a:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800917e:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009182:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009186:	4611      	mov	r1, r2
 8009188:	6818      	ldr	r0, [r3, #0]
 800918a:	f001 fc98 	bl	800aabe <_ZN6Config11setClientIdERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800918e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8009192:	4618      	mov	r0, r3
 8009194:	f007 feec 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

    setPassword("pass");
 8009198:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800919c:	4618      	mov	r0, r3
 800919e:	f007 fdd3 	bl	8010d48 <_ZNSaIcEC1Ev>
 80091a2:	f107 0268 	add.w	r2, r7, #104	; 0x68
 80091a6:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80091aa:	4992      	ldr	r1, [pc, #584]	; (80093f4 <_ZN6Config4initEv+0x3d4>)
 80091ac:	4618      	mov	r0, r3
 80091ae:	f008 f895 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80091b2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80091b6:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 80091ba:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 80091be:	4611      	mov	r1, r2
 80091c0:	6818      	ldr	r0, [r3, #0]
 80091c2:	f001 fc8b 	bl	800aadc <_ZN6Config11setPasswordERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80091c6:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80091ca:	4618      	mov	r0, r3
 80091cc:	f007 fed0 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80091d0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80091d4:	4618      	mov	r0, r3
 80091d6:	f007 fdb9 	bl	8010d4c <_ZNSaIcED1Ev>
    setTopicPublish("topic/pub");
 80091da:	f107 0384 	add.w	r3, r7, #132	; 0x84
 80091de:	4618      	mov	r0, r3
 80091e0:	f007 fdb2 	bl	8010d48 <_ZNSaIcEC1Ev>
 80091e4:	f107 0284 	add.w	r2, r7, #132	; 0x84
 80091e8:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 80091ec:	4982      	ldr	r1, [pc, #520]	; (80093f8 <_ZN6Config4initEv+0x3d8>)
 80091ee:	4618      	mov	r0, r3
 80091f0:	f008 f874 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80091f4:	f107 026c 	add.w	r2, r7, #108	; 0x6c
 80091f8:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 80091fc:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009200:	4611      	mov	r1, r2
 8009202:	6818      	ldr	r0, [r3, #0]
 8009204:	f001 fc88 	bl	800ab18 <_ZN6Config15setTopicPublishERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8009208:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800920c:	4618      	mov	r0, r3
 800920e:	f007 feaf 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009212:	f107 0384 	add.w	r3, r7, #132	; 0x84
 8009216:	4618      	mov	r0, r3
 8009218:	f007 fd98 	bl	8010d4c <_ZNSaIcED1Ev>
    setQoS(1); // Quality of Service level
 800921c:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009220:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009224:	2101      	movs	r1, #1
 8009226:	6818      	ldr	r0, [r3, #0]
 8009228:	f001 fc85 	bl	800ab36 <_ZN6Config6setQoSEi>

    setAnalogInputNames({"Analog1", "Analog2", "Analog3", "Analog4", "Analog5", "Analog6", "Analog7", "Analog8",});
 800922c:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 8009230:	4618      	mov	r0, r3
 8009232:	f007 fd89 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009236:	f507 72a4 	add.w	r2, r7, #328	; 0x148
 800923a:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800923e:	496f      	ldr	r1, [pc, #444]	; (80093fc <_ZN6Config4initEv+0x3dc>)
 8009240:	4618      	mov	r0, r3
 8009242:	f008 f84b 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009246:	f507 73a6 	add.w	r3, r7, #332	; 0x14c
 800924a:	4618      	mov	r0, r3
 800924c:	f007 fd7c 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009250:	f507 72a6 	add.w	r2, r7, #332	; 0x14c
 8009254:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8009258:	3318      	adds	r3, #24
 800925a:	4969      	ldr	r1, [pc, #420]	; (8009400 <_ZN6Config4initEv+0x3e0>)
 800925c:	4618      	mov	r0, r3
 800925e:	f008 f83d 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009262:	f507 73a8 	add.w	r3, r7, #336	; 0x150
 8009266:	4618      	mov	r0, r3
 8009268:	f007 fd6e 	bl	8010d48 <_ZNSaIcEC1Ev>
 800926c:	f507 72a8 	add.w	r2, r7, #336	; 0x150
 8009270:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8009274:	3330      	adds	r3, #48	; 0x30
 8009276:	4963      	ldr	r1, [pc, #396]	; (8009404 <_ZN6Config4initEv+0x3e4>)
 8009278:	4618      	mov	r0, r3
 800927a:	f008 f82f 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800927e:	f507 73aa 	add.w	r3, r7, #340	; 0x154
 8009282:	4618      	mov	r0, r3
 8009284:	f007 fd60 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009288:	f507 72aa 	add.w	r2, r7, #340	; 0x154
 800928c:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8009290:	3348      	adds	r3, #72	; 0x48
 8009292:	495d      	ldr	r1, [pc, #372]	; (8009408 <_ZN6Config4initEv+0x3e8>)
 8009294:	4618      	mov	r0, r3
 8009296:	f008 f821 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800929a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800929e:	4618      	mov	r0, r3
 80092a0:	f007 fd52 	bl	8010d48 <_ZNSaIcEC1Ev>
 80092a4:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 80092a8:	f107 0388 	add.w	r3, r7, #136	; 0x88
 80092ac:	3360      	adds	r3, #96	; 0x60
 80092ae:	4957      	ldr	r1, [pc, #348]	; (800940c <_ZN6Config4initEv+0x3ec>)
 80092b0:	4618      	mov	r0, r3
 80092b2:	f008 f813 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80092b6:	f507 73ae 	add.w	r3, r7, #348	; 0x15c
 80092ba:	4618      	mov	r0, r3
 80092bc:	f007 fd44 	bl	8010d48 <_ZNSaIcEC1Ev>
 80092c0:	f507 72ae 	add.w	r2, r7, #348	; 0x15c
 80092c4:	f107 0388 	add.w	r3, r7, #136	; 0x88
 80092c8:	3378      	adds	r3, #120	; 0x78
 80092ca:	4951      	ldr	r1, [pc, #324]	; (8009410 <_ZN6Config4initEv+0x3f0>)
 80092cc:	4618      	mov	r0, r3
 80092ce:	f008 f805 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80092d2:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80092d6:	4618      	mov	r0, r3
 80092d8:	f007 fd36 	bl	8010d48 <_ZNSaIcEC1Ev>
 80092dc:	f507 72b0 	add.w	r2, r7, #352	; 0x160
 80092e0:	f107 0388 	add.w	r3, r7, #136	; 0x88
 80092e4:	3390      	adds	r3, #144	; 0x90
 80092e6:	494b      	ldr	r1, [pc, #300]	; (8009414 <_ZN6Config4initEv+0x3f4>)
 80092e8:	4618      	mov	r0, r3
 80092ea:	f007 fff7 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80092ee:	f507 73b2 	add.w	r3, r7, #356	; 0x164
 80092f2:	4618      	mov	r0, r3
 80092f4:	f007 fd28 	bl	8010d48 <_ZNSaIcEC1Ev>
 80092f8:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80092fc:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8009300:	33a8      	adds	r3, #168	; 0xa8
 8009302:	4945      	ldr	r1, [pc, #276]	; (8009418 <_ZN6Config4initEv+0x3f8>)
 8009304:	4618      	mov	r0, r3
 8009306:	f007 ffe9 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800930a:	f107 0288 	add.w	r2, r7, #136	; 0x88
 800930e:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009312:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009316:	4611      	mov	r1, r2
 8009318:	6818      	ldr	r0, [r3, #0]
 800931a:	f001 fc33 	bl	800ab84 <_ZN6Config19setAnalogInputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>
 800931e:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8009322:	4618      	mov	r0, r3
 8009324:	f7ff fe03 	bl	8008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>
 8009328:	f507 73b2 	add.w	r3, r7, #356	; 0x164
 800932c:	4618      	mov	r0, r3
 800932e:	f007 fd0d 	bl	8010d4c <_ZNSaIcED1Ev>
 8009332:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8009336:	4618      	mov	r0, r3
 8009338:	f007 fd08 	bl	8010d4c <_ZNSaIcED1Ev>
 800933c:	f507 73ae 	add.w	r3, r7, #348	; 0x15c
 8009340:	4618      	mov	r0, r3
 8009342:	f007 fd03 	bl	8010d4c <_ZNSaIcED1Ev>
 8009346:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800934a:	4618      	mov	r0, r3
 800934c:	f007 fcfe 	bl	8010d4c <_ZNSaIcED1Ev>
 8009350:	f507 73aa 	add.w	r3, r7, #340	; 0x154
 8009354:	4618      	mov	r0, r3
 8009356:	f007 fcf9 	bl	8010d4c <_ZNSaIcED1Ev>
 800935a:	f507 73a8 	add.w	r3, r7, #336	; 0x150
 800935e:	4618      	mov	r0, r3
 8009360:	f007 fcf4 	bl	8010d4c <_ZNSaIcED1Ev>
 8009364:	f507 73a6 	add.w	r3, r7, #332	; 0x14c
 8009368:	4618      	mov	r0, r3
 800936a:	f007 fcef 	bl	8010d4c <_ZNSaIcED1Ev>
 800936e:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 8009372:	4618      	mov	r0, r3
 8009374:	f007 fcea 	bl	8010d4c <_ZNSaIcED1Ev>
    setDigitalInputNames({"DI1", "DI2", "DI3", "DI4", "DI5", "DI6", "DI7", "DI8", "DI9", "DI10", "DI11", "DI12", "DI13", "DI14", "DI15", "DI16"});
 8009378:	f507 733a 	add.w	r3, r7, #744	; 0x2e8
 800937c:	4618      	mov	r0, r3
 800937e:	f007 fce3 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009382:	f507 723a 	add.w	r2, r7, #744	; 0x2e8
 8009386:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 800938a:	4924      	ldr	r1, [pc, #144]	; (800941c <_ZN6Config4initEv+0x3fc>)
 800938c:	4618      	mov	r0, r3
 800938e:	f007 ffa5 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009392:	f507 733b 	add.w	r3, r7, #748	; 0x2ec
 8009396:	4618      	mov	r0, r3
 8009398:	f007 fcd6 	bl	8010d48 <_ZNSaIcEC1Ev>
 800939c:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
 80093a0:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80093a4:	3318      	adds	r3, #24
 80093a6:	491e      	ldr	r1, [pc, #120]	; (8009420 <_ZN6Config4initEv+0x400>)
 80093a8:	4618      	mov	r0, r3
 80093aa:	f007 ff97 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80093ae:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
 80093b2:	4618      	mov	r0, r3
 80093b4:	f007 fcc8 	bl	8010d48 <_ZNSaIcEC1Ev>
 80093b8:	f507 723c 	add.w	r2, r7, #752	; 0x2f0
 80093bc:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80093c0:	3330      	adds	r3, #48	; 0x30
 80093c2:	4918      	ldr	r1, [pc, #96]	; (8009424 <_ZN6Config4initEv+0x404>)
 80093c4:	4618      	mov	r0, r3
 80093c6:	f007 ff89 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80093ca:	f507 733d 	add.w	r3, r7, #756	; 0x2f4
 80093ce:	4618      	mov	r0, r3
 80093d0:	f007 fcba 	bl	8010d48 <_ZNSaIcEC1Ev>
 80093d4:	f507 723d 	add.w	r2, r7, #756	; 0x2f4
 80093d8:	e026      	b.n	8009428 <_ZN6Config4initEv+0x408>
 80093da:	bf00      	nop
 80093dc:	0801641c 	.word	0x0801641c
 80093e0:	08016420 	.word	0x08016420
 80093e4:	08016424 	.word	0x08016424
 80093e8:	08016428 	.word	0x08016428
 80093ec:	0801642c 	.word	0x0801642c
 80093f0:	08016324 	.word	0x08016324
 80093f4:	0801632c 	.word	0x0801632c
 80093f8:	08016334 	.word	0x08016334
 80093fc:	08016340 	.word	0x08016340
 8009400:	08016348 	.word	0x08016348
 8009404:	08016350 	.word	0x08016350
 8009408:	08016358 	.word	0x08016358
 800940c:	08016360 	.word	0x08016360
 8009410:	08016368 	.word	0x08016368
 8009414:	08016370 	.word	0x08016370
 8009418:	08016378 	.word	0x08016378
 800941c:	08016380 	.word	0x08016380
 8009420:	08016384 	.word	0x08016384
 8009424:	08016388 	.word	0x08016388
 8009428:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 800942c:	3348      	adds	r3, #72	; 0x48
 800942e:	49dd      	ldr	r1, [pc, #884]	; (80097a4 <_ZN6Config4initEv+0x784>)
 8009430:	4618      	mov	r0, r3
 8009432:	f007 ff53 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009436:	f507 733e 	add.w	r3, r7, #760	; 0x2f8
 800943a:	4618      	mov	r0, r3
 800943c:	f007 fc84 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009440:	f507 723e 	add.w	r2, r7, #760	; 0x2f8
 8009444:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8009448:	3360      	adds	r3, #96	; 0x60
 800944a:	49d7      	ldr	r1, [pc, #860]	; (80097a8 <_ZN6Config4initEv+0x788>)
 800944c:	4618      	mov	r0, r3
 800944e:	f007 ff45 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009452:	f507 733f 	add.w	r3, r7, #764	; 0x2fc
 8009456:	4618      	mov	r0, r3
 8009458:	f007 fc76 	bl	8010d48 <_ZNSaIcEC1Ev>
 800945c:	f507 723f 	add.w	r2, r7, #764	; 0x2fc
 8009460:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8009464:	3378      	adds	r3, #120	; 0x78
 8009466:	49d1      	ldr	r1, [pc, #836]	; (80097ac <_ZN6Config4initEv+0x78c>)
 8009468:	4618      	mov	r0, r3
 800946a:	f007 ff37 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800946e:	f507 7340 	add.w	r3, r7, #768	; 0x300
 8009472:	4618      	mov	r0, r3
 8009474:	f007 fc68 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009478:	f507 7240 	add.w	r2, r7, #768	; 0x300
 800947c:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8009480:	3390      	adds	r3, #144	; 0x90
 8009482:	49cb      	ldr	r1, [pc, #812]	; (80097b0 <_ZN6Config4initEv+0x790>)
 8009484:	4618      	mov	r0, r3
 8009486:	f007 ff29 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800948a:	f507 7341 	add.w	r3, r7, #772	; 0x304
 800948e:	4618      	mov	r0, r3
 8009490:	f007 fc5a 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009494:	f507 7241 	add.w	r2, r7, #772	; 0x304
 8009498:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 800949c:	33a8      	adds	r3, #168	; 0xa8
 800949e:	49c5      	ldr	r1, [pc, #788]	; (80097b4 <_ZN6Config4initEv+0x794>)
 80094a0:	4618      	mov	r0, r3
 80094a2:	f007 ff1b 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80094a6:	f507 7342 	add.w	r3, r7, #776	; 0x308
 80094aa:	4618      	mov	r0, r3
 80094ac:	f007 fc4c 	bl	8010d48 <_ZNSaIcEC1Ev>
 80094b0:	f507 7242 	add.w	r2, r7, #776	; 0x308
 80094b4:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80094b8:	33c0      	adds	r3, #192	; 0xc0
 80094ba:	49bf      	ldr	r1, [pc, #764]	; (80097b8 <_ZN6Config4initEv+0x798>)
 80094bc:	4618      	mov	r0, r3
 80094be:	f007 ff0d 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80094c2:	f507 7343 	add.w	r3, r7, #780	; 0x30c
 80094c6:	4618      	mov	r0, r3
 80094c8:	f007 fc3e 	bl	8010d48 <_ZNSaIcEC1Ev>
 80094cc:	f507 7243 	add.w	r2, r7, #780	; 0x30c
 80094d0:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80094d4:	33d8      	adds	r3, #216	; 0xd8
 80094d6:	49b9      	ldr	r1, [pc, #740]	; (80097bc <_ZN6Config4initEv+0x79c>)
 80094d8:	4618      	mov	r0, r3
 80094da:	f007 feff 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80094de:	f507 7344 	add.w	r3, r7, #784	; 0x310
 80094e2:	4618      	mov	r0, r3
 80094e4:	f007 fc30 	bl	8010d48 <_ZNSaIcEC1Ev>
 80094e8:	f507 7244 	add.w	r2, r7, #784	; 0x310
 80094ec:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80094f0:	33f0      	adds	r3, #240	; 0xf0
 80094f2:	49b3      	ldr	r1, [pc, #716]	; (80097c0 <_ZN6Config4initEv+0x7a0>)
 80094f4:	4618      	mov	r0, r3
 80094f6:	f007 fef1 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80094fa:	f507 7345 	add.w	r3, r7, #788	; 0x314
 80094fe:	4618      	mov	r0, r3
 8009500:	f007 fc22 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009504:	f507 7245 	add.w	r2, r7, #788	; 0x314
 8009508:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 800950c:	f503 7384 	add.w	r3, r3, #264	; 0x108
 8009510:	49ac      	ldr	r1, [pc, #688]	; (80097c4 <_ZN6Config4initEv+0x7a4>)
 8009512:	4618      	mov	r0, r3
 8009514:	f007 fee2 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009518:	f507 7346 	add.w	r3, r7, #792	; 0x318
 800951c:	4618      	mov	r0, r3
 800951e:	f007 fc13 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009522:	f507 7246 	add.w	r2, r7, #792	; 0x318
 8009526:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 800952a:	f503 7390 	add.w	r3, r3, #288	; 0x120
 800952e:	49a6      	ldr	r1, [pc, #664]	; (80097c8 <_ZN6Config4initEv+0x7a8>)
 8009530:	4618      	mov	r0, r3
 8009532:	f007 fed3 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009536:	f507 7347 	add.w	r3, r7, #796	; 0x31c
 800953a:	4618      	mov	r0, r3
 800953c:	f007 fc04 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009540:	f507 7247 	add.w	r2, r7, #796	; 0x31c
 8009544:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8009548:	f503 739c 	add.w	r3, r3, #312	; 0x138
 800954c:	499f      	ldr	r1, [pc, #636]	; (80097cc <_ZN6Config4initEv+0x7ac>)
 800954e:	4618      	mov	r0, r3
 8009550:	f007 fec4 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009554:	f507 7348 	add.w	r3, r7, #800	; 0x320
 8009558:	4618      	mov	r0, r3
 800955a:	f007 fbf5 	bl	8010d48 <_ZNSaIcEC1Ev>
 800955e:	f507 7248 	add.w	r2, r7, #800	; 0x320
 8009562:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8009566:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 800956a:	4999      	ldr	r1, [pc, #612]	; (80097d0 <_ZN6Config4initEv+0x7b0>)
 800956c:	4618      	mov	r0, r3
 800956e:	f007 feb5 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009572:	f507 7349 	add.w	r3, r7, #804	; 0x324
 8009576:	4618      	mov	r0, r3
 8009578:	f007 fbe6 	bl	8010d48 <_ZNSaIcEC1Ev>
 800957c:	f507 7249 	add.w	r2, r7, #804	; 0x324
 8009580:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8009584:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 8009588:	4992      	ldr	r1, [pc, #584]	; (80097d4 <_ZN6Config4initEv+0x7b4>)
 800958a:	4618      	mov	r0, r3
 800958c:	f007 fea6 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009590:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8009594:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009598:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 800959c:	4611      	mov	r1, r2
 800959e:	6818      	ldr	r0, [r3, #0]
 80095a0:	f001 fb17 	bl	800abd2 <_ZN6Config20setDigitalInputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE>
 80095a4:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80095a8:	4618      	mov	r0, r3
 80095aa:	f7ff fceb 	bl	8008f84 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EED1Ev>
 80095ae:	f507 7349 	add.w	r3, r7, #804	; 0x324
 80095b2:	4618      	mov	r0, r3
 80095b4:	f007 fbca 	bl	8010d4c <_ZNSaIcED1Ev>
 80095b8:	f507 7348 	add.w	r3, r7, #800	; 0x320
 80095bc:	4618      	mov	r0, r3
 80095be:	f007 fbc5 	bl	8010d4c <_ZNSaIcED1Ev>
 80095c2:	f507 7347 	add.w	r3, r7, #796	; 0x31c
 80095c6:	4618      	mov	r0, r3
 80095c8:	f007 fbc0 	bl	8010d4c <_ZNSaIcED1Ev>
 80095cc:	f507 7346 	add.w	r3, r7, #792	; 0x318
 80095d0:	4618      	mov	r0, r3
 80095d2:	f007 fbbb 	bl	8010d4c <_ZNSaIcED1Ev>
 80095d6:	f507 7345 	add.w	r3, r7, #788	; 0x314
 80095da:	4618      	mov	r0, r3
 80095dc:	f007 fbb6 	bl	8010d4c <_ZNSaIcED1Ev>
 80095e0:	f507 7344 	add.w	r3, r7, #784	; 0x310
 80095e4:	4618      	mov	r0, r3
 80095e6:	f007 fbb1 	bl	8010d4c <_ZNSaIcED1Ev>
 80095ea:	f507 7343 	add.w	r3, r7, #780	; 0x30c
 80095ee:	4618      	mov	r0, r3
 80095f0:	f007 fbac 	bl	8010d4c <_ZNSaIcED1Ev>
 80095f4:	f507 7342 	add.w	r3, r7, #776	; 0x308
 80095f8:	4618      	mov	r0, r3
 80095fa:	f007 fba7 	bl	8010d4c <_ZNSaIcED1Ev>
 80095fe:	f507 7341 	add.w	r3, r7, #772	; 0x304
 8009602:	4618      	mov	r0, r3
 8009604:	f007 fba2 	bl	8010d4c <_ZNSaIcED1Ev>
 8009608:	f507 7340 	add.w	r3, r7, #768	; 0x300
 800960c:	4618      	mov	r0, r3
 800960e:	f007 fb9d 	bl	8010d4c <_ZNSaIcED1Ev>
 8009612:	f507 733f 	add.w	r3, r7, #764	; 0x2fc
 8009616:	4618      	mov	r0, r3
 8009618:	f007 fb98 	bl	8010d4c <_ZNSaIcED1Ev>
 800961c:	f507 733e 	add.w	r3, r7, #760	; 0x2f8
 8009620:	4618      	mov	r0, r3
 8009622:	f007 fb93 	bl	8010d4c <_ZNSaIcED1Ev>
 8009626:	f507 733d 	add.w	r3, r7, #756	; 0x2f4
 800962a:	4618      	mov	r0, r3
 800962c:	f007 fb8e 	bl	8010d4c <_ZNSaIcED1Ev>
 8009630:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
 8009634:	4618      	mov	r0, r3
 8009636:	f007 fb89 	bl	8010d4c <_ZNSaIcED1Ev>
 800963a:	f507 733b 	add.w	r3, r7, #748	; 0x2ec
 800963e:	4618      	mov	r0, r3
 8009640:	f007 fb84 	bl	8010d4c <_ZNSaIcED1Ev>
 8009644:	f507 733a 	add.w	r3, r7, #744	; 0x2e8
 8009648:	4618      	mov	r0, r3
 800964a:	f007 fb7f 	bl	8010d4c <_ZNSaIcED1Ev>
    setDigitalOutputNames({"Relay1", "Relay2", "Relay3", "Relay4", "Relay5", "Relay6", "Relay7", "Relay8",});
 800964e:	f507 737a 	add.w	r3, r7, #1000	; 0x3e8
 8009652:	4618      	mov	r0, r3
 8009654:	f007 fb78 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009658:	f507 727a 	add.w	r2, r7, #1000	; 0x3e8
 800965c:	f507 734a 	add.w	r3, r7, #808	; 0x328
 8009660:	495d      	ldr	r1, [pc, #372]	; (80097d8 <_ZN6Config4initEv+0x7b8>)
 8009662:	4618      	mov	r0, r3
 8009664:	f007 fe3a 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009668:	f507 737b 	add.w	r3, r7, #1004	; 0x3ec
 800966c:	4618      	mov	r0, r3
 800966e:	f007 fb6b 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009672:	f507 727b 	add.w	r2, r7, #1004	; 0x3ec
 8009676:	f507 734a 	add.w	r3, r7, #808	; 0x328
 800967a:	3318      	adds	r3, #24
 800967c:	4957      	ldr	r1, [pc, #348]	; (80097dc <_ZN6Config4initEv+0x7bc>)
 800967e:	4618      	mov	r0, r3
 8009680:	f007 fe2c 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009684:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
 8009688:	4618      	mov	r0, r3
 800968a:	f007 fb5d 	bl	8010d48 <_ZNSaIcEC1Ev>
 800968e:	f507 727c 	add.w	r2, r7, #1008	; 0x3f0
 8009692:	f507 734a 	add.w	r3, r7, #808	; 0x328
 8009696:	3330      	adds	r3, #48	; 0x30
 8009698:	4951      	ldr	r1, [pc, #324]	; (80097e0 <_ZN6Config4initEv+0x7c0>)
 800969a:	4618      	mov	r0, r3
 800969c:	f007 fe1e 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80096a0:	f507 737d 	add.w	r3, r7, #1012	; 0x3f4
 80096a4:	4618      	mov	r0, r3
 80096a6:	f007 fb4f 	bl	8010d48 <_ZNSaIcEC1Ev>
 80096aa:	f507 727d 	add.w	r2, r7, #1012	; 0x3f4
 80096ae:	f507 734a 	add.w	r3, r7, #808	; 0x328
 80096b2:	3348      	adds	r3, #72	; 0x48
 80096b4:	494b      	ldr	r1, [pc, #300]	; (80097e4 <_ZN6Config4initEv+0x7c4>)
 80096b6:	4618      	mov	r0, r3
 80096b8:	f007 fe10 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80096bc:	f507 737e 	add.w	r3, r7, #1016	; 0x3f8
 80096c0:	4618      	mov	r0, r3
 80096c2:	f007 fb41 	bl	8010d48 <_ZNSaIcEC1Ev>
 80096c6:	f507 727e 	add.w	r2, r7, #1016	; 0x3f8
 80096ca:	f507 734a 	add.w	r3, r7, #808	; 0x328
 80096ce:	3360      	adds	r3, #96	; 0x60
 80096d0:	4945      	ldr	r1, [pc, #276]	; (80097e8 <_ZN6Config4initEv+0x7c8>)
 80096d2:	4618      	mov	r0, r3
 80096d4:	f007 fe02 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80096d8:	f507 737f 	add.w	r3, r7, #1020	; 0x3fc
 80096dc:	4618      	mov	r0, r3
 80096de:	f007 fb33 	bl	8010d48 <_ZNSaIcEC1Ev>
 80096e2:	f507 727f 	add.w	r2, r7, #1020	; 0x3fc
 80096e6:	f507 734a 	add.w	r3, r7, #808	; 0x328
 80096ea:	3378      	adds	r3, #120	; 0x78
 80096ec:	493f      	ldr	r1, [pc, #252]	; (80097ec <_ZN6Config4initEv+0x7cc>)
 80096ee:	4618      	mov	r0, r3
 80096f0:	f007 fdf4 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80096f4:	f507 6380 	add.w	r3, r7, #1024	; 0x400
 80096f8:	4618      	mov	r0, r3
 80096fa:	f007 fb25 	bl	8010d48 <_ZNSaIcEC1Ev>
 80096fe:	f507 6280 	add.w	r2, r7, #1024	; 0x400
 8009702:	f507 734a 	add.w	r3, r7, #808	; 0x328
 8009706:	3390      	adds	r3, #144	; 0x90
 8009708:	4939      	ldr	r1, [pc, #228]	; (80097f0 <_ZN6Config4initEv+0x7d0>)
 800970a:	4618      	mov	r0, r3
 800970c:	f007 fde6 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009710:	f207 4304 	addw	r3, r7, #1028	; 0x404
 8009714:	4618      	mov	r0, r3
 8009716:	f007 fb17 	bl	8010d48 <_ZNSaIcEC1Ev>
 800971a:	f207 4204 	addw	r2, r7, #1028	; 0x404
 800971e:	f507 734a 	add.w	r3, r7, #808	; 0x328
 8009722:	33a8      	adds	r3, #168	; 0xa8
 8009724:	4933      	ldr	r1, [pc, #204]	; (80097f4 <_ZN6Config4initEv+0x7d4>)
 8009726:	4618      	mov	r0, r3
 8009728:	f007 fdd8 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800972c:	f507 724a 	add.w	r2, r7, #808	; 0x328
 8009730:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 8009734:	f2a3 4304 	subw	r3, r3, #1028	; 0x404
 8009738:	4611      	mov	r1, r2
 800973a:	6818      	ldr	r0, [r3, #0]
 800973c:	f001 fa59 	bl	800abf2 <_ZN6Config21setDigitalOutputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>
 8009740:	f507 734a 	add.w	r3, r7, #808	; 0x328
 8009744:	4618      	mov	r0, r3
 8009746:	f7ff fbf2 	bl	8008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>
 800974a:	f207 4304 	addw	r3, r7, #1028	; 0x404
 800974e:	4618      	mov	r0, r3
 8009750:	f007 fafc 	bl	8010d4c <_ZNSaIcED1Ev>
 8009754:	f507 6380 	add.w	r3, r7, #1024	; 0x400
 8009758:	4618      	mov	r0, r3
 800975a:	f007 faf7 	bl	8010d4c <_ZNSaIcED1Ev>
 800975e:	f507 737f 	add.w	r3, r7, #1020	; 0x3fc
 8009762:	4618      	mov	r0, r3
 8009764:	f007 faf2 	bl	8010d4c <_ZNSaIcED1Ev>
 8009768:	f507 737e 	add.w	r3, r7, #1016	; 0x3f8
 800976c:	4618      	mov	r0, r3
 800976e:	f007 faed 	bl	8010d4c <_ZNSaIcED1Ev>
 8009772:	f507 737d 	add.w	r3, r7, #1012	; 0x3f4
 8009776:	4618      	mov	r0, r3
 8009778:	f007 fae8 	bl	8010d4c <_ZNSaIcED1Ev>
 800977c:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
 8009780:	4618      	mov	r0, r3
 8009782:	f007 fae3 	bl	8010d4c <_ZNSaIcED1Ev>
 8009786:	f507 737b 	add.w	r3, r7, #1004	; 0x3ec
 800978a:	4618      	mov	r0, r3
 800978c:	f007 fade 	bl	8010d4c <_ZNSaIcED1Ev>
 8009790:	f507 737a 	add.w	r3, r7, #1000	; 0x3e8
 8009794:	4618      	mov	r0, r3
 8009796:	f007 fad9 	bl	8010d4c <_ZNSaIcED1Ev>

}
 800979a:	bf00      	nop
 800979c:	f507 6781 	add.w	r7, r7, #1032	; 0x408
 80097a0:	46bd      	mov	sp, r7
 80097a2:	bd80      	pop	{r7, pc}
 80097a4:	0801638c 	.word	0x0801638c
 80097a8:	08016390 	.word	0x08016390
 80097ac:	08016394 	.word	0x08016394
 80097b0:	08016398 	.word	0x08016398
 80097b4:	0801639c 	.word	0x0801639c
 80097b8:	080163a0 	.word	0x080163a0
 80097bc:	080163a4 	.word	0x080163a4
 80097c0:	080163ac 	.word	0x080163ac
 80097c4:	080163b4 	.word	0x080163b4
 80097c8:	080163bc 	.word	0x080163bc
 80097cc:	080163c4 	.word	0x080163c4
 80097d0:	080163cc 	.word	0x080163cc
 80097d4:	080163d4 	.word	0x080163d4
 80097d8:	080163dc 	.word	0x080163dc
 80097dc:	080163e4 	.word	0x080163e4
 80097e0:	080163ec 	.word	0x080163ec
 80097e4:	080163f4 	.word	0x080163f4
 80097e8:	080163fc 	.word	0x080163fc
 80097ec:	08016404 	.word	0x08016404
 80097f0:	0801640c 	.word	0x0801640c
 80097f4:	08016414 	.word	0x08016414

080097f8 <_ZN6Config18getAnalogInputNameB5cxx11Ei>:


std::string Config::getAnalogInputName(int index){
 80097f8:	b580      	push	{r7, lr}
 80097fa:	b084      	sub	sp, #16
 80097fc:	af00      	add	r7, sp, #0
 80097fe:	60f8      	str	r0, [r7, #12]
 8009800:	60b9      	str	r1, [r7, #8]
 8009802:	607a      	str	r2, [r7, #4]
	return analog_input_names[index];
 8009804:	68bb      	ldr	r3, [r7, #8]
 8009806:	339c      	adds	r3, #156	; 0x9c
 8009808:	687a      	ldr	r2, [r7, #4]
 800980a:	4611      	mov	r1, r2
 800980c:	4618      	mov	r0, r3
 800980e:	f001 fa95 	bl	800ad3c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEixEj>
 8009812:	4603      	mov	r3, r0
 8009814:	4619      	mov	r1, r3
 8009816:	68f8      	ldr	r0, [r7, #12]
 8009818:	f007 fd2c 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
}
 800981c:	68f8      	ldr	r0, [r7, #12]
 800981e:	3710      	adds	r7, #16
 8009820:	46bd      	mov	sp, r7
 8009822:	bd80      	pop	{r7, pc}

08009824 <_ZN6Config19getDigitalInputNameB5cxx11Ei>:

std::string Config::getDigitalInputName(int index){
 8009824:	b580      	push	{r7, lr}
 8009826:	b084      	sub	sp, #16
 8009828:	af00      	add	r7, sp, #0
 800982a:	60f8      	str	r0, [r7, #12]
 800982c:	60b9      	str	r1, [r7, #8]
 800982e:	607a      	str	r2, [r7, #4]
	return digital_input_names[index];
 8009830:	68bb      	ldr	r3, [r7, #8]
 8009832:	f503 73ae 	add.w	r3, r3, #348	; 0x15c
 8009836:	687a      	ldr	r2, [r7, #4]
 8009838:	4611      	mov	r1, r2
 800983a:	4618      	mov	r0, r3
 800983c:	f001 fa8d 	bl	800ad5a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEixEj>
 8009840:	4603      	mov	r3, r0
 8009842:	4619      	mov	r1, r3
 8009844:	68f8      	ldr	r0, [r7, #12]
 8009846:	f007 fd15 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
}
 800984a:	68f8      	ldr	r0, [r7, #12]
 800984c:	3710      	adds	r7, #16
 800984e:	46bd      	mov	sp, r7
 8009850:	bd80      	pop	{r7, pc}

08009852 <_ZN6Config20getDigitalOutputNameB5cxx11Ei>:

std::string Config::getDigitalOutputName(int index){
 8009852:	b580      	push	{r7, lr}
 8009854:	b084      	sub	sp, #16
 8009856:	af00      	add	r7, sp, #0
 8009858:	60f8      	str	r0, [r7, #12]
 800985a:	60b9      	str	r1, [r7, #8]
 800985c:	607a      	str	r2, [r7, #4]
	return digital_output_names[index];
 800985e:	68bb      	ldr	r3, [r7, #8]
 8009860:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 8009864:	687a      	ldr	r2, [r7, #4]
 8009866:	4611      	mov	r1, r2
 8009868:	4618      	mov	r0, r3
 800986a:	f001 fa67 	bl	800ad3c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEixEj>
 800986e:	4603      	mov	r3, r0
 8009870:	4619      	mov	r1, r3
 8009872:	68f8      	ldr	r0, [r7, #12]
 8009874:	f007 fcfe 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
}
 8009878:	68f8      	ldr	r0, [r7, #12]
 800987a:	3710      	adds	r7, #16
 800987c:	46bd      	mov	sp, r7
 800987e:	bd80      	pop	{r7, pc}

08009880 <_ZN6Config14initmqttConfigEv>:

void Config::initmqttConfig() {
 8009880:	b580      	push	{r7, lr}
 8009882:	b098      	sub	sp, #96	; 0x60
 8009884:	af00      	add	r7, sp, #0
 8009886:	6078      	str	r0, [r7, #4]
    uint8_t mac[6];
    getSHAR(mac);
 8009888:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800988c:	2206      	movs	r2, #6
 800988e:	4619      	mov	r1, r3
 8009890:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8009894:	f7f8 ff86 	bl	80027a4 <WIZCHIP_READ_BUF>
    char macString[18] = {0}; // Initialize macString with zeros
 8009898:	2300      	movs	r3, #0
 800989a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800989c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80098a0:	2200      	movs	r2, #0
 80098a2:	601a      	str	r2, [r3, #0]
 80098a4:	605a      	str	r2, [r3, #4]
 80098a6:	609a      	str	r2, [r3, #8]
 80098a8:	819a      	strh	r2, [r3, #12]
    for (int i = 0; i < 6; ++i) {
 80098aa:	2300      	movs	r3, #0
 80098ac:	65fb      	str	r3, [r7, #92]	; 0x5c
 80098ae:	e026      	b.n	80098fe <_ZN6Config14initmqttConfigEv+0x7e>
        if (i > 0) {
 80098b0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80098b2:	2b00      	cmp	r3, #0
 80098b4:	dd0e      	ble.n	80098d4 <_ZN6Config14initmqttConfigEv+0x54>
            strcat(macString, ":"); // Add ':' between bytes except for the first one
 80098b6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80098ba:	4618      	mov	r0, r3
 80098bc:	f7f6 fce8 	bl	8000290 <strlen>
 80098c0:	4603      	mov	r3, r0
 80098c2:	461a      	mov	r2, r3
 80098c4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80098c8:	4413      	add	r3, r2
 80098ca:	492c      	ldr	r1, [pc, #176]	; (800997c <_ZN6Config14initmqttConfigEv+0xfc>)
 80098cc:	461a      	mov	r2, r3
 80098ce:	460b      	mov	r3, r1
 80098d0:	881b      	ldrh	r3, [r3, #0]
 80098d2:	8013      	strh	r3, [r2, #0]
        }
        sprintf(macString + strlen(macString), "%02X", mac[i]); // Append two characters per byte
 80098d4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80098d8:	4618      	mov	r0, r3
 80098da:	f7f6 fcd9 	bl	8000290 <strlen>
 80098de:	4602      	mov	r2, r0
 80098e0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80098e4:	1898      	adds	r0, r3, r2
 80098e6:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80098ea:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80098ec:	4413      	add	r3, r2
 80098ee:	781b      	ldrb	r3, [r3, #0]
 80098f0:	461a      	mov	r2, r3
 80098f2:	4923      	ldr	r1, [pc, #140]	; (8009980 <_ZN6Config14initmqttConfigEv+0x100>)
 80098f4:	f009 f9ae 	bl	8012c54 <siprintf>
    for (int i = 0; i < 6; ++i) {
 80098f8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80098fa:	3301      	adds	r3, #1
 80098fc:	65fb      	str	r3, [r7, #92]	; 0x5c
 80098fe:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8009900:	2b05      	cmp	r3, #5
 8009902:	ddd5      	ble.n	80098b0 <_ZN6Config14initmqttConfigEv+0x30>
    }

     setSHAR(mac); // Commented out because it seems unnecessary here
 8009904:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8009908:	2206      	movs	r2, #6
 800990a:	4619      	mov	r1, r3
 800990c:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8009910:	f7f8 ffa8 	bl	8002864 <WIZCHIP_WRITE_BUF>
    std::string clientID = std::string(macString);
 8009914:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8009918:	4618      	mov	r0, r3
 800991a:	f007 fa15 	bl	8010d48 <_ZNSaIcEC1Ev>
 800991e:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8009922:	f107 013c 	add.w	r1, r7, #60	; 0x3c
 8009926:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800992a:	4618      	mov	r0, r3
 800992c:	f007 fcd6 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009930:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8009934:	4618      	mov	r0, r3
 8009936:	f007 fa09 	bl	8010d4c <_ZNSaIcED1Ev>
    std::string data = "data/" + clientID;
 800993a:	f107 030c 	add.w	r3, r7, #12
 800993e:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8009942:	4910      	ldr	r1, [pc, #64]	; (8009984 <_ZN6Config14initmqttConfigEv+0x104>)
 8009944:	4618      	mov	r0, r3
 8009946:	f001 fa17 	bl	800ad78 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>

    // Set MQTT client ID and topic to subscribe
    setClientId(clientID);
 800994a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800994e:	4619      	mov	r1, r3
 8009950:	6878      	ldr	r0, [r7, #4]
 8009952:	f001 f8b4 	bl	800aabe <_ZN6Config11setClientIdERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    setTopicSubscribe(data);
 8009956:	f107 030c 	add.w	r3, r7, #12
 800995a:	4619      	mov	r1, r3
 800995c:	6878      	ldr	r0, [r7, #4]
 800995e:	f001 f8cc 	bl	800aafa <_ZN6Config17setTopicSubscribeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
}
 8009962:	f107 030c 	add.w	r3, r7, #12
 8009966:	4618      	mov	r0, r3
 8009968:	f007 fb02 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800996c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009970:	4618      	mov	r0, r3
 8009972:	f007 fafd 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009976:	3760      	adds	r7, #96	; 0x60
 8009978:	46bd      	mov	sp, r7
 800997a:	bd80      	pop	{r7, pc}
 800997c:	08016430 	.word	0x08016430
 8009980:	08016434 	.word	0x08016434
 8009984:	0801643c 	.word	0x0801643c

08009988 <_Z16createListStringB5cxx11St5arrayIhLj4EE>:



std::string createListString(std::array<uint8_t, 4> arr ) {
 8009988:	b580      	push	{r7, lr}
 800998a:	b08a      	sub	sp, #40	; 0x28
 800998c:	af00      	add	r7, sp, #0
 800998e:	6078      	str	r0, [r7, #4]
 8009990:	6039      	str	r1, [r7, #0]
	std::string data;
 8009992:	6878      	ldr	r0, [r7, #4]
 8009994:	f007 fad5 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
	for (size_t i = 0; i < arr.size(); ++i) {
 8009998:	2300      	movs	r3, #0
 800999a:	627b      	str	r3, [r7, #36]	; 0x24
 800999c:	e022      	b.n	80099e4 <_Z16createListStringB5cxx11St5arrayIhLj4EE+0x5c>
		    if (i > 0) {
 800999e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099a0:	2b00      	cmp	r3, #0
 80099a2:	d003      	beq.n	80099ac <_Z16createListStringB5cxx11St5arrayIhLj4EE+0x24>
		        // Add a period before all but the first number
		       data += ",";
 80099a4:	4918      	ldr	r1, [pc, #96]	; (8009a08 <_Z16createListStringB5cxx11St5arrayIhLj4EE+0x80>)
 80099a6:	6878      	ldr	r0, [r7, #4]
 80099a8:	f007 fc24 	bl	80111f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
		    }
		    data += std::to_string(arr[i]); // Convert each integer to a string
 80099ac:	463b      	mov	r3, r7
 80099ae:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80099b0:	4618      	mov	r0, r3
 80099b2:	f001 fa2c 	bl	800ae0e <_ZNSt5arrayIhLj4EEixEj>
 80099b6:	4603      	mov	r3, r0
 80099b8:	781b      	ldrb	r3, [r3, #0]
 80099ba:	461a      	mov	r2, r3
 80099bc:	f107 030c 	add.w	r3, r7, #12
 80099c0:	4611      	mov	r1, r2
 80099c2:	4618      	mov	r0, r3
 80099c4:	f7ff fa66 	bl	8008e94 <_ZNSt7__cxx119to_stringEi>
 80099c8:	f107 030c 	add.w	r3, r7, #12
 80099cc:	4619      	mov	r1, r3
 80099ce:	6878      	ldr	r0, [r7, #4]
 80099d0:	f007 fbe5 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
 80099d4:	f107 030c 	add.w	r3, r7, #12
 80099d8:	4618      	mov	r0, r3
 80099da:	f007 fac9 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	for (size_t i = 0; i < arr.size(); ++i) {
 80099de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099e0:	3301      	adds	r3, #1
 80099e2:	627b      	str	r3, [r7, #36]	; 0x24
 80099e4:	463b      	mov	r3, r7
 80099e6:	4618      	mov	r0, r3
 80099e8:	f001 fa06 	bl	800adf8 <_ZNKSt5arrayIhLj4EE4sizeEv>
 80099ec:	4602      	mov	r2, r0
 80099ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099f0:	4293      	cmp	r3, r2
 80099f2:	bf34      	ite	cc
 80099f4:	2301      	movcc	r3, #1
 80099f6:	2300      	movcs	r3, #0
 80099f8:	b2db      	uxtb	r3, r3
 80099fa:	2b00      	cmp	r3, #0
 80099fc:	d1cf      	bne.n	800999e <_Z16createListStringB5cxx11St5arrayIhLj4EE+0x16>
		}

	return data;
 80099fe:	bf00      	nop
}
 8009a00:	6878      	ldr	r0, [r7, #4]
 8009a02:	3728      	adds	r7, #40	; 0x28
 8009a04:	46bd      	mov	sp, r7
 8009a06:	bd80      	pop	{r7, pc}
 8009a08:	08016444 	.word	0x08016444

08009a0c <_Z21createStringFromArraySt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE>:


std::string createStringFromArray(std::array<std::string, MAX_DIGITAL_INPUTS>arr ) {
 8009a0c:	b580      	push	{r7, lr}
 8009a0e:	b08a      	sub	sp, #40	; 0x28
 8009a10:	af00      	add	r7, sp, #0
 8009a12:	6078      	str	r0, [r7, #4]
 8009a14:	6039      	str	r1, [r7, #0]
	std::string data;
 8009a16:	6878      	ldr	r0, [r7, #4]
 8009a18:	f007 fa93 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>

	for(size_t i = 0 ; i < arr.size(); i++ ) {
 8009a1c:	2300      	movs	r3, #0
 8009a1e:	627b      	str	r3, [r7, #36]	; 0x24
 8009a20:	e028      	b.n	8009a74 <_Z21createStringFromArraySt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE+0x68>
		if (i > 0 ) {
 8009a22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a24:	2b00      	cmp	r3, #0
 8009a26:	d003      	beq.n	8009a30 <_Z21createStringFromArraySt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE+0x24>
			data += ",";
 8009a28:	491b      	ldr	r1, [pc, #108]	; (8009a98 <_Z21createStringFromArraySt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE+0x8c>)
 8009a2a:	6878      	ldr	r0, [r7, #4]
 8009a2c:	f007 fbe2 	bl	80111f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
		}
		std::string val = arr[i];
 8009a30:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009a32:	6838      	ldr	r0, [r7, #0]
 8009a34:	f001 f991 	bl	800ad5a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEixEj>
 8009a38:	4602      	mov	r2, r0
 8009a3a:	f107 030c 	add.w	r3, r7, #12
 8009a3e:	4611      	mov	r1, r2
 8009a40:	4618      	mov	r0, r3
 8009a42:	f007 fc17 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
		if (val != "") data +=val;
 8009a46:	f107 030c 	add.w	r3, r7, #12
 8009a4a:	4914      	ldr	r1, [pc, #80]	; (8009a9c <_Z21createStringFromArraySt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE+0x90>)
 8009a4c:	4618      	mov	r0, r3
 8009a4e:	f001 f9f8 	bl	800ae42 <_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8009a52:	4603      	mov	r3, r0
 8009a54:	2b00      	cmp	r3, #0
 8009a56:	d005      	beq.n	8009a64 <_Z21createStringFromArraySt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE+0x58>
 8009a58:	f107 030c 	add.w	r3, r7, #12
 8009a5c:	4619      	mov	r1, r3
 8009a5e:	6878      	ldr	r0, [r7, #4]
 8009a60:	f007 fb9d 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
	}
 8009a64:	f107 030c 	add.w	r3, r7, #12
 8009a68:	4618      	mov	r0, r3
 8009a6a:	f007 fa81 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	for(size_t i = 0 ; i < arr.size(); i++ ) {
 8009a6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a70:	3301      	adds	r3, #1
 8009a72:	627b      	str	r3, [r7, #36]	; 0x24
 8009a74:	6838      	ldr	r0, [r7, #0]
 8009a76:	f001 f9d9 	bl	800ae2c <_ZNKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE4sizeEv>
 8009a7a:	4602      	mov	r2, r0
 8009a7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a7e:	4293      	cmp	r3, r2
 8009a80:	bf34      	ite	cc
 8009a82:	2301      	movcc	r3, #1
 8009a84:	2300      	movcs	r3, #0
 8009a86:	b2db      	uxtb	r3, r3
 8009a88:	2b00      	cmp	r3, #0
 8009a8a:	d1ca      	bne.n	8009a22 <_Z21createStringFromArraySt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE+0x16>

	return data;
 8009a8c:	bf00      	nop

}
 8009a8e:	6878      	ldr	r0, [r7, #4]
 8009a90:	3728      	adds	r7, #40	; 0x28
 8009a92:	46bd      	mov	sp, r7
 8009a94:	bd80      	pop	{r7, pc}
 8009a96:	bf00      	nop
 8009a98:	08016444 	.word	0x08016444
 8009a9c:	08016448 	.word	0x08016448

08009aa0 <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>:



std::string createStringFromArray8len(std::array<std::string, 8>arr) {
 8009aa0:	b580      	push	{r7, lr}
 8009aa2:	b08a      	sub	sp, #40	; 0x28
 8009aa4:	af00      	add	r7, sp, #0
 8009aa6:	6078      	str	r0, [r7, #4]
 8009aa8:	6039      	str	r1, [r7, #0]
	std::string data;
 8009aaa:	6878      	ldr	r0, [r7, #4]
 8009aac:	f007 fa49 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>

	for(size_t i = 0 ; i < arr.size(); i++ ) {
 8009ab0:	2300      	movs	r3, #0
 8009ab2:	627b      	str	r3, [r7, #36]	; 0x24
 8009ab4:	e028      	b.n	8009b08 <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE+0x68>
		if (i > 0 ) {
 8009ab6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ab8:	2b00      	cmp	r3, #0
 8009aba:	d003      	beq.n	8009ac4 <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE+0x24>
			data += ",";
 8009abc:	491b      	ldr	r1, [pc, #108]	; (8009b2c <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE+0x8c>)
 8009abe:	6878      	ldr	r0, [r7, #4]
 8009ac0:	f007 fb98 	bl	80111f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
		}
		std::string val = arr[i];
 8009ac4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009ac6:	6838      	ldr	r0, [r7, #0]
 8009ac8:	f001 f938 	bl	800ad3c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEixEj>
 8009acc:	4602      	mov	r2, r0
 8009ace:	f107 030c 	add.w	r3, r7, #12
 8009ad2:	4611      	mov	r1, r2
 8009ad4:	4618      	mov	r0, r3
 8009ad6:	f007 fbcd 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
		if (val != "") data +=val;
 8009ada:	f107 030c 	add.w	r3, r7, #12
 8009ade:	4914      	ldr	r1, [pc, #80]	; (8009b30 <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE+0x90>)
 8009ae0:	4618      	mov	r0, r3
 8009ae2:	f001 f9ae 	bl	800ae42 <_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8009ae6:	4603      	mov	r3, r0
 8009ae8:	2b00      	cmp	r3, #0
 8009aea:	d005      	beq.n	8009af8 <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE+0x58>
 8009aec:	f107 030c 	add.w	r3, r7, #12
 8009af0:	4619      	mov	r1, r3
 8009af2:	6878      	ldr	r0, [r7, #4]
 8009af4:	f007 fb53 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
	}
 8009af8:	f107 030c 	add.w	r3, r7, #12
 8009afc:	4618      	mov	r0, r3
 8009afe:	f007 fa37 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	for(size_t i = 0 ; i < arr.size(); i++ ) {
 8009b02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b04:	3301      	adds	r3, #1
 8009b06:	627b      	str	r3, [r7, #36]	; 0x24
 8009b08:	6838      	ldr	r0, [r7, #0]
 8009b0a:	f001 f9ab 	bl	800ae64 <_ZNKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE4sizeEv>
 8009b0e:	4602      	mov	r2, r0
 8009b10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b12:	4293      	cmp	r3, r2
 8009b14:	bf34      	ite	cc
 8009b16:	2301      	movcc	r3, #1
 8009b18:	2300      	movcs	r3, #0
 8009b1a:	b2db      	uxtb	r3, r3
 8009b1c:	2b00      	cmp	r3, #0
 8009b1e:	d1ca      	bne.n	8009ab6 <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE+0x16>

	return data;
 8009b20:	bf00      	nop

}
 8009b22:	6878      	ldr	r0, [r7, #4]
 8009b24:	3728      	adds	r7, #40	; 0x28
 8009b26:	46bd      	mov	sp, r7
 8009b28:	bd80      	pop	{r7, pc}
 8009b2a:	bf00      	nop
 8009b2c:	08016444 	.word	0x08016444
 8009b30:	08016448 	.word	0x08016448

08009b34 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEC1Ev>:
 8009b34:	b5b0      	push	{r4, r5, r7, lr}
 8009b36:	b082      	sub	sp, #8
 8009b38:	af00      	add	r7, sp, #0
 8009b3a:	6078      	str	r0, [r7, #4]
 8009b3c:	687b      	ldr	r3, [r7, #4]
 8009b3e:	240a      	movs	r4, #10
 8009b40:	461d      	mov	r5, r3
 8009b42:	e004      	b.n	8009b4e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEC1Ev+0x1a>
 8009b44:	4628      	mov	r0, r5
 8009b46:	f007 f9fc 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8009b4a:	3518      	adds	r5, #24
 8009b4c:	3c01      	subs	r4, #1
 8009b4e:	2c00      	cmp	r4, #0
 8009b50:	daf8      	bge.n	8009b44 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEC1Ev+0x10>
 8009b52:	687b      	ldr	r3, [r7, #4]
 8009b54:	4618      	mov	r0, r3
 8009b56:	3708      	adds	r7, #8
 8009b58:	46bd      	mov	sp, r7
 8009b5a:	bdb0      	pop	{r4, r5, r7, pc}

08009b5c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EED1Ev>:
 8009b5c:	b590      	push	{r4, r7, lr}
 8009b5e:	b083      	sub	sp, #12
 8009b60:	af00      	add	r7, sp, #0
 8009b62:	6078      	str	r0, [r7, #4]
 8009b64:	687b      	ldr	r3, [r7, #4]
 8009b66:	2b00      	cmp	r3, #0
 8009b68:	d00a      	beq.n	8009b80 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EED1Ev+0x24>
 8009b6a:	687b      	ldr	r3, [r7, #4]
 8009b6c:	f503 7484 	add.w	r4, r3, #264	; 0x108
 8009b70:	687b      	ldr	r3, [r7, #4]
 8009b72:	429c      	cmp	r4, r3
 8009b74:	d004      	beq.n	8009b80 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EED1Ev+0x24>
 8009b76:	3c18      	subs	r4, #24
 8009b78:	4620      	mov	r0, r4
 8009b7a:	f007 f9f9 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009b7e:	e7f7      	b.n	8009b70 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EED1Ev+0x14>
 8009b80:	687b      	ldr	r3, [r7, #4]
 8009b82:	4618      	mov	r0, r3
 8009b84:	370c      	adds	r7, #12
 8009b86:	46bd      	mov	sp, r7
 8009b88:	bd90      	pop	{r4, r7, pc}
	...

08009b8c <_ZN6Config11getInfoListEv>:

char* Config::getInfoList(){
 8009b8c:	b590      	push	{r4, r7, lr}
 8009b8e:	f2ad 5d8c 	subw	sp, sp, #1420	; 0x58c
 8009b92:	af00      	add	r7, sp, #0
 8009b94:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009b98:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009b9c:	6018      	str	r0, [r3, #0]
	std::string data = "1";
 8009b9e:	f507 73a2 	add.w	r3, r7, #324	; 0x144
 8009ba2:	4618      	mov	r0, r3
 8009ba4:	f007 f8d0 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009ba8:	f507 72a2 	add.w	r2, r7, #324	; 0x144
 8009bac:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 8009bb0:	49ea      	ldr	r1, [pc, #936]	; (8009f5c <_ZN6Config11getInfoListEv+0x3d0>)
 8009bb2:	4618      	mov	r0, r3
 8009bb4:	f007 fb92 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009bb8:	f507 73a2 	add.w	r3, r7, #324	; 0x144
 8009bbc:	4618      	mov	r0, r3
 8009bbe:	f007 f8c5 	bl	8010d4c <_ZNSaIcED1Ev>
	std::string comma = ";";
 8009bc2:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 8009bc6:	4618      	mov	r0, r3
 8009bc8:	f007 f8be 	bl	8010d48 <_ZNSaIcEC1Ev>
 8009bcc:	f507 72a4 	add.w	r2, r7, #328	; 0x148
 8009bd0:	f507 738a 	add.w	r3, r7, #276	; 0x114
 8009bd4:	49e2      	ldr	r1, [pc, #904]	; (8009f60 <_ZN6Config11getInfoListEv+0x3d4>)
 8009bd6:	4618      	mov	r0, r3
 8009bd8:	f007 fb80 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8009bdc:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 8009be0:	4618      	mov	r0, r3
 8009be2:	f007 f8b3 	bl	8010d4c <_ZNSaIcED1Ev>
	std::array<std::string,11 > lists;
 8009be6:	f107 030c 	add.w	r3, r7, #12
 8009bea:	4618      	mov	r0, r3
 8009bec:	f7ff ffa2 	bl	8009b34 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEC1Ev>


	lists[0] = getClientId();
 8009bf0:	f107 030c 	add.w	r3, r7, #12
 8009bf4:	2100      	movs	r1, #0
 8009bf6:	4618      	mov	r0, r3
 8009bf8:	f001 f93f 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009bfc:	4604      	mov	r4, r0
 8009bfe:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009c02:	f2a3 423c 	subw	r2, r3, #1084	; 0x43c
 8009c06:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009c0a:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009c0e:	6819      	ldr	r1, [r3, #0]
 8009c10:	4610      	mov	r0, r2
 8009c12:	f000 fe11 	bl	800a838 <_ZNK6Config11getClientIdB5cxx11Ev>
 8009c16:	f507 73a6 	add.w	r3, r7, #332	; 0x14c
 8009c1a:	4619      	mov	r1, r3
 8009c1c:	4620      	mov	r0, r4
 8009c1e:	f007 f9b3 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009c22:	f507 73a6 	add.w	r3, r7, #332	; 0x14c
 8009c26:	4618      	mov	r0, r3
 8009c28:	f007 f9a2 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	lists[1] = createListString(getBrokerIP());
 8009c2c:	f107 030c 	add.w	r3, r7, #12
 8009c30:	2101      	movs	r1, #1
 8009c32:	4618      	mov	r0, r3
 8009c34:	f001 f921 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009c38:	4604      	mov	r4, r0
 8009c3a:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009c3e:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009c42:	6818      	ldr	r0, [r3, #0]
 8009c44:	f000 fd1f 	bl	800a686 <_ZNK6Config11getBrokerIPEv>
 8009c48:	4602      	mov	r2, r0
 8009c4a:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009c4e:	f2a3 430c 	subw	r3, r3, #1036	; 0x40c
 8009c52:	601a      	str	r2, [r3, #0]
 8009c54:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009c58:	f2a3 4224 	subw	r2, r3, #1060	; 0x424
 8009c5c:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009c60:	f2a3 430c 	subw	r3, r3, #1036	; 0x40c
 8009c64:	6819      	ldr	r1, [r3, #0]
 8009c66:	4610      	mov	r0, r2
 8009c68:	f7ff fe8e 	bl	8009988 <_Z16createListStringB5cxx11St5arrayIhLj4EE>
 8009c6c:	f507 73b2 	add.w	r3, r7, #356	; 0x164
 8009c70:	4619      	mov	r1, r3
 8009c72:	4620      	mov	r0, r4
 8009c74:	f007 f988 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009c78:	f507 73b2 	add.w	r3, r7, #356	; 0x164
 8009c7c:	4618      	mov	r0, r3
 8009c7e:	f007 f977 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	lists[2] = std::to_string(getBrokerPort());
 8009c82:	f107 030c 	add.w	r3, r7, #12
 8009c86:	2102      	movs	r1, #2
 8009c88:	4618      	mov	r0, r3
 8009c8a:	f001 f8f6 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009c8e:	4604      	mov	r4, r0
 8009c90:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009c94:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009c98:	6818      	ldr	r0, [r3, #0]
 8009c9a:	f000 fd0e 	bl	800a6ba <_ZNK6Config13getBrokerPortEv>
 8009c9e:	4603      	mov	r3, r0
 8009ca0:	461a      	mov	r2, r3
 8009ca2:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009ca6:	f5a3 6381 	sub.w	r3, r3, #1032	; 0x408
 8009caa:	4611      	mov	r1, r2
 8009cac:	4618      	mov	r0, r3
 8009cae:	f7ff f8f1 	bl	8008e94 <_ZNSt7__cxx119to_stringEi>
 8009cb2:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 8009cb6:	4619      	mov	r1, r3
 8009cb8:	4620      	mov	r0, r4
 8009cba:	f007 f965 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009cbe:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 8009cc2:	4618      	mov	r0, r3
 8009cc4:	f007 f954 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	lists[3] = createListString(getIP());
 8009cc8:	f107 030c 	add.w	r3, r7, #12
 8009ccc:	2103      	movs	r1, #3
 8009cce:	4618      	mov	r0, r3
 8009cd0:	f001 f8d3 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009cd4:	4604      	mov	r4, r0
 8009cd6:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009cda:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009cde:	6818      	ldr	r0, [r3, #0]
 8009ce0:	f000 fcf7 	bl	800a6d2 <_ZNK6Config5getIPEv>
 8009ce4:	4602      	mov	r2, r0
 8009ce6:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009cea:	f5a3 7376 	sub.w	r3, r3, #984	; 0x3d8
 8009cee:	601a      	str	r2, [r3, #0]
 8009cf0:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009cf4:	f5a3 727c 	sub.w	r2, r3, #1008	; 0x3f0
 8009cf8:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009cfc:	f5a3 7376 	sub.w	r3, r3, #984	; 0x3d8
 8009d00:	6819      	ldr	r1, [r3, #0]
 8009d02:	4610      	mov	r0, r2
 8009d04:	f7ff fe40 	bl	8009988 <_Z16createListStringB5cxx11St5arrayIhLj4EE>
 8009d08:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 8009d0c:	4619      	mov	r1, r3
 8009d0e:	4620      	mov	r0, r4
 8009d10:	f007 f93a 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009d14:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 8009d18:	4618      	mov	r0, r3
 8009d1a:	f007 f929 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	lists[4] = createListString(getSubnet());
 8009d1e:	f107 030c 	add.w	r3, r7, #12
 8009d22:	2104      	movs	r1, #4
 8009d24:	4618      	mov	r0, r3
 8009d26:	f001 f8a8 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009d2a:	4604      	mov	r4, r0
 8009d2c:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009d30:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009d34:	6818      	ldr	r0, [r3, #0]
 8009d36:	f000 fd06 	bl	800a746 <_ZNK6Config9getSubnetEv>
 8009d3a:	4602      	mov	r2, r0
 8009d3c:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009d40:	f5a3 736f 	sub.w	r3, r3, #956	; 0x3bc
 8009d44:	601a      	str	r2, [r3, #0]
 8009d46:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009d4a:	f5a3 7275 	sub.w	r2, r3, #980	; 0x3d4
 8009d4e:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009d52:	f5a3 736f 	sub.w	r3, r3, #956	; 0x3bc
 8009d56:	6819      	ldr	r1, [r3, #0]
 8009d58:	4610      	mov	r0, r2
 8009d5a:	f7ff fe15 	bl	8009988 <_Z16createListStringB5cxx11St5arrayIhLj4EE>
 8009d5e:	f507 73da 	add.w	r3, r7, #436	; 0x1b4
 8009d62:	4619      	mov	r1, r3
 8009d64:	4620      	mov	r0, r4
 8009d66:	f007 f90f 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009d6a:	f507 73da 	add.w	r3, r7, #436	; 0x1b4
 8009d6e:	4618      	mov	r0, r3
 8009d70:	f007 f8fe 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	lists[5] = createListString(getGateway());
 8009d74:	f107 030c 	add.w	r3, r7, #12
 8009d78:	2105      	movs	r1, #5
 8009d7a:	4618      	mov	r0, r3
 8009d7c:	f001 f87d 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009d80:	4604      	mov	r4, r0
 8009d82:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009d86:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009d8a:	6818      	ldr	r0, [r3, #0]
 8009d8c:	f000 fcbe 	bl	800a70c <_ZNK6Config10getGatewayEv>
 8009d90:	4602      	mov	r2, r0
 8009d92:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009d96:	f5a3 7368 	sub.w	r3, r3, #928	; 0x3a0
 8009d9a:	601a      	str	r2, [r3, #0]
 8009d9c:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009da0:	f5a3 726e 	sub.w	r2, r3, #952	; 0x3b8
 8009da4:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009da8:	f5a3 7368 	sub.w	r3, r3, #928	; 0x3a0
 8009dac:	6819      	ldr	r1, [r3, #0]
 8009dae:	4610      	mov	r0, r2
 8009db0:	f7ff fdea 	bl	8009988 <_Z16createListStringB5cxx11St5arrayIhLj4EE>
 8009db4:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
 8009db8:	4619      	mov	r1, r3
 8009dba:	4620      	mov	r0, r4
 8009dbc:	f007 f8e4 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009dc0:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
 8009dc4:	4618      	mov	r0, r3
 8009dc6:	f007 f8d3 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	lists[6] = createListString(getDNS());
 8009dca:	f107 030c 	add.w	r3, r7, #12
 8009dce:	2106      	movs	r1, #6
 8009dd0:	4618      	mov	r0, r3
 8009dd2:	f001 f852 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009dd6:	4604      	mov	r4, r0
 8009dd8:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009ddc:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009de0:	6818      	ldr	r0, [r3, #0]
 8009de2:	f000 fccd 	bl	800a780 <_ZNK6Config6getDNSEv>
 8009de6:	4602      	mov	r2, r0
 8009de8:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009dec:	f5a3 7361 	sub.w	r3, r3, #900	; 0x384
 8009df0:	601a      	str	r2, [r3, #0]
 8009df2:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009df6:	f5a3 7267 	sub.w	r2, r3, #924	; 0x39c
 8009dfa:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009dfe:	f5a3 7361 	sub.w	r3, r3, #900	; 0x384
 8009e02:	6819      	ldr	r1, [r3, #0]
 8009e04:	4610      	mov	r0, r2
 8009e06:	f7ff fdbf 	bl	8009988 <_Z16createListStringB5cxx11St5arrayIhLj4EE>
 8009e0a:	f507 73f6 	add.w	r3, r7, #492	; 0x1ec
 8009e0e:	4619      	mov	r1, r3
 8009e10:	4620      	mov	r0, r4
 8009e12:	f007 f8b9 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009e16:	f507 73f6 	add.w	r3, r7, #492	; 0x1ec
 8009e1a:	4618      	mov	r0, r3
 8009e1c:	f007 f8a8 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	lists[7] = createStringFromArray8len(getAnalogInputNames());
 8009e20:	f107 030c 	add.w	r3, r7, #12
 8009e24:	2107      	movs	r1, #7
 8009e26:	4618      	mov	r0, r3
 8009e28:	f001 f827 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009e2c:	4604      	mov	r4, r0
 8009e2e:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009e32:	f5a3 725a 	sub.w	r2, r3, #872	; 0x368
 8009e36:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009e3a:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009e3e:	6819      	ldr	r1, [r3, #0]
 8009e40:	4610      	mov	r0, r2
 8009e42:	f000 fd4d 	bl	800a8e0 <_ZN6Config19getAnalogInputNamesB5cxx11Ev>
 8009e46:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009e4a:	f5a3 7360 	sub.w	r3, r3, #896	; 0x380
 8009e4e:	f507 7208 	add.w	r2, r7, #544	; 0x220
 8009e52:	4611      	mov	r1, r2
 8009e54:	4618      	mov	r0, r3
 8009e56:	f7ff fe23 	bl	8009aa0 <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>
 8009e5a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8009e5e:	4619      	mov	r1, r3
 8009e60:	4620      	mov	r0, r4
 8009e62:	f007 f891 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009e66:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8009e6a:	4618      	mov	r0, r3
 8009e6c:	f007 f880 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009e70:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8009e74:	4618      	mov	r0, r3
 8009e76:	f7ff f85a 	bl	8008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>
	lists[8] = createStringFromArray(getDigitalInputNames());
 8009e7a:	f107 030c 	add.w	r3, r7, #12
 8009e7e:	2108      	movs	r1, #8
 8009e80:	4618      	mov	r0, r3
 8009e82:	f000 fffa 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009e86:	4604      	mov	r4, r0
 8009e88:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009e8c:	f5a3 7224 	sub.w	r2, r3, #656	; 0x290
 8009e90:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009e94:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009e98:	6819      	ldr	r1, [r3, #0]
 8009e9a:	4610      	mov	r0, r2
 8009e9c:	f000 fd47 	bl	800a92e <_ZN6Config20getDigitalInputNamesB5cxx11Ev>
 8009ea0:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009ea4:	f5a3 732a 	sub.w	r3, r3, #680	; 0x2a8
 8009ea8:	f507 723e 	add.w	r2, r7, #760	; 0x2f8
 8009eac:	4611      	mov	r1, r2
 8009eae:	4618      	mov	r0, r3
 8009eb0:	f7ff fdac 	bl	8009a0c <_Z21createStringFromArraySt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE>
 8009eb4:	f507 7338 	add.w	r3, r7, #736	; 0x2e0
 8009eb8:	4619      	mov	r1, r3
 8009eba:	4620      	mov	r0, r4
 8009ebc:	f007 f864 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009ec0:	f507 7338 	add.w	r3, r7, #736	; 0x2e0
 8009ec4:	4618      	mov	r0, r3
 8009ec6:	f007 f853 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009eca:	f507 733e 	add.w	r3, r7, #760	; 0x2f8
 8009ece:	4618      	mov	r0, r3
 8009ed0:	f7ff f858 	bl	8008f84 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EED1Ev>
	lists[9] = createStringFromArray8len(getDigitalOutputNames());
 8009ed4:	f107 030c 	add.w	r3, r7, #12
 8009ed8:	2109      	movs	r1, #9
 8009eda:	4618      	mov	r0, r3
 8009edc:	f000 ffcd 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009ee0:	4604      	mov	r4, r0
 8009ee2:	f507 6292 	add.w	r2, r7, #1168	; 0x490
 8009ee6:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009eea:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009eee:	6819      	ldr	r1, [r3, #0]
 8009ef0:	4610      	mov	r0, r2
 8009ef2:	f000 fd2c 	bl	800a94e <_ZN6Config21getDigitalOutputNamesB5cxx11Ev>
 8009ef6:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009efa:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8009efe:	f507 6292 	add.w	r2, r7, #1168	; 0x490
 8009f02:	4611      	mov	r1, r2
 8009f04:	4618      	mov	r0, r3
 8009f06:	f7ff fdcb 	bl	8009aa0 <_Z25createStringFromArray8lenSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>
 8009f0a:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 8009f0e:	4619      	mov	r1, r3
 8009f10:	4620      	mov	r0, r4
 8009f12:	f007 f839 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009f16:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 8009f1a:	4618      	mov	r0, r3
 8009f1c:	f007 f828 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009f20:	f507 6392 	add.w	r3, r7, #1168	; 0x490
 8009f24:	4618      	mov	r0, r3
 8009f26:	f7ff f802 	bl	8008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>
	lists[10] = getDHCPEnabled() ? std::to_string(1) : std::to_string(0);
 8009f2a:	f107 030c 	add.w	r3, r7, #12
 8009f2e:	210a      	movs	r1, #10
 8009f30:	4618      	mov	r0, r3
 8009f32:	f000 ffa2 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009f36:	4604      	mov	r4, r0
 8009f38:	f507 63b1 	add.w	r3, r7, #1416	; 0x588
 8009f3c:	f2a3 5384 	subw	r3, r3, #1412	; 0x584
 8009f40:	6818      	ldr	r0, [r3, #0]
 8009f42:	f000 fc46 	bl	800a7d2 <_ZNK6Config14getDHCPEnabledEv>
 8009f46:	4603      	mov	r3, r0
 8009f48:	2b00      	cmp	r3, #0
 8009f4a:	d00b      	beq.n	8009f64 <_ZN6Config11getInfoListEv+0x3d8>
 8009f4c:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
 8009f50:	2101      	movs	r1, #1
 8009f52:	4618      	mov	r0, r3
 8009f54:	f7fe ff9e 	bl	8008e94 <_ZNSt7__cxx119to_stringEi>
 8009f58:	e00a      	b.n	8009f70 <_ZN6Config11getInfoListEv+0x3e4>
 8009f5a:	bf00      	nop
 8009f5c:	0801644c 	.word	0x0801644c
 8009f60:	08016450 	.word	0x08016450
 8009f64:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
 8009f68:	2100      	movs	r1, #0
 8009f6a:	4618      	mov	r0, r3
 8009f6c:	f7fe ff92 	bl	8008e94 <_ZNSt7__cxx119to_stringEi>
 8009f70:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
 8009f74:	4619      	mov	r1, r3
 8009f76:	4620      	mov	r0, r4
 8009f78:	f007 f806 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009f7c:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
 8009f80:	4618      	mov	r0, r3
 8009f82:	f006 fff5 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	for (size_t i = 0; i < lists.size(); i ++ ) {
 8009f86:	2300      	movs	r3, #0
 8009f88:	f8c7 3584 	str.w	r3, [r7, #1412]	; 0x584
 8009f8c:	e01a      	b.n	8009fc4 <_ZN6Config11getInfoListEv+0x438>
		data += comma;
 8009f8e:	f507 728a 	add.w	r2, r7, #276	; 0x114
 8009f92:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 8009f96:	4611      	mov	r1, r2
 8009f98:	4618      	mov	r0, r3
 8009f9a:	f007 f900 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
		data += lists[i];
 8009f9e:	f107 030c 	add.w	r3, r7, #12
 8009fa2:	f8d7 1584 	ldr.w	r1, [r7, #1412]	; 0x584
 8009fa6:	4618      	mov	r0, r3
 8009fa8:	f000 ff67 	bl	800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>
 8009fac:	4602      	mov	r2, r0
 8009fae:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 8009fb2:	4611      	mov	r1, r2
 8009fb4:	4618      	mov	r0, r3
 8009fb6:	f007 f8f2 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
	for (size_t i = 0; i < lists.size(); i ++ ) {
 8009fba:	f8d7 3584 	ldr.w	r3, [r7, #1412]	; 0x584
 8009fbe:	3301      	adds	r3, #1
 8009fc0:	f8c7 3584 	str.w	r3, [r7, #1412]	; 0x584
 8009fc4:	f107 030c 	add.w	r3, r7, #12
 8009fc8:	4618      	mov	r0, r3
 8009fca:	f000 ff65 	bl	800ae98 <_ZNKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EE4sizeEv>
 8009fce:	4602      	mov	r2, r0
 8009fd0:	f8d7 3584 	ldr.w	r3, [r7, #1412]	; 0x584
 8009fd4:	4293      	cmp	r3, r2
 8009fd6:	bf34      	ite	cc
 8009fd8:	2301      	movcc	r3, #1
 8009fda:	2300      	movcs	r3, #0
 8009fdc:	b2db      	uxtb	r3, r3
 8009fde:	2b00      	cmp	r3, #0
 8009fe0:	d1d5      	bne.n	8009f8e <_ZN6Config11getInfoListEv+0x402>
	}


	data = data+ "\r";
 8009fe2:	f507 63ad 	add.w	r3, r7, #1384	; 0x568
 8009fe6:	f507 7196 	add.w	r1, r7, #300	; 0x12c
 8009fea:	4a20      	ldr	r2, [pc, #128]	; (800a06c <_ZN6Config11getInfoListEv+0x4e0>)
 8009fec:	4618      	mov	r0, r3
 8009fee:	f000 ff5e 	bl	800aeae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>
 8009ff2:	f507 62ad 	add.w	r2, r7, #1384	; 0x568
 8009ff6:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 8009ffa:	4611      	mov	r1, r2
 8009ffc:	4618      	mov	r0, r3
 8009ffe:	f006 ffc3 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800a002:	f507 63ad 	add.w	r3, r7, #1384	; 0x568
 800a006:	4618      	mov	r0, r3
 800a008:	f006 ffb2 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	char* result = new char[data.length() + 1]; // +1 for null terminator
 800a00c:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 800a010:	4618      	mov	r0, r3
 800a012:	f006 ffe6 	bl	8010fe2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 800a016:	4603      	mov	r3, r0
 800a018:	3301      	adds	r3, #1
 800a01a:	4618      	mov	r0, r3
 800a01c:	f006 fe92 	bl	8010d44 <_Znaj>
 800a020:	4603      	mov	r3, r0
 800a022:	f8c7 3580 	str.w	r3, [r7, #1408]	; 0x580
	strcpy(result, data.c_str());
 800a026:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 800a02a:	4618      	mov	r0, r3
 800a02c:	f007 f8e6 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800a030:	4603      	mov	r3, r0
 800a032:	4619      	mov	r1, r3
 800a034:	f8d7 0580 	ldr.w	r0, [r7, #1408]	; 0x580
 800a038:	f009 f803 	bl	8013042 <strcpy>

	return result;
 800a03c:	f8d7 4580 	ldr.w	r4, [r7, #1408]	; 0x580
}
 800a040:	f107 030c 	add.w	r3, r7, #12
 800a044:	4618      	mov	r0, r3
 800a046:	f7ff fd89 	bl	8009b5c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EED1Ev>
 800a04a:	f507 738a 	add.w	r3, r7, #276	; 0x114
 800a04e:	4618      	mov	r0, r3
 800a050:	f006 ff8e 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800a054:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 800a058:	4618      	mov	r0, r3
 800a05a:	f006 ff89 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	return result;
 800a05e:	4623      	mov	r3, r4
}
 800a060:	4618      	mov	r0, r3
 800a062:	f207 578c 	addw	r7, r7, #1420	; 0x58c
 800a066:	46bd      	mov	sp, r7
 800a068:	bd90      	pop	{r4, r7, pc}
 800a06a:	bf00      	nop
 800a06c:	08016454 	.word	0x08016454

0800a070 <_ZN6Config16extractIPAddressEP5cJSONPKc>:

std::array<uint8_t, 4> Config::extractIPAddress(cJSON* parent, const char* name) {
 800a070:	b590      	push	{r4, r7, lr}
 800a072:	b08b      	sub	sp, #44	; 0x2c
 800a074:	af00      	add	r7, sp, #0
 800a076:	60f8      	str	r0, [r7, #12]
 800a078:	60b9      	str	r1, [r7, #8]
 800a07a:	607a      	str	r2, [r7, #4]
    std::array<uint8_t, 4> addressArray{};
 800a07c:	2300      	movs	r3, #0
 800a07e:	617b      	str	r3, [r7, #20]
    cJSON* item = cJSON_GetObjectItemCaseSensitive(parent, name);
 800a080:	6879      	ldr	r1, [r7, #4]
 800a082:	68b8      	ldr	r0, [r7, #8]
 800a084:	f7fc f94e 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800a088:	6238      	str	r0, [r7, #32]
    if (cJSON_IsArray(item)) {
 800a08a:	6a38      	ldr	r0, [r7, #32]
 800a08c:	f7fc fb5f 	bl	800674e <cJSON_IsArray>
 800a090:	4603      	mov	r3, r0
 800a092:	2b00      	cmp	r3, #0
 800a094:	bf14      	ite	ne
 800a096:	2301      	movne	r3, #1
 800a098:	2300      	moveq	r3, #0
 800a09a:	b2db      	uxtb	r3, r3
 800a09c:	2b00      	cmp	r3, #0
 800a09e:	d024      	beq.n	800a0ea <_ZN6Config16extractIPAddressEP5cJSONPKc+0x7a>
        for (int i = 0; i < 4; ++i) {
 800a0a0:	2300      	movs	r3, #0
 800a0a2:	627b      	str	r3, [r7, #36]	; 0x24
 800a0a4:	e01e      	b.n	800a0e4 <_ZN6Config16extractIPAddressEP5cJSONPKc+0x74>
            cJSON* byteItem = cJSON_GetArrayItem(item, i);
 800a0a6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800a0a8:	6a38      	ldr	r0, [r7, #32]
 800a0aa:	f7fc f8df 	bl	800626c <cJSON_GetArrayItem>
 800a0ae:	61f8      	str	r0, [r7, #28]
            if (cJSON_IsNumber(byteItem)) {
 800a0b0:	69f8      	ldr	r0, [r7, #28]
 800a0b2:	f7fc fb1e 	bl	80066f2 <cJSON_IsNumber>
 800a0b6:	4603      	mov	r3, r0
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	bf14      	ite	ne
 800a0bc:	2301      	movne	r3, #1
 800a0be:	2300      	moveq	r3, #0
 800a0c0:	b2db      	uxtb	r3, r3
 800a0c2:	2b00      	cmp	r3, #0
 800a0c4:	d00b      	beq.n	800a0de <_ZN6Config16extractIPAddressEP5cJSONPKc+0x6e>
                addressArray[i] = static_cast<uint8_t>(byteItem->valueint);
 800a0c6:	69fb      	ldr	r3, [r7, #28]
 800a0c8:	695c      	ldr	r4, [r3, #20]
 800a0ca:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a0cc:	f107 0314 	add.w	r3, r7, #20
 800a0d0:	4611      	mov	r1, r2
 800a0d2:	4618      	mov	r0, r3
 800a0d4:	f000 fe9b 	bl	800ae0e <_ZNSt5arrayIhLj4EEixEj>
 800a0d8:	4603      	mov	r3, r0
 800a0da:	b2e2      	uxtb	r2, r4
 800a0dc:	701a      	strb	r2, [r3, #0]
        for (int i = 0; i < 4; ++i) {
 800a0de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a0e0:	3301      	adds	r3, #1
 800a0e2:	627b      	str	r3, [r7, #36]	; 0x24
 800a0e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a0e6:	2b03      	cmp	r3, #3
 800a0e8:	dddd      	ble.n	800a0a6 <_ZN6Config16extractIPAddressEP5cJSONPKc+0x36>
            }
        }
    }
    return addressArray;
 800a0ea:	697b      	ldr	r3, [r7, #20]
 800a0ec:	61bb      	str	r3, [r7, #24]
 800a0ee:	2300      	movs	r3, #0
 800a0f0:	7e3a      	ldrb	r2, [r7, #24]
 800a0f2:	f362 0307 	bfi	r3, r2, #0, #8
 800a0f6:	7e7a      	ldrb	r2, [r7, #25]
 800a0f8:	f362 230f 	bfi	r3, r2, #8, #8
 800a0fc:	7eba      	ldrb	r2, [r7, #26]
 800a0fe:	f362 4317 	bfi	r3, r2, #16, #8
 800a102:	7efa      	ldrb	r2, [r7, #27]
 800a104:	f362 631f 	bfi	r3, r2, #24, #8
}
 800a108:	4618      	mov	r0, r3
 800a10a:	372c      	adds	r7, #44	; 0x2c
 800a10c:	46bd      	mov	sp, r7
 800a10e:	bd90      	pop	{r4, r7, pc}

0800a110 <_ZN6Config18setNetworkSettingsEP5cJSON>:



void Config::setNetworkSettings(cJSON* data) {
 800a110:	b580      	push	{r7, lr}
 800a112:	b088      	sub	sp, #32
 800a114:	af00      	add	r7, sp, #0
 800a116:	6078      	str	r0, [r7, #4]
 800a118:	6039      	str	r1, [r7, #0]
    cJSON* statusJson = cJSON_GetObjectItemCaseSensitive(data, "status");
 800a11a:	492e      	ldr	r1, [pc, #184]	; (800a1d4 <_ZN6Config18setNetworkSettingsEP5cJSON+0xc4>)
 800a11c:	6838      	ldr	r0, [r7, #0]
 800a11e:	f7fc f901 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800a122:	61f8      	str	r0, [r7, #28]
    if (cJSON_IsBool(statusJson)) {
 800a124:	69f8      	ldr	r0, [r7, #28]
 800a126:	f7fc facc 	bl	80066c2 <cJSON_IsBool>
 800a12a:	4603      	mov	r3, r0
 800a12c:	2b00      	cmp	r3, #0
 800a12e:	bf14      	ite	ne
 800a130:	2301      	movne	r3, #1
 800a132:	2300      	moveq	r3, #0
 800a134:	b2db      	uxtb	r3, r3
 800a136:	2b00      	cmp	r3, #0
 800a138:	d047      	beq.n	800a1ca <_ZN6Config18setNetworkSettingsEP5cJSON+0xba>
    	 bool status = cJSON_IsTrue(statusJson) ? true : false;
 800a13a:	69f8      	ldr	r0, [r7, #28]
 800a13c:	f7fc faaa 	bl	8006694 <cJSON_IsTrue>
 800a140:	4603      	mov	r3, r0
 800a142:	2b00      	cmp	r3, #0
 800a144:	bf14      	ite	ne
 800a146:	2301      	movne	r3, #1
 800a148:	2300      	moveq	r3, #0
 800a14a:	76fb      	strb	r3, [r7, #27]
       // bool status = cJSON_IsTrue(statusJson);


        if (!status) {
 800a14c:	7efb      	ldrb	r3, [r7, #27]
 800a14e:	f083 0301 	eor.w	r3, r3, #1
 800a152:	b2db      	uxtb	r3, r3
 800a154:	2b00      	cmp	r3, #0
 800a156:	d033      	beq.n	800a1c0 <_ZN6Config18setNetworkSettingsEP5cJSON+0xb0>
            setIP(extractIPAddress(data, "ip"));
 800a158:	4a1f      	ldr	r2, [pc, #124]	; (800a1d8 <_ZN6Config18setNetworkSettingsEP5cJSON+0xc8>)
 800a15a:	6839      	ldr	r1, [r7, #0]
 800a15c:	6878      	ldr	r0, [r7, #4]
 800a15e:	f7ff ff87 	bl	800a070 <_ZN6Config16extractIPAddressEP5cJSONPKc>
 800a162:	4603      	mov	r3, r0
 800a164:	60bb      	str	r3, [r7, #8]
 800a166:	f107 0308 	add.w	r3, r7, #8
 800a16a:	4619      	mov	r1, r3
 800a16c:	6878      	ldr	r0, [r7, #4]
 800a16e:	f000 fc1c 	bl	800a9aa <_ZN6Config5setIPERKSt5arrayIhLj4EE>
            setGateway(extractIPAddress(data, "gateway"));
 800a172:	4a1a      	ldr	r2, [pc, #104]	; (800a1dc <_ZN6Config18setNetworkSettingsEP5cJSON+0xcc>)
 800a174:	6839      	ldr	r1, [r7, #0]
 800a176:	6878      	ldr	r0, [r7, #4]
 800a178:	f7ff ff7a 	bl	800a070 <_ZN6Config16extractIPAddressEP5cJSONPKc>
 800a17c:	4603      	mov	r3, r0
 800a17e:	60fb      	str	r3, [r7, #12]
 800a180:	f107 030c 	add.w	r3, r7, #12
 800a184:	4619      	mov	r1, r3
 800a186:	6878      	ldr	r0, [r7, #4]
 800a188:	f000 fc1f 	bl	800a9ca <_ZN6Config10setGatewayERKSt5arrayIhLj4EE>
            setSubnet(extractIPAddress(data, "subnet"));
 800a18c:	4a14      	ldr	r2, [pc, #80]	; (800a1e0 <_ZN6Config18setNetworkSettingsEP5cJSON+0xd0>)
 800a18e:	6839      	ldr	r1, [r7, #0]
 800a190:	6878      	ldr	r0, [r7, #4]
 800a192:	f7ff ff6d 	bl	800a070 <_ZN6Config16extractIPAddressEP5cJSONPKc>
 800a196:	4603      	mov	r3, r0
 800a198:	613b      	str	r3, [r7, #16]
 800a19a:	f107 0310 	add.w	r3, r7, #16
 800a19e:	4619      	mov	r1, r3
 800a1a0:	6878      	ldr	r0, [r7, #4]
 800a1a2:	f000 fc22 	bl	800a9ea <_ZN6Config9setSubnetERKSt5arrayIhLj4EE>
            setDNS(extractIPAddress(data, "dns"));
 800a1a6:	4a0f      	ldr	r2, [pc, #60]	; (800a1e4 <_ZN6Config18setNetworkSettingsEP5cJSON+0xd4>)
 800a1a8:	6839      	ldr	r1, [r7, #0]
 800a1aa:	6878      	ldr	r0, [r7, #4]
 800a1ac:	f7ff ff60 	bl	800a070 <_ZN6Config16extractIPAddressEP5cJSONPKc>
 800a1b0:	4603      	mov	r3, r0
 800a1b2:	617b      	str	r3, [r7, #20]
 800a1b4:	f107 0314 	add.w	r3, r7, #20
 800a1b8:	4619      	mov	r1, r3
 800a1ba:	6878      	ldr	r0, [r7, #4]
 800a1bc:	f000 fc25 	bl	800aa0a <_ZN6Config6setDNSERKSt5arrayIhLj4EE>
        }

        setDHCPEnabled(status);
 800a1c0:	7efb      	ldrb	r3, [r7, #27]
 800a1c2:	4619      	mov	r1, r3
 800a1c4:	6878      	ldr	r0, [r7, #4]
 800a1c6:	f000 fc3f 	bl	800aa48 <_ZN6Config14setDHCPEnabledEb>
    }
}
 800a1ca:	bf00      	nop
 800a1cc:	3720      	adds	r7, #32
 800a1ce:	46bd      	mov	sp, r7
 800a1d0:	bd80      	pop	{r7, pc}
 800a1d2:	bf00      	nop
 800a1d4:	08016458 	.word	0x08016458
 800a1d8:	08016460 	.word	0x08016460
 800a1dc:	08016464 	.word	0x08016464
 800a1e0:	0801646c 	.word	0x0801646c
 800a1e4:	08016474 	.word	0x08016474

0800a1e8 <_ZN6Config13setMQTTBrokerEP5cJSON>:


void Config::setMQTTBroker(cJSON* data) {
 800a1e8:	b580      	push	{r7, lr}
 800a1ea:	b086      	sub	sp, #24
 800a1ec:	af00      	add	r7, sp, #0
 800a1ee:	6078      	str	r0, [r7, #4]
 800a1f0:	6039      	str	r1, [r7, #0]
	if (data == nullptr) return;
 800a1f2:	683b      	ldr	r3, [r7, #0]
 800a1f4:	2b00      	cmp	r3, #0
 800a1f6:	d026      	beq.n	800a246 <_ZN6Config13setMQTTBrokerEP5cJSON+0x5e>
	cJSON* numItem = cJSON_GetObjectItemCaseSensitive(data, "port");
 800a1f8:	4915      	ldr	r1, [pc, #84]	; (800a250 <_ZN6Config13setMQTTBrokerEP5cJSON+0x68>)
 800a1fa:	6838      	ldr	r0, [r7, #0]
 800a1fc:	f7fc f892 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800a200:	6178      	str	r0, [r7, #20]
	        if (cJSON_IsNumber(numItem)) {
 800a202:	6978      	ldr	r0, [r7, #20]
 800a204:	f7fc fa75 	bl	80066f2 <cJSON_IsNumber>
 800a208:	4603      	mov	r3, r0
 800a20a:	2b00      	cmp	r3, #0
 800a20c:	bf14      	ite	ne
 800a20e:	2301      	movne	r3, #1
 800a210:	2300      	moveq	r3, #0
 800a212:	b2db      	uxtb	r3, r3
 800a214:	2b00      	cmp	r3, #0
 800a216:	d017      	beq.n	800a248 <_ZN6Config13setMQTTBrokerEP5cJSON+0x60>
	            int number = numItem->valueint;
 800a218:	697b      	ldr	r3, [r7, #20]
 800a21a:	695b      	ldr	r3, [r3, #20]
 800a21c:	613b      	str	r3, [r7, #16]
	            setBrokerPort(number);
 800a21e:	693b      	ldr	r3, [r7, #16]
 800a220:	b29b      	uxth	r3, r3
 800a222:	4619      	mov	r1, r3
 800a224:	6878      	ldr	r0, [r7, #4]
 800a226:	f000 fbb1 	bl	800a98c <_ZN6Config13setBrokerPortEt>
	            setBrokerIP(extractIPAddress(data, "broker_ip"));
 800a22a:	4a0a      	ldr	r2, [pc, #40]	; (800a254 <_ZN6Config13setMQTTBrokerEP5cJSON+0x6c>)
 800a22c:	6839      	ldr	r1, [r7, #0]
 800a22e:	6878      	ldr	r0, [r7, #4]
 800a230:	f7ff ff1e 	bl	800a070 <_ZN6Config16extractIPAddressEP5cJSONPKc>
 800a234:	4603      	mov	r3, r0
 800a236:	60fb      	str	r3, [r7, #12]
 800a238:	f107 030c 	add.w	r3, r7, #12
 800a23c:	4619      	mov	r1, r3
 800a23e:	6878      	ldr	r0, [r7, #4]
 800a240:	f000 fb95 	bl	800a96e <_ZN6Config11setBrokerIPERKSt5arrayIhLj4EE>
 800a244:	e000      	b.n	800a248 <_ZN6Config13setMQTTBrokerEP5cJSON+0x60>
	if (data == nullptr) return;
 800a246:	bf00      	nop
	  }

}
 800a248:	3718      	adds	r7, #24
 800a24a:	46bd      	mov	sp, r7
 800a24c:	bd80      	pop	{r7, pc}
 800a24e:	bf00      	nop
 800a250:	08016478 	.word	0x08016478
 800a254:	08016480 	.word	0x08016480

0800a258 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON>:



void Config::setAnalogInputNamesFromJson(cJSON* jsonData) {
 800a258:	b5b0      	push	{r4, r5, r7, lr}
 800a25a:	b0bc      	sub	sp, #240	; 0xf0
 800a25c:	af00      	add	r7, sp, #0
 800a25e:	6078      	str	r0, [r7, #4]
 800a260:	6039      	str	r1, [r7, #0]
    if (jsonData == nullptr) {
 800a262:	683b      	ldr	r3, [r7, #0]
 800a264:	2b00      	cmp	r3, #0
 800a266:	d07e      	beq.n	800a366 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x10e>
        return; // Input is null, handle error as needed
    }

    cJSON* analogInputsJson = cJSON_GetObjectItemCaseSensitive(jsonData, "data");
 800a268:	4942      	ldr	r1, [pc, #264]	; (800a374 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x11c>)
 800a26a:	6838      	ldr	r0, [r7, #0]
 800a26c:	f7fc f85a 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800a270:	f8c7 00e4 	str.w	r0, [r7, #228]	; 0xe4
    if (!cJSON_IsArray(analogInputsJson)) {
 800a274:	f8d7 00e4 	ldr.w	r0, [r7, #228]	; 0xe4
 800a278:	f7fc fa69 	bl	800674e <cJSON_IsArray>
 800a27c:	4603      	mov	r3, r0
 800a27e:	2b00      	cmp	r3, #0
 800a280:	bf0c      	ite	eq
 800a282:	2301      	moveq	r3, #1
 800a284:	2300      	movne	r3, #0
 800a286:	b2db      	uxtb	r3, r3
 800a288:	2b00      	cmp	r3, #0
 800a28a:	d16e      	bne.n	800a36a <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x112>
        return; // Not an array, handle error as needed
    }

    std::array<std::string, MAX_ANALOG_INPUTS> analogInputs;
 800a28c:	f107 0308 	add.w	r3, r7, #8
 800a290:	4618      	mov	r0, r3
 800a292:	f7fe fe38 	bl	8008f06 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1Ev>
    size_t index = 0;
 800a296:	2300      	movs	r3, #0
 800a298:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    cJSON* analogInputJson;

    // Iterate over the analog input names array
    cJSON_ArrayForEach(analogInputJson, analogInputsJson) {
 800a29c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a2a0:	2b00      	cmp	r3, #0
 800a2a2:	d003      	beq.n	800a2ac <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x54>
 800a2a4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a2a8:	689b      	ldr	r3, [r3, #8]
 800a2aa:	e000      	b.n	800a2ae <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x56>
 800a2ac:	2300      	movs	r3, #0
 800a2ae:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800a2b2:	e046      	b.n	800a342 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0xea>
        if (cJSON_IsString(analogInputJson) && (analogInputJson->valuestring != NULL)) {
 800a2b4:	f8d7 00e8 	ldr.w	r0, [r7, #232]	; 0xe8
 800a2b8:	f7fc fa32 	bl	8006720 <cJSON_IsString>
 800a2bc:	4603      	mov	r3, r0
 800a2be:	2b00      	cmp	r3, #0
 800a2c0:	d006      	beq.n	800a2d0 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x78>
 800a2c2:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800a2c6:	691b      	ldr	r3, [r3, #16]
 800a2c8:	2b00      	cmp	r3, #0
 800a2ca:	d001      	beq.n	800a2d0 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x78>
 800a2cc:	2301      	movs	r3, #1
 800a2ce:	e000      	b.n	800a2d2 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x7a>
 800a2d0:	2300      	movs	r3, #0
 800a2d2:	2b00      	cmp	r3, #0
 800a2d4:	d030      	beq.n	800a338 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0xe0>
            if (index < MAX_ANALOG_INPUTS) {
 800a2d6:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800a2da:	2b07      	cmp	r3, #7
 800a2dc:	d836      	bhi.n	800a34c <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0xf4>
                analogInputs[index] = std::string(analogInputJson->valuestring);
 800a2de:	f107 0308 	add.w	r3, r7, #8
 800a2e2:	f8d7 10ec 	ldr.w	r1, [r7, #236]	; 0xec
 800a2e6:	4618      	mov	r0, r3
 800a2e8:	f000 fd28 	bl	800ad3c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEixEj>
 800a2ec:	4605      	mov	r5, r0
 800a2ee:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800a2f2:	691c      	ldr	r4, [r3, #16]
 800a2f4:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 800a2f8:	4618      	mov	r0, r3
 800a2fa:	f006 fd25 	bl	8010d48 <_ZNSaIcEC1Ev>
 800a2fe:	f107 02e0 	add.w	r2, r7, #224	; 0xe0
 800a302:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800a306:	4621      	mov	r1, r4
 800a308:	4618      	mov	r0, r3
 800a30a:	f006 ffe7 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800a30e:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800a312:	4619      	mov	r1, r3
 800a314:	4628      	mov	r0, r5
 800a316:	f006 fe37 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800a31a:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800a31e:	4618      	mov	r0, r3
 800a320:	f006 fe26 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800a324:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 800a328:	4618      	mov	r0, r3
 800a32a:	f006 fd0f 	bl	8010d4c <_ZNSaIcED1Ev>
                ++index;
 800a32e:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800a332:	3301      	adds	r3, #1
 800a334:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    cJSON_ArrayForEach(analogInputJson, analogInputsJson) {
 800a338:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800a33c:	681b      	ldr	r3, [r3, #0]
 800a33e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800a342:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800a346:	2b00      	cmp	r3, #0
 800a348:	d1b4      	bne.n	800a2b4 <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x5c>
 800a34a:	e000      	b.n	800a34e <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0xf6>
            } else {
                break; // More items in the list than MAX_ANALOG_INPUTS, handle as needed
 800a34c:	bf00      	nop
            }
        }
    }

    setAnalogInputNames(analogInputs);
 800a34e:	f107 0308 	add.w	r3, r7, #8
 800a352:	4619      	mov	r1, r3
 800a354:	6878      	ldr	r0, [r7, #4]
 800a356:	f000 fc15 	bl	800ab84 <_ZN6Config19setAnalogInputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>
}
 800a35a:	f107 0308 	add.w	r3, r7, #8
 800a35e:	4618      	mov	r0, r3
 800a360:	f7fe fde5 	bl	8008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>
 800a364:	e002      	b.n	800a36c <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x114>
        return; // Input is null, handle error as needed
 800a366:	bf00      	nop
 800a368:	e000      	b.n	800a36c <_ZN6Config27setAnalogInputNamesFromJsonEP5cJSON+0x114>
        return; // Not an array, handle error as needed
 800a36a:	bf00      	nop
}
 800a36c:	37f0      	adds	r7, #240	; 0xf0
 800a36e:	46bd      	mov	sp, r7
 800a370:	bdb0      	pop	{r4, r5, r7, pc}
 800a372:	bf00      	nop
 800a374:	0801648c 	.word	0x0801648c

0800a378 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON>:


void Config::setDigitalInputNamesFromJson(cJSON* jsonData) {
 800a378:	b5b0      	push	{r4, r5, r7, lr}
 800a37a:	b0ec      	sub	sp, #432	; 0x1b0
 800a37c:	af00      	add	r7, sp, #0
 800a37e:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800a382:	f5a3 73d6 	sub.w	r3, r3, #428	; 0x1ac
 800a386:	6018      	str	r0, [r3, #0]
 800a388:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800a38c:	f5a3 73d8 	sub.w	r3, r3, #432	; 0x1b0
 800a390:	6019      	str	r1, [r3, #0]
    if (jsonData == nullptr) {
 800a392:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800a396:	f5a3 73d8 	sub.w	r3, r3, #432	; 0x1b0
 800a39a:	681b      	ldr	r3, [r3, #0]
 800a39c:	2b00      	cmp	r3, #0
 800a39e:	f000 8087 	beq.w	800a4b0 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x138>
        return; // Input is null, handle error as needed
    }

    cJSON* digitalInputsJson = cJSON_GetObjectItemCaseSensitive(jsonData, "data");
 800a3a2:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800a3a6:	f5a3 73d8 	sub.w	r3, r3, #432	; 0x1b0
 800a3aa:	4945      	ldr	r1, [pc, #276]	; (800a4c0 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x148>)
 800a3ac:	6818      	ldr	r0, [r3, #0]
 800a3ae:	f7fb ffb9 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800a3b2:	f8c7 01a4 	str.w	r0, [r7, #420]	; 0x1a4
    if (!cJSON_IsArray(digitalInputsJson)) {
 800a3b6:	f8d7 01a4 	ldr.w	r0, [r7, #420]	; 0x1a4
 800a3ba:	f7fc f9c8 	bl	800674e <cJSON_IsArray>
 800a3be:	4603      	mov	r3, r0
 800a3c0:	2b00      	cmp	r3, #0
 800a3c2:	bf0c      	ite	eq
 800a3c4:	2301      	moveq	r3, #1
 800a3c6:	2300      	movne	r3, #0
 800a3c8:	b2db      	uxtb	r3, r3
 800a3ca:	2b00      	cmp	r3, #0
 800a3cc:	d172      	bne.n	800a4b4 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x13c>
        return; // Not an array, handle error as needed
    }

    std::array<std::string, MAX_DIGITAL_INPUTS> digitalInputs;
 800a3ce:	f107 0308 	add.w	r3, r7, #8
 800a3d2:	4618      	mov	r0, r3
 800a3d4:	f7fe fdc2 	bl	8008f5c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1Ev>
    size_t index = 0;
 800a3d8:	2300      	movs	r3, #0
 800a3da:	f8c7 31ac 	str.w	r3, [r7, #428]	; 0x1ac
    cJSON* digitalInputJson;

    // Iterate over the analog input names array
    cJSON_ArrayForEach(digitalInputJson, digitalInputsJson) {
 800a3de:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800a3e2:	2b00      	cmp	r3, #0
 800a3e4:	d003      	beq.n	800a3ee <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x76>
 800a3e6:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800a3ea:	689b      	ldr	r3, [r3, #8]
 800a3ec:	e000      	b.n	800a3f0 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x78>
 800a3ee:	2300      	movs	r3, #0
 800a3f0:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 800a3f4:	e046      	b.n	800a484 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x10c>
        if (cJSON_IsString(digitalInputJson) && (digitalInputJson->valuestring != NULL)) {
 800a3f6:	f8d7 01a8 	ldr.w	r0, [r7, #424]	; 0x1a8
 800a3fa:	f7fc f991 	bl	8006720 <cJSON_IsString>
 800a3fe:	4603      	mov	r3, r0
 800a400:	2b00      	cmp	r3, #0
 800a402:	d006      	beq.n	800a412 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x9a>
 800a404:	f8d7 31a8 	ldr.w	r3, [r7, #424]	; 0x1a8
 800a408:	691b      	ldr	r3, [r3, #16]
 800a40a:	2b00      	cmp	r3, #0
 800a40c:	d001      	beq.n	800a412 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x9a>
 800a40e:	2301      	movs	r3, #1
 800a410:	e000      	b.n	800a414 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x9c>
 800a412:	2300      	movs	r3, #0
 800a414:	2b00      	cmp	r3, #0
 800a416:	d030      	beq.n	800a47a <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x102>
            if (index < MAX_DIGITAL_INPUTS) {
 800a418:	f8d7 31ac 	ldr.w	r3, [r7, #428]	; 0x1ac
 800a41c:	2b0f      	cmp	r3, #15
 800a41e:	d836      	bhi.n	800a48e <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x116>
                digitalInputs[index] = std::string(digitalInputJson->valuestring);
 800a420:	f107 0308 	add.w	r3, r7, #8
 800a424:	f8d7 11ac 	ldr.w	r1, [r7, #428]	; 0x1ac
 800a428:	4618      	mov	r0, r3
 800a42a:	f000 fc96 	bl	800ad5a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEixEj>
 800a42e:	4605      	mov	r5, r0
 800a430:	f8d7 31a8 	ldr.w	r3, [r7, #424]	; 0x1a8
 800a434:	691c      	ldr	r4, [r3, #16]
 800a436:	f507 73d0 	add.w	r3, r7, #416	; 0x1a0
 800a43a:	4618      	mov	r0, r3
 800a43c:	f006 fc84 	bl	8010d48 <_ZNSaIcEC1Ev>
 800a440:	f507 72d0 	add.w	r2, r7, #416	; 0x1a0
 800a444:	f507 73c4 	add.w	r3, r7, #392	; 0x188
 800a448:	4621      	mov	r1, r4
 800a44a:	4618      	mov	r0, r3
 800a44c:	f006 ff46 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800a450:	f507 73c4 	add.w	r3, r7, #392	; 0x188
 800a454:	4619      	mov	r1, r3
 800a456:	4628      	mov	r0, r5
 800a458:	f006 fd96 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800a45c:	f507 73c4 	add.w	r3, r7, #392	; 0x188
 800a460:	4618      	mov	r0, r3
 800a462:	f006 fd85 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800a466:	f507 73d0 	add.w	r3, r7, #416	; 0x1a0
 800a46a:	4618      	mov	r0, r3
 800a46c:	f006 fc6e 	bl	8010d4c <_ZNSaIcED1Ev>
                ++index;
 800a470:	f8d7 31ac 	ldr.w	r3, [r7, #428]	; 0x1ac
 800a474:	3301      	adds	r3, #1
 800a476:	f8c7 31ac 	str.w	r3, [r7, #428]	; 0x1ac
    cJSON_ArrayForEach(digitalInputJson, digitalInputsJson) {
 800a47a:	f8d7 31a8 	ldr.w	r3, [r7, #424]	; 0x1a8
 800a47e:	681b      	ldr	r3, [r3, #0]
 800a480:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 800a484:	f8d7 31a8 	ldr.w	r3, [r7, #424]	; 0x1a8
 800a488:	2b00      	cmp	r3, #0
 800a48a:	d1b4      	bne.n	800a3f6 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x7e>
 800a48c:	e000      	b.n	800a490 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x118>
            } else {
                break; // More items in the list than MAX_ANALOG_INPUTS, handle as needed
 800a48e:	bf00      	nop
            }
        }
    }

    setDigitalInputNames(digitalInputs);
 800a490:	f107 0208 	add.w	r2, r7, #8
 800a494:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800a498:	f5a3 73d6 	sub.w	r3, r3, #428	; 0x1ac
 800a49c:	4611      	mov	r1, r2
 800a49e:	6818      	ldr	r0, [r3, #0]
 800a4a0:	f000 fb97 	bl	800abd2 <_ZN6Config20setDigitalInputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE>
}
 800a4a4:	f107 0308 	add.w	r3, r7, #8
 800a4a8:	4618      	mov	r0, r3
 800a4aa:	f7fe fd6b 	bl	8008f84 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EED1Ev>
 800a4ae:	e002      	b.n	800a4b6 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x13e>
        return; // Input is null, handle error as needed
 800a4b0:	bf00      	nop
 800a4b2:	e000      	b.n	800a4b6 <_ZN6Config28setDigitalInputNamesFromJsonEP5cJSON+0x13e>
        return; // Not an array, handle error as needed
 800a4b4:	bf00      	nop
}
 800a4b6:	f507 77d8 	add.w	r7, r7, #432	; 0x1b0
 800a4ba:	46bd      	mov	sp, r7
 800a4bc:	bdb0      	pop	{r4, r5, r7, pc}
 800a4be:	bf00      	nop
 800a4c0:	0801648c 	.word	0x0801648c

0800a4c4 <_ZN6Config21setRelayNamesFromJsonEP5cJSON>:


void Config:: setRelayNamesFromJson(cJSON* jsonData){
 800a4c4:	b5b0      	push	{r4, r5, r7, lr}
 800a4c6:	b0bc      	sub	sp, #240	; 0xf0
 800a4c8:	af00      	add	r7, sp, #0
 800a4ca:	6078      	str	r0, [r7, #4]
 800a4cc:	6039      	str	r1, [r7, #0]
	 if (jsonData == nullptr) {
 800a4ce:	683b      	ldr	r3, [r7, #0]
 800a4d0:	2b00      	cmp	r3, #0
 800a4d2:	d07e      	beq.n	800a5d2 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x10e>
	        return; // Input is null, handle error as needed
	    }

	    cJSON* JsonData = cJSON_GetObjectItemCaseSensitive(jsonData, "data");
 800a4d4:	4942      	ldr	r1, [pc, #264]	; (800a5e0 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x11c>)
 800a4d6:	6838      	ldr	r0, [r7, #0]
 800a4d8:	f7fb ff24 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800a4dc:	f8c7 00e4 	str.w	r0, [r7, #228]	; 0xe4
	    if (!cJSON_IsArray(JsonData)) {
 800a4e0:	f8d7 00e4 	ldr.w	r0, [r7, #228]	; 0xe4
 800a4e4:	f7fc f933 	bl	800674e <cJSON_IsArray>
 800a4e8:	4603      	mov	r3, r0
 800a4ea:	2b00      	cmp	r3, #0
 800a4ec:	bf0c      	ite	eq
 800a4ee:	2301      	moveq	r3, #1
 800a4f0:	2300      	movne	r3, #0
 800a4f2:	b2db      	uxtb	r3, r3
 800a4f4:	2b00      	cmp	r3, #0
 800a4f6:	d16e      	bne.n	800a5d6 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x112>
	        return; // Not an array, handle error as needed
	    }

	    std::array<std::string, MAX_DIGITAL_OUTPUTS> relayList;
 800a4f8:	f107 0308 	add.w	r3, r7, #8
 800a4fc:	4618      	mov	r0, r3
 800a4fe:	f7fe fd02 	bl	8008f06 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1Ev>
	    size_t index = 0;
 800a502:	2300      	movs	r3, #0
 800a504:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
	    cJSON* Json;

	    // Iterate over the analog input names array
	    cJSON_ArrayForEach(Json, JsonData) {
 800a508:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a50c:	2b00      	cmp	r3, #0
 800a50e:	d003      	beq.n	800a518 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x54>
 800a510:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a514:	689b      	ldr	r3, [r3, #8]
 800a516:	e000      	b.n	800a51a <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x56>
 800a518:	2300      	movs	r3, #0
 800a51a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800a51e:	e046      	b.n	800a5ae <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0xea>
	        if (cJSON_IsString(Json) && (Json->valuestring != NULL)) {
 800a520:	f8d7 00e8 	ldr.w	r0, [r7, #232]	; 0xe8
 800a524:	f7fc f8fc 	bl	8006720 <cJSON_IsString>
 800a528:	4603      	mov	r3, r0
 800a52a:	2b00      	cmp	r3, #0
 800a52c:	d006      	beq.n	800a53c <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x78>
 800a52e:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800a532:	691b      	ldr	r3, [r3, #16]
 800a534:	2b00      	cmp	r3, #0
 800a536:	d001      	beq.n	800a53c <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x78>
 800a538:	2301      	movs	r3, #1
 800a53a:	e000      	b.n	800a53e <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x7a>
 800a53c:	2300      	movs	r3, #0
 800a53e:	2b00      	cmp	r3, #0
 800a540:	d030      	beq.n	800a5a4 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0xe0>
	            if (index < MAX_DIGITAL_OUTPUTS) {
 800a542:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800a546:	2b07      	cmp	r3, #7
 800a548:	d836      	bhi.n	800a5b8 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0xf4>
	                relayList[index] = std::string(Json->valuestring);
 800a54a:	f107 0308 	add.w	r3, r7, #8
 800a54e:	f8d7 10ec 	ldr.w	r1, [r7, #236]	; 0xec
 800a552:	4618      	mov	r0, r3
 800a554:	f000 fbf2 	bl	800ad3c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEixEj>
 800a558:	4605      	mov	r5, r0
 800a55a:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800a55e:	691c      	ldr	r4, [r3, #16]
 800a560:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 800a564:	4618      	mov	r0, r3
 800a566:	f006 fbef 	bl	8010d48 <_ZNSaIcEC1Ev>
 800a56a:	f107 02e0 	add.w	r2, r7, #224	; 0xe0
 800a56e:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800a572:	4621      	mov	r1, r4
 800a574:	4618      	mov	r0, r3
 800a576:	f006 feb1 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800a57a:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800a57e:	4619      	mov	r1, r3
 800a580:	4628      	mov	r0, r5
 800a582:	f006 fd01 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800a586:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800a58a:	4618      	mov	r0, r3
 800a58c:	f006 fcf0 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800a590:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 800a594:	4618      	mov	r0, r3
 800a596:	f006 fbd9 	bl	8010d4c <_ZNSaIcED1Ev>
	                ++index;
 800a59a:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800a59e:	3301      	adds	r3, #1
 800a5a0:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
	    cJSON_ArrayForEach(Json, JsonData) {
 800a5a4:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800a5a8:	681b      	ldr	r3, [r3, #0]
 800a5aa:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800a5ae:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800a5b2:	2b00      	cmp	r3, #0
 800a5b4:	d1b4      	bne.n	800a520 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x5c>
 800a5b6:	e000      	b.n	800a5ba <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0xf6>
	            } else {
	                break; // More items in the list than MAX_ANALOG_INPUTS, handle as needed
 800a5b8:	bf00      	nop
	            }
	        }
	    }

	    setDigitalOutputNames(relayList);
 800a5ba:	f107 0308 	add.w	r3, r7, #8
 800a5be:	4619      	mov	r1, r3
 800a5c0:	6878      	ldr	r0, [r7, #4]
 800a5c2:	f000 fb16 	bl	800abf2 <_ZN6Config21setDigitalOutputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>
}
 800a5c6:	f107 0308 	add.w	r3, r7, #8
 800a5ca:	4618      	mov	r0, r3
 800a5cc:	f7fe fcaf 	bl	8008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>
 800a5d0:	e002      	b.n	800a5d8 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x114>
	        return; // Input is null, handle error as needed
 800a5d2:	bf00      	nop
 800a5d4:	e000      	b.n	800a5d8 <_ZN6Config21setRelayNamesFromJsonEP5cJSON+0x114>
	        return; // Not an array, handle error as needed
 800a5d6:	bf00      	nop
}
 800a5d8:	37f0      	adds	r7, #240	; 0xf0
 800a5da:	46bd      	mov	sp, r7
 800a5dc:	bdb0      	pop	{r4, r5, r7, pc}
 800a5de:	bf00      	nop
 800a5e0:	0801648c 	.word	0x0801648c

0800a5e4 <_ZN6Config20setDHCPNetworkConfigEP13wiz_NetInfo_t>:

void Config::setDHCPNetworkConfig(wiz_NetInfo* net_info) {
 800a5e4:	b580      	push	{r7, lr}
 800a5e6:	b086      	sub	sp, #24
 800a5e8:	af00      	add	r7, sp, #0
 800a5ea:	6078      	str	r0, [r7, #4]
 800a5ec:	6039      	str	r1, [r7, #0]
    std::array<uint8_t, 4> ip = {net_info->ip[0], net_info->ip[1], net_info->ip[2], net_info->ip[3]};
 800a5ee:	683b      	ldr	r3, [r7, #0]
 800a5f0:	799b      	ldrb	r3, [r3, #6]
 800a5f2:	753b      	strb	r3, [r7, #20]
 800a5f4:	683b      	ldr	r3, [r7, #0]
 800a5f6:	79db      	ldrb	r3, [r3, #7]
 800a5f8:	757b      	strb	r3, [r7, #21]
 800a5fa:	683b      	ldr	r3, [r7, #0]
 800a5fc:	7a1b      	ldrb	r3, [r3, #8]
 800a5fe:	75bb      	strb	r3, [r7, #22]
 800a600:	683b      	ldr	r3, [r7, #0]
 800a602:	7a5b      	ldrb	r3, [r3, #9]
 800a604:	75fb      	strb	r3, [r7, #23]
    std::array<uint8_t, 4> gateway = {net_info->gw[0], net_info->gw[1], net_info->gw[2], net_info->gw[3]};
 800a606:	683b      	ldr	r3, [r7, #0]
 800a608:	7b9b      	ldrb	r3, [r3, #14]
 800a60a:	743b      	strb	r3, [r7, #16]
 800a60c:	683b      	ldr	r3, [r7, #0]
 800a60e:	7bdb      	ldrb	r3, [r3, #15]
 800a610:	747b      	strb	r3, [r7, #17]
 800a612:	683b      	ldr	r3, [r7, #0]
 800a614:	7c1b      	ldrb	r3, [r3, #16]
 800a616:	74bb      	strb	r3, [r7, #18]
 800a618:	683b      	ldr	r3, [r7, #0]
 800a61a:	7c5b      	ldrb	r3, [r3, #17]
 800a61c:	74fb      	strb	r3, [r7, #19]
    std::array<uint8_t, 4> subnet = {net_info->sn[0], net_info->sn[1], net_info->sn[2], net_info->sn[3]};
 800a61e:	683b      	ldr	r3, [r7, #0]
 800a620:	7a9b      	ldrb	r3, [r3, #10]
 800a622:	733b      	strb	r3, [r7, #12]
 800a624:	683b      	ldr	r3, [r7, #0]
 800a626:	7adb      	ldrb	r3, [r3, #11]
 800a628:	737b      	strb	r3, [r7, #13]
 800a62a:	683b      	ldr	r3, [r7, #0]
 800a62c:	7b1b      	ldrb	r3, [r3, #12]
 800a62e:	73bb      	strb	r3, [r7, #14]
 800a630:	683b      	ldr	r3, [r7, #0]
 800a632:	7b5b      	ldrb	r3, [r3, #13]
 800a634:	73fb      	strb	r3, [r7, #15]
    std::array<uint8_t, 4> dns = {net_info->dns[0], net_info->dns[1], net_info->dns[2], net_info->dns[3]};
 800a636:	683b      	ldr	r3, [r7, #0]
 800a638:	7c9b      	ldrb	r3, [r3, #18]
 800a63a:	723b      	strb	r3, [r7, #8]
 800a63c:	683b      	ldr	r3, [r7, #0]
 800a63e:	7cdb      	ldrb	r3, [r3, #19]
 800a640:	727b      	strb	r3, [r7, #9]
 800a642:	683b      	ldr	r3, [r7, #0]
 800a644:	7d1b      	ldrb	r3, [r3, #20]
 800a646:	72bb      	strb	r3, [r7, #10]
 800a648:	683b      	ldr	r3, [r7, #0]
 800a64a:	7d5b      	ldrb	r3, [r3, #21]
 800a64c:	72fb      	strb	r3, [r7, #11]

    setIP(ip);
 800a64e:	f107 0314 	add.w	r3, r7, #20
 800a652:	4619      	mov	r1, r3
 800a654:	6878      	ldr	r0, [r7, #4]
 800a656:	f000 f9a8 	bl	800a9aa <_ZN6Config5setIPERKSt5arrayIhLj4EE>
    setGateway(gateway);
 800a65a:	f107 0310 	add.w	r3, r7, #16
 800a65e:	4619      	mov	r1, r3
 800a660:	6878      	ldr	r0, [r7, #4]
 800a662:	f000 f9b2 	bl	800a9ca <_ZN6Config10setGatewayERKSt5arrayIhLj4EE>
    setSubnet(subnet);
 800a666:	f107 030c 	add.w	r3, r7, #12
 800a66a:	4619      	mov	r1, r3
 800a66c:	6878      	ldr	r0, [r7, #4]
 800a66e:	f000 f9bc 	bl	800a9ea <_ZN6Config9setSubnetERKSt5arrayIhLj4EE>
    setDNS(dns);
 800a672:	f107 0308 	add.w	r3, r7, #8
 800a676:	4619      	mov	r1, r3
 800a678:	6878      	ldr	r0, [r7, #4]
 800a67a:	f000 f9c6 	bl	800aa0a <_ZN6Config6setDNSERKSt5arrayIhLj4EE>
}
 800a67e:	bf00      	nop
 800a680:	3718      	adds	r7, #24
 800a682:	46bd      	mov	sp, r7
 800a684:	bd80      	pop	{r7, pc}

0800a686 <_ZNK6Config11getBrokerIPEv>:


// Getters
std::array<uint8_t, 4> Config::getBrokerIP() const { return broker_ip; }
 800a686:	b480      	push	{r7}
 800a688:	b085      	sub	sp, #20
 800a68a:	af00      	add	r7, sp, #0
 800a68c:	6078      	str	r0, [r7, #4]
 800a68e:	687b      	ldr	r3, [r7, #4]
 800a690:	681b      	ldr	r3, [r3, #0]
 800a692:	60fb      	str	r3, [r7, #12]
 800a694:	2300      	movs	r3, #0
 800a696:	7b3a      	ldrb	r2, [r7, #12]
 800a698:	f362 0307 	bfi	r3, r2, #0, #8
 800a69c:	7b7a      	ldrb	r2, [r7, #13]
 800a69e:	f362 230f 	bfi	r3, r2, #8, #8
 800a6a2:	7bba      	ldrb	r2, [r7, #14]
 800a6a4:	f362 4317 	bfi	r3, r2, #16, #8
 800a6a8:	7bfa      	ldrb	r2, [r7, #15]
 800a6aa:	f362 631f 	bfi	r3, r2, #24, #8
 800a6ae:	4618      	mov	r0, r3
 800a6b0:	3714      	adds	r7, #20
 800a6b2:	46bd      	mov	sp, r7
 800a6b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6b8:	4770      	bx	lr

0800a6ba <_ZNK6Config13getBrokerPortEv>:
uint16_t Config::getBrokerPort() const { return broker_port; }
 800a6ba:	b480      	push	{r7}
 800a6bc:	b083      	sub	sp, #12
 800a6be:	af00      	add	r7, sp, #0
 800a6c0:	6078      	str	r0, [r7, #4]
 800a6c2:	687b      	ldr	r3, [r7, #4]
 800a6c4:	889b      	ldrh	r3, [r3, #4]
 800a6c6:	4618      	mov	r0, r3
 800a6c8:	370c      	adds	r7, #12
 800a6ca:	46bd      	mov	sp, r7
 800a6cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6d0:	4770      	bx	lr

0800a6d2 <_ZNK6Config5getIPEv>:
std::array<uint8_t, 4> Config::getIP() const { return ip; }
 800a6d2:	b480      	push	{r7}
 800a6d4:	b085      	sub	sp, #20
 800a6d6:	af00      	add	r7, sp, #0
 800a6d8:	6078      	str	r0, [r7, #4]
 800a6da:	687a      	ldr	r2, [r7, #4]
 800a6dc:	f107 030c 	add.w	r3, r7, #12
 800a6e0:	3206      	adds	r2, #6
 800a6e2:	6810      	ldr	r0, [r2, #0]
 800a6e4:	6018      	str	r0, [r3, #0]
 800a6e6:	2300      	movs	r3, #0
 800a6e8:	7b3a      	ldrb	r2, [r7, #12]
 800a6ea:	f362 0307 	bfi	r3, r2, #0, #8
 800a6ee:	7b7a      	ldrb	r2, [r7, #13]
 800a6f0:	f362 230f 	bfi	r3, r2, #8, #8
 800a6f4:	7bba      	ldrb	r2, [r7, #14]
 800a6f6:	f362 4317 	bfi	r3, r2, #16, #8
 800a6fa:	7bfa      	ldrb	r2, [r7, #15]
 800a6fc:	f362 631f 	bfi	r3, r2, #24, #8
 800a700:	4618      	mov	r0, r3
 800a702:	3714      	adds	r7, #20
 800a704:	46bd      	mov	sp, r7
 800a706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a70a:	4770      	bx	lr

0800a70c <_ZNK6Config10getGatewayEv>:
std::array<uint8_t, 4> Config::getGateway() const { return gateway; }
 800a70c:	b480      	push	{r7}
 800a70e:	b085      	sub	sp, #20
 800a710:	af00      	add	r7, sp, #0
 800a712:	6078      	str	r0, [r7, #4]
 800a714:	687a      	ldr	r2, [r7, #4]
 800a716:	f107 030c 	add.w	r3, r7, #12
 800a71a:	320a      	adds	r2, #10
 800a71c:	6810      	ldr	r0, [r2, #0]
 800a71e:	6018      	str	r0, [r3, #0]
 800a720:	2300      	movs	r3, #0
 800a722:	7b3a      	ldrb	r2, [r7, #12]
 800a724:	f362 0307 	bfi	r3, r2, #0, #8
 800a728:	7b7a      	ldrb	r2, [r7, #13]
 800a72a:	f362 230f 	bfi	r3, r2, #8, #8
 800a72e:	7bba      	ldrb	r2, [r7, #14]
 800a730:	f362 4317 	bfi	r3, r2, #16, #8
 800a734:	7bfa      	ldrb	r2, [r7, #15]
 800a736:	f362 631f 	bfi	r3, r2, #24, #8
 800a73a:	4618      	mov	r0, r3
 800a73c:	3714      	adds	r7, #20
 800a73e:	46bd      	mov	sp, r7
 800a740:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a744:	4770      	bx	lr

0800a746 <_ZNK6Config9getSubnetEv>:
std::array<uint8_t, 4> Config::getSubnet() const { return subnet; }
 800a746:	b480      	push	{r7}
 800a748:	b085      	sub	sp, #20
 800a74a:	af00      	add	r7, sp, #0
 800a74c:	6078      	str	r0, [r7, #4]
 800a74e:	687a      	ldr	r2, [r7, #4]
 800a750:	f107 030c 	add.w	r3, r7, #12
 800a754:	320e      	adds	r2, #14
 800a756:	6810      	ldr	r0, [r2, #0]
 800a758:	6018      	str	r0, [r3, #0]
 800a75a:	2300      	movs	r3, #0
 800a75c:	7b3a      	ldrb	r2, [r7, #12]
 800a75e:	f362 0307 	bfi	r3, r2, #0, #8
 800a762:	7b7a      	ldrb	r2, [r7, #13]
 800a764:	f362 230f 	bfi	r3, r2, #8, #8
 800a768:	7bba      	ldrb	r2, [r7, #14]
 800a76a:	f362 4317 	bfi	r3, r2, #16, #8
 800a76e:	7bfa      	ldrb	r2, [r7, #15]
 800a770:	f362 631f 	bfi	r3, r2, #24, #8
 800a774:	4618      	mov	r0, r3
 800a776:	3714      	adds	r7, #20
 800a778:	46bd      	mov	sp, r7
 800a77a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a77e:	4770      	bx	lr

0800a780 <_ZNK6Config6getDNSEv>:
std::array<uint8_t, 4> Config::getDNS() const { return dns; }
 800a780:	b480      	push	{r7}
 800a782:	b085      	sub	sp, #20
 800a784:	af00      	add	r7, sp, #0
 800a786:	6078      	str	r0, [r7, #4]
 800a788:	687a      	ldr	r2, [r7, #4]
 800a78a:	f107 030c 	add.w	r3, r7, #12
 800a78e:	3212      	adds	r2, #18
 800a790:	6810      	ldr	r0, [r2, #0]
 800a792:	6018      	str	r0, [r3, #0]
 800a794:	2300      	movs	r3, #0
 800a796:	7b3a      	ldrb	r2, [r7, #12]
 800a798:	f362 0307 	bfi	r3, r2, #0, #8
 800a79c:	7b7a      	ldrb	r2, [r7, #13]
 800a79e:	f362 230f 	bfi	r3, r2, #8, #8
 800a7a2:	7bba      	ldrb	r2, [r7, #14]
 800a7a4:	f362 4317 	bfi	r3, r2, #16, #8
 800a7a8:	7bfa      	ldrb	r2, [r7, #15]
 800a7aa:	f362 631f 	bfi	r3, r2, #24, #8
 800a7ae:	4618      	mov	r0, r3
 800a7b0:	3714      	adds	r7, #20
 800a7b2:	46bd      	mov	sp, r7
 800a7b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7b8:	4770      	bx	lr

0800a7ba <_ZNK6Config20getKeepAliveIntervalEv>:
uint16_t Config::getKeepAliveInterval() const { return keep_alive_interval; }
 800a7ba:	b480      	push	{r7}
 800a7bc:	b083      	sub	sp, #12
 800a7be:	af00      	add	r7, sp, #0
 800a7c0:	6078      	str	r0, [r7, #4]
 800a7c2:	687b      	ldr	r3, [r7, #4]
 800a7c4:	8adb      	ldrh	r3, [r3, #22]
 800a7c6:	4618      	mov	r0, r3
 800a7c8:	370c      	adds	r7, #12
 800a7ca:	46bd      	mov	sp, r7
 800a7cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7d0:	4770      	bx	lr

0800a7d2 <_ZNK6Config14getDHCPEnabledEv>:
bool Config::getDHCPEnabled() const { return dhcp_enabled; }
 800a7d2:	b480      	push	{r7}
 800a7d4:	b083      	sub	sp, #12
 800a7d6:	af00      	add	r7, sp, #0
 800a7d8:	6078      	str	r0, [r7, #4]
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	7e1b      	ldrb	r3, [r3, #24]
 800a7de:	4618      	mov	r0, r3
 800a7e0:	370c      	adds	r7, #12
 800a7e2:	46bd      	mov	sp, r7
 800a7e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7e8:	4770      	bx	lr

0800a7ea <_ZNK6Config13getIpAssignedEv>:
bool Config::getIpAssigned() const {return ip_assigned;}
 800a7ea:	b480      	push	{r7}
 800a7ec:	b083      	sub	sp, #12
 800a7ee:	af00      	add	r7, sp, #0
 800a7f0:	6078      	str	r0, [r7, #4]
 800a7f2:	687b      	ldr	r3, [r7, #4]
 800a7f4:	7e5b      	ldrb	r3, [r3, #25]
 800a7f6:	4618      	mov	r0, r3
 800a7f8:	370c      	adds	r7, #12
 800a7fa:	46bd      	mov	sp, r7
 800a7fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a800:	4770      	bx	lr

0800a802 <_ZNK6Config15getIntervalTimeEv>:
uint32_t Config::getIntervalTime()  const { return interval_time;}
 800a802:	b480      	push	{r7}
 800a804:	b083      	sub	sp, #12
 800a806:	af00      	add	r7, sp, #0
 800a808:	6078      	str	r0, [r7, #4]
 800a80a:	687b      	ldr	r3, [r7, #4]
 800a80c:	69db      	ldr	r3, [r3, #28]
 800a80e:	4618      	mov	r0, r3
 800a810:	370c      	adds	r7, #12
 800a812:	46bd      	mov	sp, r7
 800a814:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a818:	4770      	bx	lr

0800a81a <_ZNK6Config11getUsernameB5cxx11Ev>:
std::string Config::getUsername()const { return username; }
 800a81a:	b580      	push	{r7, lr}
 800a81c:	b082      	sub	sp, #8
 800a81e:	af00      	add	r7, sp, #0
 800a820:	6078      	str	r0, [r7, #4]
 800a822:	6039      	str	r1, [r7, #0]
 800a824:	683b      	ldr	r3, [r7, #0]
 800a826:	3320      	adds	r3, #32
 800a828:	4619      	mov	r1, r3
 800a82a:	6878      	ldr	r0, [r7, #4]
 800a82c:	f006 fd22 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800a830:	6878      	ldr	r0, [r7, #4]
 800a832:	3708      	adds	r7, #8
 800a834:	46bd      	mov	sp, r7
 800a836:	bd80      	pop	{r7, pc}

0800a838 <_ZNK6Config11getClientIdB5cxx11Ev>:
std::string Config::getClientId()const  { return clientId; }
 800a838:	b580      	push	{r7, lr}
 800a83a:	b082      	sub	sp, #8
 800a83c:	af00      	add	r7, sp, #0
 800a83e:	6078      	str	r0, [r7, #4]
 800a840:	6039      	str	r1, [r7, #0]
 800a842:	683b      	ldr	r3, [r7, #0]
 800a844:	3338      	adds	r3, #56	; 0x38
 800a846:	4619      	mov	r1, r3
 800a848:	6878      	ldr	r0, [r7, #4]
 800a84a:	f006 fd13 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800a84e:	6878      	ldr	r0, [r7, #4]
 800a850:	3708      	adds	r7, #8
 800a852:	46bd      	mov	sp, r7
 800a854:	bd80      	pop	{r7, pc}

0800a856 <_ZNK6Config11getPasswordB5cxx11Ev>:
std::string Config::getPassword()const { return password; }
 800a856:	b580      	push	{r7, lr}
 800a858:	b082      	sub	sp, #8
 800a85a:	af00      	add	r7, sp, #0
 800a85c:	6078      	str	r0, [r7, #4]
 800a85e:	6039      	str	r1, [r7, #0]
 800a860:	683b      	ldr	r3, [r7, #0]
 800a862:	3350      	adds	r3, #80	; 0x50
 800a864:	4619      	mov	r1, r3
 800a866:	6878      	ldr	r0, [r7, #4]
 800a868:	f006 fd04 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800a86c:	6878      	ldr	r0, [r7, #4]
 800a86e:	3708      	adds	r7, #8
 800a870:	46bd      	mov	sp, r7
 800a872:	bd80      	pop	{r7, pc}

0800a874 <_ZNK6Config17getTopicSubscribeB5cxx11Ev>:
std::string Config::getTopicSubscribe()const { return topic_subscribe; }
 800a874:	b580      	push	{r7, lr}
 800a876:	b082      	sub	sp, #8
 800a878:	af00      	add	r7, sp, #0
 800a87a:	6078      	str	r0, [r7, #4]
 800a87c:	6039      	str	r1, [r7, #0]
 800a87e:	683b      	ldr	r3, [r7, #0]
 800a880:	3368      	adds	r3, #104	; 0x68
 800a882:	4619      	mov	r1, r3
 800a884:	6878      	ldr	r0, [r7, #4]
 800a886:	f006 fcf5 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800a88a:	6878      	ldr	r0, [r7, #4]
 800a88c:	3708      	adds	r7, #8
 800a88e:	46bd      	mov	sp, r7
 800a890:	bd80      	pop	{r7, pc}

0800a892 <_ZNK6Config15getTopicPublishB5cxx11Ev>:
std::string Config::getTopicPublish()const {return topic_publish;}
 800a892:	b580      	push	{r7, lr}
 800a894:	b082      	sub	sp, #8
 800a896:	af00      	add	r7, sp, #0
 800a898:	6078      	str	r0, [r7, #4]
 800a89a:	6039      	str	r1, [r7, #0]
 800a89c:	683b      	ldr	r3, [r7, #0]
 800a89e:	3380      	adds	r3, #128	; 0x80
 800a8a0:	4619      	mov	r1, r3
 800a8a2:	6878      	ldr	r0, [r7, #4]
 800a8a4:	f006 fce6 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800a8a8:	6878      	ldr	r0, [r7, #4]
 800a8aa:	3708      	adds	r7, #8
 800a8ac:	46bd      	mov	sp, r7
 800a8ae:	bd80      	pop	{r7, pc}

0800a8b0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1ERKS6_>:
 800a8b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a8b2:	b083      	sub	sp, #12
 800a8b4:	af00      	add	r7, sp, #0
 800a8b6:	6078      	str	r0, [r7, #4]
 800a8b8:	6039      	str	r1, [r7, #0]
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	2507      	movs	r5, #7
 800a8be:	683c      	ldr	r4, [r7, #0]
 800a8c0:	461e      	mov	r6, r3
 800a8c2:	e006      	b.n	800a8d2 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1ERKS6_+0x22>
 800a8c4:	4621      	mov	r1, r4
 800a8c6:	4630      	mov	r0, r6
 800a8c8:	f006 fcd4 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800a8cc:	3618      	adds	r6, #24
 800a8ce:	3418      	adds	r4, #24
 800a8d0:	3d01      	subs	r5, #1
 800a8d2:	2d00      	cmp	r5, #0
 800a8d4:	daf6      	bge.n	800a8c4 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1ERKS6_+0x14>
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	4618      	mov	r0, r3
 800a8da:	370c      	adds	r7, #12
 800a8dc:	46bd      	mov	sp, r7
 800a8de:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a8e0 <_ZN6Config19getAnalogInputNamesB5cxx11Ev>:
int Config::getQoS() const { return qos; }
std::array<std::string, MAX_ANALOG_INPUTS> Config::getAnalogInputNames() { return analog_input_names; }
 800a8e0:	b580      	push	{r7, lr}
 800a8e2:	b082      	sub	sp, #8
 800a8e4:	af00      	add	r7, sp, #0
 800a8e6:	6078      	str	r0, [r7, #4]
 800a8e8:	6039      	str	r1, [r7, #0]
 800a8ea:	683b      	ldr	r3, [r7, #0]
 800a8ec:	339c      	adds	r3, #156	; 0x9c
 800a8ee:	4619      	mov	r1, r3
 800a8f0:	6878      	ldr	r0, [r7, #4]
 800a8f2:	f7ff ffdd 	bl	800a8b0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1ERKS6_>
 800a8f6:	6878      	ldr	r0, [r7, #4]
 800a8f8:	3708      	adds	r7, #8
 800a8fa:	46bd      	mov	sp, r7
 800a8fc:	bd80      	pop	{r7, pc}

0800a8fe <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1ERKS6_>:
 800a8fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a900:	b083      	sub	sp, #12
 800a902:	af00      	add	r7, sp, #0
 800a904:	6078      	str	r0, [r7, #4]
 800a906:	6039      	str	r1, [r7, #0]
 800a908:	687b      	ldr	r3, [r7, #4]
 800a90a:	250f      	movs	r5, #15
 800a90c:	683c      	ldr	r4, [r7, #0]
 800a90e:	461e      	mov	r6, r3
 800a910:	e006      	b.n	800a920 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1ERKS6_+0x22>
 800a912:	4621      	mov	r1, r4
 800a914:	4630      	mov	r0, r6
 800a916:	f006 fcad 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800a91a:	3618      	adds	r6, #24
 800a91c:	3418      	adds	r4, #24
 800a91e:	3d01      	subs	r5, #1
 800a920:	2d00      	cmp	r5, #0
 800a922:	daf6      	bge.n	800a912 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1ERKS6_+0x14>
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	4618      	mov	r0, r3
 800a928:	370c      	adds	r7, #12
 800a92a:	46bd      	mov	sp, r7
 800a92c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a92e <_ZN6Config20getDigitalInputNamesB5cxx11Ev>:
std::array<std::string, MAX_DIGITAL_INPUTS> Config::getDigitalInputNames()  { return digital_input_names; }
 800a92e:	b580      	push	{r7, lr}
 800a930:	b082      	sub	sp, #8
 800a932:	af00      	add	r7, sp, #0
 800a934:	6078      	str	r0, [r7, #4]
 800a936:	6039      	str	r1, [r7, #0]
 800a938:	683b      	ldr	r3, [r7, #0]
 800a93a:	f503 73ae 	add.w	r3, r3, #348	; 0x15c
 800a93e:	4619      	mov	r1, r3
 800a940:	6878      	ldr	r0, [r7, #4]
 800a942:	f7ff ffdc 	bl	800a8fe <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEC1ERKS6_>
 800a946:	6878      	ldr	r0, [r7, #4]
 800a948:	3708      	adds	r7, #8
 800a94a:	46bd      	mov	sp, r7
 800a94c:	bd80      	pop	{r7, pc}

0800a94e <_ZN6Config21getDigitalOutputNamesB5cxx11Ev>:
std::array<std::string, MAX_DIGITAL_OUTPUTS> Config::getDigitalOutputNames()  { return digital_output_names; }
 800a94e:	b580      	push	{r7, lr}
 800a950:	b082      	sub	sp, #8
 800a952:	af00      	add	r7, sp, #0
 800a954:	6078      	str	r0, [r7, #4]
 800a956:	6039      	str	r1, [r7, #0]
 800a958:	683b      	ldr	r3, [r7, #0]
 800a95a:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800a95e:	4619      	mov	r1, r3
 800a960:	6878      	ldr	r0, [r7, #4]
 800a962:	f7ff ffa5 	bl	800a8b0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEC1ERKS6_>
 800a966:	6878      	ldr	r0, [r7, #4]
 800a968:	3708      	adds	r7, #8
 800a96a:	46bd      	mov	sp, r7
 800a96c:	bd80      	pop	{r7, pc}

0800a96e <_ZN6Config11setBrokerIPERKSt5arrayIhLj4EE>:

// Setters
void Config::setBrokerIP(const std::array<uint8_t, 4>& value) { broker_ip = value; }
 800a96e:	b480      	push	{r7}
 800a970:	b083      	sub	sp, #12
 800a972:	af00      	add	r7, sp, #0
 800a974:	6078      	str	r0, [r7, #4]
 800a976:	6039      	str	r1, [r7, #0]
 800a978:	687b      	ldr	r3, [r7, #4]
 800a97a:	683a      	ldr	r2, [r7, #0]
 800a97c:	6810      	ldr	r0, [r2, #0]
 800a97e:	6018      	str	r0, [r3, #0]
 800a980:	bf00      	nop
 800a982:	370c      	adds	r7, #12
 800a984:	46bd      	mov	sp, r7
 800a986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a98a:	4770      	bx	lr

0800a98c <_ZN6Config13setBrokerPortEt>:
void Config::setBrokerPort(uint16_t value) { broker_port = value; }
 800a98c:	b480      	push	{r7}
 800a98e:	b083      	sub	sp, #12
 800a990:	af00      	add	r7, sp, #0
 800a992:	6078      	str	r0, [r7, #4]
 800a994:	460b      	mov	r3, r1
 800a996:	807b      	strh	r3, [r7, #2]
 800a998:	687b      	ldr	r3, [r7, #4]
 800a99a:	887a      	ldrh	r2, [r7, #2]
 800a99c:	809a      	strh	r2, [r3, #4]
 800a99e:	bf00      	nop
 800a9a0:	370c      	adds	r7, #12
 800a9a2:	46bd      	mov	sp, r7
 800a9a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9a8:	4770      	bx	lr

0800a9aa <_ZN6Config5setIPERKSt5arrayIhLj4EE>:
void Config::setIP(const std::array<uint8_t, 4>& value) { ip = value; }
 800a9aa:	b480      	push	{r7}
 800a9ac:	b083      	sub	sp, #12
 800a9ae:	af00      	add	r7, sp, #0
 800a9b0:	6078      	str	r0, [r7, #4]
 800a9b2:	6039      	str	r1, [r7, #0]
 800a9b4:	687b      	ldr	r3, [r7, #4]
 800a9b6:	683a      	ldr	r2, [r7, #0]
 800a9b8:	3306      	adds	r3, #6
 800a9ba:	6812      	ldr	r2, [r2, #0]
 800a9bc:	601a      	str	r2, [r3, #0]
 800a9be:	bf00      	nop
 800a9c0:	370c      	adds	r7, #12
 800a9c2:	46bd      	mov	sp, r7
 800a9c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9c8:	4770      	bx	lr

0800a9ca <_ZN6Config10setGatewayERKSt5arrayIhLj4EE>:
void Config::setGateway(const std::array<uint8_t, 4>& value) { gateway = value; }
 800a9ca:	b480      	push	{r7}
 800a9cc:	b083      	sub	sp, #12
 800a9ce:	af00      	add	r7, sp, #0
 800a9d0:	6078      	str	r0, [r7, #4]
 800a9d2:	6039      	str	r1, [r7, #0]
 800a9d4:	687b      	ldr	r3, [r7, #4]
 800a9d6:	683a      	ldr	r2, [r7, #0]
 800a9d8:	330a      	adds	r3, #10
 800a9da:	6812      	ldr	r2, [r2, #0]
 800a9dc:	601a      	str	r2, [r3, #0]
 800a9de:	bf00      	nop
 800a9e0:	370c      	adds	r7, #12
 800a9e2:	46bd      	mov	sp, r7
 800a9e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9e8:	4770      	bx	lr

0800a9ea <_ZN6Config9setSubnetERKSt5arrayIhLj4EE>:
void Config::setSubnet(const std::array<uint8_t, 4>& value) { subnet = value; }
 800a9ea:	b480      	push	{r7}
 800a9ec:	b083      	sub	sp, #12
 800a9ee:	af00      	add	r7, sp, #0
 800a9f0:	6078      	str	r0, [r7, #4]
 800a9f2:	6039      	str	r1, [r7, #0]
 800a9f4:	687b      	ldr	r3, [r7, #4]
 800a9f6:	683a      	ldr	r2, [r7, #0]
 800a9f8:	330e      	adds	r3, #14
 800a9fa:	6812      	ldr	r2, [r2, #0]
 800a9fc:	601a      	str	r2, [r3, #0]
 800a9fe:	bf00      	nop
 800aa00:	370c      	adds	r7, #12
 800aa02:	46bd      	mov	sp, r7
 800aa04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa08:	4770      	bx	lr

0800aa0a <_ZN6Config6setDNSERKSt5arrayIhLj4EE>:
void Config::setDNS(const std::array<uint8_t, 4>& value) { dns = value; }
 800aa0a:	b480      	push	{r7}
 800aa0c:	b083      	sub	sp, #12
 800aa0e:	af00      	add	r7, sp, #0
 800aa10:	6078      	str	r0, [r7, #4]
 800aa12:	6039      	str	r1, [r7, #0]
 800aa14:	687b      	ldr	r3, [r7, #4]
 800aa16:	683a      	ldr	r2, [r7, #0]
 800aa18:	3312      	adds	r3, #18
 800aa1a:	6812      	ldr	r2, [r2, #0]
 800aa1c:	601a      	str	r2, [r3, #0]
 800aa1e:	bf00      	nop
 800aa20:	370c      	adds	r7, #12
 800aa22:	46bd      	mov	sp, r7
 800aa24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa28:	4770      	bx	lr

0800aa2a <_ZN6Config20setKeepAliveIntervalEt>:
void Config::setKeepAliveInterval(uint16_t value) { keep_alive_interval = value; }
 800aa2a:	b480      	push	{r7}
 800aa2c:	b083      	sub	sp, #12
 800aa2e:	af00      	add	r7, sp, #0
 800aa30:	6078      	str	r0, [r7, #4]
 800aa32:	460b      	mov	r3, r1
 800aa34:	807b      	strh	r3, [r7, #2]
 800aa36:	687b      	ldr	r3, [r7, #4]
 800aa38:	887a      	ldrh	r2, [r7, #2]
 800aa3a:	82da      	strh	r2, [r3, #22]
 800aa3c:	bf00      	nop
 800aa3e:	370c      	adds	r7, #12
 800aa40:	46bd      	mov	sp, r7
 800aa42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa46:	4770      	bx	lr

0800aa48 <_ZN6Config14setDHCPEnabledEb>:
void Config::setDHCPEnabled(bool value) { dhcp_enabled = value; }
 800aa48:	b480      	push	{r7}
 800aa4a:	b083      	sub	sp, #12
 800aa4c:	af00      	add	r7, sp, #0
 800aa4e:	6078      	str	r0, [r7, #4]
 800aa50:	460b      	mov	r3, r1
 800aa52:	70fb      	strb	r3, [r7, #3]
 800aa54:	687b      	ldr	r3, [r7, #4]
 800aa56:	78fa      	ldrb	r2, [r7, #3]
 800aa58:	761a      	strb	r2, [r3, #24]
 800aa5a:	bf00      	nop
 800aa5c:	370c      	adds	r7, #12
 800aa5e:	46bd      	mov	sp, r7
 800aa60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa64:	4770      	bx	lr

0800aa66 <_ZN6Config13setIpAssignedEb>:
void Config::setIpAssigned(bool value) {ip_assigned = value;}
 800aa66:	b480      	push	{r7}
 800aa68:	b083      	sub	sp, #12
 800aa6a:	af00      	add	r7, sp, #0
 800aa6c:	6078      	str	r0, [r7, #4]
 800aa6e:	460b      	mov	r3, r1
 800aa70:	70fb      	strb	r3, [r7, #3]
 800aa72:	687b      	ldr	r3, [r7, #4]
 800aa74:	78fa      	ldrb	r2, [r7, #3]
 800aa76:	765a      	strb	r2, [r3, #25]
 800aa78:	bf00      	nop
 800aa7a:	370c      	adds	r7, #12
 800aa7c:	46bd      	mov	sp, r7
 800aa7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa82:	4770      	bx	lr

0800aa84 <_ZN6Config15setIntervalTimeEm>:
void Config::setIntervalTime(uint32_t value) { interval_time = value; }
 800aa84:	b480      	push	{r7}
 800aa86:	b083      	sub	sp, #12
 800aa88:	af00      	add	r7, sp, #0
 800aa8a:	6078      	str	r0, [r7, #4]
 800aa8c:	6039      	str	r1, [r7, #0]
 800aa8e:	687b      	ldr	r3, [r7, #4]
 800aa90:	683a      	ldr	r2, [r7, #0]
 800aa92:	61da      	str	r2, [r3, #28]
 800aa94:	bf00      	nop
 800aa96:	370c      	adds	r7, #12
 800aa98:	46bd      	mov	sp, r7
 800aa9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa9e:	4770      	bx	lr

0800aaa0 <_ZN6Config11setUsernameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Config::setUsername(const std::string& value) { username = value; }
 800aaa0:	b580      	push	{r7, lr}
 800aaa2:	b082      	sub	sp, #8
 800aaa4:	af00      	add	r7, sp, #0
 800aaa6:	6078      	str	r0, [r7, #4]
 800aaa8:	6039      	str	r1, [r7, #0]
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	3320      	adds	r3, #32
 800aaae:	6839      	ldr	r1, [r7, #0]
 800aab0:	4618      	mov	r0, r3
 800aab2:	f006 fa63 	bl	8010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 800aab6:	bf00      	nop
 800aab8:	3708      	adds	r7, #8
 800aaba:	46bd      	mov	sp, r7
 800aabc:	bd80      	pop	{r7, pc}

0800aabe <_ZN6Config11setClientIdERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
void Config::setClientId(const std::string& value) { clientId = value; }
 800aabe:	b580      	push	{r7, lr}
 800aac0:	b082      	sub	sp, #8
 800aac2:	af00      	add	r7, sp, #0
 800aac4:	6078      	str	r0, [r7, #4]
 800aac6:	6039      	str	r1, [r7, #0]
 800aac8:	687b      	ldr	r3, [r7, #4]
 800aaca:	3338      	adds	r3, #56	; 0x38
 800aacc:	6839      	ldr	r1, [r7, #0]
 800aace:	4618      	mov	r0, r3
 800aad0:	f006 fa54 	bl	8010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 800aad4:	bf00      	nop
 800aad6:	3708      	adds	r7, #8
 800aad8:	46bd      	mov	sp, r7
 800aada:	bd80      	pop	{r7, pc}

0800aadc <_ZN6Config11setPasswordERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
void Config::setPassword(const std::string& value) { password = value; }
 800aadc:	b580      	push	{r7, lr}
 800aade:	b082      	sub	sp, #8
 800aae0:	af00      	add	r7, sp, #0
 800aae2:	6078      	str	r0, [r7, #4]
 800aae4:	6039      	str	r1, [r7, #0]
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	3350      	adds	r3, #80	; 0x50
 800aaea:	6839      	ldr	r1, [r7, #0]
 800aaec:	4618      	mov	r0, r3
 800aaee:	f006 fa45 	bl	8010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 800aaf2:	bf00      	nop
 800aaf4:	3708      	adds	r7, #8
 800aaf6:	46bd      	mov	sp, r7
 800aaf8:	bd80      	pop	{r7, pc}

0800aafa <_ZN6Config17setTopicSubscribeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:


void Config::setTopicSubscribe(const std::string& value) { topic_subscribe = value; }
 800aafa:	b580      	push	{r7, lr}
 800aafc:	b082      	sub	sp, #8
 800aafe:	af00      	add	r7, sp, #0
 800ab00:	6078      	str	r0, [r7, #4]
 800ab02:	6039      	str	r1, [r7, #0]
 800ab04:	687b      	ldr	r3, [r7, #4]
 800ab06:	3368      	adds	r3, #104	; 0x68
 800ab08:	6839      	ldr	r1, [r7, #0]
 800ab0a:	4618      	mov	r0, r3
 800ab0c:	f006 fa36 	bl	8010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 800ab10:	bf00      	nop
 800ab12:	3708      	adds	r7, #8
 800ab14:	46bd      	mov	sp, r7
 800ab16:	bd80      	pop	{r7, pc}

0800ab18 <_ZN6Config15setTopicPublishERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
void Config::setTopicPublish(const std::string& value) { topic_publish = value; }
 800ab18:	b580      	push	{r7, lr}
 800ab1a:	b082      	sub	sp, #8
 800ab1c:	af00      	add	r7, sp, #0
 800ab1e:	6078      	str	r0, [r7, #4]
 800ab20:	6039      	str	r1, [r7, #0]
 800ab22:	687b      	ldr	r3, [r7, #4]
 800ab24:	3380      	adds	r3, #128	; 0x80
 800ab26:	6839      	ldr	r1, [r7, #0]
 800ab28:	4618      	mov	r0, r3
 800ab2a:	f006 fa27 	bl	8010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 800ab2e:	bf00      	nop
 800ab30:	3708      	adds	r7, #8
 800ab32:	46bd      	mov	sp, r7
 800ab34:	bd80      	pop	{r7, pc}

0800ab36 <_ZN6Config6setQoSEi>:
void Config::setQoS(int value) { qos = value; }
 800ab36:	b480      	push	{r7}
 800ab38:	b083      	sub	sp, #12
 800ab3a:	af00      	add	r7, sp, #0
 800ab3c:	6078      	str	r0, [r7, #4]
 800ab3e:	6039      	str	r1, [r7, #0]
 800ab40:	687b      	ldr	r3, [r7, #4]
 800ab42:	683a      	ldr	r2, [r7, #0]
 800ab44:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 800ab48:	bf00      	nop
 800ab4a:	370c      	adds	r7, #12
 800ab4c:	46bd      	mov	sp, r7
 800ab4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab52:	4770      	bx	lr

0800ab54 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEaSERKS6_>:
 800ab54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab56:	b083      	sub	sp, #12
 800ab58:	af00      	add	r7, sp, #0
 800ab5a:	6078      	str	r0, [r7, #4]
 800ab5c:	6039      	str	r1, [r7, #0]
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	2507      	movs	r5, #7
 800ab62:	683c      	ldr	r4, [r7, #0]
 800ab64:	461e      	mov	r6, r3
 800ab66:	e006      	b.n	800ab76 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEaSERKS6_+0x22>
 800ab68:	4621      	mov	r1, r4
 800ab6a:	4630      	mov	r0, r6
 800ab6c:	f006 fa06 	bl	8010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 800ab70:	3618      	adds	r6, #24
 800ab72:	3418      	adds	r4, #24
 800ab74:	3d01      	subs	r5, #1
 800ab76:	2d00      	cmp	r5, #0
 800ab78:	daf6      	bge.n	800ab68 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEaSERKS6_+0x14>
 800ab7a:	687b      	ldr	r3, [r7, #4]
 800ab7c:	4618      	mov	r0, r3
 800ab7e:	370c      	adds	r7, #12
 800ab80:	46bd      	mov	sp, r7
 800ab82:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ab84 <_ZN6Config19setAnalogInputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>:
void Config::setAnalogInputNames(const std::array<std::string, MAX_ANALOG_INPUTS>& value) { analog_input_names = value; }
 800ab84:	b580      	push	{r7, lr}
 800ab86:	b082      	sub	sp, #8
 800ab88:	af00      	add	r7, sp, #0
 800ab8a:	6078      	str	r0, [r7, #4]
 800ab8c:	6039      	str	r1, [r7, #0]
 800ab8e:	687b      	ldr	r3, [r7, #4]
 800ab90:	339c      	adds	r3, #156	; 0x9c
 800ab92:	6839      	ldr	r1, [r7, #0]
 800ab94:	4618      	mov	r0, r3
 800ab96:	f7ff ffdd 	bl	800ab54 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEaSERKS6_>
 800ab9a:	bf00      	nop
 800ab9c:	3708      	adds	r7, #8
 800ab9e:	46bd      	mov	sp, r7
 800aba0:	bd80      	pop	{r7, pc}

0800aba2 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEaSERKS6_>:
 800aba2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aba4:	b083      	sub	sp, #12
 800aba6:	af00      	add	r7, sp, #0
 800aba8:	6078      	str	r0, [r7, #4]
 800abaa:	6039      	str	r1, [r7, #0]
 800abac:	687b      	ldr	r3, [r7, #4]
 800abae:	250f      	movs	r5, #15
 800abb0:	683c      	ldr	r4, [r7, #0]
 800abb2:	461e      	mov	r6, r3
 800abb4:	e006      	b.n	800abc4 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEaSERKS6_+0x22>
 800abb6:	4621      	mov	r1, r4
 800abb8:	4630      	mov	r0, r6
 800abba:	f006 f9df 	bl	8010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 800abbe:	3618      	adds	r6, #24
 800abc0:	3418      	adds	r4, #24
 800abc2:	3d01      	subs	r5, #1
 800abc4:	2d00      	cmp	r5, #0
 800abc6:	daf6      	bge.n	800abb6 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEaSERKS6_+0x14>
 800abc8:	687b      	ldr	r3, [r7, #4]
 800abca:	4618      	mov	r0, r3
 800abcc:	370c      	adds	r7, #12
 800abce:	46bd      	mov	sp, r7
 800abd0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800abd2 <_ZN6Config20setDigitalInputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE>:
void Config::setDigitalInputNames(const std::array<std::string, MAX_DIGITAL_INPUTS>& value) { digital_input_names = value; }
 800abd2:	b580      	push	{r7, lr}
 800abd4:	b082      	sub	sp, #8
 800abd6:	af00      	add	r7, sp, #0
 800abd8:	6078      	str	r0, [r7, #4]
 800abda:	6039      	str	r1, [r7, #0]
 800abdc:	687b      	ldr	r3, [r7, #4]
 800abde:	f503 73ae 	add.w	r3, r3, #348	; 0x15c
 800abe2:	6839      	ldr	r1, [r7, #0]
 800abe4:	4618      	mov	r0, r3
 800abe6:	f7ff ffdc 	bl	800aba2 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEaSERKS6_>
 800abea:	bf00      	nop
 800abec:	3708      	adds	r7, #8
 800abee:	46bd      	mov	sp, r7
 800abf0:	bd80      	pop	{r7, pc}

0800abf2 <_ZN6Config21setDigitalOutputNamesERKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE>:
void Config::setDigitalOutputNames(const std::array<std::string, MAX_DIGITAL_OUTPUTS>& value) { digital_output_names = value; }
 800abf2:	b580      	push	{r7, lr}
 800abf4:	b082      	sub	sp, #8
 800abf6:	af00      	add	r7, sp, #0
 800abf8:	6078      	str	r0, [r7, #4]
 800abfa:	6039      	str	r1, [r7, #0]
 800abfc:	687b      	ldr	r3, [r7, #4]
 800abfe:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800ac02:	6839      	ldr	r1, [r7, #0]
 800ac04:	4618      	mov	r0, r3
 800ac06:	f7ff ffa5 	bl	800ab54 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEaSERKS6_>
 800ac0a:	bf00      	nop
 800ac0c:	3708      	adds	r7, #8
 800ac0e:	46bd      	mov	sp, r7
 800ac10:	bd80      	pop	{r7, pc}

0800ac12 <_ZNSt8__detail14__to_chars_lenIjEEjT_i>:
namespace __detail
{
  // Generic implementation for arbitrary bases.
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR unsigned
    __to_chars_len(_Tp __value, int __base = 10) noexcept
 800ac12:	b480      	push	{r7}
 800ac14:	b087      	sub	sp, #28
 800ac16:	af00      	add	r7, sp, #0
 800ac18:	6078      	str	r0, [r7, #4]
 800ac1a:	6039      	str	r1, [r7, #0]
    {
      static_assert(is_integral<_Tp>::value, "implementation bug");
      static_assert(is_unsigned<_Tp>::value, "implementation bug");

      unsigned __n = 1;
 800ac1c:	2301      	movs	r3, #1
 800ac1e:	617b      	str	r3, [r7, #20]
      const unsigned __b2 = __base  * __base;
 800ac20:	683b      	ldr	r3, [r7, #0]
 800ac22:	fb03 f303 	mul.w	r3, r3, r3
 800ac26:	613b      	str	r3, [r7, #16]
      const unsigned __b3 = __b2 * __base;
 800ac28:	683a      	ldr	r2, [r7, #0]
 800ac2a:	693b      	ldr	r3, [r7, #16]
 800ac2c:	fb02 f303 	mul.w	r3, r2, r3
 800ac30:	60fb      	str	r3, [r7, #12]
      const unsigned long __b4 = __b3 * __base;
 800ac32:	683a      	ldr	r2, [r7, #0]
 800ac34:	68fb      	ldr	r3, [r7, #12]
 800ac36:	fb02 f303 	mul.w	r3, r2, r3
 800ac3a:	60bb      	str	r3, [r7, #8]
      for (;;)
	{
	  if (__value < (unsigned)__base) return __n;
 800ac3c:	683b      	ldr	r3, [r7, #0]
 800ac3e:	687a      	ldr	r2, [r7, #4]
 800ac40:	429a      	cmp	r2, r3
 800ac42:	d201      	bcs.n	800ac48 <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x36>
 800ac44:	697b      	ldr	r3, [r7, #20]
 800ac46:	e01d      	b.n	800ac84 <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x72>
	  if (__value < __b2) return __n + 1;
 800ac48:	687a      	ldr	r2, [r7, #4]
 800ac4a:	693b      	ldr	r3, [r7, #16]
 800ac4c:	429a      	cmp	r2, r3
 800ac4e:	d202      	bcs.n	800ac56 <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x44>
 800ac50:	697b      	ldr	r3, [r7, #20]
 800ac52:	3301      	adds	r3, #1
 800ac54:	e016      	b.n	800ac84 <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x72>
	  if (__value < __b3) return __n + 2;
 800ac56:	687a      	ldr	r2, [r7, #4]
 800ac58:	68fb      	ldr	r3, [r7, #12]
 800ac5a:	429a      	cmp	r2, r3
 800ac5c:	d202      	bcs.n	800ac64 <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x52>
 800ac5e:	697b      	ldr	r3, [r7, #20]
 800ac60:	3302      	adds	r3, #2
 800ac62:	e00f      	b.n	800ac84 <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x72>
	  if (__value < __b4) return __n + 3;
 800ac64:	687a      	ldr	r2, [r7, #4]
 800ac66:	68bb      	ldr	r3, [r7, #8]
 800ac68:	429a      	cmp	r2, r3
 800ac6a:	d202      	bcs.n	800ac72 <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x60>
 800ac6c:	697b      	ldr	r3, [r7, #20]
 800ac6e:	3303      	adds	r3, #3
 800ac70:	e008      	b.n	800ac84 <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x72>
	  __value /= __b4;
 800ac72:	687a      	ldr	r2, [r7, #4]
 800ac74:	68bb      	ldr	r3, [r7, #8]
 800ac76:	fbb2 f3f3 	udiv	r3, r2, r3
 800ac7a:	607b      	str	r3, [r7, #4]
	  __n += 4;
 800ac7c:	697b      	ldr	r3, [r7, #20]
 800ac7e:	3304      	adds	r3, #4
 800ac80:	617b      	str	r3, [r7, #20]
	  if (__value < (unsigned)__base) return __n;
 800ac82:	e7db      	b.n	800ac3c <_ZNSt8__detail14__to_chars_lenIjEEjT_i+0x2a>
	}
    }
 800ac84:	4618      	mov	r0, r3
 800ac86:	371c      	adds	r7, #28
 800ac88:	46bd      	mov	sp, r7
 800ac8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac8e:	4770      	bx	lr

0800ac90 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_>:
  // Write an unsigned integer value to the range [first,first+len).
  // The caller is required to provide a buffer of exactly the right size
  // (which can be determined by the __to_chars_len function).
  template<typename _Tp>
    void
    __to_chars_10_impl(char* __first, unsigned __len, _Tp __val) noexcept
 800ac90:	b480      	push	{r7}
 800ac92:	b089      	sub	sp, #36	; 0x24
 800ac94:	af00      	add	r7, sp, #0
 800ac96:	60f8      	str	r0, [r7, #12]
 800ac98:	60b9      	str	r1, [r7, #8]
 800ac9a:	607a      	str	r2, [r7, #4]
	"0001020304050607080910111213141516171819"
	"2021222324252627282930313233343536373839"
	"4041424344454647484950515253545556575859"
	"6061626364656667686970717273747576777879"
	"8081828384858687888990919293949596979899";
      unsigned __pos = __len - 1;
 800ac9c:	68bb      	ldr	r3, [r7, #8]
 800ac9e:	3b01      	subs	r3, #1
 800aca0:	61fb      	str	r3, [r7, #28]
      while (__val >= 100)
 800aca2:	e024      	b.n	800acee <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0x5e>
	{
	  auto const __num = (__val % 100) * 2;
 800aca4:	687a      	ldr	r2, [r7, #4]
 800aca6:	4b23      	ldr	r3, [pc, #140]	; (800ad34 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0xa4>)
 800aca8:	fba3 1302 	umull	r1, r3, r3, r2
 800acac:	095b      	lsrs	r3, r3, #5
 800acae:	2164      	movs	r1, #100	; 0x64
 800acb0:	fb01 f303 	mul.w	r3, r1, r3
 800acb4:	1ad3      	subs	r3, r2, r3
 800acb6:	005b      	lsls	r3, r3, #1
 800acb8:	617b      	str	r3, [r7, #20]
	  __val /= 100;
 800acba:	687b      	ldr	r3, [r7, #4]
 800acbc:	4a1d      	ldr	r2, [pc, #116]	; (800ad34 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0xa4>)
 800acbe:	fba2 2303 	umull	r2, r3, r2, r3
 800acc2:	095b      	lsrs	r3, r3, #5
 800acc4:	607b      	str	r3, [r7, #4]
	  __first[__pos] = __digits[__num + 1];
 800acc6:	697b      	ldr	r3, [r7, #20]
 800acc8:	1c5a      	adds	r2, r3, #1
 800acca:	68f9      	ldr	r1, [r7, #12]
 800accc:	69fb      	ldr	r3, [r7, #28]
 800acce:	440b      	add	r3, r1
 800acd0:	4919      	ldr	r1, [pc, #100]	; (800ad38 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0xa8>)
 800acd2:	5c8a      	ldrb	r2, [r1, r2]
 800acd4:	701a      	strb	r2, [r3, #0]
	  __first[__pos - 1] = __digits[__num];
 800acd6:	69fb      	ldr	r3, [r7, #28]
 800acd8:	3b01      	subs	r3, #1
 800acda:	68fa      	ldr	r2, [r7, #12]
 800acdc:	4413      	add	r3, r2
 800acde:	4916      	ldr	r1, [pc, #88]	; (800ad38 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0xa8>)
 800ace0:	697a      	ldr	r2, [r7, #20]
 800ace2:	440a      	add	r2, r1
 800ace4:	7812      	ldrb	r2, [r2, #0]
 800ace6:	701a      	strb	r2, [r3, #0]
	  __pos -= 2;
 800ace8:	69fb      	ldr	r3, [r7, #28]
 800acea:	3b02      	subs	r3, #2
 800acec:	61fb      	str	r3, [r7, #28]
      while (__val >= 100)
 800acee:	687b      	ldr	r3, [r7, #4]
 800acf0:	2b63      	cmp	r3, #99	; 0x63
 800acf2:	d8d7      	bhi.n	800aca4 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0x14>
	}
      if (__val >= 10)
 800acf4:	687b      	ldr	r3, [r7, #4]
 800acf6:	2b09      	cmp	r3, #9
 800acf8:	d910      	bls.n	800ad1c <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0x8c>
	{
	  auto const __num = __val * 2;
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	005b      	lsls	r3, r3, #1
 800acfe:	61bb      	str	r3, [r7, #24]
	  __first[1] = __digits[__num + 1];
 800ad00:	69bb      	ldr	r3, [r7, #24]
 800ad02:	1c5a      	adds	r2, r3, #1
 800ad04:	68fb      	ldr	r3, [r7, #12]
 800ad06:	3301      	adds	r3, #1
 800ad08:	490b      	ldr	r1, [pc, #44]	; (800ad38 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0xa8>)
 800ad0a:	5c8a      	ldrb	r2, [r1, r2]
 800ad0c:	701a      	strb	r2, [r3, #0]
	  __first[0] = __digits[__num];
 800ad0e:	4a0a      	ldr	r2, [pc, #40]	; (800ad38 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0xa8>)
 800ad10:	69bb      	ldr	r3, [r7, #24]
 800ad12:	4413      	add	r3, r2
 800ad14:	781a      	ldrb	r2, [r3, #0]
 800ad16:	68fb      	ldr	r3, [r7, #12]
 800ad18:	701a      	strb	r2, [r3, #0]
	}
      else
	__first[0] = '0' + __val;
    }
 800ad1a:	e005      	b.n	800ad28 <_ZNSt8__detail18__to_chars_10_implIjEEvPcjT_+0x98>
	__first[0] = '0' + __val;
 800ad1c:	687b      	ldr	r3, [r7, #4]
 800ad1e:	b2db      	uxtb	r3, r3
 800ad20:	3330      	adds	r3, #48	; 0x30
 800ad22:	b2da      	uxtb	r2, r3
 800ad24:	68fb      	ldr	r3, [r7, #12]
 800ad26:	701a      	strb	r2, [r3, #0]
    }
 800ad28:	bf00      	nop
 800ad2a:	3724      	adds	r7, #36	; 0x24
 800ad2c:	46bd      	mov	sp, r7
 800ad2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad32:	4770      	bx	lr
 800ad34:	51eb851f 	.word	0x51eb851f
 800ad38:	0801678c 	.word	0x0801678c

0800ad3c <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EEixEj>:
      operator[](size_type __n) noexcept
 800ad3c:	b580      	push	{r7, lr}
 800ad3e:	b082      	sub	sp, #8
 800ad40:	af00      	add	r7, sp, #0
 800ad42:	6078      	str	r0, [r7, #4]
 800ad44:	6039      	str	r1, [r7, #0]
	return _AT_Type::_S_ref(_M_elems, __n);
 800ad46:	687b      	ldr	r3, [r7, #4]
 800ad48:	6839      	ldr	r1, [r7, #0]
 800ad4a:	4618      	mov	r0, r3
 800ad4c:	f000 f8d0 	bl	800aef0 <_ZNSt14__array_traitsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE6_S_refERA8_KS5_j>
 800ad50:	4603      	mov	r3, r0
      }
 800ad52:	4618      	mov	r0, r3
 800ad54:	3708      	adds	r7, #8
 800ad56:	46bd      	mov	sp, r7
 800ad58:	bd80      	pop	{r7, pc}

0800ad5a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EEixEj>:
      operator[](size_type __n) noexcept
 800ad5a:	b580      	push	{r7, lr}
 800ad5c:	b082      	sub	sp, #8
 800ad5e:	af00      	add	r7, sp, #0
 800ad60:	6078      	str	r0, [r7, #4]
 800ad62:	6039      	str	r1, [r7, #0]
	return _AT_Type::_S_ref(_M_elems, __n);
 800ad64:	687b      	ldr	r3, [r7, #4]
 800ad66:	6839      	ldr	r1, [r7, #0]
 800ad68:	4618      	mov	r0, r3
 800ad6a:	f000 f8d3 	bl	800af14 <_ZNSt14__array_traitsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE6_S_refERA16_KS5_j>
 800ad6e:	4603      	mov	r3, r0
      }
 800ad70:	4618      	mov	r0, r3
 800ad72:	3708      	adds	r7, #8
 800ad74:	46bd      	mov	sp, r7
 800ad76:	bd80      	pop	{r7, pc}

0800ad78 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    }
#endif  // !_GLIBCXX_USE_CXX11_ABI
   
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
 800ad78:	b580      	push	{r7, lr}
 800ad7a:	b088      	sub	sp, #32
 800ad7c:	af00      	add	r7, sp, #0
 800ad7e:	60f8      	str	r0, [r7, #12]
 800ad80:	60b9      	str	r1, [r7, #8]
 800ad82:	607a      	str	r2, [r7, #4]
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
 800ad84:	68b8      	ldr	r0, [r7, #8]
 800ad86:	f7fe f879 	bl	8008e7c <_ZNSt11char_traitsIcE6lengthEPKc>
 800ad8a:	61f8      	str	r0, [r7, #28]
      __string_type __str(_Alloc_traits::_S_select_on_copy(
 800ad8c:	f107 0318 	add.w	r3, r7, #24
 800ad90:	6879      	ldr	r1, [r7, #4]
 800ad92:	4618      	mov	r0, r3
 800ad94:	f006 fa34 	bl	8011200 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>
 800ad98:	f107 0314 	add.w	r3, r7, #20
 800ad9c:	f107 0218 	add.w	r2, r7, #24
 800ada0:	4611      	mov	r1, r2
 800ada2:	4618      	mov	r0, r3
 800ada4:	f000 f896 	bl	800aed4 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
 800ada8:	f107 0314 	add.w	r3, r7, #20
 800adac:	4619      	mov	r1, r3
 800adae:	68f8      	ldr	r0, [r7, #12]
 800adb0:	f006 f8ce 	bl	8010f50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_>
 800adb4:	f107 0314 	add.w	r3, r7, #20
 800adb8:	4618      	mov	r0, r3
 800adba:	f005 ffc7 	bl	8010d4c <_ZNSaIcED1Ev>
 800adbe:	f107 0318 	add.w	r3, r7, #24
 800adc2:	4618      	mov	r0, r3
 800adc4:	f005 ffc2 	bl	8010d4c <_ZNSaIcED1Ev>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
 800adc8:	6878      	ldr	r0, [r7, #4]
 800adca:	f006 f908 	bl	8010fde <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 800adce:	4602      	mov	r2, r0
 800add0:	69fb      	ldr	r3, [r7, #28]
 800add2:	4413      	add	r3, r2
 800add4:	4619      	mov	r1, r3
 800add6:	68f8      	ldr	r0, [r7, #12]
 800add8:	f006 f905 	bl	8010fe6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
      __str.append(__lhs, __len);
 800addc:	69fa      	ldr	r2, [r7, #28]
 800adde:	68b9      	ldr	r1, [r7, #8]
 800ade0:	68f8      	ldr	r0, [r7, #12]
 800ade2:	f006 f9e1 	bl	80111a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
      __str.append(__rhs);
 800ade6:	6879      	ldr	r1, [r7, #4]
 800ade8:	68f8      	ldr	r0, [r7, #12]
 800adea:	f006 f9d2 	bl	8011192 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 800adee:	bf00      	nop
    }
 800adf0:	68f8      	ldr	r0, [r7, #12]
 800adf2:	3720      	adds	r7, #32
 800adf4:	46bd      	mov	sp, r7
 800adf6:	bd80      	pop	{r7, pc}

0800adf8 <_ZNKSt5arrayIhLj4EE4sizeEv>:
      size() const noexcept { return _Nm; }
 800adf8:	b480      	push	{r7}
 800adfa:	b083      	sub	sp, #12
 800adfc:	af00      	add	r7, sp, #0
 800adfe:	6078      	str	r0, [r7, #4]
 800ae00:	2304      	movs	r3, #4
 800ae02:	4618      	mov	r0, r3
 800ae04:	370c      	adds	r7, #12
 800ae06:	46bd      	mov	sp, r7
 800ae08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae0c:	4770      	bx	lr

0800ae0e <_ZNSt5arrayIhLj4EEixEj>:
      operator[](size_type __n) noexcept
 800ae0e:	b580      	push	{r7, lr}
 800ae10:	b082      	sub	sp, #8
 800ae12:	af00      	add	r7, sp, #0
 800ae14:	6078      	str	r0, [r7, #4]
 800ae16:	6039      	str	r1, [r7, #0]
	return _AT_Type::_S_ref(_M_elems, __n);
 800ae18:	687b      	ldr	r3, [r7, #4]
 800ae1a:	6839      	ldr	r1, [r7, #0]
 800ae1c:	4618      	mov	r0, r3
 800ae1e:	f000 f88b 	bl	800af38 <_ZNSt14__array_traitsIhLj4EE6_S_refERA4_Khj>
 800ae22:	4603      	mov	r3, r0
      }
 800ae24:	4618      	mov	r0, r3
 800ae26:	3708      	adds	r7, #8
 800ae28:	46bd      	mov	sp, r7
 800ae2a:	bd80      	pop	{r7, pc}

0800ae2c <_ZNKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE4sizeEv>:
      size() const noexcept { return _Nm; }
 800ae2c:	b480      	push	{r7}
 800ae2e:	b083      	sub	sp, #12
 800ae30:	af00      	add	r7, sp, #0
 800ae32:	6078      	str	r0, [r7, #4]
 800ae34:	2310      	movs	r3, #16
 800ae36:	4618      	mov	r0, r3
 800ae38:	370c      	adds	r7, #12
 800ae3a:	46bd      	mov	sp, r7
 800ae3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae40:	4770      	bx	lr

0800ae42 <_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>:
    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800ae42:	b580      	push	{r7, lr}
 800ae44:	b082      	sub	sp, #8
 800ae46:	af00      	add	r7, sp, #0
 800ae48:	6078      	str	r0, [r7, #4]
 800ae4a:	6039      	str	r1, [r7, #0]
    { return !(__lhs == __rhs); }
 800ae4c:	6839      	ldr	r1, [r7, #0]
 800ae4e:	6878      	ldr	r0, [r7, #4]
 800ae50:	f000 f880 	bl	800af54 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 800ae54:	4603      	mov	r3, r0
 800ae56:	f083 0301 	eor.w	r3, r3, #1
 800ae5a:	b2db      	uxtb	r3, r3
 800ae5c:	4618      	mov	r0, r3
 800ae5e:	3708      	adds	r7, #8
 800ae60:	46bd      	mov	sp, r7
 800ae62:	bd80      	pop	{r7, pc}

0800ae64 <_ZNKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE4sizeEv>:
 800ae64:	b480      	push	{r7}
 800ae66:	b083      	sub	sp, #12
 800ae68:	af00      	add	r7, sp, #0
 800ae6a:	6078      	str	r0, [r7, #4]
 800ae6c:	2308      	movs	r3, #8
 800ae6e:	4618      	mov	r0, r3
 800ae70:	370c      	adds	r7, #12
 800ae72:	46bd      	mov	sp, r7
 800ae74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae78:	4770      	bx	lr

0800ae7a <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EEixEj>:
      operator[](size_type __n) noexcept
 800ae7a:	b580      	push	{r7, lr}
 800ae7c:	b082      	sub	sp, #8
 800ae7e:	af00      	add	r7, sp, #0
 800ae80:	6078      	str	r0, [r7, #4]
 800ae82:	6039      	str	r1, [r7, #0]
	return _AT_Type::_S_ref(_M_elems, __n);
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	6839      	ldr	r1, [r7, #0]
 800ae88:	4618      	mov	r0, r3
 800ae8a:	f000 f876 	bl	800af7a <_ZNSt14__array_traitsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EE6_S_refERA11_KS5_j>
 800ae8e:	4603      	mov	r3, r0
      }
 800ae90:	4618      	mov	r0, r3
 800ae92:	3708      	adds	r7, #8
 800ae94:	46bd      	mov	sp, r7
 800ae96:	bd80      	pop	{r7, pc}

0800ae98 <_ZNKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EE4sizeEv>:
      size() const noexcept { return _Nm; }
 800ae98:	b480      	push	{r7}
 800ae9a:	b083      	sub	sp, #12
 800ae9c:	af00      	add	r7, sp, #0
 800ae9e:	6078      	str	r0, [r7, #4]
 800aea0:	230b      	movs	r3, #11
 800aea2:	4618      	mov	r0, r3
 800aea4:	370c      	adds	r7, #12
 800aea6:	46bd      	mov	sp, r7
 800aea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeac:	4770      	bx	lr

0800aeae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>:
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800aeae:	b580      	push	{r7, lr}
 800aeb0:	b084      	sub	sp, #16
 800aeb2:	af00      	add	r7, sp, #0
 800aeb4:	60f8      	str	r0, [r7, #12]
 800aeb6:	60b9      	str	r1, [r7, #8]
 800aeb8:	607a      	str	r2, [r7, #4]
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
 800aeba:	68b9      	ldr	r1, [r7, #8]
 800aebc:	68f8      	ldr	r0, [r7, #12]
 800aebe:	f006 f9d9 	bl	8011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
      __str.append(__rhs);
 800aec2:	6879      	ldr	r1, [r7, #4]
 800aec4:	68f8      	ldr	r0, [r7, #12]
 800aec6:	f006 f97f 	bl	80111c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
      return __str;
 800aeca:	bf00      	nop
    }
 800aecc:	68f8      	ldr	r0, [r7, #12]
 800aece:	3710      	adds	r7, #16
 800aed0:	46bd      	mov	sp, r7
 800aed2:	bd80      	pop	{r7, pc}

0800aed4 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 800aed4:	b580      	push	{r7, lr}
 800aed6:	b082      	sub	sp, #8
 800aed8:	af00      	add	r7, sp, #0
 800aeda:	6078      	str	r0, [r7, #4]
 800aedc:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800aede:	687b      	ldr	r3, [r7, #4]
 800aee0:	6839      	ldr	r1, [r7, #0]
 800aee2:	4618      	mov	r0, r3
 800aee4:	f000 f85b 	bl	800af9e <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
 800aee8:	6878      	ldr	r0, [r7, #4]
 800aeea:	3708      	adds	r7, #8
 800aeec:	46bd      	mov	sp, r7
 800aeee:	bd80      	pop	{r7, pc}

0800aef0 <_ZNSt14__array_traitsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EE6_S_refERA8_KS5_j>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
 800aef0:	b480      	push	{r7}
 800aef2:	b083      	sub	sp, #12
 800aef4:	af00      	add	r7, sp, #0
 800aef6:	6078      	str	r0, [r7, #4]
 800aef8:	6039      	str	r1, [r7, #0]
      { return const_cast<_Tp&>(__t[__n]); }
 800aefa:	683a      	ldr	r2, [r7, #0]
 800aefc:	4613      	mov	r3, r2
 800aefe:	005b      	lsls	r3, r3, #1
 800af00:	4413      	add	r3, r2
 800af02:	00db      	lsls	r3, r3, #3
 800af04:	687a      	ldr	r2, [r7, #4]
 800af06:	4413      	add	r3, r2
 800af08:	4618      	mov	r0, r3
 800af0a:	370c      	adds	r7, #12
 800af0c:	46bd      	mov	sp, r7
 800af0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af12:	4770      	bx	lr

0800af14 <_ZNSt14__array_traitsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EE6_S_refERA16_KS5_j>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
 800af14:	b480      	push	{r7}
 800af16:	b083      	sub	sp, #12
 800af18:	af00      	add	r7, sp, #0
 800af1a:	6078      	str	r0, [r7, #4]
 800af1c:	6039      	str	r1, [r7, #0]
      { return const_cast<_Tp&>(__t[__n]); }
 800af1e:	683a      	ldr	r2, [r7, #0]
 800af20:	4613      	mov	r3, r2
 800af22:	005b      	lsls	r3, r3, #1
 800af24:	4413      	add	r3, r2
 800af26:	00db      	lsls	r3, r3, #3
 800af28:	687a      	ldr	r2, [r7, #4]
 800af2a:	4413      	add	r3, r2
 800af2c:	4618      	mov	r0, r3
 800af2e:	370c      	adds	r7, #12
 800af30:	46bd      	mov	sp, r7
 800af32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af36:	4770      	bx	lr

0800af38 <_ZNSt14__array_traitsIhLj4EE6_S_refERA4_Khj>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
 800af38:	b480      	push	{r7}
 800af3a:	b083      	sub	sp, #12
 800af3c:	af00      	add	r7, sp, #0
 800af3e:	6078      	str	r0, [r7, #4]
 800af40:	6039      	str	r1, [r7, #0]
      { return const_cast<_Tp&>(__t[__n]); }
 800af42:	687a      	ldr	r2, [r7, #4]
 800af44:	683b      	ldr	r3, [r7, #0]
 800af46:	4413      	add	r3, r2
 800af48:	4618      	mov	r0, r3
 800af4a:	370c      	adds	r7, #12
 800af4c:	46bd      	mov	sp, r7
 800af4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af52:	4770      	bx	lr

0800af54 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>:
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800af54:	b580      	push	{r7, lr}
 800af56:	b082      	sub	sp, #8
 800af58:	af00      	add	r7, sp, #0
 800af5a:	6078      	str	r0, [r7, #4]
 800af5c:	6039      	str	r1, [r7, #0]
    { return __lhs.compare(__rhs) == 0; }
 800af5e:	6839      	ldr	r1, [r7, #0]
 800af60:	6878      	ldr	r0, [r7, #4]
 800af62:	f006 f94e 	bl	8011202 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 800af66:	4603      	mov	r3, r0
 800af68:	2b00      	cmp	r3, #0
 800af6a:	bf0c      	ite	eq
 800af6c:	2301      	moveq	r3, #1
 800af6e:	2300      	movne	r3, #0
 800af70:	b2db      	uxtb	r3, r3
 800af72:	4618      	mov	r0, r3
 800af74:	3708      	adds	r7, #8
 800af76:	46bd      	mov	sp, r7
 800af78:	bd80      	pop	{r7, pc}

0800af7a <_ZNSt14__array_traitsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj11EE6_S_refERA11_KS5_j>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
 800af7a:	b480      	push	{r7}
 800af7c:	b083      	sub	sp, #12
 800af7e:	af00      	add	r7, sp, #0
 800af80:	6078      	str	r0, [r7, #4]
 800af82:	6039      	str	r1, [r7, #0]
      { return const_cast<_Tp&>(__t[__n]); }
 800af84:	683a      	ldr	r2, [r7, #0]
 800af86:	4613      	mov	r3, r2
 800af88:	005b      	lsls	r3, r3, #1
 800af8a:	4413      	add	r3, r2
 800af8c:	00db      	lsls	r3, r3, #3
 800af8e:	687a      	ldr	r2, [r7, #4]
 800af90:	4413      	add	r3, r2
 800af92:	4618      	mov	r0, r3
 800af94:	370c      	adds	r7, #12
 800af96:	46bd      	mov	sp, r7
 800af98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af9c:	4770      	bx	lr

0800af9e <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
       *  @brief  Obtain an allocator to use when copying a container.
       *  @param  __rhs  An allocator.
       *  @return @c __rhs
      */
      static _GLIBCXX20_CONSTEXPR allocator_type
      select_on_container_copy_construction(const allocator_type& __rhs)
 800af9e:	b580      	push	{r7, lr}
 800afa0:	b082      	sub	sp, #8
 800afa2:	af00      	add	r7, sp, #0
 800afa4:	6078      	str	r0, [r7, #4]
 800afa6:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800afa8:	6839      	ldr	r1, [r7, #0]
 800afaa:	6878      	ldr	r0, [r7, #4]
 800afac:	f005 fecd 	bl	8010d4a <_ZNSaIcEC1ERKS_>
 800afb0:	6878      	ldr	r0, [r7, #4]
 800afb2:	3708      	adds	r7, #8
 800afb4:	46bd      	mov	sp, r7
 800afb6:	bd80      	pop	{r7, pc}

0800afb8 <main>:
void readADCsVoltage(float *voltageArray);

*/

int main(void)
{
 800afb8:	b580      	push	{r7, lr}
 800afba:	af00      	add	r7, sp, #0

  HAL_Init();
 800afbc:	f001 fe54 	bl	800cc68 <HAL_Init>

  SystemClock_Config();
 800afc0:	f000 f896 	bl	800b0f0 <_Z18SystemClock_Configv>


  MX_GPIO_Init();
 800afc4:	f000 fa32 	bl	800b42c <_ZL12MX_GPIO_Initv>
  MX_SPI2_Init();
 800afc8:	f000 f966 	bl	800b298 <_ZL12MX_SPI2_Initv>
  MX_USART1_UART_Init();
 800afcc:	f000 fa00 	bl	800b3d0 <_ZL19MX_USART1_UART_Initv>
  MX_ADC1_Init();
 800afd0:	f000 f902 	bl	800b1d8 <_ZL12MX_ADC1_Initv>
  MX_TIM1_Init();
 800afd4:	f000 f99c 	bl	800b310 <_ZL12MX_TIM1_Initv>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim1);
 800afd8:	4839      	ldr	r0, [pc, #228]	; (800b0c0 <main+0x108>)
 800afda:	f004 fa37 	bl	800f44c <HAL_TIM_Base_Start_IT>


 muxSelect.init(&hadc1);
 800afde:	4939      	ldr	r1, [pc, #228]	; (800b0c4 <main+0x10c>)
 800afe0:	4839      	ldr	r0, [pc, #228]	; (800b0c8 <main+0x110>)
 800afe2:	f7fd fcc3 	bl	800896c <_ZN9MuxSelect4initEP17ADC_HandleTypeDef>

 config.init();
 800afe6:	4839      	ldr	r0, [pc, #228]	; (800b0cc <main+0x114>)
 800afe8:	f7fe f81a 	bl	8009020 <_ZN6Config4initEv>

 utils.init(&config, &muxSelect);
 800afec:	4a36      	ldr	r2, [pc, #216]	; (800b0c8 <main+0x110>)
 800afee:	4937      	ldr	r1, [pc, #220]	; (800b0cc <main+0x114>)
 800aff0:	4837      	ldr	r0, [pc, #220]	; (800b0d0 <main+0x118>)
 800aff2:	f001 f909 	bl	800c208 <_ZN5Utils4initEP6ConfigP9MuxSelect>

 ethManager.init(&config, &utils);
 800aff6:	4a36      	ldr	r2, [pc, #216]	; (800b0d0 <main+0x118>)
 800aff8:	4934      	ldr	r1, [pc, #208]	; (800b0cc <main+0x114>)
 800affa:	4836      	ldr	r0, [pc, #216]	; (800b0d4 <main+0x11c>)
 800affc:	f7fd f976 	bl	80082ec <_ZN15EthernetManager4initEP6ConfigP5Utils>

 mqttClient.init(&config, &utils);
 800b000:	4a33      	ldr	r2, [pc, #204]	; (800b0d0 <main+0x118>)
 800b002:	4932      	ldr	r1, [pc, #200]	; (800b0cc <main+0x114>)
 800b004:	4834      	ldr	r0, [pc, #208]	; (800b0d8 <main+0x120>)
 800b006:	f000 fbf7 	bl	800b7f8 <_ZN14MQTTConnection4initEP6ConfigP5Utils>

 uartHandler.init(&huart1, &utils, &config);
 800b00a:	4b30      	ldr	r3, [pc, #192]	; (800b0cc <main+0x114>)
 800b00c:	4a30      	ldr	r2, [pc, #192]	; (800b0d0 <main+0x118>)
 800b00e:	4933      	ldr	r1, [pc, #204]	; (800b0dc <main+0x124>)
 800b010:	4833      	ldr	r0, [pc, #204]	; (800b0e0 <main+0x128>)
 800b012:	f7fd fd9e 	bl	8008b52 <_ZN11UARTHandler4initEP20__UART_HandleTypeDefP5UtilsP6Config>



  while (true)
  {
	mqttClient.mqttYield();
 800b016:	4830      	ldr	r0, [pc, #192]	; (800b0d8 <main+0x120>)
 800b018:	f000 fd7b 	bl	800bb12 <_ZN14MQTTConnection9mqttYieldEv>
	uartHandler.processReceivedData();
 800b01c:	4830      	ldr	r0, [pc, #192]	; (800b0e0 <main+0x128>)
 800b01e:	f7fd fe2d 	bl	8008c7c <_ZN11UARTHandler19processReceivedDataEv>

	if (timeValue == static_cast<int>(config.getIntervalTime())) {
 800b022:	482a      	ldr	r0, [pc, #168]	; (800b0cc <main+0x114>)
 800b024:	f7ff fbed 	bl	800a802 <_ZNK6Config15getIntervalTimeEv>
 800b028:	4603      	mov	r3, r0
 800b02a:	461a      	mov	r2, r3
 800b02c:	4b2d      	ldr	r3, [pc, #180]	; (800b0e4 <main+0x12c>)
 800b02e:	681b      	ldr	r3, [r3, #0]
 800b030:	429a      	cmp	r2, r3
 800b032:	bf0c      	ite	eq
 800b034:	2301      	moveq	r3, #1
 800b036:	2300      	movne	r3, #0
 800b038:	b2db      	uxtb	r3, r3
 800b03a:	2b00      	cmp	r3, #0
 800b03c:	d02c      	beq.n	800b098 <main+0xe0>

		if (!config.getIpAssigned()) {
 800b03e:	4823      	ldr	r0, [pc, #140]	; (800b0cc <main+0x114>)
 800b040:	f7ff fbd3 	bl	800a7ea <_ZNK6Config13getIpAssignedEv>
 800b044:	4603      	mov	r3, r0
 800b046:	f083 0301 	eor.w	r3, r3, #1
 800b04a:	b2db      	uxtb	r3, r3
 800b04c:	2b00      	cmp	r3, #0
 800b04e:	d00c      	beq.n	800b06a <main+0xb2>
		  if (ethManager.connect()){
 800b050:	4820      	ldr	r0, [pc, #128]	; (800b0d4 <main+0x11c>)
 800b052:	f7fd f963 	bl	800831c <_ZN15EthernetManager7connectEv>
 800b056:	4603      	mov	r3, r0
 800b058:	2b00      	cmp	r3, #0
 800b05a:	d01a      	beq.n	800b092 <main+0xda>
			  config.initmqttConfig();
 800b05c:	481b      	ldr	r0, [pc, #108]	; (800b0cc <main+0x114>)
 800b05e:	f7fe fc0f 	bl	8009880 <_ZN6Config14initmqttConfigEv>
			  mqttClient.connect();
 800b062:	481d      	ldr	r0, [pc, #116]	; (800b0d8 <main+0x120>)
 800b064:	f000 fbda 	bl	800b81c <_ZN14MQTTConnection7connectEv>
 800b068:	e013      	b.n	800b092 <main+0xda>
		  }

		}else {
			if (mqttClient.getIsConnected()) {
 800b06a:	481b      	ldr	r0, [pc, #108]	; (800b0d8 <main+0x120>)
 800b06c:	f000 fd75 	bl	800bb5a <_ZN14MQTTConnection14getIsConnectedEv>
 800b070:	4603      	mov	r3, r0
 800b072:	2b00      	cmp	r3, #0
 800b074:	d008      	beq.n	800b088 <main+0xd0>
				utils.createJSON(&statusJsonBuffer);
 800b076:	491c      	ldr	r1, [pc, #112]	; (800b0e8 <main+0x130>)
 800b078:	4815      	ldr	r0, [pc, #84]	; (800b0d0 <main+0x118>)
 800b07a:	f001 fa33 	bl	800c4e4 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
				mqttClient.publish(statusJsonBuffer);
 800b07e:	491a      	ldr	r1, [pc, #104]	; (800b0e8 <main+0x130>)
 800b080:	4815      	ldr	r0, [pc, #84]	; (800b0d8 <main+0x120>)
 800b082:	f000 fc95 	bl	800b9b0 <_ZN14MQTTConnection7publishERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b086:	e004      	b.n	800b092 <main+0xda>
			}else {
			    mqttClient.init(&config, &utils);
 800b088:	4a11      	ldr	r2, [pc, #68]	; (800b0d0 <main+0x118>)
 800b08a:	4910      	ldr	r1, [pc, #64]	; (800b0cc <main+0x114>)
 800b08c:	4812      	ldr	r0, [pc, #72]	; (800b0d8 <main+0x120>)
 800b08e:	f000 fbb3 	bl	800b7f8 <_ZN14MQTTConnection4initEP6ConfigP5Utils>
			}
		}



		timeValue = 0;
 800b092:	4b14      	ldr	r3, [pc, #80]	; (800b0e4 <main+0x12c>)
 800b094:	2200      	movs	r2, #0
 800b096:	601a      	str	r2, [r3, #0]

	}


	  if (uartHandler.getRealTimeData()) {
 800b098:	4811      	ldr	r0, [pc, #68]	; (800b0e0 <main+0x128>)
 800b09a:	f7fd fd88 	bl	8008bae <_ZN11UARTHandler15getRealTimeDataEv>
 800b09e:	4603      	mov	r3, r0
 800b0a0:	2b00      	cmp	r3, #0
 800b0a2:	d0b8      	beq.n	800b016 <main+0x5e>
	              if (timeValue == 1 ) {
 800b0a4:	4b0f      	ldr	r3, [pc, #60]	; (800b0e4 <main+0x12c>)
 800b0a6:	681b      	ldr	r3, [r3, #0]
 800b0a8:	2b01      	cmp	r3, #1
 800b0aa:	bf0c      	ite	eq
 800b0ac:	2301      	moveq	r3, #1
 800b0ae:	2300      	movne	r3, #0
 800b0b0:	b2db      	uxtb	r3, r3
 800b0b2:	2b00      	cmp	r3, #0
 800b0b4:	d0af      	beq.n	800b016 <main+0x5e>
	             	 uartHandler.SendRealTimeData(&statusJsonUSARTBuffer);
 800b0b6:	490d      	ldr	r1, [pc, #52]	; (800b0ec <main+0x134>)
 800b0b8:	4809      	ldr	r0, [pc, #36]	; (800b0e0 <main+0x128>)
 800b0ba:	f7fd febf 	bl	8008e3c <_ZN11UARTHandler16SendRealTimeDataEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
	mqttClient.mqttYield();
 800b0be:	e7aa      	b.n	800b016 <main+0x5e>
 800b0c0:	20001324 	.word	0x20001324
 800b0c4:	200012dc 	.word	0x200012dc
 800b0c8:	2000140c 	.word	0x2000140c
 800b0cc:	20001440 	.word	0x20001440
 800b0d0:	200017dc 	.word	0x200017dc
 800b0d4:	200018e4 	.word	0x200018e4
 800b0d8:	200018ec 	.word	0x200018ec
 800b0dc:	200013c4 	.word	0x200013c4
 800b0e0:	20001964 	.word	0x20001964
 800b0e4:	20001f84 	.word	0x20001f84
 800b0e8:	20001f88 	.word	0x20001f88
 800b0ec:	20001fa0 	.word	0x20001fa0

0800b0f0 <_Z18SystemClock_Configv>:

}


void SystemClock_Config(void)
{
 800b0f0:	b580      	push	{r7, lr}
 800b0f2:	b094      	sub	sp, #80	; 0x50
 800b0f4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800b0f6:	f107 0320 	add.w	r3, r7, #32
 800b0fa:	2230      	movs	r2, #48	; 0x30
 800b0fc:	2100      	movs	r1, #0
 800b0fe:	4618      	mov	r0, r3
 800b100:	f007 fe9c 	bl	8012e3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800b104:	f107 030c 	add.w	r3, r7, #12
 800b108:	2200      	movs	r2, #0
 800b10a:	601a      	str	r2, [r3, #0]
 800b10c:	605a      	str	r2, [r3, #4]
 800b10e:	609a      	str	r2, [r3, #8]
 800b110:	60da      	str	r2, [r3, #12]
 800b112:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800b114:	2300      	movs	r3, #0
 800b116:	60bb      	str	r3, [r7, #8]
 800b118:	4b2d      	ldr	r3, [pc, #180]	; (800b1d0 <_Z18SystemClock_Configv+0xe0>)
 800b11a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b11c:	4a2c      	ldr	r2, [pc, #176]	; (800b1d0 <_Z18SystemClock_Configv+0xe0>)
 800b11e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b122:	6413      	str	r3, [r2, #64]	; 0x40
 800b124:	4b2a      	ldr	r3, [pc, #168]	; (800b1d0 <_Z18SystemClock_Configv+0xe0>)
 800b126:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b128:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b12c:	60bb      	str	r3, [r7, #8]
 800b12e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800b130:	2300      	movs	r3, #0
 800b132:	607b      	str	r3, [r7, #4]
 800b134:	4b27      	ldr	r3, [pc, #156]	; (800b1d4 <_Z18SystemClock_Configv+0xe4>)
 800b136:	681b      	ldr	r3, [r3, #0]
 800b138:	4a26      	ldr	r2, [pc, #152]	; (800b1d4 <_Z18SystemClock_Configv+0xe4>)
 800b13a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800b13e:	6013      	str	r3, [r2, #0]
 800b140:	4b24      	ldr	r3, [pc, #144]	; (800b1d4 <_Z18SystemClock_Configv+0xe4>)
 800b142:	681b      	ldr	r3, [r3, #0]
 800b144:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800b148:	607b      	str	r3, [r7, #4]
 800b14a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800b14c:	2301      	movs	r3, #1
 800b14e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800b150:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800b154:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800b156:	2302      	movs	r3, #2
 800b158:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800b15a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800b15e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 800b160:	2319      	movs	r3, #25
 800b162:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 800b164:	f44f 73a8 	mov.w	r3, #336	; 0x150
 800b168:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800b16a:	2302      	movs	r3, #2
 800b16c:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800b16e:	2304      	movs	r3, #4
 800b170:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800b172:	f107 0320 	add.w	r3, r7, #32
 800b176:	4618      	mov	r0, r3
 800b178:	f002 fece 	bl	800df18 <HAL_RCC_OscConfig>
 800b17c:	4603      	mov	r3, r0
 800b17e:	2b00      	cmp	r3, #0
 800b180:	bf14      	ite	ne
 800b182:	2301      	movne	r3, #1
 800b184:	2300      	moveq	r3, #0
 800b186:	b2db      	uxtb	r3, r3
 800b188:	2b00      	cmp	r3, #0
 800b18a:	d001      	beq.n	800b190 <_Z18SystemClock_Configv+0xa0>
  {
    Error_Handler();
 800b18c:	f000 fa88 	bl	800b6a0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800b190:	230f      	movs	r3, #15
 800b192:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800b194:	2302      	movs	r3, #2
 800b196:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800b198:	2300      	movs	r3, #0
 800b19a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800b19c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800b1a0:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800b1a2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800b1a6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800b1a8:	f107 030c 	add.w	r3, r7, #12
 800b1ac:	2105      	movs	r1, #5
 800b1ae:	4618      	mov	r0, r3
 800b1b0:	f003 f92a 	bl	800e408 <HAL_RCC_ClockConfig>
 800b1b4:	4603      	mov	r3, r0
 800b1b6:	2b00      	cmp	r3, #0
 800b1b8:	bf14      	ite	ne
 800b1ba:	2301      	movne	r3, #1
 800b1bc:	2300      	moveq	r3, #0
 800b1be:	b2db      	uxtb	r3, r3
 800b1c0:	2b00      	cmp	r3, #0
 800b1c2:	d001      	beq.n	800b1c8 <_Z18SystemClock_Configv+0xd8>
  {
    Error_Handler();
 800b1c4:	f000 fa6c 	bl	800b6a0 <Error_Handler>
  }
}
 800b1c8:	bf00      	nop
 800b1ca:	3750      	adds	r7, #80	; 0x50
 800b1cc:	46bd      	mov	sp, r7
 800b1ce:	bd80      	pop	{r7, pc}
 800b1d0:	40023800 	.word	0x40023800
 800b1d4:	40007000 	.word	0x40007000

0800b1d8 <_ZL12MX_ADC1_Initv>:




static void MX_ADC1_Init(void)
{
 800b1d8:	b580      	push	{r7, lr}
 800b1da:	b084      	sub	sp, #16
 800b1dc:	af00      	add	r7, sp, #0

/* USER CODE BEGIN ADC1_Init 0 */

/* USER CODE END ADC1_Init 0 */

ADC_ChannelConfTypeDef sConfig = {0};
 800b1de:	463b      	mov	r3, r7
 800b1e0:	2200      	movs	r2, #0
 800b1e2:	601a      	str	r2, [r3, #0]
 800b1e4:	605a      	str	r2, [r3, #4]
 800b1e6:	609a      	str	r2, [r3, #8]
 800b1e8:	60da      	str	r2, [r3, #12]

/* USER CODE END ADC1_Init 1 */

/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
*/
hadc1.Instance = ADC1;
 800b1ea:	4b28      	ldr	r3, [pc, #160]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b1ec:	4a28      	ldr	r2, [pc, #160]	; (800b290 <_ZL12MX_ADC1_Initv+0xb8>)
 800b1ee:	601a      	str	r2, [r3, #0]
hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800b1f0:	4b26      	ldr	r3, [pc, #152]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b1f2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800b1f6:	605a      	str	r2, [r3, #4]
hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800b1f8:	4b24      	ldr	r3, [pc, #144]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b1fa:	2200      	movs	r2, #0
 800b1fc:	609a      	str	r2, [r3, #8]
hadc1.Init.ScanConvMode = ENABLE;
 800b1fe:	4b23      	ldr	r3, [pc, #140]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b200:	2201      	movs	r2, #1
 800b202:	611a      	str	r2, [r3, #16]
hadc1.Init.ContinuousConvMode = DISABLE;
 800b204:	4b21      	ldr	r3, [pc, #132]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b206:	2200      	movs	r2, #0
 800b208:	761a      	strb	r2, [r3, #24]
hadc1.Init.DiscontinuousConvMode = ENABLE;
 800b20a:	4b20      	ldr	r3, [pc, #128]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b20c:	2201      	movs	r2, #1
 800b20e:	f883 2020 	strb.w	r2, [r3, #32]
hadc1.Init.NbrOfDiscConversion = 1;
 800b212:	4b1e      	ldr	r3, [pc, #120]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b214:	2201      	movs	r2, #1
 800b216:	625a      	str	r2, [r3, #36]	; 0x24
hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800b218:	4b1c      	ldr	r3, [pc, #112]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b21a:	2200      	movs	r2, #0
 800b21c:	62da      	str	r2, [r3, #44]	; 0x2c
hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800b21e:	4b1b      	ldr	r3, [pc, #108]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b220:	4a1c      	ldr	r2, [pc, #112]	; (800b294 <_ZL12MX_ADC1_Initv+0xbc>)
 800b222:	629a      	str	r2, [r3, #40]	; 0x28
hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800b224:	4b19      	ldr	r3, [pc, #100]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b226:	2200      	movs	r2, #0
 800b228:	60da      	str	r2, [r3, #12]
hadc1.Init.NbrOfConversion = 1;
 800b22a:	4b18      	ldr	r3, [pc, #96]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b22c:	2201      	movs	r2, #1
 800b22e:	61da      	str	r2, [r3, #28]
hadc1.Init.DMAContinuousRequests = DISABLE;
 800b230:	4b16      	ldr	r3, [pc, #88]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b232:	2200      	movs	r2, #0
 800b234:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800b238:	4b14      	ldr	r3, [pc, #80]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b23a:	2201      	movs	r2, #1
 800b23c:	615a      	str	r2, [r3, #20]
if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800b23e:	4813      	ldr	r0, [pc, #76]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b240:	f001 fda8 	bl	800cd94 <HAL_ADC_Init>
 800b244:	4603      	mov	r3, r0
 800b246:	2b00      	cmp	r3, #0
 800b248:	bf14      	ite	ne
 800b24a:	2301      	movne	r3, #1
 800b24c:	2300      	moveq	r3, #0
 800b24e:	b2db      	uxtb	r3, r3
 800b250:	2b00      	cmp	r3, #0
 800b252:	d001      	beq.n	800b258 <_ZL12MX_ADC1_Initv+0x80>
{
  Error_Handler();
 800b254:	f000 fa24 	bl	800b6a0 <Error_Handler>
}

/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
*/
sConfig.Channel = ADC_CHANNEL_0;
 800b258:	2300      	movs	r3, #0
 800b25a:	603b      	str	r3, [r7, #0]
sConfig.Rank = 1;
 800b25c:	2301      	movs	r3, #1
 800b25e:	607b      	str	r3, [r7, #4]
sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 800b260:	2301      	movs	r3, #1
 800b262:	60bb      	str	r3, [r7, #8]
if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800b264:	463b      	mov	r3, r7
 800b266:	4619      	mov	r1, r3
 800b268:	4808      	ldr	r0, [pc, #32]	; (800b28c <_ZL12MX_ADC1_Initv+0xb4>)
 800b26a:	f002 f8a3 	bl	800d3b4 <HAL_ADC_ConfigChannel>
 800b26e:	4603      	mov	r3, r0
 800b270:	2b00      	cmp	r3, #0
 800b272:	bf14      	ite	ne
 800b274:	2301      	movne	r3, #1
 800b276:	2300      	moveq	r3, #0
 800b278:	b2db      	uxtb	r3, r3
 800b27a:	2b00      	cmp	r3, #0
 800b27c:	d001      	beq.n	800b282 <_ZL12MX_ADC1_Initv+0xaa>
{
  Error_Handler();
 800b27e:	f000 fa0f 	bl	800b6a0 <Error_Handler>
}
/* USER CODE BEGIN ADC1_Init 2 */

/* USER CODE END ADC1_Init 2 */

}
 800b282:	bf00      	nop
 800b284:	3710      	adds	r7, #16
 800b286:	46bd      	mov	sp, r7
 800b288:	bd80      	pop	{r7, pc}
 800b28a:	bf00      	nop
 800b28c:	200012dc 	.word	0x200012dc
 800b290:	40012000 	.word	0x40012000
 800b294:	0f000001 	.word	0x0f000001

0800b298 <_ZL12MX_SPI2_Initv>:




static void MX_SPI2_Init(void)
{
 800b298:	b580      	push	{r7, lr}
 800b29a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 800b29c:	4b1a      	ldr	r3, [pc, #104]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b29e:	4a1b      	ldr	r2, [pc, #108]	; (800b30c <_ZL12MX_SPI2_Initv+0x74>)
 800b2a0:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800b2a2:	4b19      	ldr	r3, [pc, #100]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2a4:	f44f 7282 	mov.w	r2, #260	; 0x104
 800b2a8:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800b2aa:	4b17      	ldr	r3, [pc, #92]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2ac:	2200      	movs	r2, #0
 800b2ae:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 800b2b0:	4b15      	ldr	r3, [pc, #84]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2b2:	2200      	movs	r2, #0
 800b2b4:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 800b2b6:	4b14      	ldr	r3, [pc, #80]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2b8:	2200      	movs	r2, #0
 800b2ba:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 800b2bc:	4b12      	ldr	r3, [pc, #72]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2be:	2200      	movs	r2, #0
 800b2c0:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800b2c2:	4b11      	ldr	r3, [pc, #68]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 800b2c8:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800b2ca:	4b0f      	ldr	r3, [pc, #60]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2cc:	2200      	movs	r2, #0
 800b2ce:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800b2d0:	4b0d      	ldr	r3, [pc, #52]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2d2:	2200      	movs	r2, #0
 800b2d4:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800b2d6:	4b0c      	ldr	r3, [pc, #48]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2d8:	2200      	movs	r2, #0
 800b2da:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800b2dc:	4b0a      	ldr	r3, [pc, #40]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2de:	2200      	movs	r2, #0
 800b2e0:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 800b2e2:	4b09      	ldr	r3, [pc, #36]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2e4:	220a      	movs	r2, #10
 800b2e6:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 800b2e8:	4807      	ldr	r0, [pc, #28]	; (800b308 <_ZL12MX_SPI2_Initv+0x70>)
 800b2ea:	f003 fa88 	bl	800e7fe <HAL_SPI_Init>
 800b2ee:	4603      	mov	r3, r0
 800b2f0:	2b00      	cmp	r3, #0
 800b2f2:	bf14      	ite	ne
 800b2f4:	2301      	movne	r3, #1
 800b2f6:	2300      	moveq	r3, #0
 800b2f8:	b2db      	uxtb	r3, r3
 800b2fa:	2b00      	cmp	r3, #0
 800b2fc:	d001      	beq.n	800b302 <_ZL12MX_SPI2_Initv+0x6a>
  {
    Error_Handler();
 800b2fe:	f000 f9cf 	bl	800b6a0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 800b302:	bf00      	nop
 800b304:	bd80      	pop	{r7, pc}
 800b306:	bf00      	nop
 800b308:	2000136c 	.word	0x2000136c
 800b30c:	40003800 	.word	0x40003800

0800b310 <_ZL12MX_TIM1_Initv>:


static void MX_TIM1_Init(void)
{
 800b310:	b580      	push	{r7, lr}
 800b312:	b086      	sub	sp, #24
 800b314:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800b316:	f107 0308 	add.w	r3, r7, #8
 800b31a:	2200      	movs	r2, #0
 800b31c:	601a      	str	r2, [r3, #0]
 800b31e:	605a      	str	r2, [r3, #4]
 800b320:	609a      	str	r2, [r3, #8]
 800b322:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800b324:	463b      	mov	r3, r7
 800b326:	2200      	movs	r2, #0
 800b328:	601a      	str	r2, [r3, #0]
 800b32a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 800b32c:	4b26      	ldr	r3, [pc, #152]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b32e:	4a27      	ldr	r2, [pc, #156]	; (800b3cc <_ZL12MX_TIM1_Initv+0xbc>)
 800b330:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 8400;
 800b332:	4b25      	ldr	r3, [pc, #148]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b334:	f242 02d0 	movw	r2, #8400	; 0x20d0
 800b338:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800b33a:	4b23      	ldr	r3, [pc, #140]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b33c:	2200      	movs	r2, #0
 800b33e:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 19999;
 800b340:	4b21      	ldr	r3, [pc, #132]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b342:	f644 621f 	movw	r2, #19999	; 0x4e1f
 800b346:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800b348:	4b1f      	ldr	r3, [pc, #124]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b34a:	2200      	movs	r2, #0
 800b34c:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800b34e:	4b1e      	ldr	r3, [pc, #120]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b350:	2200      	movs	r2, #0
 800b352:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800b354:	4b1c      	ldr	r3, [pc, #112]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b356:	2280      	movs	r2, #128	; 0x80
 800b358:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800b35a:	481b      	ldr	r0, [pc, #108]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b35c:	f004 f826 	bl	800f3ac <HAL_TIM_Base_Init>
 800b360:	4603      	mov	r3, r0
 800b362:	2b00      	cmp	r3, #0
 800b364:	bf14      	ite	ne
 800b366:	2301      	movne	r3, #1
 800b368:	2300      	moveq	r3, #0
 800b36a:	b2db      	uxtb	r3, r3
 800b36c:	2b00      	cmp	r3, #0
 800b36e:	d001      	beq.n	800b374 <_ZL12MX_TIM1_Initv+0x64>
  {
    Error_Handler();
 800b370:	f000 f996 	bl	800b6a0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800b374:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800b378:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800b37a:	f107 0308 	add.w	r3, r7, #8
 800b37e:	4619      	mov	r1, r3
 800b380:	4811      	ldr	r0, [pc, #68]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b382:	f004 f9c3 	bl	800f70c <HAL_TIM_ConfigClockSource>
 800b386:	4603      	mov	r3, r0
 800b388:	2b00      	cmp	r3, #0
 800b38a:	bf14      	ite	ne
 800b38c:	2301      	movne	r3, #1
 800b38e:	2300      	moveq	r3, #0
 800b390:	b2db      	uxtb	r3, r3
 800b392:	2b00      	cmp	r3, #0
 800b394:	d001      	beq.n	800b39a <_ZL12MX_TIM1_Initv+0x8a>
  {
    Error_Handler();
 800b396:	f000 f983 	bl	800b6a0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800b39a:	2300      	movs	r3, #0
 800b39c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800b39e:	2300      	movs	r3, #0
 800b3a0:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800b3a2:	463b      	mov	r3, r7
 800b3a4:	4619      	mov	r1, r3
 800b3a6:	4808      	ldr	r0, [pc, #32]	; (800b3c8 <_ZL12MX_TIM1_Initv+0xb8>)
 800b3a8:	f004 fbe6 	bl	800fb78 <HAL_TIMEx_MasterConfigSynchronization>
 800b3ac:	4603      	mov	r3, r0
 800b3ae:	2b00      	cmp	r3, #0
 800b3b0:	bf14      	ite	ne
 800b3b2:	2301      	movne	r3, #1
 800b3b4:	2300      	moveq	r3, #0
 800b3b6:	b2db      	uxtb	r3, r3
 800b3b8:	2b00      	cmp	r3, #0
 800b3ba:	d001      	beq.n	800b3c0 <_ZL12MX_TIM1_Initv+0xb0>
  {
    Error_Handler();
 800b3bc:	f000 f970 	bl	800b6a0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 800b3c0:	bf00      	nop
 800b3c2:	3718      	adds	r7, #24
 800b3c4:	46bd      	mov	sp, r7
 800b3c6:	bd80      	pop	{r7, pc}
 800b3c8:	20001324 	.word	0x20001324
 800b3cc:	40010000 	.word	0x40010000

0800b3d0 <_ZL19MX_USART1_UART_Initv>:



static void MX_USART1_UART_Init(void)
{
 800b3d0:	b580      	push	{r7, lr}
 800b3d2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800b3d4:	4b13      	ldr	r3, [pc, #76]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b3d6:	4a14      	ldr	r2, [pc, #80]	; (800b428 <_ZL19MX_USART1_UART_Initv+0x58>)
 800b3d8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800b3da:	4b12      	ldr	r3, [pc, #72]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b3dc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800b3e0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800b3e2:	4b10      	ldr	r3, [pc, #64]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b3e4:	2200      	movs	r2, #0
 800b3e6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800b3e8:	4b0e      	ldr	r3, [pc, #56]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b3ea:	2200      	movs	r2, #0
 800b3ec:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800b3ee:	4b0d      	ldr	r3, [pc, #52]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b3f0:	2200      	movs	r2, #0
 800b3f2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800b3f4:	4b0b      	ldr	r3, [pc, #44]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b3f6:	220c      	movs	r2, #12
 800b3f8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800b3fa:	4b0a      	ldr	r3, [pc, #40]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b3fc:	2200      	movs	r2, #0
 800b3fe:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800b400:	4b08      	ldr	r3, [pc, #32]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b402:	2200      	movs	r2, #0
 800b404:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800b406:	4807      	ldr	r0, [pc, #28]	; (800b424 <_ZL19MX_USART1_UART_Initv+0x54>)
 800b408:	f004 fc46 	bl	800fc98 <HAL_UART_Init>
 800b40c:	4603      	mov	r3, r0
 800b40e:	2b00      	cmp	r3, #0
 800b410:	bf14      	ite	ne
 800b412:	2301      	movne	r3, #1
 800b414:	2300      	moveq	r3, #0
 800b416:	b2db      	uxtb	r3, r3
 800b418:	2b00      	cmp	r3, #0
 800b41a:	d001      	beq.n	800b420 <_ZL19MX_USART1_UART_Initv+0x50>
  {
    Error_Handler();
 800b41c:	f000 f940 	bl	800b6a0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800b420:	bf00      	nop
 800b422:	bd80      	pop	{r7, pc}
 800b424:	200013c4 	.word	0x200013c4
 800b428:	40011000 	.word	0x40011000

0800b42c <_ZL12MX_GPIO_Initv>:


static void MX_GPIO_Init(void)
{
 800b42c:	b580      	push	{r7, lr}
 800b42e:	b08c      	sub	sp, #48	; 0x30
 800b430:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800b432:	f107 031c 	add.w	r3, r7, #28
 800b436:	2200      	movs	r2, #0
 800b438:	601a      	str	r2, [r3, #0]
 800b43a:	605a      	str	r2, [r3, #4]
 800b43c:	609a      	str	r2, [r3, #8]
 800b43e:	60da      	str	r2, [r3, #12]
 800b440:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800b442:	2300      	movs	r3, #0
 800b444:	61bb      	str	r3, [r7, #24]
 800b446:	4b71      	ldr	r3, [pc, #452]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b44a:	4a70      	ldr	r2, [pc, #448]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b44c:	f043 0310 	orr.w	r3, r3, #16
 800b450:	6313      	str	r3, [r2, #48]	; 0x30
 800b452:	4b6e      	ldr	r3, [pc, #440]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b456:	f003 0310 	and.w	r3, r3, #16
 800b45a:	61bb      	str	r3, [r7, #24]
 800b45c:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800b45e:	2300      	movs	r3, #0
 800b460:	617b      	str	r3, [r7, #20]
 800b462:	4b6a      	ldr	r3, [pc, #424]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b464:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b466:	4a69      	ldr	r2, [pc, #420]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b468:	f043 0304 	orr.w	r3, r3, #4
 800b46c:	6313      	str	r3, [r2, #48]	; 0x30
 800b46e:	4b67      	ldr	r3, [pc, #412]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b470:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b472:	f003 0304 	and.w	r3, r3, #4
 800b476:	617b      	str	r3, [r7, #20]
 800b478:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800b47a:	2300      	movs	r3, #0
 800b47c:	613b      	str	r3, [r7, #16]
 800b47e:	4b63      	ldr	r3, [pc, #396]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b480:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b482:	4a62      	ldr	r2, [pc, #392]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b484:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800b488:	6313      	str	r3, [r2, #48]	; 0x30
 800b48a:	4b60      	ldr	r3, [pc, #384]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b48c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b48e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b492:	613b      	str	r3, [r7, #16]
 800b494:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800b496:	2300      	movs	r3, #0
 800b498:	60fb      	str	r3, [r7, #12]
 800b49a:	4b5c      	ldr	r3, [pc, #368]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b49c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b49e:	4a5b      	ldr	r2, [pc, #364]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b4a0:	f043 0301 	orr.w	r3, r3, #1
 800b4a4:	6313      	str	r3, [r2, #48]	; 0x30
 800b4a6:	4b59      	ldr	r3, [pc, #356]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b4a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4aa:	f003 0301 	and.w	r3, r3, #1
 800b4ae:	60fb      	str	r3, [r7, #12]
 800b4b0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800b4b2:	2300      	movs	r3, #0
 800b4b4:	60bb      	str	r3, [r7, #8]
 800b4b6:	4b55      	ldr	r3, [pc, #340]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b4b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4ba:	4a54      	ldr	r2, [pc, #336]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b4bc:	f043 0302 	orr.w	r3, r3, #2
 800b4c0:	6313      	str	r3, [r2, #48]	; 0x30
 800b4c2:	4b52      	ldr	r3, [pc, #328]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b4c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4c6:	f003 0302 	and.w	r3, r3, #2
 800b4ca:	60bb      	str	r3, [r7, #8]
 800b4cc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800b4ce:	2300      	movs	r3, #0
 800b4d0:	607b      	str	r3, [r7, #4]
 800b4d2:	4b4e      	ldr	r3, [pc, #312]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b4d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4d6:	4a4d      	ldr	r2, [pc, #308]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b4d8:	f043 0308 	orr.w	r3, r3, #8
 800b4dc:	6313      	str	r3, [r2, #48]	; 0x30
 800b4de:	4b4b      	ldr	r3, [pc, #300]	; (800b60c <_ZL12MX_GPIO_Initv+0x1e0>)
 800b4e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4e2:	f003 0308 	and.w	r3, r3, #8
 800b4e6:	607b      	str	r3, [r7, #4]
 800b4e8:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, MUX1_Pin|MUX2_Pin|MUX3_Pin|switch1_Pin
 800b4ea:	2200      	movs	r2, #0
 800b4ec:	f24f 0172 	movw	r1, #61554	; 0xf072
 800b4f0:	4847      	ldr	r0, [pc, #284]	; (800b610 <_ZL12MX_GPIO_Initv+0x1e4>)
 800b4f2:	f002 fcdf 	bl	800deb4 <HAL_GPIO_WritePin>
                          |switch2_Pin|switch3_Pin|switch4_Pin|sound_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, switch5_Pin|switch6_Pin|switch7_Pin|switch8_Pin, GPIO_PIN_RESET);
 800b4f6:	2200      	movs	r2, #0
 800b4f8:	21f0      	movs	r1, #240	; 0xf0
 800b4fa:	4846      	ldr	r0, [pc, #280]	; (800b614 <_ZL12MX_GPIO_Initv+0x1e8>)
 800b4fc:	f002 fcda 	bl	800deb4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(W5500_RESET_GPIO_Port, W5500_RESET_Pin, GPIO_PIN_RESET);
 800b500:	2200      	movs	r2, #0
 800b502:	2120      	movs	r1, #32
 800b504:	4844      	ldr	r0, [pc, #272]	; (800b618 <_ZL12MX_GPIO_Initv+0x1ec>)
 800b506:	f002 fcd5 	bl	800deb4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(W5500_CS_GPIO_Port, W5500_CS_Pin, GPIO_PIN_RESET);
 800b50a:	2200      	movs	r2, #0
 800b50c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800b510:	4842      	ldr	r0, [pc, #264]	; (800b61c <_ZL12MX_GPIO_Initv+0x1f0>)
 800b512:	f002 fccf 	bl	800deb4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : MUX1_Pin MUX2_Pin MUX3_Pin switch1_Pin
                           switch2_Pin switch3_Pin switch4_Pin sound_Pin */
  GPIO_InitStruct.Pin = MUX1_Pin|MUX2_Pin|MUX3_Pin|switch1_Pin
 800b516:	f24f 0372 	movw	r3, #61554	; 0xf072
 800b51a:	61fb      	str	r3, [r7, #28]
                          |switch2_Pin|switch3_Pin|switch4_Pin|sound_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800b51c:	2301      	movs	r3, #1
 800b51e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800b520:	2300      	movs	r3, #0
 800b522:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800b524:	2300      	movs	r3, #0
 800b526:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800b528:	f107 031c 	add.w	r3, r7, #28
 800b52c:	4619      	mov	r1, r3
 800b52e:	4838      	ldr	r0, [pc, #224]	; (800b610 <_ZL12MX_GPIO_Initv+0x1e4>)
 800b530:	f002 fb0c 	bl	800db4c <HAL_GPIO_Init>

  /*Configure GPIO pins : DI1_Pin DI2_Pin DI3_Pin DI4_Pin
                           DI9_Pin DI10_Pin DI11_Pin DI12_Pin */
  GPIO_InitStruct.Pin = DI1_Pin|DI2_Pin|DI3_Pin|DI4_Pin
 800b534:	f240 33cf 	movw	r3, #975	; 0x3cf
 800b538:	61fb      	str	r3, [r7, #28]
                          |DI9_Pin|DI10_Pin|DI11_Pin|DI12_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800b53a:	2300      	movs	r3, #0
 800b53c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800b53e:	2302      	movs	r3, #2
 800b540:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800b542:	f107 031c 	add.w	r3, r7, #28
 800b546:	4619      	mov	r1, r3
 800b548:	4833      	ldr	r0, [pc, #204]	; (800b618 <_ZL12MX_GPIO_Initv+0x1ec>)
 800b54a:	f002 faff 	bl	800db4c <HAL_GPIO_Init>

  /*Configure GPIO pins : switch5_Pin switch6_Pin switch7_Pin switch8_Pin */
  GPIO_InitStruct.Pin = switch5_Pin|switch6_Pin|switch7_Pin|switch8_Pin;
 800b54e:	23f0      	movs	r3, #240	; 0xf0
 800b550:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800b552:	2301      	movs	r3, #1
 800b554:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800b556:	2300      	movs	r3, #0
 800b558:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800b55a:	2300      	movs	r3, #0
 800b55c:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800b55e:	f107 031c 	add.w	r3, r7, #28
 800b562:	4619      	mov	r1, r3
 800b564:	482b      	ldr	r0, [pc, #172]	; (800b614 <_ZL12MX_GPIO_Initv+0x1e8>)
 800b566:	f002 faf1 	bl	800db4c <HAL_GPIO_Init>

  /*Configure GPIO pin : W5500_RESET_Pin */
  GPIO_InitStruct.Pin = W5500_RESET_Pin;
 800b56a:	2320      	movs	r3, #32
 800b56c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800b56e:	2301      	movs	r3, #1
 800b570:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800b572:	2300      	movs	r3, #0
 800b574:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800b576:	2300      	movs	r3, #0
 800b578:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(W5500_RESET_GPIO_Port, &GPIO_InitStruct);
 800b57a:	f107 031c 	add.w	r3, r7, #28
 800b57e:	4619      	mov	r1, r3
 800b580:	4825      	ldr	r0, [pc, #148]	; (800b618 <_ZL12MX_GPIO_Initv+0x1ec>)
 800b582:	f002 fae3 	bl	800db4c <HAL_GPIO_Init>

  /*Configure GPIO pin : NetworkStatus_Pin */
  GPIO_InitStruct.Pin = NetworkStatus_Pin;
 800b586:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b58a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800b58c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800b590:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800b592:	2300      	movs	r3, #0
 800b594:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(NetworkStatus_GPIO_Port, &GPIO_InitStruct);
 800b596:	f107 031c 	add.w	r3, r7, #28
 800b59a:	4619      	mov	r1, r3
 800b59c:	481c      	ldr	r0, [pc, #112]	; (800b610 <_ZL12MX_GPIO_Initv+0x1e4>)
 800b59e:	f002 fad5 	bl	800db4c <HAL_GPIO_Init>

  /*Configure GPIO pin : W5500_CS_Pin */
  GPIO_InitStruct.Pin = W5500_CS_Pin;
 800b5a2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800b5a6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800b5a8:	2301      	movs	r3, #1
 800b5aa:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800b5ac:	2300      	movs	r3, #0
 800b5ae:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800b5b0:	2300      	movs	r3, #0
 800b5b2:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(W5500_CS_GPIO_Port, &GPIO_InitStruct);
 800b5b4:	f107 031c 	add.w	r3, r7, #28
 800b5b8:	4619      	mov	r1, r3
 800b5ba:	4818      	ldr	r0, [pc, #96]	; (800b61c <_ZL12MX_GPIO_Initv+0x1f0>)
 800b5bc:	f002 fac6 	bl	800db4c <HAL_GPIO_Init>

  /*Configure GPIO pins : DI5_Pin DI6_Pin DI7_Pin DI8_Pin */
  GPIO_InitStruct.Pin = DI5_Pin|DI6_Pin|DI7_Pin|DI8_Pin;
 800b5c0:	f44f 531c 	mov.w	r3, #9984	; 0x2700
 800b5c4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800b5c6:	2300      	movs	r3, #0
 800b5c8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800b5ca:	2302      	movs	r3, #2
 800b5cc:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800b5ce:	f107 031c 	add.w	r3, r7, #28
 800b5d2:	4619      	mov	r1, r3
 800b5d4:	4812      	ldr	r0, [pc, #72]	; (800b620 <_ZL12MX_GPIO_Initv+0x1f4>)
 800b5d6:	f002 fab9 	bl	800db4c <HAL_GPIO_Init>

  /*Configure GPIO pins : DI13_Pin DI14_Pin DI15_Pin DI16_Pin */
  GPIO_InitStruct.Pin = DI13_Pin|DI14_Pin|DI15_Pin|DI16_Pin;
 800b5da:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 800b5de:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800b5e0:	2300      	movs	r3, #0
 800b5e2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800b5e4:	2302      	movs	r3, #2
 800b5e6:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800b5e8:	f107 031c 	add.w	r3, r7, #28
 800b5ec:	4619      	mov	r1, r3
 800b5ee:	4809      	ldr	r0, [pc, #36]	; (800b614 <_ZL12MX_GPIO_Initv+0x1e8>)
 800b5f0:	f002 faac 	bl	800db4c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800b5f4:	2200      	movs	r2, #0
 800b5f6:	2100      	movs	r1, #0
 800b5f8:	2028      	movs	r0, #40	; 0x28
 800b5fa:	f002 f9de 	bl	800d9ba <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800b5fe:	2028      	movs	r0, #40	; 0x28
 800b600:	f002 f9f7 	bl	800d9f2 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800b604:	bf00      	nop
 800b606:	3730      	adds	r7, #48	; 0x30
 800b608:	46bd      	mov	sp, r7
 800b60a:	bd80      	pop	{r7, pc}
 800b60c:	40023800 	.word	0x40023800
 800b610:	40021000 	.word	0x40021000
 800b614:	40020000 	.word	0x40020000
 800b618:	40020800 	.word	0x40020800
 800b61c:	40020400 	.word	0x40020400
 800b620:	40020c00 	.word	0x40020c00

0800b624 <HAL_TIM_PeriodElapsedCallback>:


/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800b624:	b580      	push	{r7, lr}
 800b626:	b082      	sub	sp, #8
 800b628:	af00      	add	r7, sp, #0
 800b62a:	6078      	str	r0, [r7, #4]

    if (htim->Instance == TIM1)
 800b62c:	687b      	ldr	r3, [r7, #4]
 800b62e:	681b      	ldr	r3, [r3, #0]
 800b630:	4a08      	ldr	r2, [pc, #32]	; (800b654 <HAL_TIM_PeriodElapsedCallback+0x30>)
 800b632:	4293      	cmp	r3, r2
 800b634:	d10a      	bne.n	800b64c <HAL_TIM_PeriodElapsedCallback+0x28>
    {
    	utils.print("TimeVal: %d \r\n", timeValue);
 800b636:	4b08      	ldr	r3, [pc, #32]	; (800b658 <HAL_TIM_PeriodElapsedCallback+0x34>)
 800b638:	681b      	ldr	r3, [r3, #0]
 800b63a:	4619      	mov	r1, r3
 800b63c:	4807      	ldr	r0, [pc, #28]	; (800b65c <HAL_TIM_PeriodElapsedCallback+0x38>)
 800b63e:	f000 fecd 	bl	800c3dc <_ZN5Utils5printEPKcz>
    	timeValue++;
 800b642:	4b05      	ldr	r3, [pc, #20]	; (800b658 <HAL_TIM_PeriodElapsedCallback+0x34>)
 800b644:	681b      	ldr	r3, [r3, #0]
 800b646:	3301      	adds	r3, #1
 800b648:	4a03      	ldr	r2, [pc, #12]	; (800b658 <HAL_TIM_PeriodElapsedCallback+0x34>)
 800b64a:	6013      	str	r3, [r2, #0]
    }
}
 800b64c:	bf00      	nop
 800b64e:	3708      	adds	r7, #8
 800b650:	46bd      	mov	sp, r7
 800b652:	bd80      	pop	{r7, pc}
 800b654:	40010000 	.word	0x40010000
 800b658:	20001f84 	.word	0x20001f84
 800b65c:	08016494 	.word	0x08016494

0800b660 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 800b660:	b480      	push	{r7}
 800b662:	b083      	sub	sp, #12
 800b664:	af00      	add	r7, sp, #0
 800b666:	4603      	mov	r3, r0
 800b668:	80fb      	strh	r3, [r7, #6]
    if (GPIO_Pin == GPIO_PIN_11) {
    //  UART_Printf("Internet connection lost \r\n");
    }
}
 800b66a:	bf00      	nop
 800b66c:	370c      	adds	r7, #12
 800b66e:	46bd      	mov	sp, r7
 800b670:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b674:	4770      	bx	lr
	...

0800b678 <HAL_UART_RxCpltCallback>:


void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 800b678:	b580      	push	{r7, lr}
 800b67a:	b082      	sub	sp, #8
 800b67c:	af00      	add	r7, sp, #0
 800b67e:	6078      	str	r0, [r7, #4]
    if (huart->Instance == USART1) {
 800b680:	687b      	ldr	r3, [r7, #4]
 800b682:	681b      	ldr	r3, [r3, #0]
 800b684:	4a04      	ldr	r2, [pc, #16]	; (800b698 <HAL_UART_RxCpltCallback+0x20>)
 800b686:	4293      	cmp	r3, r2
 800b688:	d102      	bne.n	800b690 <HAL_UART_RxCpltCallback+0x18>
      //utils.print("Interrupt has been recieved! \r\n");
       uartHandler.onReceive();
 800b68a:	4804      	ldr	r0, [pc, #16]	; (800b69c <HAL_UART_RxCpltCallback+0x24>)
 800b68c:	f7fd fab9 	bl	8008c02 <_ZN11UARTHandler9onReceiveEv>
    }
}
 800b690:	bf00      	nop
 800b692:	3708      	adds	r7, #8
 800b694:	46bd      	mov	sp, r7
 800b696:	bd80      	pop	{r7, pc}
 800b698:	40011000 	.word	0x40011000
 800b69c:	20001964 	.word	0x20001964

0800b6a0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800b6a0:	b480      	push	{r7}
 800b6a2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800b6a4:	b672      	cpsid	i
}
 800b6a6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800b6a8:	e7fe      	b.n	800b6a8 <Error_Handler+0x8>

0800b6aa <_ZN6ConfigD1Ev>:
}
constexpr size_t MAX_ANALOG_INPUTS = 8;
constexpr size_t MAX_DIGITAL_INPUTS = 16;
constexpr size_t MAX_DIGITAL_OUTPUTS = 8;

class Config {
 800b6aa:	b580      	push	{r7, lr}
 800b6ac:	b082      	sub	sp, #8
 800b6ae:	af00      	add	r7, sp, #0
 800b6b0:	6078      	str	r0, [r7, #4]
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800b6b8:	4618      	mov	r0, r3
 800b6ba:	f7fd fc38 	bl	8008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	f503 73ae 	add.w	r3, r3, #348	; 0x15c
 800b6c4:	4618      	mov	r0, r3
 800b6c6:	f7fd fc5d 	bl	8008f84 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj16EED1Ev>
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	339c      	adds	r3, #156	; 0x9c
 800b6ce:	4618      	mov	r0, r3
 800b6d0:	f7fd fc2d 	bl	8008f2e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj8EED1Ev>
 800b6d4:	687b      	ldr	r3, [r7, #4]
 800b6d6:	3380      	adds	r3, #128	; 0x80
 800b6d8:	4618      	mov	r0, r3
 800b6da:	f005 fc49 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	3368      	adds	r3, #104	; 0x68
 800b6e2:	4618      	mov	r0, r3
 800b6e4:	f005 fc44 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b6e8:	687b      	ldr	r3, [r7, #4]
 800b6ea:	3350      	adds	r3, #80	; 0x50
 800b6ec:	4618      	mov	r0, r3
 800b6ee:	f005 fc3f 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b6f2:	687b      	ldr	r3, [r7, #4]
 800b6f4:	3338      	adds	r3, #56	; 0x38
 800b6f6:	4618      	mov	r0, r3
 800b6f8:	f005 fc3a 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b6fc:	687b      	ldr	r3, [r7, #4]
 800b6fe:	3320      	adds	r3, #32
 800b700:	4618      	mov	r0, r3
 800b702:	f005 fc35 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	4618      	mov	r0, r3
 800b70a:	3708      	adds	r7, #8
 800b70c:	46bd      	mov	sp, r7
 800b70e:	bd80      	pop	{r7, pc}

0800b710 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 800b710:	b580      	push	{r7, lr}
 800b712:	b082      	sub	sp, #8
 800b714:	af00      	add	r7, sp, #0
 800b716:	6078      	str	r0, [r7, #4]
 800b718:	6039      	str	r1, [r7, #0]
 800b71a:	687b      	ldr	r3, [r7, #4]
 800b71c:	2b01      	cmp	r3, #1
 800b71e:	d11c      	bne.n	800b75a <_Z41__static_initialization_and_destruction_0ii+0x4a>
 800b720:	683b      	ldr	r3, [r7, #0]
 800b722:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b726:	4293      	cmp	r3, r2
 800b728:	d117      	bne.n	800b75a <_Z41__static_initialization_and_destruction_0ii+0x4a>
MuxSelect muxSelect;
 800b72a:	4819      	ldr	r0, [pc, #100]	; (800b790 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b72c:	f7fd f8a0 	bl	8008870 <_ZN9MuxSelectC1Ev>
Config config;
 800b730:	4818      	ldr	r0, [pc, #96]	; (800b794 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b732:	f7fd fc3e 	bl	8008fb2 <_ZN6ConfigC1Ev>
Utils utils;
 800b736:	4818      	ldr	r0, [pc, #96]	; (800b798 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800b738:	f000 fd56 	bl	800c1e8 <_ZN5UtilsC1Ev>
EthernetManager ethManager;
 800b73c:	4817      	ldr	r0, [pc, #92]	; (800b79c <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800b73e:	f7fc fdc5 	bl	80082cc <_ZN15EthernetManagerC1Ev>
MQTTConnection mqttClient;
 800b742:	4817      	ldr	r0, [pc, #92]	; (800b7a0 <_Z41__static_initialization_and_destruction_0ii+0x90>)
 800b744:	f000 f844 	bl	800b7d0 <_ZN14MQTTConnectionC1Ev>
UARTHandler uartHandler;
 800b748:	4816      	ldr	r0, [pc, #88]	; (800b7a4 <_Z41__static_initialization_and_destruction_0ii+0x94>)
 800b74a:	f7fd f9df 	bl	8008b0c <_ZN11UARTHandlerC1Ev>
static std::string statusJsonBuffer;
 800b74e:	4816      	ldr	r0, [pc, #88]	; (800b7a8 <_Z41__static_initialization_and_destruction_0ii+0x98>)
 800b750:	f005 fbf7 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
static std::string statusJsonUSARTBuffer;
 800b754:	4815      	ldr	r0, [pc, #84]	; (800b7ac <_Z41__static_initialization_and_destruction_0ii+0x9c>)
 800b756:	f005 fbf4 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800b75a:	687b      	ldr	r3, [r7, #4]
 800b75c:	2b00      	cmp	r3, #0
 800b75e:	d113      	bne.n	800b788 <_Z41__static_initialization_and_destruction_0ii+0x78>
 800b760:	683b      	ldr	r3, [r7, #0]
 800b762:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b766:	4293      	cmp	r3, r2
 800b768:	d10e      	bne.n	800b788 <_Z41__static_initialization_and_destruction_0ii+0x78>
 800b76a:	4810      	ldr	r0, [pc, #64]	; (800b7ac <_Z41__static_initialization_and_destruction_0ii+0x9c>)
 800b76c:	f005 fc00 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
static std::string statusJsonBuffer;
 800b770:	480d      	ldr	r0, [pc, #52]	; (800b7a8 <_Z41__static_initialization_and_destruction_0ii+0x98>)
 800b772:	f005 fbfd 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
MQTTConnection mqttClient;
 800b776:	480a      	ldr	r0, [pc, #40]	; (800b7a0 <_Z41__static_initialization_and_destruction_0ii+0x90>)
 800b778:	f000 f9a8 	bl	800bacc <_ZN14MQTTConnectionD1Ev>
EthernetManager ethManager;
 800b77c:	4807      	ldr	r0, [pc, #28]	; (800b79c <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800b77e:	f7fc fd9a 	bl	80082b6 <_ZN15EthernetManagerD1Ev>
Config config;
 800b782:	4804      	ldr	r0, [pc, #16]	; (800b794 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b784:	f7ff ff91 	bl	800b6aa <_ZN6ConfigD1Ev>
}
 800b788:	bf00      	nop
 800b78a:	3708      	adds	r7, #8
 800b78c:	46bd      	mov	sp, r7
 800b78e:	bd80      	pop	{r7, pc}
 800b790:	2000140c 	.word	0x2000140c
 800b794:	20001440 	.word	0x20001440
 800b798:	200017dc 	.word	0x200017dc
 800b79c:	200018e4 	.word	0x200018e4
 800b7a0:	200018ec 	.word	0x200018ec
 800b7a4:	20001964 	.word	0x20001964
 800b7a8:	20001f88 	.word	0x20001f88
 800b7ac:	20001fa0 	.word	0x20001fa0

0800b7b0 <_GLOBAL__sub_I_hadc1>:
 800b7b0:	b580      	push	{r7, lr}
 800b7b2:	af00      	add	r7, sp, #0
 800b7b4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b7b8:	2001      	movs	r0, #1
 800b7ba:	f7ff ffa9 	bl	800b710 <_Z41__static_initialization_and_destruction_0ii>
 800b7be:	bd80      	pop	{r7, pc}

0800b7c0 <_GLOBAL__sub_D_hadc1>:
 800b7c0:	b580      	push	{r7, lr}
 800b7c2:	af00      	add	r7, sp, #0
 800b7c4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b7c8:	2000      	movs	r0, #0
 800b7ca:	f7ff ffa1 	bl	800b710 <_Z41__static_initialization_and_destruction_0ii>
 800b7ce:	bd80      	pop	{r7, pc}

0800b7d0 <_ZN14MQTTConnectionC1Ev>:
uint8_t MQTTConnection::send_buffer[2048];
uint8_t MQTTConnection::recieve_buff[2048];
MQTTConnection* MQTTConnection::instance = nullptr;


MQTTConnection::MQTTConnection() {
 800b7d0:	b480      	push	{r7}
 800b7d2:	b083      	sub	sp, #12
 800b7d4:	af00      	add	r7, sp, #0
 800b7d6:	6078      	str	r0, [r7, #4]
 800b7d8:	687b      	ldr	r3, [r7, #4]
 800b7da:	2200      	movs	r2, #0
 800b7dc:	721a      	strb	r2, [r3, #8]

	MQTTConnection::instance = this;
 800b7de:	4a05      	ldr	r2, [pc, #20]	; (800b7f4 <_ZN14MQTTConnectionC1Ev+0x24>)
 800b7e0:	687b      	ldr	r3, [r7, #4]
 800b7e2:	6013      	str	r3, [r2, #0]

}
 800b7e4:	687b      	ldr	r3, [r7, #4]
 800b7e6:	4618      	mov	r0, r3
 800b7e8:	370c      	adds	r7, #12
 800b7ea:	46bd      	mov	sp, r7
 800b7ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7f0:	4770      	bx	lr
 800b7f2:	bf00      	nop
 800b7f4:	20002fb8 	.word	0x20002fb8

0800b7f8 <_ZN14MQTTConnection4initEP6ConfigP5Utils>:

void MQTTConnection::init(Config* configInstance, Utils * utilInstance) {
 800b7f8:	b480      	push	{r7}
 800b7fa:	b085      	sub	sp, #20
 800b7fc:	af00      	add	r7, sp, #0
 800b7fe:	60f8      	str	r0, [r7, #12]
 800b800:	60b9      	str	r1, [r7, #8]
 800b802:	607a      	str	r2, [r7, #4]
	    utils = utilInstance;
 800b804:	68fb      	ldr	r3, [r7, #12]
 800b806:	687a      	ldr	r2, [r7, #4]
 800b808:	601a      	str	r2, [r3, #0]
	    config = configInstance;
 800b80a:	68fb      	ldr	r3, [r7, #12]
 800b80c:	68ba      	ldr	r2, [r7, #8]
 800b80e:	605a      	str	r2, [r3, #4]
}
 800b810:	bf00      	nop
 800b812:	3714      	adds	r7, #20
 800b814:	46bd      	mov	sp, r7
 800b816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b81a:	4770      	bx	lr

0800b81c <_ZN14MQTTConnection7connectEv>:

bool MQTTConnection::connect() {
 800b81c:	b5b0      	push	{r4, r5, r7, lr}
 800b81e:	b0b6      	sub	sp, #216	; 0xd8
 800b820:	af04      	add	r7, sp, #16
 800b822:	6078      	str	r0, [r7, #4]
	NewNetwork(&network, 1);
 800b824:	687b      	ldr	r3, [r7, #4]
 800b826:	3368      	adds	r3, #104	; 0x68
 800b828:	2101      	movs	r1, #1
 800b82a:	4618      	mov	r0, r3
 800b82c:	f7fb fdd8 	bl	80073e0 <NewNetwork>
	ConnectNetwork(&network, config->getBrokerIP().data(), config->getBrokerPort());
 800b830:	687b      	ldr	r3, [r7, #4]
 800b832:	f103 0468 	add.w	r4, r3, #104	; 0x68
 800b836:	687b      	ldr	r3, [r7, #4]
 800b838:	685b      	ldr	r3, [r3, #4]
 800b83a:	4618      	mov	r0, r3
 800b83c:	f7fe ff23 	bl	800a686 <_ZNK6Config11getBrokerIPEv>
 800b840:	4603      	mov	r3, r0
 800b842:	667b      	str	r3, [r7, #100]	; 0x64
 800b844:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800b848:	4618      	mov	r0, r3
 800b84a:	f7fc fff9 	bl	8008840 <_ZNSt5arrayIhLj4EE4dataEv>
 800b84e:	4605      	mov	r5, r0
 800b850:	687b      	ldr	r3, [r7, #4]
 800b852:	685b      	ldr	r3, [r3, #4]
 800b854:	4618      	mov	r0, r3
 800b856:	f7fe ff30 	bl	800a6ba <_ZNK6Config13getBrokerPortEv>
 800b85a:	4603      	mov	r3, r0
 800b85c:	461a      	mov	r2, r3
 800b85e:	4629      	mov	r1, r5
 800b860:	4620      	mov	r0, r4
 800b862:	f7fb fe3a 	bl	80074da <ConnectNetwork>
    MQTTClientInit(&mqttClient, &network, 1000,send_buffer , sizeof(send_buffer), recieve_buff, sizeof(recieve_buff));
 800b866:	687b      	ldr	r3, [r7, #4]
 800b868:	f103 000c 	add.w	r0, r3, #12
 800b86c:	687b      	ldr	r3, [r7, #4]
 800b86e:	f103 0168 	add.w	r1, r3, #104	; 0x68
 800b872:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b876:	9302      	str	r3, [sp, #8]
 800b878:	4b48      	ldr	r3, [pc, #288]	; (800b99c <_ZN14MQTTConnection7connectEv+0x180>)
 800b87a:	9301      	str	r3, [sp, #4]
 800b87c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b880:	9300      	str	r3, [sp, #0]
 800b882:	4b47      	ldr	r3, [pc, #284]	; (800b9a0 <_ZN14MQTTConnection7connectEv+0x184>)
 800b884:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800b888:	f7fa ffec 	bl	8006864 <MQTTClientInit>
    // Set MQTT connection parameters
    MQTTPacket_connectData connectData = MQTTPacket_connectData_initializer;
 800b88c:	4a45      	ldr	r2, [pc, #276]	; (800b9a4 <_ZN14MQTTConnection7connectEv+0x188>)
 800b88e:	f107 030c 	add.w	r3, r7, #12
 800b892:	4611      	mov	r1, r2
 800b894:	2258      	movs	r2, #88	; 0x58
 800b896:	4618      	mov	r0, r3
 800b898:	f007 fbdb 	bl	8013052 <memcpy>
    connectData.MQTTVersion = 3;
 800b89c:	2303      	movs	r3, #3
 800b89e:	753b      	strb	r3, [r7, #20]
    connectData.clientID.cstring = strdup(config->getClientId().c_str());
 800b8a0:	687b      	ldr	r3, [r7, #4]
 800b8a2:	685a      	ldr	r2, [r3, #4]
 800b8a4:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800b8a8:	4611      	mov	r1, r2
 800b8aa:	4618      	mov	r0, r3
 800b8ac:	f7fe ffc4 	bl	800a838 <_ZNK6Config11getClientIdB5cxx11Ev>
 800b8b0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800b8b4:	4618      	mov	r0, r3
 800b8b6:	f005 fca1 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800b8ba:	4603      	mov	r3, r0
 800b8bc:	4618      	mov	r0, r3
 800b8be:	f007 fac5 	bl	8012e4c <strdup>
 800b8c2:	4603      	mov	r3, r0
 800b8c4:	61bb      	str	r3, [r7, #24]
 800b8c6:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800b8ca:	4618      	mov	r0, r3
 800b8cc:	f005 fb50 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    connectData.username.cstring = const_cast<char*>(config->getUsername().c_str());
 800b8d0:	687b      	ldr	r3, [r7, #4]
 800b8d2:	685a      	ldr	r2, [r3, #4]
 800b8d4:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800b8d8:	4611      	mov	r1, r2
 800b8da:	4618      	mov	r0, r3
 800b8dc:	f7fe ff9d 	bl	800a81a <_ZNK6Config11getUsernameB5cxx11Ev>
 800b8e0:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800b8e4:	4618      	mov	r0, r3
 800b8e6:	f005 fc89 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800b8ea:	4603      	mov	r3, r0
 800b8ec:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b8ee:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800b8f2:	4618      	mov	r0, r3
 800b8f4:	f005 fb3c 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    connectData.password.cstring = const_cast<char*>(config->getPassword().c_str());
 800b8f8:	687b      	ldr	r3, [r7, #4]
 800b8fa:	685a      	ldr	r2, [r3, #4]
 800b8fc:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800b900:	4611      	mov	r1, r2
 800b902:	4618      	mov	r0, r3
 800b904:	f7fe ffa7 	bl	800a856 <_ZNK6Config11getPasswordB5cxx11Ev>
 800b908:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800b90c:	4618      	mov	r0, r3
 800b90e:	f005 fc75 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800b912:	4603      	mov	r3, r0
 800b914:	65bb      	str	r3, [r7, #88]	; 0x58
 800b916:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800b91a:	4618      	mov	r0, r3
 800b91c:	f005 fb28 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    connectData.keepAliveInterval = config->getKeepAliveInterval();
 800b920:	687b      	ldr	r3, [r7, #4]
 800b922:	685b      	ldr	r3, [r3, #4]
 800b924:	4618      	mov	r0, r3
 800b926:	f7fe ff48 	bl	800a7ba <_ZNK6Config20getKeepAliveIntervalEv>
 800b92a:	4603      	mov	r3, r0
 800b92c:	84bb      	strh	r3, [r7, #36]	; 0x24
    connectData.cleansession = 1;
 800b92e:	2301      	movs	r3, #1
 800b930:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26

    // Attempt to connect to the MQTT broker
    if (MQTTConnect(&mqttClient, &connectData) != SUCCESS) {
 800b934:	687b      	ldr	r3, [r7, #4]
 800b936:	330c      	adds	r3, #12
 800b938:	f107 020c 	add.w	r2, r7, #12
 800b93c:	4611      	mov	r1, r2
 800b93e:	4618      	mov	r0, r3
 800b940:	f7fb faba 	bl	8006eb8 <MQTTConnect>
 800b944:	4603      	mov	r3, r0
 800b946:	2b00      	cmp	r3, #0
 800b948:	bf14      	ite	ne
 800b94a:	2301      	movne	r3, #1
 800b94c:	2300      	moveq	r3, #0
 800b94e:	b2db      	uxtb	r3, r3
 800b950:	2b00      	cmp	r3, #0
 800b952:	d004      	beq.n	800b95e <_ZN14MQTTConnection7connectEv+0x142>
        utils->print("Connection failed!\n");
 800b954:	4814      	ldr	r0, [pc, #80]	; (800b9a8 <_ZN14MQTTConnection7connectEv+0x18c>)
 800b956:	f000 fd41 	bl	800c3dc <_ZN5Utils5printEPKcz>
        return false;
 800b95a:	2300      	movs	r3, #0
 800b95c:	e01a      	b.n	800b994 <_ZN14MQTTConnection7connectEv+0x178>
    }
    subscribe(config->getTopicSubscribe());
 800b95e:	687b      	ldr	r3, [r7, #4]
 800b960:	685a      	ldr	r2, [r3, #4]
 800b962:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800b966:	4611      	mov	r1, r2
 800b968:	4618      	mov	r0, r3
 800b96a:	f7fe ff83 	bl	800a874 <_ZNK6Config17getTopicSubscribeB5cxx11Ev>
 800b96e:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800b972:	4619      	mov	r1, r3
 800b974:	6878      	ldr	r0, [r7, #4]
 800b976:	f000 f865 	bl	800ba44 <_ZN14MQTTConnection9subscribeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b97a:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800b97e:	4618      	mov	r0, r3
 800b980:	f005 faf6 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

    setIsConnected(true);
 800b984:	2101      	movs	r1, #1
 800b986:	6878      	ldr	r0, [r7, #4]
 800b988:	f000 f8d8 	bl	800bb3c <_ZN14MQTTConnection14setIsConnectedEb>

    utils->print("Successfully connected to MQTT broker.\r\n");
 800b98c:	4807      	ldr	r0, [pc, #28]	; (800b9ac <_ZN14MQTTConnection7connectEv+0x190>)
 800b98e:	f000 fd25 	bl	800c3dc <_ZN5Utils5printEPKcz>

    return true;
 800b992:	2301      	movs	r3, #1
}
 800b994:	4618      	mov	r0, r3
 800b996:	37c8      	adds	r7, #200	; 0xc8
 800b998:	46bd      	mov	sp, r7
 800b99a:	bdb0      	pop	{r4, r5, r7, pc}
 800b99c:	200027b8 	.word	0x200027b8
 800b9a0:	20001fb8 	.word	0x20001fb8
 800b9a4:	080164e4 	.word	0x080164e4
 800b9a8:	080164a4 	.word	0x080164a4
 800b9ac:	080164b8 	.word	0x080164b8

0800b9b0 <_ZN14MQTTConnection7publishERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

bool MQTTConnection::publish(const std::string& message) {
 800b9b0:	b590      	push	{r4, r7, lr}
 800b9b2:	b08f      	sub	sp, #60	; 0x3c
 800b9b4:	af00      	add	r7, sp, #0
 800b9b6:	6078      	str	r0, [r7, #4]
 800b9b8:	6039      	str	r1, [r7, #0]
    MQTTMessage mqttMessage;
    mqttMessage.qos = QOS0;
 800b9ba:	2300      	movs	r3, #0
 800b9bc:	733b      	strb	r3, [r7, #12]
    mqttMessage.retained = 0;
 800b9be:	2300      	movs	r3, #0
 800b9c0:	737b      	strb	r3, [r7, #13]
    mqttMessage.dup = 0;
 800b9c2:	2300      	movs	r3, #0
 800b9c4:	73bb      	strb	r3, [r7, #14]
    const char* cMessage = message.c_str();
 800b9c6:	6838      	ldr	r0, [r7, #0]
 800b9c8:	f005 fc18 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800b9cc:	6378      	str	r0, [r7, #52]	; 0x34
    mqttMessage.payload = (void*)cMessage;
 800b9ce:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b9d0:	617b      	str	r3, [r7, #20]
    mqttMessage.payloadlen = message.length();
 800b9d2:	6838      	ldr	r0, [r7, #0]
 800b9d4:	f005 fb05 	bl	8010fe2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 800b9d8:	4603      	mov	r3, r0
 800b9da:	61bb      	str	r3, [r7, #24]

    if (MQTTPublish(&mqttClient, config->getTopicPublish().c_str(), &mqttMessage) != SUCCESS) {
 800b9dc:	687b      	ldr	r3, [r7, #4]
 800b9de:	f103 040c 	add.w	r4, r3, #12
 800b9e2:	687b      	ldr	r3, [r7, #4]
 800b9e4:	685a      	ldr	r2, [r3, #4]
 800b9e6:	f107 031c 	add.w	r3, r7, #28
 800b9ea:	4611      	mov	r1, r2
 800b9ec:	4618      	mov	r0, r3
 800b9ee:	f7fe ff50 	bl	800a892 <_ZNK6Config15getTopicPublishB5cxx11Ev>
 800b9f2:	f107 031c 	add.w	r3, r7, #28
 800b9f6:	4618      	mov	r0, r3
 800b9f8:	f005 fc00 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800b9fc:	4601      	mov	r1, r0
 800b9fe:	f107 030c 	add.w	r3, r7, #12
 800ba02:	461a      	mov	r2, r3
 800ba04:	4620      	mov	r0, r4
 800ba06:	f7fb fb86 	bl	8007116 <MQTTPublish>
 800ba0a:	4603      	mov	r3, r0
 800ba0c:	2b00      	cmp	r3, #0
 800ba0e:	bf14      	ite	ne
 800ba10:	2301      	movne	r3, #1
 800ba12:	2300      	moveq	r3, #0
 800ba14:	b2dc      	uxtb	r4, r3
 800ba16:	f107 031c 	add.w	r3, r7, #28
 800ba1a:	4618      	mov	r0, r3
 800ba1c:	f005 faa8 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800ba20:	2c00      	cmp	r4, #0
 800ba22:	d008      	beq.n	800ba36 <_ZN14MQTTConnection7publishERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x86>
    	setIsConnected(false);
 800ba24:	2100      	movs	r1, #0
 800ba26:	6878      	ldr	r0, [r7, #4]
 800ba28:	f000 f888 	bl	800bb3c <_ZN14MQTTConnection14setIsConnectedEb>
         utils->print("Publish failed! \r\n");
 800ba2c:	4804      	ldr	r0, [pc, #16]	; (800ba40 <_ZN14MQTTConnection7publishERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 800ba2e:	f000 fcd5 	bl	800c3dc <_ZN5Utils5printEPKcz>
        return false;
 800ba32:	2300      	movs	r3, #0
 800ba34:	e000      	b.n	800ba38 <_ZN14MQTTConnection7publishERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x88>
    }

   //  utils->print("Message published successfully.\r\n");
    return true;
 800ba36:	2301      	movs	r3, #1
}
 800ba38:	4618      	mov	r0, r3
 800ba3a:	373c      	adds	r7, #60	; 0x3c
 800ba3c:	46bd      	mov	sp, r7
 800ba3e:	bd90      	pop	{r4, r7, pc}
 800ba40:	0801653c 	.word	0x0801653c

0800ba44 <_ZN14MQTTConnection9subscribeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void MQTTConnection::subscribe(std::string topic) {
 800ba44:	b580      	push	{r7, lr}
 800ba46:	b084      	sub	sp, #16
 800ba48:	af00      	add	r7, sp, #0
 800ba4a:	6078      	str	r0, [r7, #4]
 800ba4c:	6039      	str	r1, [r7, #0]
	const char* subTopic = strdup(topic.c_str());
 800ba4e:	6838      	ldr	r0, [r7, #0]
 800ba50:	f005 fbd4 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800ba54:	4603      	mov	r3, r0
 800ba56:	4618      	mov	r0, r3
 800ba58:	f007 f9f8 	bl	8012e4c <strdup>
 800ba5c:	4603      	mov	r3, r0
 800ba5e:	60fb      	str	r3, [r7, #12]
    if (MQTTSubscribe(&mqttClient, subTopic, QOS0,  handleMessage) != SUCCESS) {
 800ba60:	687b      	ldr	r3, [r7, #4]
 800ba62:	f103 000c 	add.w	r0, r3, #12
 800ba66:	4b0c      	ldr	r3, [pc, #48]	; (800ba98 <_ZN14MQTTConnection9subscribeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x54>)
 800ba68:	2200      	movs	r2, #0
 800ba6a:	68f9      	ldr	r1, [r7, #12]
 800ba6c:	f7fb faaa 	bl	8006fc4 <MQTTSubscribe>
 800ba70:	4603      	mov	r3, r0
 800ba72:	2b00      	cmp	r3, #0
 800ba74:	bf14      	ite	ne
 800ba76:	2301      	movne	r3, #1
 800ba78:	2300      	moveq	r3, #0
 800ba7a:	b2db      	uxtb	r3, r3
 800ba7c:	2b00      	cmp	r3, #0
 800ba7e:	d003      	beq.n	800ba88 <_ZN14MQTTConnection9subscribeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44>
       utils->print("Subscribe failed!\n");
 800ba80:	4806      	ldr	r0, [pc, #24]	; (800ba9c <_ZN14MQTTConnection9subscribeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x58>)
 800ba82:	f000 fcab 	bl	800c3dc <_ZN5Utils5printEPKcz>
    } else {
       utils->print("Subscribed to topic successfully.\r\n");
    }
}
 800ba86:	e002      	b.n	800ba8e <_ZN14MQTTConnection9subscribeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a>
       utils->print("Subscribed to topic successfully.\r\n");
 800ba88:	4805      	ldr	r0, [pc, #20]	; (800baa0 <_ZN14MQTTConnection9subscribeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5c>)
 800ba8a:	f000 fca7 	bl	800c3dc <_ZN5Utils5printEPKcz>
}
 800ba8e:	bf00      	nop
 800ba90:	3710      	adds	r7, #16
 800ba92:	46bd      	mov	sp, r7
 800ba94:	bd80      	pop	{r7, pc}
 800ba96:	bf00      	nop
 800ba98:	0800baa5 	.word	0x0800baa5
 800ba9c:	08016550 	.word	0x08016550
 800baa0:	08016564 	.word	0x08016564

0800baa4 <_ZN14MQTTConnection13handleMessageEP11MessageData>:

void MQTTConnection::handleMessage(MessageData* data) {
 800baa4:	b580      	push	{r7, lr}
 800baa6:	b082      	sub	sp, #8
 800baa8:	af00      	add	r7, sp, #0
 800baaa:	6078      	str	r0, [r7, #4]
//	print("Message has been arrived !!! \r\n");
	 if (MQTTConnection::instance) {
 800baac:	4b06      	ldr	r3, [pc, #24]	; (800bac8 <_ZN14MQTTConnection13handleMessageEP11MessageData+0x24>)
 800baae:	681b      	ldr	r3, [r3, #0]
 800bab0:	2b00      	cmp	r3, #0
 800bab2:	d005      	beq.n	800bac0 <_ZN14MQTTConnection13handleMessageEP11MessageData+0x1c>
           MQTTConnection::instance->handleIncomingMessage(data);
 800bab4:	4b04      	ldr	r3, [pc, #16]	; (800bac8 <_ZN14MQTTConnection13handleMessageEP11MessageData+0x24>)
 800bab6:	681b      	ldr	r3, [r3, #0]
 800bab8:	6879      	ldr	r1, [r7, #4]
 800baba:	4618      	mov	r0, r3
 800babc:	f000 f85a 	bl	800bb74 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData>
	  }
}
 800bac0:	bf00      	nop
 800bac2:	3708      	adds	r7, #8
 800bac4:	46bd      	mov	sp, r7
 800bac6:	bd80      	pop	{r7, pc}
 800bac8:	20002fb8 	.word	0x20002fb8

0800bacc <_ZN14MQTTConnectionD1Ev>:

MQTTConnection::~MQTTConnection() {
 800bacc:	b580      	push	{r7, lr}
 800bace:	b082      	sub	sp, #8
 800bad0:	af00      	add	r7, sp, #0
 800bad2:	6078      	str	r0, [r7, #4]
    // Clean up resources, if necessary
    disconnect();
 800bad4:	6878      	ldr	r0, [r7, #4]
 800bad6:	f000 f80f 	bl	800baf8 <_ZN14MQTTConnection10disconnectEv>
    if (MQTTConnection::instance == this) {
 800bada:	4b06      	ldr	r3, [pc, #24]	; (800baf4 <_ZN14MQTTConnectionD1Ev+0x28>)
 800badc:	681b      	ldr	r3, [r3, #0]
 800bade:	687a      	ldr	r2, [r7, #4]
 800bae0:	429a      	cmp	r2, r3
 800bae2:	d102      	bne.n	800baea <_ZN14MQTTConnectionD1Ev+0x1e>
    	MQTTConnection::instance = nullptr;
 800bae4:	4b03      	ldr	r3, [pc, #12]	; (800baf4 <_ZN14MQTTConnectionD1Ev+0x28>)
 800bae6:	2200      	movs	r2, #0
 800bae8:	601a      	str	r2, [r3, #0]
    }
}
 800baea:	687b      	ldr	r3, [r7, #4]
 800baec:	4618      	mov	r0, r3
 800baee:	3708      	adds	r7, #8
 800baf0:	46bd      	mov	sp, r7
 800baf2:	bd80      	pop	{r7, pc}
 800baf4:	20002fb8 	.word	0x20002fb8

0800baf8 <_ZN14MQTTConnection10disconnectEv>:

void MQTTConnection::disconnect() {
 800baf8:	b580      	push	{r7, lr}
 800bafa:	b082      	sub	sp, #8
 800bafc:	af00      	add	r7, sp, #0
 800bafe:	6078      	str	r0, [r7, #4]
    // Disconnect from the MQTT broker
    MQTTDisconnect(&mqttClient);
 800bb00:	687b      	ldr	r3, [r7, #4]
 800bb02:	330c      	adds	r3, #12
 800bb04:	4618      	mov	r0, r3
 800bb06:	f7fb fbc5 	bl	8007294 <MQTTDisconnect>
  //  utils->print("Disconnected from MQTT broker.\n");
}
 800bb0a:	bf00      	nop
 800bb0c:	3708      	adds	r7, #8
 800bb0e:	46bd      	mov	sp, r7
 800bb10:	bd80      	pop	{r7, pc}

0800bb12 <_ZN14MQTTConnection9mqttYieldEv>:

void MQTTConnection::mqttYield() {
 800bb12:	b580      	push	{r7, lr}
 800bb14:	b082      	sub	sp, #8
 800bb16:	af00      	add	r7, sp, #0
 800bb18:	6078      	str	r0, [r7, #4]
	 if (getIsConnected()) {
 800bb1a:	6878      	ldr	r0, [r7, #4]
 800bb1c:	f000 f81d 	bl	800bb5a <_ZN14MQTTConnection14getIsConnectedEv>
 800bb20:	4603      	mov	r3, r0
 800bb22:	2b00      	cmp	r3, #0
 800bb24:	d006      	beq.n	800bb34 <_ZN14MQTTConnection9mqttYieldEv+0x22>
		 MQTTYield(&mqttClient, 1000);
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	330c      	adds	r3, #12
 800bb2a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800bb2e:	4618      	mov	r0, r3
 800bb30:	f7fb f97e 	bl	8006e30 <MQTTYield>
	 }

}
 800bb34:	bf00      	nop
 800bb36:	3708      	adds	r7, #8
 800bb38:	46bd      	mov	sp, r7
 800bb3a:	bd80      	pop	{r7, pc}

0800bb3c <_ZN14MQTTConnection14setIsConnectedEb>:


void MQTTConnection::setIsConnected(bool val) {
 800bb3c:	b480      	push	{r7}
 800bb3e:	b083      	sub	sp, #12
 800bb40:	af00      	add	r7, sp, #0
 800bb42:	6078      	str	r0, [r7, #4]
 800bb44:	460b      	mov	r3, r1
 800bb46:	70fb      	strb	r3, [r7, #3]
	isConnected = val;
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	78fa      	ldrb	r2, [r7, #3]
 800bb4c:	721a      	strb	r2, [r3, #8]
}
 800bb4e:	bf00      	nop
 800bb50:	370c      	adds	r7, #12
 800bb52:	46bd      	mov	sp, r7
 800bb54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb58:	4770      	bx	lr

0800bb5a <_ZN14MQTTConnection14getIsConnectedEv>:

bool MQTTConnection::getIsConnected(){
 800bb5a:	b480      	push	{r7}
 800bb5c:	b083      	sub	sp, #12
 800bb5e:	af00      	add	r7, sp, #0
 800bb60:	6078      	str	r0, [r7, #4]
	return isConnected;
 800bb62:	687b      	ldr	r3, [r7, #4]
 800bb64:	7a1b      	ldrb	r3, [r3, #8]
}
 800bb66:	4618      	mov	r0, r3
 800bb68:	370c      	adds	r7, #12
 800bb6a:	46bd      	mov	sp, r7
 800bb6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb70:	4770      	bx	lr
	...

0800bb74 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData>:


void MQTTConnection::handleIncomingMessage(MessageData* data) {
 800bb74:	b590      	push	{r4, r7, lr}
 800bb76:	f2ad 4d2c 	subw	sp, sp, #1068	; 0x42c
 800bb7a:	af00      	add	r7, sp, #0
 800bb7c:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bb80:	f2a3 4324 	subw	r3, r3, #1060	; 0x424
 800bb84:	6018      	str	r0, [r3, #0]
 800bb86:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bb8a:	f5a3 6385 	sub.w	r3, r3, #1064	; 0x428
 800bb8e:	6019      	str	r1, [r3, #0]
	    if (data->message->payloadlen >= 1024) {
 800bb90:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bb94:	f5a3 6385 	sub.w	r3, r3, #1064	; 0x428
 800bb98:	681b      	ldr	r3, [r3, #0]
 800bb9a:	681b      	ldr	r3, [r3, #0]
 800bb9c:	68db      	ldr	r3, [r3, #12]
 800bb9e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bba2:	f080 80a0 	bcs.w	800bce6 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x172>
	     //   utils->print("Data size is bigger than expected \r\n");
	        return;
	    }
	    char payloadStr[1024]; // Static allocation
	    memcpy(payloadStr, data->message->payload, data->message->payloadlen);
 800bba6:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bbaa:	f5a3 6385 	sub.w	r3, r3, #1064	; 0x428
 800bbae:	681b      	ldr	r3, [r3, #0]
 800bbb0:	681b      	ldr	r3, [r3, #0]
 800bbb2:	6899      	ldr	r1, [r3, #8]
 800bbb4:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bbb8:	f5a3 6385 	sub.w	r3, r3, #1064	; 0x428
 800bbbc:	681b      	ldr	r3, [r3, #0]
 800bbbe:	681b      	ldr	r3, [r3, #0]
 800bbc0:	68da      	ldr	r2, [r3, #12]
 800bbc2:	f107 0314 	add.w	r3, r7, #20
 800bbc6:	4618      	mov	r0, r3
 800bbc8:	f007 fa43 	bl	8013052 <memcpy>
	    payloadStr[data->message->payloadlen] = '\0'; // Null-terminate
 800bbcc:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bbd0:	f5a3 6385 	sub.w	r3, r3, #1064	; 0x428
 800bbd4:	681b      	ldr	r3, [r3, #0]
 800bbd6:	681b      	ldr	r3, [r3, #0]
 800bbd8:	68db      	ldr	r3, [r3, #12]
 800bbda:	f507 6285 	add.w	r2, r7, #1064	; 0x428
 800bbde:	f2a2 4214 	subw	r2, r2, #1044	; 0x414
 800bbe2:	2100      	movs	r1, #0
 800bbe4:	54d1      	strb	r1, [r2, r3]

	    cJSON *json = cJSON_Parse(payloadStr);
 800bbe6:	f107 0314 	add.w	r3, r7, #20
 800bbea:	4618      	mov	r0, r3
 800bbec:	f7f9 fd42 	bl	8005674 <cJSON_Parse>
 800bbf0:	f8c7 0424 	str.w	r0, [r7, #1060]	; 0x424
	    if (!json) {
 800bbf4:	f8d7 3424 	ldr.w	r3, [r7, #1060]	; 0x424
 800bbf8:	2b00      	cmp	r3, #0
 800bbfa:	d103      	bne.n	800bc04 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x90>
	    	utils->print("JSON format is not matching!!! \r\n");
 800bbfc:	483c      	ldr	r0, [pc, #240]	; (800bcf0 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x17c>)
 800bbfe:	f000 fbed 	bl	800c3dc <_ZN5Utils5printEPKcz>
	        return;
 800bc02:	e071      	b.n	800bce8 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x174>
	    }
	    const cJSON *number = cJSON_GetObjectItemCaseSensitive(json, "number");
 800bc04:	493b      	ldr	r1, [pc, #236]	; (800bcf4 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x180>)
 800bc06:	f8d7 0424 	ldr.w	r0, [r7, #1060]	; 0x424
 800bc0a:	f7fa fb8b 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800bc0e:	f8c7 0420 	str.w	r0, [r7, #1056]	; 0x420
	    const cJSON *status = cJSON_GetObjectItemCaseSensitive(json, "status");
 800bc12:	4939      	ldr	r1, [pc, #228]	; (800bcf8 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x184>)
 800bc14:	f8d7 0424 	ldr.w	r0, [r7, #1060]	; 0x424
 800bc18:	f7fa fb84 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800bc1c:	f8c7 041c 	str.w	r0, [r7, #1052]	; 0x41c

	    if (cJSON_IsNumber(number) && cJSON_IsNumber(status)) {
 800bc20:	f8d7 0420 	ldr.w	r0, [r7, #1056]	; 0x420
 800bc24:	f7fa fd65 	bl	80066f2 <cJSON_IsNumber>
 800bc28:	4603      	mov	r3, r0
 800bc2a:	2b00      	cmp	r3, #0
 800bc2c:	d008      	beq.n	800bc40 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0xcc>
 800bc2e:	f8d7 041c 	ldr.w	r0, [r7, #1052]	; 0x41c
 800bc32:	f7fa fd5e 	bl	80066f2 <cJSON_IsNumber>
 800bc36:	4603      	mov	r3, r0
 800bc38:	2b00      	cmp	r3, #0
 800bc3a:	d001      	beq.n	800bc40 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0xcc>
 800bc3c:	2301      	movs	r3, #1
 800bc3e:	e000      	b.n	800bc42 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0xce>
 800bc40:	2300      	movs	r3, #0
 800bc42:	2b00      	cmp	r3, #0
 800bc44:	d04a      	beq.n	800bcdc <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x168>

	    	if (number->valueint >= 1 && number->valueint <= 8) {
 800bc46:	f8d7 3420 	ldr.w	r3, [r7, #1056]	; 0x420
 800bc4a:	695b      	ldr	r3, [r3, #20]
 800bc4c:	2b00      	cmp	r3, #0
 800bc4e:	dd45      	ble.n	800bcdc <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x168>
 800bc50:	f8d7 3420 	ldr.w	r3, [r7, #1056]	; 0x420
 800bc54:	695b      	ldr	r3, [r3, #20]
 800bc56:	2b08      	cmp	r3, #8
 800bc58:	dc40      	bgt.n	800bcdc <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x168>
	    	    int arrayIndex = number->valueint - 1;
 800bc5a:	f8d7 3420 	ldr.w	r3, [r7, #1056]	; 0x420
 800bc5e:	695b      	ldr	r3, [r3, #20]
 800bc60:	3b01      	subs	r3, #1
 800bc62:	f8c7 3418 	str.w	r3, [r7, #1048]	; 0x418
	    	    PortAndPins targetSwitch = utils->switches[arrayIndex];
 800bc66:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bc6a:	f2a3 4324 	subw	r3, r3, #1060	; 0x424
 800bc6e:	681b      	ldr	r3, [r3, #0]
 800bc70:	681a      	ldr	r2, [r3, #0]
 800bc72:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bc76:	f2a3 411c 	subw	r1, r3, #1052	; 0x41c
 800bc7a:	f8d7 3418 	ldr.w	r3, [r7, #1048]	; 0x418
 800bc7e:	3301      	adds	r3, #1
 800bc80:	460c      	mov	r4, r1
 800bc82:	00db      	lsls	r3, r3, #3
 800bc84:	4413      	add	r3, r2
 800bc86:	e893 0003 	ldmia.w	r3, {r0, r1}
 800bc8a:	e884 0003 	stmia.w	r4, {r0, r1}
	    	    bool success = utils->switchRelay(targetSwitch.port, targetSwitch.pin, status->valueint);
 800bc8e:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bc92:	f2a3 4324 	subw	r3, r3, #1060	; 0x424
 800bc96:	681b      	ldr	r3, [r3, #0]
 800bc98:	6818      	ldr	r0, [r3, #0]
 800bc9a:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bc9e:	f2a3 431c 	subw	r3, r3, #1052	; 0x41c
 800bca2:	6819      	ldr	r1, [r3, #0]
 800bca4:	f507 6385 	add.w	r3, r7, #1064	; 0x428
 800bca8:	f2a3 431c 	subw	r3, r3, #1052	; 0x41c
 800bcac:	889a      	ldrh	r2, [r3, #4]
 800bcae:	f8d7 341c 	ldr.w	r3, [r7, #1052]	; 0x41c
 800bcb2:	695b      	ldr	r3, [r3, #20]
 800bcb4:	f000 fbd8 	bl	800c468 <_ZN5Utils11switchRelayEP12GPIO_TypeDefti>
 800bcb8:	4603      	mov	r3, r0
 800bcba:	f887 3417 	strb.w	r3, [r7, #1047]	; 0x417
	    	    if (success) {
 800bcbe:	f897 3417 	ldrb.w	r3, [r7, #1047]	; 0x417
 800bcc2:	2b00      	cmp	r3, #0
 800bcc4:	d007      	beq.n	800bcd6 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x162>
	    	        utils->print("The %d switch has been toggled.\r\n", number->valueint);
 800bcc6:	f8d7 3420 	ldr.w	r3, [r7, #1056]	; 0x420
 800bcca:	695b      	ldr	r3, [r3, #20]
 800bccc:	4619      	mov	r1, r3
 800bcce:	480b      	ldr	r0, [pc, #44]	; (800bcfc <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x188>)
 800bcd0:	f000 fb84 	bl	800c3dc <_ZN5Utils5printEPKcz>
 800bcd4:	e002      	b.n	800bcdc <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x168>
	    	    } else {
	    	        utils->print("There is an issue with switch \r\n");
 800bcd6:	480a      	ldr	r0, [pc, #40]	; (800bd00 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x18c>)
 800bcd8:	f000 fb80 	bl	800c3dc <_ZN5Utils5printEPKcz>
	    	    }
	    	}
	    }
	    cJSON_Delete(json);
 800bcdc:	f8d7 0424 	ldr.w	r0, [r7, #1060]	; 0x424
 800bce0:	f7f8 fcbc 	bl	800465c <cJSON_Delete>
 800bce4:	e000      	b.n	800bce8 <_ZN14MQTTConnection21handleIncomingMessageEP11MessageData+0x174>
	        return;
 800bce6:	bf00      	nop
}
 800bce8:	f207 472c 	addw	r7, r7, #1068	; 0x42c
 800bcec:	46bd      	mov	sp, r7
 800bcee:	bd90      	pop	{r4, r7, pc}
 800bcf0:	08016588 	.word	0x08016588
 800bcf4:	080165ac 	.word	0x080165ac
 800bcf8:	080165b4 	.word	0x080165b4
 800bcfc:	080165bc 	.word	0x080165bc
 800bd00:	080165e0 	.word	0x080165e0

0800bd04 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800bd04:	b480      	push	{r7}
 800bd06:	b083      	sub	sp, #12
 800bd08:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bd0a:	2300      	movs	r3, #0
 800bd0c:	607b      	str	r3, [r7, #4]
 800bd0e:	4b10      	ldr	r3, [pc, #64]	; (800bd50 <HAL_MspInit+0x4c>)
 800bd10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd12:	4a0f      	ldr	r2, [pc, #60]	; (800bd50 <HAL_MspInit+0x4c>)
 800bd14:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800bd18:	6453      	str	r3, [r2, #68]	; 0x44
 800bd1a:	4b0d      	ldr	r3, [pc, #52]	; (800bd50 <HAL_MspInit+0x4c>)
 800bd1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd1e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800bd22:	607b      	str	r3, [r7, #4]
 800bd24:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800bd26:	2300      	movs	r3, #0
 800bd28:	603b      	str	r3, [r7, #0]
 800bd2a:	4b09      	ldr	r3, [pc, #36]	; (800bd50 <HAL_MspInit+0x4c>)
 800bd2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bd2e:	4a08      	ldr	r2, [pc, #32]	; (800bd50 <HAL_MspInit+0x4c>)
 800bd30:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bd34:	6413      	str	r3, [r2, #64]	; 0x40
 800bd36:	4b06      	ldr	r3, [pc, #24]	; (800bd50 <HAL_MspInit+0x4c>)
 800bd38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bd3a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bd3e:	603b      	str	r3, [r7, #0]
 800bd40:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800bd42:	bf00      	nop
 800bd44:	370c      	adds	r7, #12
 800bd46:	46bd      	mov	sp, r7
 800bd48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd4c:	4770      	bx	lr
 800bd4e:	bf00      	nop
 800bd50:	40023800 	.word	0x40023800

0800bd54 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 800bd54:	b580      	push	{r7, lr}
 800bd56:	b08a      	sub	sp, #40	; 0x28
 800bd58:	af00      	add	r7, sp, #0
 800bd5a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800bd5c:	f107 0314 	add.w	r3, r7, #20
 800bd60:	2200      	movs	r2, #0
 800bd62:	601a      	str	r2, [r3, #0]
 800bd64:	605a      	str	r2, [r3, #4]
 800bd66:	609a      	str	r2, [r3, #8]
 800bd68:	60da      	str	r2, [r3, #12]
 800bd6a:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 800bd6c:	687b      	ldr	r3, [r7, #4]
 800bd6e:	681b      	ldr	r3, [r3, #0]
 800bd70:	4a1b      	ldr	r2, [pc, #108]	; (800bde0 <HAL_ADC_MspInit+0x8c>)
 800bd72:	4293      	cmp	r3, r2
 800bd74:	d12f      	bne.n	800bdd6 <HAL_ADC_MspInit+0x82>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800bd76:	2300      	movs	r3, #0
 800bd78:	613b      	str	r3, [r7, #16]
 800bd7a:	4b1a      	ldr	r3, [pc, #104]	; (800bde4 <HAL_ADC_MspInit+0x90>)
 800bd7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd7e:	4a19      	ldr	r2, [pc, #100]	; (800bde4 <HAL_ADC_MspInit+0x90>)
 800bd80:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bd84:	6453      	str	r3, [r2, #68]	; 0x44
 800bd86:	4b17      	ldr	r3, [pc, #92]	; (800bde4 <HAL_ADC_MspInit+0x90>)
 800bd88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd8a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bd8e:	613b      	str	r3, [r7, #16]
 800bd90:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800bd92:	2300      	movs	r3, #0
 800bd94:	60fb      	str	r3, [r7, #12]
 800bd96:	4b13      	ldr	r3, [pc, #76]	; (800bde4 <HAL_ADC_MspInit+0x90>)
 800bd98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bd9a:	4a12      	ldr	r2, [pc, #72]	; (800bde4 <HAL_ADC_MspInit+0x90>)
 800bd9c:	f043 0301 	orr.w	r3, r3, #1
 800bda0:	6313      	str	r3, [r2, #48]	; 0x30
 800bda2:	4b10      	ldr	r3, [pc, #64]	; (800bde4 <HAL_ADC_MspInit+0x90>)
 800bda4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bda6:	f003 0301 	and.w	r3, r3, #1
 800bdaa:	60fb      	str	r3, [r7, #12]
 800bdac:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 800bdae:	2301      	movs	r3, #1
 800bdb0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800bdb2:	2303      	movs	r3, #3
 800bdb4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bdb6:	2300      	movs	r3, #0
 800bdb8:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800bdba:	f107 0314 	add.w	r3, r7, #20
 800bdbe:	4619      	mov	r1, r3
 800bdc0:	4809      	ldr	r0, [pc, #36]	; (800bde8 <HAL_ADC_MspInit+0x94>)
 800bdc2:	f001 fec3 	bl	800db4c <HAL_GPIO_Init>

    /* ADC1 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 800bdc6:	2200      	movs	r2, #0
 800bdc8:	2100      	movs	r1, #0
 800bdca:	2012      	movs	r0, #18
 800bdcc:	f001 fdf5 	bl	800d9ba <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 800bdd0:	2012      	movs	r0, #18
 800bdd2:	f001 fe0e 	bl	800d9f2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800bdd6:	bf00      	nop
 800bdd8:	3728      	adds	r7, #40	; 0x28
 800bdda:	46bd      	mov	sp, r7
 800bddc:	bd80      	pop	{r7, pc}
 800bdde:	bf00      	nop
 800bde0:	40012000 	.word	0x40012000
 800bde4:	40023800 	.word	0x40023800
 800bde8:	40020000 	.word	0x40020000

0800bdec <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 800bdec:	b580      	push	{r7, lr}
 800bdee:	b08a      	sub	sp, #40	; 0x28
 800bdf0:	af00      	add	r7, sp, #0
 800bdf2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800bdf4:	f107 0314 	add.w	r3, r7, #20
 800bdf8:	2200      	movs	r2, #0
 800bdfa:	601a      	str	r2, [r3, #0]
 800bdfc:	605a      	str	r2, [r3, #4]
 800bdfe:	609a      	str	r2, [r3, #8]
 800be00:	60da      	str	r2, [r3, #12]
 800be02:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 800be04:	687b      	ldr	r3, [r7, #4]
 800be06:	681b      	ldr	r3, [r3, #0]
 800be08:	4a19      	ldr	r2, [pc, #100]	; (800be70 <HAL_SPI_MspInit+0x84>)
 800be0a:	4293      	cmp	r3, r2
 800be0c:	d12c      	bne.n	800be68 <HAL_SPI_MspInit+0x7c>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 800be0e:	2300      	movs	r3, #0
 800be10:	613b      	str	r3, [r7, #16]
 800be12:	4b18      	ldr	r3, [pc, #96]	; (800be74 <HAL_SPI_MspInit+0x88>)
 800be14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800be16:	4a17      	ldr	r2, [pc, #92]	; (800be74 <HAL_SPI_MspInit+0x88>)
 800be18:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800be1c:	6413      	str	r3, [r2, #64]	; 0x40
 800be1e:	4b15      	ldr	r3, [pc, #84]	; (800be74 <HAL_SPI_MspInit+0x88>)
 800be20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800be22:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800be26:	613b      	str	r3, [r7, #16]
 800be28:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800be2a:	2300      	movs	r3, #0
 800be2c:	60fb      	str	r3, [r7, #12]
 800be2e:	4b11      	ldr	r3, [pc, #68]	; (800be74 <HAL_SPI_MspInit+0x88>)
 800be30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be32:	4a10      	ldr	r2, [pc, #64]	; (800be74 <HAL_SPI_MspInit+0x88>)
 800be34:	f043 0302 	orr.w	r3, r3, #2
 800be38:	6313      	str	r3, [r2, #48]	; 0x30
 800be3a:	4b0e      	ldr	r3, [pc, #56]	; (800be74 <HAL_SPI_MspInit+0x88>)
 800be3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be3e:	f003 0302 	and.w	r3, r3, #2
 800be42:	60fb      	str	r3, [r7, #12]
 800be44:	68fb      	ldr	r3, [r7, #12]
    /**SPI2 GPIO Configuration
    PB13     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 800be46:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 800be4a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800be4c:	2302      	movs	r3, #2
 800be4e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800be50:	2300      	movs	r3, #0
 800be52:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800be54:	2303      	movs	r3, #3
 800be56:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800be58:	2305      	movs	r3, #5
 800be5a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800be5c:	f107 0314 	add.w	r3, r7, #20
 800be60:	4619      	mov	r1, r3
 800be62:	4805      	ldr	r0, [pc, #20]	; (800be78 <HAL_SPI_MspInit+0x8c>)
 800be64:	f001 fe72 	bl	800db4c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 800be68:	bf00      	nop
 800be6a:	3728      	adds	r7, #40	; 0x28
 800be6c:	46bd      	mov	sp, r7
 800be6e:	bd80      	pop	{r7, pc}
 800be70:	40003800 	.word	0x40003800
 800be74:	40023800 	.word	0x40023800
 800be78:	40020400 	.word	0x40020400

0800be7c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800be7c:	b580      	push	{r7, lr}
 800be7e:	b084      	sub	sp, #16
 800be80:	af00      	add	r7, sp, #0
 800be82:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 800be84:	687b      	ldr	r3, [r7, #4]
 800be86:	681b      	ldr	r3, [r3, #0]
 800be88:	4a0e      	ldr	r2, [pc, #56]	; (800bec4 <HAL_TIM_Base_MspInit+0x48>)
 800be8a:	4293      	cmp	r3, r2
 800be8c:	d115      	bne.n	800beba <HAL_TIM_Base_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800be8e:	2300      	movs	r3, #0
 800be90:	60fb      	str	r3, [r7, #12]
 800be92:	4b0d      	ldr	r3, [pc, #52]	; (800bec8 <HAL_TIM_Base_MspInit+0x4c>)
 800be94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800be96:	4a0c      	ldr	r2, [pc, #48]	; (800bec8 <HAL_TIM_Base_MspInit+0x4c>)
 800be98:	f043 0301 	orr.w	r3, r3, #1
 800be9c:	6453      	str	r3, [r2, #68]	; 0x44
 800be9e:	4b0a      	ldr	r3, [pc, #40]	; (800bec8 <HAL_TIM_Base_MspInit+0x4c>)
 800bea0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bea2:	f003 0301 	and.w	r3, r3, #1
 800bea6:	60fb      	str	r3, [r7, #12]
 800bea8:	68fb      	ldr	r3, [r7, #12]
    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 0, 0);
 800beaa:	2200      	movs	r2, #0
 800beac:	2100      	movs	r1, #0
 800beae:	2019      	movs	r0, #25
 800beb0:	f001 fd83 	bl	800d9ba <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 800beb4:	2019      	movs	r0, #25
 800beb6:	f001 fd9c 	bl	800d9f2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 800beba:	bf00      	nop
 800bebc:	3710      	adds	r7, #16
 800bebe:	46bd      	mov	sp, r7
 800bec0:	bd80      	pop	{r7, pc}
 800bec2:	bf00      	nop
 800bec4:	40010000 	.word	0x40010000
 800bec8:	40023800 	.word	0x40023800

0800becc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800becc:	b580      	push	{r7, lr}
 800bece:	b08a      	sub	sp, #40	; 0x28
 800bed0:	af00      	add	r7, sp, #0
 800bed2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800bed4:	f107 0314 	add.w	r3, r7, #20
 800bed8:	2200      	movs	r2, #0
 800beda:	601a      	str	r2, [r3, #0]
 800bedc:	605a      	str	r2, [r3, #4]
 800bede:	609a      	str	r2, [r3, #8]
 800bee0:	60da      	str	r2, [r3, #12]
 800bee2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 800bee4:	687b      	ldr	r3, [r7, #4]
 800bee6:	681b      	ldr	r3, [r3, #0]
 800bee8:	4a1d      	ldr	r2, [pc, #116]	; (800bf60 <HAL_UART_MspInit+0x94>)
 800beea:	4293      	cmp	r3, r2
 800beec:	d133      	bne.n	800bf56 <HAL_UART_MspInit+0x8a>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800beee:	2300      	movs	r3, #0
 800bef0:	613b      	str	r3, [r7, #16]
 800bef2:	4b1c      	ldr	r3, [pc, #112]	; (800bf64 <HAL_UART_MspInit+0x98>)
 800bef4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bef6:	4a1b      	ldr	r2, [pc, #108]	; (800bf64 <HAL_UART_MspInit+0x98>)
 800bef8:	f043 0310 	orr.w	r3, r3, #16
 800befc:	6453      	str	r3, [r2, #68]	; 0x44
 800befe:	4b19      	ldr	r3, [pc, #100]	; (800bf64 <HAL_UART_MspInit+0x98>)
 800bf00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bf02:	f003 0310 	and.w	r3, r3, #16
 800bf06:	613b      	str	r3, [r7, #16]
 800bf08:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800bf0a:	2300      	movs	r3, #0
 800bf0c:	60fb      	str	r3, [r7, #12]
 800bf0e:	4b15      	ldr	r3, [pc, #84]	; (800bf64 <HAL_UART_MspInit+0x98>)
 800bf10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bf12:	4a14      	ldr	r2, [pc, #80]	; (800bf64 <HAL_UART_MspInit+0x98>)
 800bf14:	f043 0302 	orr.w	r3, r3, #2
 800bf18:	6313      	str	r3, [r2, #48]	; 0x30
 800bf1a:	4b12      	ldr	r3, [pc, #72]	; (800bf64 <HAL_UART_MspInit+0x98>)
 800bf1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bf1e:	f003 0302 	and.w	r3, r3, #2
 800bf22:	60fb      	str	r3, [r7, #12]
 800bf24:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800bf26:	23c0      	movs	r3, #192	; 0xc0
 800bf28:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800bf2a:	2302      	movs	r3, #2
 800bf2c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bf2e:	2300      	movs	r3, #0
 800bf30:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800bf32:	2303      	movs	r3, #3
 800bf34:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800bf36:	2307      	movs	r3, #7
 800bf38:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800bf3a:	f107 0314 	add.w	r3, r7, #20
 800bf3e:	4619      	mov	r1, r3
 800bf40:	4809      	ldr	r0, [pc, #36]	; (800bf68 <HAL_UART_MspInit+0x9c>)
 800bf42:	f001 fe03 	bl	800db4c <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 800bf46:	2200      	movs	r2, #0
 800bf48:	2100      	movs	r1, #0
 800bf4a:	2025      	movs	r0, #37	; 0x25
 800bf4c:	f001 fd35 	bl	800d9ba <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 800bf50:	2025      	movs	r0, #37	; 0x25
 800bf52:	f001 fd4e 	bl	800d9f2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 800bf56:	bf00      	nop
 800bf58:	3728      	adds	r7, #40	; 0x28
 800bf5a:	46bd      	mov	sp, r7
 800bf5c:	bd80      	pop	{r7, pc}
 800bf5e:	bf00      	nop
 800bf60:	40011000 	.word	0x40011000
 800bf64:	40023800 	.word	0x40023800
 800bf68:	40020400 	.word	0x40020400

0800bf6c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800bf6c:	b580      	push	{r7, lr}
 800bf6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  HAL_RCC_NMI_IRQHandler();
 800bf70:	f002 fc2a 	bl	800e7c8 <HAL_RCC_NMI_IRQHandler>
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800bf74:	e7fe      	b.n	800bf74 <NMI_Handler+0x8>

0800bf76 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800bf76:	b480      	push	{r7}
 800bf78:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800bf7a:	e7fe      	b.n	800bf7a <HardFault_Handler+0x4>

0800bf7c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800bf7c:	b480      	push	{r7}
 800bf7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800bf80:	e7fe      	b.n	800bf80 <MemManage_Handler+0x4>

0800bf82 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800bf82:	b480      	push	{r7}
 800bf84:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800bf86:	e7fe      	b.n	800bf86 <BusFault_Handler+0x4>

0800bf88 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800bf88:	b480      	push	{r7}
 800bf8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800bf8c:	e7fe      	b.n	800bf8c <UsageFault_Handler+0x4>

0800bf8e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800bf8e:	b480      	push	{r7}
 800bf90:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800bf92:	bf00      	nop
 800bf94:	46bd      	mov	sp, r7
 800bf96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf9a:	4770      	bx	lr

0800bf9c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800bf9c:	b480      	push	{r7}
 800bf9e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800bfa0:	bf00      	nop
 800bfa2:	46bd      	mov	sp, r7
 800bfa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfa8:	4770      	bx	lr

0800bfaa <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800bfaa:	b480      	push	{r7}
 800bfac:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800bfae:	bf00      	nop
 800bfb0:	46bd      	mov	sp, r7
 800bfb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfb6:	4770      	bx	lr

0800bfb8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800bfb8:	b580      	push	{r7, lr}
 800bfba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800bfbc:	f000 fea6 	bl	800cd0c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  MilliTimer_Handler();
 800bfc0:	f7fb f99a 	bl	80072f8 <MilliTimer_Handler>

  static uint16_t milli_count;
   milli_count++;
 800bfc4:	4b08      	ldr	r3, [pc, #32]	; (800bfe8 <SysTick_Handler+0x30>)
 800bfc6:	881b      	ldrh	r3, [r3, #0]
 800bfc8:	3301      	adds	r3, #1
 800bfca:	b29a      	uxth	r2, r3
 800bfcc:	4b06      	ldr	r3, [pc, #24]	; (800bfe8 <SysTick_Handler+0x30>)
 800bfce:	801a      	strh	r2, [r3, #0]
   if(milli_count==1000)
 800bfd0:	4b05      	ldr	r3, [pc, #20]	; (800bfe8 <SysTick_Handler+0x30>)
 800bfd2:	881b      	ldrh	r3, [r3, #0]
 800bfd4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800bfd8:	d104      	bne.n	800bfe4 <SysTick_Handler+0x2c>
   {
   milli_count=0;
 800bfda:	4b03      	ldr	r3, [pc, #12]	; (800bfe8 <SysTick_Handler+0x30>)
 800bfdc:	2200      	movs	r2, #0
 800bfde:	801a      	strh	r2, [r3, #0]
   DHCP_time_handler();
 800bfe0:	f7f6 fa82 	bl	80024e8 <DHCP_time_handler>
   }

  /* USER CODE END SysTick_IRQn 1 */
}
 800bfe4:	bf00      	nop
 800bfe6:	bd80      	pop	{r7, pc}
 800bfe8:	20002fbc 	.word	0x20002fbc

0800bfec <ADC_IRQHandler>:

/**
  * @brief This function handles ADC1, ADC2 and ADC3 global interrupts.
  */
void ADC_IRQHandler(void)
{
 800bfec:	b580      	push	{r7, lr}
 800bfee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN ADC_IRQn 0 */

  /* USER CODE END ADC_IRQn 0 */
  HAL_ADC_IRQHandler(&hadc1);
 800bff0:	4802      	ldr	r0, [pc, #8]	; (800bffc <ADC_IRQHandler+0x10>)
 800bff2:	f001 f8a3 	bl	800d13c <HAL_ADC_IRQHandler>
  /* USER CODE BEGIN ADC_IRQn 1 */

  /* USER CODE END ADC_IRQn 1 */
}
 800bff6:	bf00      	nop
 800bff8:	bd80      	pop	{r7, pc}
 800bffa:	bf00      	nop
 800bffc:	200012dc 	.word	0x200012dc

0800c000 <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 800c000:	b580      	push	{r7, lr}
 800c002:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 800c004:	4802      	ldr	r0, [pc, #8]	; (800c010 <TIM1_UP_TIM10_IRQHandler+0x10>)
 800c006:	f003 fa91 	bl	800f52c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 800c00a:	bf00      	nop
 800c00c:	bd80      	pop	{r7, pc}
 800c00e:	bf00      	nop
 800c010:	20001324 	.word	0x20001324

0800c014 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 800c014:	b580      	push	{r7, lr}
 800c016:	af00      	add	r7, sp, #0
	  }

*/

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800c018:	4802      	ldr	r0, [pc, #8]	; (800c024 <USART1_IRQHandler+0x10>)
 800c01a:	f003 ff3d 	bl	800fe98 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 800c01e:	bf00      	nop
 800c020:	bd80      	pop	{r7, pc}
 800c022:	bf00      	nop
 800c024:	200013c4 	.word	0x200013c4

0800c028 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 800c028:	b580      	push	{r7, lr}
 800c02a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(NetworkStatus_Pin);
 800c02c:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800c030:	f001 ff5a 	bl	800dee8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 800c034:	bf00      	nop
 800c036:	bd80      	pop	{r7, pc}

0800c038 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800c038:	b480      	push	{r7}
 800c03a:	af00      	add	r7, sp, #0
  return 1;
 800c03c:	2301      	movs	r3, #1
}
 800c03e:	4618      	mov	r0, r3
 800c040:	46bd      	mov	sp, r7
 800c042:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c046:	4770      	bx	lr

0800c048 <_kill>:

int _kill(int pid, int sig)
{
 800c048:	b580      	push	{r7, lr}
 800c04a:	b082      	sub	sp, #8
 800c04c:	af00      	add	r7, sp, #0
 800c04e:	6078      	str	r0, [r7, #4]
 800c050:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800c052:	f006 ffc9 	bl	8012fe8 <__errno>
 800c056:	4603      	mov	r3, r0
 800c058:	2216      	movs	r2, #22
 800c05a:	601a      	str	r2, [r3, #0]
  return -1;
 800c05c:	f04f 33ff 	mov.w	r3, #4294967295
}
 800c060:	4618      	mov	r0, r3
 800c062:	3708      	adds	r7, #8
 800c064:	46bd      	mov	sp, r7
 800c066:	bd80      	pop	{r7, pc}

0800c068 <_exit>:

void _exit (int status)
{
 800c068:	b580      	push	{r7, lr}
 800c06a:	b082      	sub	sp, #8
 800c06c:	af00      	add	r7, sp, #0
 800c06e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800c070:	f04f 31ff 	mov.w	r1, #4294967295
 800c074:	6878      	ldr	r0, [r7, #4]
 800c076:	f7ff ffe7 	bl	800c048 <_kill>
  while (1) {}    /* Make sure we hang here */
 800c07a:	e7fe      	b.n	800c07a <_exit+0x12>

0800c07c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800c07c:	b580      	push	{r7, lr}
 800c07e:	b086      	sub	sp, #24
 800c080:	af00      	add	r7, sp, #0
 800c082:	60f8      	str	r0, [r7, #12]
 800c084:	60b9      	str	r1, [r7, #8]
 800c086:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800c088:	2300      	movs	r3, #0
 800c08a:	617b      	str	r3, [r7, #20]
 800c08c:	e00a      	b.n	800c0a4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800c08e:	f3af 8000 	nop.w
 800c092:	4601      	mov	r1, r0
 800c094:	68bb      	ldr	r3, [r7, #8]
 800c096:	1c5a      	adds	r2, r3, #1
 800c098:	60ba      	str	r2, [r7, #8]
 800c09a:	b2ca      	uxtb	r2, r1
 800c09c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800c09e:	697b      	ldr	r3, [r7, #20]
 800c0a0:	3301      	adds	r3, #1
 800c0a2:	617b      	str	r3, [r7, #20]
 800c0a4:	697a      	ldr	r2, [r7, #20]
 800c0a6:	687b      	ldr	r3, [r7, #4]
 800c0a8:	429a      	cmp	r2, r3
 800c0aa:	dbf0      	blt.n	800c08e <_read+0x12>
  }

  return len;
 800c0ac:	687b      	ldr	r3, [r7, #4]
}
 800c0ae:	4618      	mov	r0, r3
 800c0b0:	3718      	adds	r7, #24
 800c0b2:	46bd      	mov	sp, r7
 800c0b4:	bd80      	pop	{r7, pc}

0800c0b6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800c0b6:	b580      	push	{r7, lr}
 800c0b8:	b086      	sub	sp, #24
 800c0ba:	af00      	add	r7, sp, #0
 800c0bc:	60f8      	str	r0, [r7, #12]
 800c0be:	60b9      	str	r1, [r7, #8]
 800c0c0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800c0c2:	2300      	movs	r3, #0
 800c0c4:	617b      	str	r3, [r7, #20]
 800c0c6:	e009      	b.n	800c0dc <_write+0x26>
  {
    __io_putchar(*ptr++);
 800c0c8:	68bb      	ldr	r3, [r7, #8]
 800c0ca:	1c5a      	adds	r2, r3, #1
 800c0cc:	60ba      	str	r2, [r7, #8]
 800c0ce:	781b      	ldrb	r3, [r3, #0]
 800c0d0:	4618      	mov	r0, r3
 800c0d2:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800c0d6:	697b      	ldr	r3, [r7, #20]
 800c0d8:	3301      	adds	r3, #1
 800c0da:	617b      	str	r3, [r7, #20]
 800c0dc:	697a      	ldr	r2, [r7, #20]
 800c0de:	687b      	ldr	r3, [r7, #4]
 800c0e0:	429a      	cmp	r2, r3
 800c0e2:	dbf1      	blt.n	800c0c8 <_write+0x12>
  }
  return len;
 800c0e4:	687b      	ldr	r3, [r7, #4]
}
 800c0e6:	4618      	mov	r0, r3
 800c0e8:	3718      	adds	r7, #24
 800c0ea:	46bd      	mov	sp, r7
 800c0ec:	bd80      	pop	{r7, pc}

0800c0ee <_close>:

int _close(int file)
{
 800c0ee:	b480      	push	{r7}
 800c0f0:	b083      	sub	sp, #12
 800c0f2:	af00      	add	r7, sp, #0
 800c0f4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800c0f6:	f04f 33ff 	mov.w	r3, #4294967295
}
 800c0fa:	4618      	mov	r0, r3
 800c0fc:	370c      	adds	r7, #12
 800c0fe:	46bd      	mov	sp, r7
 800c100:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c104:	4770      	bx	lr

0800c106 <_fstat>:


int _fstat(int file, struct stat *st)
{
 800c106:	b480      	push	{r7}
 800c108:	b083      	sub	sp, #12
 800c10a:	af00      	add	r7, sp, #0
 800c10c:	6078      	str	r0, [r7, #4]
 800c10e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800c110:	683b      	ldr	r3, [r7, #0]
 800c112:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800c116:	605a      	str	r2, [r3, #4]
  return 0;
 800c118:	2300      	movs	r3, #0
}
 800c11a:	4618      	mov	r0, r3
 800c11c:	370c      	adds	r7, #12
 800c11e:	46bd      	mov	sp, r7
 800c120:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c124:	4770      	bx	lr

0800c126 <_isatty>:

int _isatty(int file)
{
 800c126:	b480      	push	{r7}
 800c128:	b083      	sub	sp, #12
 800c12a:	af00      	add	r7, sp, #0
 800c12c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800c12e:	2301      	movs	r3, #1
}
 800c130:	4618      	mov	r0, r3
 800c132:	370c      	adds	r7, #12
 800c134:	46bd      	mov	sp, r7
 800c136:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c13a:	4770      	bx	lr

0800c13c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800c13c:	b480      	push	{r7}
 800c13e:	b085      	sub	sp, #20
 800c140:	af00      	add	r7, sp, #0
 800c142:	60f8      	str	r0, [r7, #12]
 800c144:	60b9      	str	r1, [r7, #8]
 800c146:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800c148:	2300      	movs	r3, #0
}
 800c14a:	4618      	mov	r0, r3
 800c14c:	3714      	adds	r7, #20
 800c14e:	46bd      	mov	sp, r7
 800c150:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c154:	4770      	bx	lr
	...

0800c158 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800c158:	b580      	push	{r7, lr}
 800c15a:	b086      	sub	sp, #24
 800c15c:	af00      	add	r7, sp, #0
 800c15e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800c160:	4a14      	ldr	r2, [pc, #80]	; (800c1b4 <_sbrk+0x5c>)
 800c162:	4b15      	ldr	r3, [pc, #84]	; (800c1b8 <_sbrk+0x60>)
 800c164:	1ad3      	subs	r3, r2, r3
 800c166:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800c168:	697b      	ldr	r3, [r7, #20]
 800c16a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800c16c:	4b13      	ldr	r3, [pc, #76]	; (800c1bc <_sbrk+0x64>)
 800c16e:	681b      	ldr	r3, [r3, #0]
 800c170:	2b00      	cmp	r3, #0
 800c172:	d102      	bne.n	800c17a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800c174:	4b11      	ldr	r3, [pc, #68]	; (800c1bc <_sbrk+0x64>)
 800c176:	4a12      	ldr	r2, [pc, #72]	; (800c1c0 <_sbrk+0x68>)
 800c178:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800c17a:	4b10      	ldr	r3, [pc, #64]	; (800c1bc <_sbrk+0x64>)
 800c17c:	681a      	ldr	r2, [r3, #0]
 800c17e:	687b      	ldr	r3, [r7, #4]
 800c180:	4413      	add	r3, r2
 800c182:	693a      	ldr	r2, [r7, #16]
 800c184:	429a      	cmp	r2, r3
 800c186:	d207      	bcs.n	800c198 <_sbrk+0x40>
  {
    errno = ENOMEM;
 800c188:	f006 ff2e 	bl	8012fe8 <__errno>
 800c18c:	4603      	mov	r3, r0
 800c18e:	220c      	movs	r2, #12
 800c190:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800c192:	f04f 33ff 	mov.w	r3, #4294967295
 800c196:	e009      	b.n	800c1ac <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800c198:	4b08      	ldr	r3, [pc, #32]	; (800c1bc <_sbrk+0x64>)
 800c19a:	681b      	ldr	r3, [r3, #0]
 800c19c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800c19e:	4b07      	ldr	r3, [pc, #28]	; (800c1bc <_sbrk+0x64>)
 800c1a0:	681a      	ldr	r2, [r3, #0]
 800c1a2:	687b      	ldr	r3, [r7, #4]
 800c1a4:	4413      	add	r3, r2
 800c1a6:	4a05      	ldr	r2, [pc, #20]	; (800c1bc <_sbrk+0x64>)
 800c1a8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800c1aa:	68fb      	ldr	r3, [r7, #12]
}
 800c1ac:	4618      	mov	r0, r3
 800c1ae:	3718      	adds	r7, #24
 800c1b0:	46bd      	mov	sp, r7
 800c1b2:	bd80      	pop	{r7, pc}
 800c1b4:	20020000 	.word	0x20020000
 800c1b8:	00000400 	.word	0x00000400
 800c1bc:	20002fc0 	.word	0x20002fc0
 800c1c0:	20003120 	.word	0x20003120

0800c1c4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800c1c4:	b480      	push	{r7}
 800c1c6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800c1c8:	4b06      	ldr	r3, [pc, #24]	; (800c1e4 <SystemInit+0x20>)
 800c1ca:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c1ce:	4a05      	ldr	r2, [pc, #20]	; (800c1e4 <SystemInit+0x20>)
 800c1d0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800c1d4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800c1d8:	bf00      	nop
 800c1da:	46bd      	mov	sp, r7
 800c1dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1e0:	4770      	bx	lr
 800c1e2:	bf00      	nop
 800c1e4:	e000ed00 	.word	0xe000ed00

0800c1e8 <_ZN5UtilsC1Ev>:
#include <cmath>


Utils* Utils::instance = nullptr;

Utils::Utils(){
 800c1e8:	b480      	push	{r7}
 800c1ea:	b083      	sub	sp, #12
 800c1ec:	af00      	add	r7, sp, #0
 800c1ee:	6078      	str	r0, [r7, #4]
	Utils::instance = this;
 800c1f0:	4a04      	ldr	r2, [pc, #16]	; (800c204 <_ZN5UtilsC1Ev+0x1c>)
 800c1f2:	687b      	ldr	r3, [r7, #4]
 800c1f4:	6013      	str	r3, [r2, #0]
}
 800c1f6:	687b      	ldr	r3, [r7, #4]
 800c1f8:	4618      	mov	r0, r3
 800c1fa:	370c      	adds	r7, #12
 800c1fc:	46bd      	mov	sp, r7
 800c1fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c202:	4770      	bx	lr
 800c204:	20002fc4 	.word	0x20002fc4

0800c208 <_ZN5Utils4initEP6ConfigP9MuxSelect>:

void Utils::init(Config* config, MuxSelect* muxInstance){
 800c208:	b480      	push	{r7}
 800c20a:	b085      	sub	sp, #20
 800c20c:	af00      	add	r7, sp, #0
 800c20e:	60f8      	str	r0, [r7, #12]
 800c210:	60b9      	str	r1, [r7, #8]
 800c212:	607a      	str	r2, [r7, #4]
	mux = muxInstance;
 800c214:	68fb      	ldr	r3, [r7, #12]
 800c216:	687a      	ldr	r2, [r7, #4]
 800c218:	605a      	str	r2, [r3, #4]
	conf = config;
 800c21a:	68fb      	ldr	r3, [r7, #12]
 800c21c:	68ba      	ldr	r2, [r7, #8]
 800c21e:	601a      	str	r2, [r3, #0]


	switches[0] = {GPIOE, GPIO_PIN_12}; // switch1
 800c220:	68fb      	ldr	r3, [r7, #12]
 800c222:	4a56      	ldr	r2, [pc, #344]	; (800c37c <_ZN5Utils4initEP6ConfigP9MuxSelect+0x174>)
 800c224:	3308      	adds	r3, #8
 800c226:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c22a:	e883 0003 	stmia.w	r3, {r0, r1}
	switches[1] = {GPIOE, GPIO_PIN_13}; // switch2
 800c22e:	68fb      	ldr	r3, [r7, #12]
 800c230:	4a53      	ldr	r2, [pc, #332]	; (800c380 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x178>)
 800c232:	3310      	adds	r3, #16
 800c234:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c238:	e883 0003 	stmia.w	r3, {r0, r1}
	switches[2] = {GPIOE, GPIO_PIN_14}; // switch3
 800c23c:	68fb      	ldr	r3, [r7, #12]
 800c23e:	4a51      	ldr	r2, [pc, #324]	; (800c384 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x17c>)
 800c240:	3318      	adds	r3, #24
 800c242:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c246:	e883 0003 	stmia.w	r3, {r0, r1}
	switches[3] = {GPIOE, GPIO_PIN_15}; // switch4
 800c24a:	68fb      	ldr	r3, [r7, #12]
 800c24c:	4a4e      	ldr	r2, [pc, #312]	; (800c388 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x180>)
 800c24e:	3320      	adds	r3, #32
 800c250:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c254:	e883 0003 	stmia.w	r3, {r0, r1}
	switches[4] = {GPIOA, GPIO_PIN_4};  // switch5
 800c258:	68fb      	ldr	r3, [r7, #12]
 800c25a:	4a4c      	ldr	r2, [pc, #304]	; (800c38c <_ZN5Utils4initEP6ConfigP9MuxSelect+0x184>)
 800c25c:	3328      	adds	r3, #40	; 0x28
 800c25e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c262:	e883 0003 	stmia.w	r3, {r0, r1}
	switches[5] = {GPIOA, GPIO_PIN_5};  // switch6
 800c266:	68fb      	ldr	r3, [r7, #12]
 800c268:	4a49      	ldr	r2, [pc, #292]	; (800c390 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x188>)
 800c26a:	3330      	adds	r3, #48	; 0x30
 800c26c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c270:	e883 0003 	stmia.w	r3, {r0, r1}
	switches[6] = {GPIOA, GPIO_PIN_6};  // switch7
 800c274:	68fb      	ldr	r3, [r7, #12]
 800c276:	4a47      	ldr	r2, [pc, #284]	; (800c394 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x18c>)
 800c278:	3338      	adds	r3, #56	; 0x38
 800c27a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c27e:	e883 0003 	stmia.w	r3, {r0, r1}
	switches[7] = {GPIOA, GPIO_PIN_7};  // switch8
 800c282:	68fb      	ldr	r3, [r7, #12]
 800c284:	4a44      	ldr	r2, [pc, #272]	; (800c398 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x190>)
 800c286:	3340      	adds	r3, #64	; 0x40
 800c288:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c28c:	e883 0003 	stmia.w	r3, {r0, r1}


    digitalInputs[0] = {GPIOC, GPIO_PIN_0};   // DI1
 800c290:	68fb      	ldr	r3, [r7, #12]
 800c292:	4a42      	ldr	r2, [pc, #264]	; (800c39c <_ZN5Utils4initEP6ConfigP9MuxSelect+0x194>)
 800c294:	3348      	adds	r3, #72	; 0x48
 800c296:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c29a:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[1] = {GPIOC, GPIO_PIN_1};   // DI2
 800c29e:	68fb      	ldr	r3, [r7, #12]
 800c2a0:	4a3f      	ldr	r2, [pc, #252]	; (800c3a0 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x198>)
 800c2a2:	3350      	adds	r3, #80	; 0x50
 800c2a4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c2a8:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[2] = {GPIOC, GPIO_PIN_2};   // DI3
 800c2ac:	68fb      	ldr	r3, [r7, #12]
 800c2ae:	4a3d      	ldr	r2, [pc, #244]	; (800c3a4 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x19c>)
 800c2b0:	3358      	adds	r3, #88	; 0x58
 800c2b2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c2b6:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[3] = {GPIOC, GPIO_PIN_3};   // DI4
 800c2ba:	68fb      	ldr	r3, [r7, #12]
 800c2bc:	4a3a      	ldr	r2, [pc, #232]	; (800c3a8 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1a0>)
 800c2be:	3360      	adds	r3, #96	; 0x60
 800c2c0:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c2c4:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[4] = {GPIOD, GPIO_PIN_8};   // DI5
 800c2c8:	68fb      	ldr	r3, [r7, #12]
 800c2ca:	4a38      	ldr	r2, [pc, #224]	; (800c3ac <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1a4>)
 800c2cc:	3368      	adds	r3, #104	; 0x68
 800c2ce:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c2d2:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[5] = {GPIOD, GPIO_PIN_9};   // DI6
 800c2d6:	68fb      	ldr	r3, [r7, #12]
 800c2d8:	4a35      	ldr	r2, [pc, #212]	; (800c3b0 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1a8>)
 800c2da:	3370      	adds	r3, #112	; 0x70
 800c2dc:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c2e0:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[6] = {GPIOD, GPIO_PIN_10};  // DI7
 800c2e4:	68fb      	ldr	r3, [r7, #12]
 800c2e6:	4a33      	ldr	r2, [pc, #204]	; (800c3b4 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1ac>)
 800c2e8:	3378      	adds	r3, #120	; 0x78
 800c2ea:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c2ee:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[7] = {GPIOD, GPIO_PIN_13};  // DI8
 800c2f2:	68fb      	ldr	r3, [r7, #12]
 800c2f4:	4a30      	ldr	r2, [pc, #192]	; (800c3b8 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1b0>)
 800c2f6:	3380      	adds	r3, #128	; 0x80
 800c2f8:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c2fc:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[8] = {GPIOC, GPIO_PIN_6};   // DI9
 800c300:	68fb      	ldr	r3, [r7, #12]
 800c302:	4a2e      	ldr	r2, [pc, #184]	; (800c3bc <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1b4>)
 800c304:	3388      	adds	r3, #136	; 0x88
 800c306:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c30a:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[9] = {GPIOC, GPIO_PIN_7};   // DI10
 800c30e:	68fb      	ldr	r3, [r7, #12]
 800c310:	4a2b      	ldr	r2, [pc, #172]	; (800c3c0 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1b8>)
 800c312:	3390      	adds	r3, #144	; 0x90
 800c314:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c318:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[10] = {GPIOC, GPIO_PIN_8};  // DI11
 800c31c:	68fb      	ldr	r3, [r7, #12]
 800c31e:	4a29      	ldr	r2, [pc, #164]	; (800c3c4 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1bc>)
 800c320:	3398      	adds	r3, #152	; 0x98
 800c322:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c326:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[11] = {GPIOC, GPIO_PIN_9};  // DI12
 800c32a:	68fb      	ldr	r3, [r7, #12]
 800c32c:	4a26      	ldr	r2, [pc, #152]	; (800c3c8 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1c0>)
 800c32e:	33a0      	adds	r3, #160	; 0xa0
 800c330:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c334:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[12] = {GPIOA, GPIO_PIN_8};  // DI13
 800c338:	68fb      	ldr	r3, [r7, #12]
 800c33a:	4a24      	ldr	r2, [pc, #144]	; (800c3cc <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1c4>)
 800c33c:	33a8      	adds	r3, #168	; 0xa8
 800c33e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c342:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[13] = {GPIOA, GPIO_PIN_9};  // DI14
 800c346:	68fb      	ldr	r3, [r7, #12]
 800c348:	4a21      	ldr	r2, [pc, #132]	; (800c3d0 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1c8>)
 800c34a:	33b0      	adds	r3, #176	; 0xb0
 800c34c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c350:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[14] = {GPIOA, GPIO_PIN_10}; // DI15
 800c354:	68fb      	ldr	r3, [r7, #12]
 800c356:	4a1f      	ldr	r2, [pc, #124]	; (800c3d4 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1cc>)
 800c358:	33b8      	adds	r3, #184	; 0xb8
 800c35a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c35e:	e883 0003 	stmia.w	r3, {r0, r1}
    digitalInputs[15] = {GPIOA, GPIO_PIN_11}; // DI16
 800c362:	68fb      	ldr	r3, [r7, #12]
 800c364:	4a1c      	ldr	r2, [pc, #112]	; (800c3d8 <_ZN5Utils4initEP6ConfigP9MuxSelect+0x1d0>)
 800c366:	33c0      	adds	r3, #192	; 0xc0
 800c368:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c36c:	e883 0003 	stmia.w	r3, {r0, r1}


}
 800c370:	bf00      	nop
 800c372:	3714      	adds	r7, #20
 800c374:	46bd      	mov	sp, r7
 800c376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c37a:	4770      	bx	lr
 800c37c:	08016604 	.word	0x08016604
 800c380:	0801660c 	.word	0x0801660c
 800c384:	08016614 	.word	0x08016614
 800c388:	0801661c 	.word	0x0801661c
 800c38c:	08016624 	.word	0x08016624
 800c390:	0801662c 	.word	0x0801662c
 800c394:	08016634 	.word	0x08016634
 800c398:	0801663c 	.word	0x0801663c
 800c39c:	08016644 	.word	0x08016644
 800c3a0:	0801664c 	.word	0x0801664c
 800c3a4:	08016654 	.word	0x08016654
 800c3a8:	0801665c 	.word	0x0801665c
 800c3ac:	08016664 	.word	0x08016664
 800c3b0:	0801666c 	.word	0x0801666c
 800c3b4:	08016674 	.word	0x08016674
 800c3b8:	0801667c 	.word	0x0801667c
 800c3bc:	08016684 	.word	0x08016684
 800c3c0:	0801668c 	.word	0x0801668c
 800c3c4:	08016694 	.word	0x08016694
 800c3c8:	0801669c 	.word	0x0801669c
 800c3cc:	080166a4 	.word	0x080166a4
 800c3d0:	080166ac 	.word	0x080166ac
 800c3d4:	080166b4 	.word	0x080166b4
 800c3d8:	080166bc 	.word	0x080166bc

0800c3dc <_ZN5Utils5printEPKcz>:
void Utils::print(const char* fmt, ...){
 800c3dc:	b40f      	push	{r0, r1, r2, r3}
 800c3de:	b580      	push	{r7, lr}
 800c3e0:	b0c2      	sub	sp, #264	; 0x108
 800c3e2:	af00      	add	r7, sp, #0

	 char buff[256];
	 va_list args;
	 va_start(args, fmt);
 800c3e4:	f507 728a 	add.w	r2, r7, #276	; 0x114
 800c3e8:	f507 7384 	add.w	r3, r7, #264	; 0x108
 800c3ec:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800c3f0:	601a      	str	r2, [r3, #0]
	 vsnprintf(buff, sizeof(buff), fmt, args);
 800c3f2:	f507 7384 	add.w	r3, r7, #264	; 0x108
 800c3f6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800c3fa:	f107 0008 	add.w	r0, r7, #8
 800c3fe:	681b      	ldr	r3, [r3, #0]
 800c400:	f8d7 2110 	ldr.w	r2, [r7, #272]	; 0x110
 800c404:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c408:	f006 fce0 	bl	8012dcc <vsniprintf>
	 HAL_UART_Transmit(&huart1, (uint8_t*)buff, strlen(buff),
 800c40c:	f107 0308 	add.w	r3, r7, #8
 800c410:	4618      	mov	r0, r3
 800c412:	f7f3 ff3d 	bl	8000290 <strlen>
 800c416:	4603      	mov	r3, r0
 800c418:	b29a      	uxth	r2, r3
 800c41a:	f107 0108 	add.w	r1, r7, #8
 800c41e:	f04f 33ff 	mov.w	r3, #4294967295
 800c422:	4805      	ldr	r0, [pc, #20]	; (800c438 <_ZN5Utils5printEPKcz+0x5c>)
 800c424:	f003 fc88 	bl	800fd38 <HAL_UART_Transmit>
	                      HAL_MAX_DELAY);
	 va_end(args);

}
 800c428:	bf00      	nop
 800c42a:	f507 7784 	add.w	r7, r7, #264	; 0x108
 800c42e:	46bd      	mov	sp, r7
 800c430:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800c434:	b004      	add	sp, #16
 800c436:	4770      	bx	lr
 800c438:	200013c4 	.word	0x200013c4

0800c43c <_ZN5Utils9playSoundEv>:

size_t Utils::getSwitchesCount() const {
    return sizeof(switches) / sizeof(switches[0]);
}

void Utils::playSound(){
 800c43c:	b580      	push	{r7, lr}
 800c43e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(sound_GPIO_Port, sound_Pin, GPIO_PIN_SET);
 800c440:	2201      	movs	r2, #1
 800c442:	2102      	movs	r1, #2
 800c444:	4807      	ldr	r0, [pc, #28]	; (800c464 <_ZN5Utils9playSoundEv+0x28>)
 800c446:	f001 fd35 	bl	800deb4 <HAL_GPIO_WritePin>
	HAL_Delay(20);
 800c44a:	2014      	movs	r0, #20
 800c44c:	f000 fc7e 	bl	800cd4c <HAL_Delay>
	HAL_GPIO_WritePin(sound_GPIO_Port, sound_Pin, GPIO_PIN_RESET);
 800c450:	2200      	movs	r2, #0
 800c452:	2102      	movs	r1, #2
 800c454:	4803      	ldr	r0, [pc, #12]	; (800c464 <_ZN5Utils9playSoundEv+0x28>)
 800c456:	f001 fd2d 	bl	800deb4 <HAL_GPIO_WritePin>
	HAL_Delay(20);
 800c45a:	2014      	movs	r0, #20
 800c45c:	f000 fc76 	bl	800cd4c <HAL_Delay>
}
 800c460:	bf00      	nop
 800c462:	bd80      	pop	{r7, pc}
 800c464:	40021000 	.word	0x40021000

0800c468 <_ZN5Utils11switchRelayEP12GPIO_TypeDefti>:

bool Utils::switchRelay(GPIO_TypeDef* port, uint16_t switchPin, int status){
 800c468:	b580      	push	{r7, lr}
 800c46a:	b086      	sub	sp, #24
 800c46c:	af00      	add	r7, sp, #0
 800c46e:	60f8      	str	r0, [r7, #12]
 800c470:	60b9      	str	r1, [r7, #8]
 800c472:	603b      	str	r3, [r7, #0]
 800c474:	4613      	mov	r3, r2
 800c476:	80fb      	strh	r3, [r7, #6]
    if (status > 1) {
 800c478:	683b      	ldr	r3, [r7, #0]
 800c47a:	2b01      	cmp	r3, #1
 800c47c:	dd05      	ble.n	800c48a <_ZN5Utils11switchRelayEP12GPIO_TypeDefti+0x22>
    	print("Status is not valid %d \r\n", status);
 800c47e:	6839      	ldr	r1, [r7, #0]
 800c480:	480c      	ldr	r0, [pc, #48]	; (800c4b4 <_ZN5Utils11switchRelayEP12GPIO_TypeDefti+0x4c>)
 800c482:	f7ff ffab 	bl	800c3dc <_ZN5Utils5printEPKcz>
    	return false;
 800c486:	2300      	movs	r3, #0
 800c488:	e00f      	b.n	800c4aa <_ZN5Utils11switchRelayEP12GPIO_TypeDefti+0x42>
    }
	GPIO_PinState gpioStatus = status == 1 ? GPIO_PIN_SET : GPIO_PIN_RESET;
 800c48a:	683b      	ldr	r3, [r7, #0]
 800c48c:	2b01      	cmp	r3, #1
 800c48e:	d101      	bne.n	800c494 <_ZN5Utils11switchRelayEP12GPIO_TypeDefti+0x2c>
 800c490:	2301      	movs	r3, #1
 800c492:	e000      	b.n	800c496 <_ZN5Utils11switchRelayEP12GPIO_TypeDefti+0x2e>
 800c494:	2300      	movs	r3, #0
 800c496:	75fb      	strb	r3, [r7, #23]
	playSound();
 800c498:	f7ff ffd0 	bl	800c43c <_ZN5Utils9playSoundEv>
	HAL_GPIO_WritePin(port, switchPin, gpioStatus);
 800c49c:	7dfa      	ldrb	r2, [r7, #23]
 800c49e:	88fb      	ldrh	r3, [r7, #6]
 800c4a0:	4619      	mov	r1, r3
 800c4a2:	68b8      	ldr	r0, [r7, #8]
 800c4a4:	f001 fd06 	bl	800deb4 <HAL_GPIO_WritePin>
	return true;
 800c4a8:	2301      	movs	r3, #1
}
 800c4aa:	4618      	mov	r0, r3
 800c4ac:	3718      	adds	r7, #24
 800c4ae:	46bd      	mov	sp, r7
 800c4b0:	bd80      	pop	{r7, pc}
 800c4b2:	bf00      	nop
 800c4b4:	080166c4 	.word	0x080166c4

0800c4b8 <_ZN5Utils16readGPIOPinStateEP12GPIO_TypeDeft>:

int Utils::readGPIOPinState(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin){
 800c4b8:	b580      	push	{r7, lr}
 800c4ba:	b084      	sub	sp, #16
 800c4bc:	af00      	add	r7, sp, #0
 800c4be:	60f8      	str	r0, [r7, #12]
 800c4c0:	60b9      	str	r1, [r7, #8]
 800c4c2:	4613      	mov	r3, r2
 800c4c4:	80fb      	strh	r3, [r7, #6]
	return HAL_GPIO_ReadPin(GPIOx, GPIO_Pin) == GPIO_PIN_RESET ? 0 : 1;
 800c4c6:	88fb      	ldrh	r3, [r7, #6]
 800c4c8:	4619      	mov	r1, r3
 800c4ca:	68b8      	ldr	r0, [r7, #8]
 800c4cc:	f001 fcda 	bl	800de84 <HAL_GPIO_ReadPin>
 800c4d0:	4603      	mov	r3, r0
 800c4d2:	2b00      	cmp	r3, #0
 800c4d4:	bf14      	ite	ne
 800c4d6:	2301      	movne	r3, #1
 800c4d8:	2300      	moveq	r3, #0
 800c4da:	b2db      	uxtb	r3, r3
}
 800c4dc:	4618      	mov	r0, r3
 800c4de:	3710      	adds	r7, #16
 800c4e0:	46bd      	mov	sp, r7
 800c4e2:	bd80      	pop	{r7, pc}

0800c4e4 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:


void Utils::createJSON(std::string *message) {
 800c4e4:	b590      	push	{r4, r7, lr}
 800c4e6:	b0bb      	sub	sp, #236	; 0xec
 800c4e8:	af02      	add	r7, sp, #8
 800c4ea:	6078      	str	r0, [r7, #4]
 800c4ec:	6039      	str	r1, [r7, #0]
    cJSON *root = cJSON_CreateObject();
 800c4ee:	f7fa f8bd 	bl	800666c <cJSON_CreateObject>
 800c4f2:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
    cJSON *aiArray = cJSON_CreateArray();
 800c4f6:	f7fa f8a5 	bl	8006644 <cJSON_CreateArray>
 800c4fa:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc
    cJSON *diArray = cJSON_CreateArray();
 800c4fe:	f7fa f8a1 	bl	8006644 <cJSON_CreateArray>
 800c502:	f8c7 00c8 	str.w	r0, [r7, #200]	; 0xc8
    cJSON *doArray = cJSON_CreateArray();
 800c506:	f7fa f89d 	bl	8006644 <cJSON_CreateArray>
 800c50a:	f8c7 00c4 	str.w	r0, [r7, #196]	; 0xc4

    AnalogReadings analogValue = mux->SwitchAnalog();
 800c50e:	687b      	ldr	r3, [r7, #4]
 800c510:	685a      	ldr	r2, [r3, #4]
 800c512:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800c516:	4611      	mov	r1, r2
 800c518:	4618      	mov	r0, r3
 800c51a:	f7fc fa9d 	bl	8008a58 <_ZN9MuxSelect12SwitchAnalogEv>
    for (int i = 0; i < 8; i++) {
 800c51e:	2300      	movs	r3, #0
 800c520:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800c524:	e042      	b.n	800c5ac <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc8>
        cJSON *obj = cJSON_CreateObject();
 800c526:	f7fa f8a1 	bl	800666c <cJSON_CreateObject>
 800c52a:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
        int status = readGPIOPinState(switches[i].port, switches[i].pin);
 800c52e:	687b      	ldr	r3, [r7, #4]
 800c530:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800c534:	3201      	adds	r2, #1
 800c536:	f853 1032 	ldr.w	r1, [r3, r2, lsl #3]
 800c53a:	687a      	ldr	r2, [r7, #4]
 800c53c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c540:	3301      	adds	r3, #1
 800c542:	00db      	lsls	r3, r3, #3
 800c544:	4413      	add	r3, r2
 800c546:	889b      	ldrh	r3, [r3, #4]
 800c548:	461a      	mov	r2, r3
 800c54a:	6878      	ldr	r0, [r7, #4]
 800c54c:	f7ff ffb4 	bl	800c4b8 <_ZN5Utils16readGPIOPinStateEP12GPIO_TypeDeft>
 800c550:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
        cJSON_AddNumberToObject(obj, conf->getDigitalOutputName(i).c_str(), status);
 800c554:	687b      	ldr	r3, [r7, #4]
 800c556:	6819      	ldr	r1, [r3, #0]
 800c558:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c55c:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800c560:	4618      	mov	r0, r3
 800c562:	f7fd f976 	bl	8009852 <_ZN6Config20getDigitalOutputNameB5cxx11Ei>
 800c566:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c56a:	4618      	mov	r0, r3
 800c56c:	f004 fe46 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800c570:	4604      	mov	r4, r0
 800c572:	f8d7 00a8 	ldr.w	r0, [r7, #168]	; 0xa8
 800c576:	f7f3 ffe5 	bl	8000544 <__aeabi_i2d>
 800c57a:	4602      	mov	r2, r0
 800c57c:	460b      	mov	r3, r1
 800c57e:	ec43 2b10 	vmov	d0, r2, r3
 800c582:	4621      	mov	r1, r4
 800c584:	f8d7 00ac 	ldr.w	r0, [r7, #172]	; 0xac
 800c588:	f7f9 ffa6 	bl	80064d8 <cJSON_AddNumberToObject>
 800c58c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c590:	4618      	mov	r0, r3
 800c592:	f004 fced 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
        cJSON_AddItemToArray(doArray, obj);
 800c596:	f8d7 10ac 	ldr.w	r1, [r7, #172]	; 0xac
 800c59a:	f8d7 00c4 	ldr.w	r0, [r7, #196]	; 0xc4
 800c59e:	f7f9 ff17 	bl	80063d0 <cJSON_AddItemToArray>
    for (int i = 0; i < 8; i++) {
 800c5a2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c5a6:	3301      	adds	r3, #1
 800c5a8:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800c5ac:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c5b0:	2b07      	cmp	r3, #7
 800c5b2:	ddb8      	ble.n	800c526 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x42>
    }

    for (int i = 0; i < 16; i++) {
 800c5b4:	2300      	movs	r3, #0
 800c5b6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c5ba:	e042      	b.n	800c642 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x15e>
        cJSON *obj = cJSON_CreateObject();
 800c5bc:	f7fa f856 	bl	800666c <cJSON_CreateObject>
 800c5c0:	f8c7 00b4 	str.w	r0, [r7, #180]	; 0xb4
        int status = readGPIOPinState(digitalInputs[i].port, digitalInputs[i].pin);
 800c5c4:	687b      	ldr	r3, [r7, #4]
 800c5c6:	f8d7 20d8 	ldr.w	r2, [r7, #216]	; 0xd8
 800c5ca:	3209      	adds	r2, #9
 800c5cc:	f853 1032 	ldr.w	r1, [r3, r2, lsl #3]
 800c5d0:	687a      	ldr	r2, [r7, #4]
 800c5d2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c5d6:	3309      	adds	r3, #9
 800c5d8:	00db      	lsls	r3, r3, #3
 800c5da:	4413      	add	r3, r2
 800c5dc:	889b      	ldrh	r3, [r3, #4]
 800c5de:	461a      	mov	r2, r3
 800c5e0:	6878      	ldr	r0, [r7, #4]
 800c5e2:	f7ff ff69 	bl	800c4b8 <_ZN5Utils16readGPIOPinStateEP12GPIO_TypeDeft>
 800c5e6:	f8c7 00b0 	str.w	r0, [r7, #176]	; 0xb0
        cJSON_AddNumberToObject(obj, conf->getDigitalInputName(i).c_str(), status);
 800c5ea:	687b      	ldr	r3, [r7, #4]
 800c5ec:	6819      	ldr	r1, [r3, #0]
 800c5ee:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c5f2:	f8d7 20d8 	ldr.w	r2, [r7, #216]	; 0xd8
 800c5f6:	4618      	mov	r0, r3
 800c5f8:	f7fd f914 	bl	8009824 <_ZN6Config19getDigitalInputNameB5cxx11Ei>
 800c5fc:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c600:	4618      	mov	r0, r3
 800c602:	f004 fdfb 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800c606:	4604      	mov	r4, r0
 800c608:	f8d7 00b0 	ldr.w	r0, [r7, #176]	; 0xb0
 800c60c:	f7f3 ff9a 	bl	8000544 <__aeabi_i2d>
 800c610:	4602      	mov	r2, r0
 800c612:	460b      	mov	r3, r1
 800c614:	ec43 2b10 	vmov	d0, r2, r3
 800c618:	4621      	mov	r1, r4
 800c61a:	f8d7 00b4 	ldr.w	r0, [r7, #180]	; 0xb4
 800c61e:	f7f9 ff5b 	bl	80064d8 <cJSON_AddNumberToObject>
 800c622:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c626:	4618      	mov	r0, r3
 800c628:	f004 fca2 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
        cJSON_AddItemToArray(diArray, obj);
 800c62c:	f8d7 10b4 	ldr.w	r1, [r7, #180]	; 0xb4
 800c630:	f8d7 00c8 	ldr.w	r0, [r7, #200]	; 0xc8
 800c634:	f7f9 fecc 	bl	80063d0 <cJSON_AddItemToArray>
    for (int i = 0; i < 16; i++) {
 800c638:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c63c:	3301      	adds	r3, #1
 800c63e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c642:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c646:	2b0f      	cmp	r3, #15
 800c648:	ddb8      	ble.n	800c5bc <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8>
    }


    for (int i = 0; i < 8; i++) {
 800c64a:	2300      	movs	r3, #0
 800c64c:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c650:	e040      	b.n	800c6d4 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f0>
        cJSON *obj = cJSON_CreateObject();
 800c652:	f7fa f80b 	bl	800666c <cJSON_CreateObject>
 800c656:	f8c7 00bc 	str.w	r0, [r7, #188]	; 0xbc
        float status = analogValue.values[i]; // Placeholder, adjust according to your implementation
 800c65a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c65e:	009b      	lsls	r3, r3, #2
 800c660:	33e0      	adds	r3, #224	; 0xe0
 800c662:	443b      	add	r3, r7
 800c664:	3bb8      	subs	r3, #184	; 0xb8
 800c666:	681b      	ldr	r3, [r3, #0]
 800c668:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
        char formattedStatus[32]; // Buffer to hold the formatted float string

        snprintf(formattedStatus, sizeof(formattedStatus), "%.2f", status);
 800c66c:	f8d7 00b8 	ldr.w	r0, [r7, #184]	; 0xb8
 800c670:	f7f3 ff7a 	bl	8000568 <__aeabi_f2d>
 800c674:	4602      	mov	r2, r0
 800c676:	460b      	mov	r3, r1
 800c678:	f107 0008 	add.w	r0, r7, #8
 800c67c:	e9cd 2300 	strd	r2, r3, [sp]
 800c680:	4a3b      	ldr	r2, [pc, #236]	; (800c770 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x28c>)
 800c682:	2120      	movs	r1, #32
 800c684:	f006 fab2 	bl	8012bec <sniprintf>
      //  print("Analog Float: %s  AnalogNumber: %d\r\n", formattedStatus, i);

        // Add the formatted string to the JSON object
        cJSON_AddStringToObject(obj, conf->getAnalogInputName(i).c_str(), formattedStatus);
 800c688:	687b      	ldr	r3, [r7, #4]
 800c68a:	6819      	ldr	r1, [r3, #0]
 800c68c:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800c690:	f8d7 20d4 	ldr.w	r2, [r7, #212]	; 0xd4
 800c694:	4618      	mov	r0, r3
 800c696:	f7fd f8af 	bl	80097f8 <_ZN6Config18getAnalogInputNameB5cxx11Ei>
 800c69a:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800c69e:	4618      	mov	r0, r3
 800c6a0:	f004 fdac 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800c6a4:	4601      	mov	r1, r0
 800c6a6:	f107 0308 	add.w	r3, r7, #8
 800c6aa:	461a      	mov	r2, r3
 800c6ac:	f8d7 00bc 	ldr.w	r0, [r7, #188]	; 0xbc
 800c6b0:	f7f9 ff36 	bl	8006520 <cJSON_AddStringToObject>
 800c6b4:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800c6b8:	4618      	mov	r0, r3
 800c6ba:	f004 fc59 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
        cJSON_AddItemToArray(aiArray, obj);
 800c6be:	f8d7 10bc 	ldr.w	r1, [r7, #188]	; 0xbc
 800c6c2:	f8d7 00cc 	ldr.w	r0, [r7, #204]	; 0xcc
 800c6c6:	f7f9 fe83 	bl	80063d0 <cJSON_AddItemToArray>
    for (int i = 0; i < 8; i++) {
 800c6ca:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c6ce:	3301      	adds	r3, #1
 800c6d0:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c6d4:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c6d8:	2b07      	cmp	r3, #7
 800c6da:	ddba      	ble.n	800c652 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16e>
    }

    cJSON_AddItemToObject(root, "ai", aiArray);
 800c6dc:	f8d7 20cc 	ldr.w	r2, [r7, #204]	; 0xcc
 800c6e0:	4924      	ldr	r1, [pc, #144]	; (800c774 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x290>)
 800c6e2:	f8d7 00d0 	ldr.w	r0, [r7, #208]	; 0xd0
 800c6e6:	f7f9 fee1 	bl	80064ac <cJSON_AddItemToObject>
    cJSON_AddItemToObject(root, "di", diArray);
 800c6ea:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800c6ee:	4922      	ldr	r1, [pc, #136]	; (800c778 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x294>)
 800c6f0:	f8d7 00d0 	ldr.w	r0, [r7, #208]	; 0xd0
 800c6f4:	f7f9 feda 	bl	80064ac <cJSON_AddItemToObject>
    cJSON_AddItemToObject(root, "do", doArray);
 800c6f8:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800c6fc:	491f      	ldr	r1, [pc, #124]	; (800c77c <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x298>)
 800c6fe:	f8d7 00d0 	ldr.w	r0, [r7, #208]	; 0xd0
 800c702:	f7f9 fed3 	bl	80064ac <cJSON_AddItemToObject>
    cJSON_AddStringToObject(root, "mac", conf->getClientId().c_str());
 800c706:	687b      	ldr	r3, [r7, #4]
 800c708:	681a      	ldr	r2, [r3, #0]
 800c70a:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800c70e:	4611      	mov	r1, r2
 800c710:	4618      	mov	r0, r3
 800c712:	f7fe f891 	bl	800a838 <_ZNK6Config11getClientIdB5cxx11Ev>
 800c716:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800c71a:	4618      	mov	r0, r3
 800c71c:	f004 fd6e 	bl	80111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800c720:	4603      	mov	r3, r0
 800c722:	461a      	mov	r2, r3
 800c724:	4916      	ldr	r1, [pc, #88]	; (800c780 <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x29c>)
 800c726:	f8d7 00d0 	ldr.w	r0, [r7, #208]	; 0xd0
 800c72a:	f7f9 fef9 	bl	8006520 <cJSON_AddStringToObject>
 800c72e:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800c732:	4618      	mov	r0, r3
 800c734:	f004 fc1c 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

    // Print and assign the JSON string
    char* json_string = cJSON_Print(root);
 800c738:	f8d7 00d0 	ldr.w	r0, [r7, #208]	; 0xd0
 800c73c:	f7f9 f82c 	bl	8005798 <cJSON_Print>
 800c740:	f8c7 00c0 	str.w	r0, [r7, #192]	; 0xc0
    if (json_string != nullptr) {
 800c744:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800c748:	2b00      	cmp	r3, #0
 800c74a:	d008      	beq.n	800c75e <_ZN5Utils10createJSONEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x27a>
        *message = json_string;
 800c74c:	f8d7 10c0 	ldr.w	r1, [r7, #192]	; 0xc0
 800c750:	6838      	ldr	r0, [r7, #0]
 800c752:	f004 fcf8 	bl	8011146 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        free(json_string); // Free the allocated memory
 800c756:	f8d7 00c0 	ldr.w	r0, [r7, #192]	; 0xc0
 800c75a:	f004 fe09 	bl	8011370 <free>
    }
    cJSON_Delete(root); // Clean up the cJSON object
 800c75e:	f8d7 00d0 	ldr.w	r0, [r7, #208]	; 0xd0
 800c762:	f7f7 ff7b 	bl	800465c <cJSON_Delete>
}
 800c766:	bf00      	nop
 800c768:	37e4      	adds	r7, #228	; 0xe4
 800c76a:	46bd      	mov	sp, r7
 800c76c:	bd90      	pop	{r4, r7, pc}
 800c76e:	bf00      	nop
 800c770:	080166e0 	.word	0x080166e0
 800c774:	080166e8 	.word	0x080166e8
 800c778:	080166ec 	.word	0x080166ec
 800c77c:	080166f0 	.word	0x080166f0
 800c780:	080166f4 	.word	0x080166f4

0800c784 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEC1Ev>:
    struct array
 800c784:	b5b0      	push	{r4, r5, r7, lr}
 800c786:	b082      	sub	sp, #8
 800c788:	af00      	add	r7, sp, #0
 800c78a:	6078      	str	r0, [r7, #4]
 800c78c:	687b      	ldr	r3, [r7, #4]
 800c78e:	2402      	movs	r4, #2
 800c790:	461d      	mov	r5, r3
 800c792:	e004      	b.n	800c79e <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEC1Ev+0x1a>
 800c794:	4628      	mov	r0, r5
 800c796:	f004 fbd4 	bl	8010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800c79a:	3518      	adds	r5, #24
 800c79c:	3c01      	subs	r4, #1
 800c79e:	2c00      	cmp	r4, #0
 800c7a0:	daf8      	bge.n	800c794 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEC1Ev+0x10>
 800c7a2:	687b      	ldr	r3, [r7, #4]
 800c7a4:	4618      	mov	r0, r3
 800c7a6:	3708      	adds	r7, #8
 800c7a8:	46bd      	mov	sp, r7
 800c7aa:	bdb0      	pop	{r4, r5, r7, pc}

0800c7ac <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EED1Ev>:
 800c7ac:	b590      	push	{r4, r7, lr}
 800c7ae:	b083      	sub	sp, #12
 800c7b0:	af00      	add	r7, sp, #0
 800c7b2:	6078      	str	r0, [r7, #4]
 800c7b4:	687b      	ldr	r3, [r7, #4]
 800c7b6:	2b00      	cmp	r3, #0
 800c7b8:	d00a      	beq.n	800c7d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EED1Ev+0x24>
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	f103 0448 	add.w	r4, r3, #72	; 0x48
 800c7c0:	687b      	ldr	r3, [r7, #4]
 800c7c2:	429c      	cmp	r4, r3
 800c7c4:	d004      	beq.n	800c7d0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EED1Ev+0x24>
 800c7c6:	3c18      	subs	r4, #24
 800c7c8:	4620      	mov	r0, r4
 800c7ca:	f004 fbd1 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c7ce:	e7f7      	b.n	800c7c0 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EED1Ev+0x14>
 800c7d0:	687b      	ldr	r3, [r7, #4]
 800c7d2:	4618      	mov	r0, r3
 800c7d4:	370c      	adds	r7, #12
 800c7d6:	46bd      	mov	sp, r7
 800c7d8:	bd90      	pop	{r4, r7, pc}
	...

0800c7dc <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Utils::createUSARTRealTime(std::string *messsage) {
 800c7dc:	b590      	push	{r4, r7, lr}
 800c7de:	b0cf      	sub	sp, #316	; 0x13c
 800c7e0:	af02      	add	r7, sp, #8
 800c7e2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c7e6:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800c7ea:	6018      	str	r0, [r3, #0]
 800c7ec:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c7f0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800c7f4:	6019      	str	r1, [r3, #0]
	std::string data = "2";
 800c7f6:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 800c7fa:	4618      	mov	r0, r3
 800c7fc:	f004 faa4 	bl	8010d48 <_ZNSaIcEC1Ev>
 800c800:	f107 02c4 	add.w	r2, r7, #196	; 0xc4
 800c804:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800c808:	49ba      	ldr	r1, [pc, #744]	; (800caf4 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x318>)
 800c80a:	4618      	mov	r0, r3
 800c80c:	f004 fd66 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800c810:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 800c814:	4618      	mov	r0, r3
 800c816:	f004 fa99 	bl	8010d4c <_ZNSaIcED1Ev>
	std::string comma = ";";
 800c81a:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800c81e:	4618      	mov	r0, r3
 800c820:	f004 fa92 	bl	8010d48 <_ZNSaIcEC1Ev>
 800c824:	f107 02c8 	add.w	r2, r7, #200	; 0xc8
 800c828:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c82c:	49b2      	ldr	r1, [pc, #712]	; (800caf8 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x31c>)
 800c82e:	4618      	mov	r0, r3
 800c830:	f004 fd54 	bl	80112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 800c834:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800c838:	4618      	mov	r0, r3
 800c83a:	f004 fa87 	bl	8010d4c <_ZNSaIcED1Ev>
	std::array<std::string, 3 > list;
 800c83e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800c842:	4618      	mov	r0, r3
 800c844:	f7ff ff9e 	bl	800c784 <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEC1Ev>
	AnalogReadings analogValue = mux->SwitchAnalog();
 800c848:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c84c:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800c850:	681b      	ldr	r3, [r3, #0]
 800c852:	685a      	ldr	r2, [r3, #4]
 800c854:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c858:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800c85c:	4611      	mov	r1, r2
 800c85e:	4618      	mov	r0, r3
 800c860:	f7fc f8fa 	bl	8008a58 <_ZN9MuxSelect12SwitchAnalogEv>


	for (size_t i = 0 ; i < 8 ; i++) {
 800c864:	2300      	movs	r3, #0
 800c866:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 800c86a:	e039      	b.n	800c8e0 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x104>
		float status = analogValue.values[i]; // Placeholder, adjust according to your implementation
 800c86c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c870:	f5a3 7282 	sub.w	r2, r3, #260	; 0x104
 800c874:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800c878:	009b      	lsls	r3, r3, #2
 800c87a:	4413      	add	r3, r2
 800c87c:	681b      	ldr	r3, [r3, #0]
 800c87e:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
		char formattedStatus[32];
		snprintf(formattedStatus, sizeof(formattedStatus), "%.2f", status);
 800c882:	f8d7 0114 	ldr.w	r0, [r7, #276]	; 0x114
 800c886:	f7f3 fe6f 	bl	8000568 <__aeabi_f2d>
 800c88a:	4602      	mov	r2, r0
 800c88c:	460b      	mov	r3, r1
 800c88e:	f107 000c 	add.w	r0, r7, #12
 800c892:	e9cd 2300 	strd	r2, r3, [sp]
 800c896:	4a99      	ldr	r2, [pc, #612]	; (800cafc <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>)
 800c898:	2120      	movs	r1, #32
 800c89a:	f006 f9a7 	bl	8012bec <sniprintf>
		if (i > 0 ) {
 800c89e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800c8a2:	2b00      	cmp	r3, #0
 800c8a4:	d00a      	beq.n	800c8bc <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
			list[0] += ",";
 800c8a6:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800c8aa:	2100      	movs	r1, #0
 800c8ac:	4618      	mov	r0, r3
 800c8ae:	f000 f985 	bl	800cbbc <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEixEj>
 800c8b2:	4603      	mov	r3, r0
 800c8b4:	4992      	ldr	r1, [pc, #584]	; (800cb00 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x324>)
 800c8b6:	4618      	mov	r0, r3
 800c8b8:	f004 fc9c 	bl	80111f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
		}

		list[0] += formattedStatus;
 800c8bc:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800c8c0:	2100      	movs	r1, #0
 800c8c2:	4618      	mov	r0, r3
 800c8c4:	f000 f97a 	bl	800cbbc <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEixEj>
 800c8c8:	4602      	mov	r2, r0
 800c8ca:	f107 030c 	add.w	r3, r7, #12
 800c8ce:	4619      	mov	r1, r3
 800c8d0:	4610      	mov	r0, r2
 800c8d2:	f004 fc8f 	bl	80111f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
	for (size_t i = 0 ; i < 8 ; i++) {
 800c8d6:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800c8da:	3301      	adds	r3, #1
 800c8dc:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 800c8e0:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800c8e4:	2b07      	cmp	r3, #7
 800c8e6:	d9c1      	bls.n	800c86c <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>
	}

	for (size_t i = 0; i < 16; i ++) {
 800c8e8:	2300      	movs	r3, #0
 800c8ea:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 800c8ee:	e04a      	b.n	800c986 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1aa>
		int status = readGPIOPinState(digitalInputs[i].port, digitalInputs[i].pin);
 800c8f0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c8f4:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800c8f8:	681b      	ldr	r3, [r3, #0]
 800c8fa:	f8d7 2128 	ldr.w	r2, [r7, #296]	; 0x128
 800c8fe:	3209      	adds	r2, #9
 800c900:	f853 1032 	ldr.w	r1, [r3, r2, lsl #3]
 800c904:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c908:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800c90c:	681a      	ldr	r2, [r3, #0]
 800c90e:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 800c912:	3309      	adds	r3, #9
 800c914:	00db      	lsls	r3, r3, #3
 800c916:	4413      	add	r3, r2
 800c918:	889a      	ldrh	r2, [r3, #4]
 800c91a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c91e:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800c922:	6818      	ldr	r0, [r3, #0]
 800c924:	f7ff fdc8 	bl	800c4b8 <_ZN5Utils16readGPIOPinStateEP12GPIO_TypeDeft>
 800c928:	f8c7 0118 	str.w	r0, [r7, #280]	; 0x118
		if (i > 0 ) {
 800c92c:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 800c930:	2b00      	cmp	r3, #0
 800c932:	d00a      	beq.n	800c94a <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16e>
			list[1] += ",";
 800c934:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800c938:	2101      	movs	r1, #1
 800c93a:	4618      	mov	r0, r3
 800c93c:	f000 f93e 	bl	800cbbc <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEixEj>
 800c940:	4603      	mov	r3, r0
 800c942:	496f      	ldr	r1, [pc, #444]	; (800cb00 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x324>)
 800c944:	4618      	mov	r0, r3
 800c946:	f004 fc55 	bl	80111f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
		}
		list[1] += std::to_string(status);
 800c94a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800c94e:	2101      	movs	r1, #1
 800c950:	4618      	mov	r0, r3
 800c952:	f000 f933 	bl	800cbbc <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEixEj>
 800c956:	4604      	mov	r4, r0
 800c958:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c95c:	f8d7 1118 	ldr.w	r1, [r7, #280]	; 0x118
 800c960:	4618      	mov	r0, r3
 800c962:	f7fc fa97 	bl	8008e94 <_ZNSt7__cxx119to_stringEi>
 800c966:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c96a:	4619      	mov	r1, r3
 800c96c:	4620      	mov	r0, r4
 800c96e:	f004 fc16 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
 800c972:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c976:	4618      	mov	r0, r3
 800c978:	f004 fafa 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	for (size_t i = 0; i < 16; i ++) {
 800c97c:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 800c980:	3301      	adds	r3, #1
 800c982:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 800c986:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 800c98a:	2b0f      	cmp	r3, #15
 800c98c:	d9b0      	bls.n	800c8f0 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x114>
	}

	for (size_t i = 0; i < 8;  i++) {
 800c98e:	2300      	movs	r3, #0
 800c990:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 800c994:	e04a      	b.n	800ca2c <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x250>
		int status = readGPIOPinState(switches[i].port, switches[i].pin);
 800c996:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c99a:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800c99e:	681b      	ldr	r3, [r3, #0]
 800c9a0:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 800c9a4:	3201      	adds	r2, #1
 800c9a6:	f853 1032 	ldr.w	r1, [r3, r2, lsl #3]
 800c9aa:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c9ae:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800c9b2:	681a      	ldr	r2, [r3, #0]
 800c9b4:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800c9b8:	3301      	adds	r3, #1
 800c9ba:	00db      	lsls	r3, r3, #3
 800c9bc:	4413      	add	r3, r2
 800c9be:	889a      	ldrh	r2, [r3, #4]
 800c9c0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800c9c4:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800c9c8:	6818      	ldr	r0, [r3, #0]
 800c9ca:	f7ff fd75 	bl	800c4b8 <_ZN5Utils16readGPIOPinStateEP12GPIO_TypeDeft>
 800c9ce:	f8c7 011c 	str.w	r0, [r7, #284]	; 0x11c
		if (i > 0 ) {
 800c9d2:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800c9d6:	2b00      	cmp	r3, #0
 800c9d8:	d00a      	beq.n	800c9f0 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x214>
			list[2] += ",";
 800c9da:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800c9de:	2102      	movs	r1, #2
 800c9e0:	4618      	mov	r0, r3
 800c9e2:	f000 f8eb 	bl	800cbbc <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEixEj>
 800c9e6:	4603      	mov	r3, r0
 800c9e8:	4945      	ldr	r1, [pc, #276]	; (800cb00 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x324>)
 800c9ea:	4618      	mov	r0, r3
 800c9ec:	f004 fc02 	bl	80111f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
		}
		list[2] += std::to_string(status);
 800c9f0:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800c9f4:	2102      	movs	r1, #2
 800c9f6:	4618      	mov	r0, r3
 800c9f8:	f000 f8e0 	bl	800cbbc <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEixEj>
 800c9fc:	4604      	mov	r4, r0
 800c9fe:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800ca02:	f8d7 111c 	ldr.w	r1, [r7, #284]	; 0x11c
 800ca06:	4618      	mov	r0, r3
 800ca08:	f7fc fa44 	bl	8008e94 <_ZNSt7__cxx119to_stringEi>
 800ca0c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800ca10:	4619      	mov	r1, r3
 800ca12:	4620      	mov	r0, r4
 800ca14:	f004 fbc3 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
 800ca18:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800ca1c:	4618      	mov	r0, r3
 800ca1e:	f004 faa7 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	for (size_t i = 0; i < 8;  i++) {
 800ca22:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800ca26:	3301      	adds	r3, #1
 800ca28:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 800ca2c:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800ca30:	2b07      	cmp	r3, #7
 800ca32:	d9b0      	bls.n	800c996 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1ba>
	}

	for (size_t i = 0; i < list.size(); i ++) {
 800ca34:	2300      	movs	r3, #0
 800ca36:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 800ca3a:	e01a      	b.n	800ca72 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x296>
		data += comma;
 800ca3c:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800ca40:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800ca44:	4611      	mov	r1, r2
 800ca46:	4618      	mov	r0, r3
 800ca48:	f004 fba9 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
		data+= list[i];
 800ca4c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800ca50:	f8d7 1120 	ldr.w	r1, [r7, #288]	; 0x120
 800ca54:	4618      	mov	r0, r3
 800ca56:	f000 f8b1 	bl	800cbbc <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEixEj>
 800ca5a:	4602      	mov	r2, r0
 800ca5c:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800ca60:	4611      	mov	r1, r2
 800ca62:	4618      	mov	r0, r3
 800ca64:	f004 fb9b 	bl	801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
	for (size_t i = 0; i < list.size(); i ++) {
 800ca68:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800ca6c:	3301      	adds	r3, #1
 800ca6e:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 800ca72:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800ca76:	4618      	mov	r0, r3
 800ca78:	f000 f8af 	bl	800cbda <_ZNKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EE4sizeEv>
 800ca7c:	4602      	mov	r2, r0
 800ca7e:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800ca82:	4293      	cmp	r3, r2
 800ca84:	bf34      	ite	cc
 800ca86:	2301      	movcc	r3, #1
 800ca88:	2300      	movcs	r3, #0
 800ca8a:	b2db      	uxtb	r3, r3
 800ca8c:	2b00      	cmp	r3, #0
 800ca8e:	d1d5      	bne.n	800ca3c <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
	}

	data = data+ "\r";
 800ca90:	f107 03fc 	add.w	r3, r7, #252	; 0xfc
 800ca94:	f107 01ac 	add.w	r1, r7, #172	; 0xac
 800ca98:	4a1a      	ldr	r2, [pc, #104]	; (800cb04 <_ZN5Utils19createUSARTRealTimeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>)
 800ca9a:	4618      	mov	r0, r3
 800ca9c:	f7fe fa07 	bl	800aeae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>
 800caa0:	f107 02fc 	add.w	r2, r7, #252	; 0xfc
 800caa4:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800caa8:	4611      	mov	r1, r2
 800caaa:	4618      	mov	r0, r3
 800caac:	f004 fa6c 	bl	8010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800cab0:	f107 03fc 	add.w	r3, r7, #252	; 0xfc
 800cab4:	4618      	mov	r0, r3
 800cab6:	f004 fa5b 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    *messsage = data;
 800caba:	f107 02ac 	add.w	r2, r7, #172	; 0xac
 800cabe:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800cac2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800cac6:	4611      	mov	r1, r2
 800cac8:	6818      	ldr	r0, [r3, #0]
 800caca:	f004 fa57 	bl	8010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>

}
 800cace:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800cad2:	4618      	mov	r0, r3
 800cad4:	f7ff fe6a 	bl	800c7ac <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EED1Ev>
 800cad8:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800cadc:	4618      	mov	r0, r3
 800cade:	f004 fa47 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800cae2:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800cae6:	4618      	mov	r0, r3
 800cae8:	f004 fa42 	bl	8010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800caec:	f507 779a 	add.w	r7, r7, #308	; 0x134
 800caf0:	46bd      	mov	sp, r7
 800caf2:	bd90      	pop	{r4, r7, pc}
 800caf4:	080166f8 	.word	0x080166f8
 800caf8:	080166fc 	.word	0x080166fc
 800cafc:	080166e0 	.word	0x080166e0
 800cb00:	08016700 	.word	0x08016700
 800cb04:	08016704 	.word	0x08016704

0800cb08 <_ZN5Utils11usartSwitchEP5cJSON>:
	    }

	    cJSON_Delete(rootJson);
}

void Utils::usartSwitch(cJSON* data) {
 800cb08:	b580      	push	{r7, lr}
 800cb0a:	b088      	sub	sp, #32
 800cb0c:	af00      	add	r7, sp, #0
 800cb0e:	6078      	str	r0, [r7, #4]
 800cb10:	6039      	str	r1, [r7, #0]
    const cJSON *number = cJSON_GetObjectItemCaseSensitive(data, "number");
 800cb12:	4926      	ldr	r1, [pc, #152]	; (800cbac <_ZN5Utils11usartSwitchEP5cJSON+0xa4>)
 800cb14:	6838      	ldr	r0, [r7, #0]
 800cb16:	f7f9 fc05 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800cb1a:	61f8      	str	r0, [r7, #28]
    // Directly getting the status as expected to be true/false (1/0)
    const cJSON *status = cJSON_GetObjectItemCaseSensitive(data, "status");
 800cb1c:	4924      	ldr	r1, [pc, #144]	; (800cbb0 <_ZN5Utils11usartSwitchEP5cJSON+0xa8>)
 800cb1e:	6838      	ldr	r0, [r7, #0]
 800cb20:	f7f9 fc00 	bl	8006324 <cJSON_GetObjectItemCaseSensitive>
 800cb24:	61b8      	str	r0, [r7, #24]


    // Validate number as a numeric value and status also; although boolean, it comes as numeric in cJSON.
    if (cJSON_IsNumber(number) && cJSON_IsBool(status)) { // Assuming status comes as a numeric representation of a boolean
 800cb26:	69f8      	ldr	r0, [r7, #28]
 800cb28:	f7f9 fde3 	bl	80066f2 <cJSON_IsNumber>
 800cb2c:	4603      	mov	r3, r0
 800cb2e:	2b00      	cmp	r3, #0
 800cb30:	d007      	beq.n	800cb42 <_ZN5Utils11usartSwitchEP5cJSON+0x3a>
 800cb32:	69b8      	ldr	r0, [r7, #24]
 800cb34:	f7f9 fdc5 	bl	80066c2 <cJSON_IsBool>
 800cb38:	4603      	mov	r3, r0
 800cb3a:	2b00      	cmp	r3, #0
 800cb3c:	d001      	beq.n	800cb42 <_ZN5Utils11usartSwitchEP5cJSON+0x3a>
 800cb3e:	2301      	movs	r3, #1
 800cb40:	e000      	b.n	800cb44 <_ZN5Utils11usartSwitchEP5cJSON+0x3c>
 800cb42:	2300      	movs	r3, #0
 800cb44:	2b00      	cmp	r3, #0
 800cb46:	d02c      	beq.n	800cba2 <_ZN5Utils11usartSwitchEP5cJSON+0x9a>

        if (number->valueint >= 1 && number->valueint <= 8) {
 800cb48:	69fb      	ldr	r3, [r7, #28]
 800cb4a:	695b      	ldr	r3, [r3, #20]
 800cb4c:	2b00      	cmp	r3, #0
 800cb4e:	dd28      	ble.n	800cba2 <_ZN5Utils11usartSwitchEP5cJSON+0x9a>
 800cb50:	69fb      	ldr	r3, [r7, #28]
 800cb52:	695b      	ldr	r3, [r3, #20]
 800cb54:	2b08      	cmp	r3, #8
 800cb56:	dc24      	bgt.n	800cba2 <_ZN5Utils11usartSwitchEP5cJSON+0x9a>
            int arrayIndex = number->valueint - 1;
 800cb58:	69fb      	ldr	r3, [r7, #28]
 800cb5a:	695b      	ldr	r3, [r3, #20]
 800cb5c:	3b01      	subs	r3, #1
 800cb5e:	617b      	str	r3, [r7, #20]
            PortAndPins targetSwitch = switches[arrayIndex];
 800cb60:	6879      	ldr	r1, [r7, #4]
 800cb62:	697b      	ldr	r3, [r7, #20]
 800cb64:	3301      	adds	r3, #1
 800cb66:	f107 0208 	add.w	r2, r7, #8
 800cb6a:	00db      	lsls	r3, r3, #3
 800cb6c:	440b      	add	r3, r1
 800cb6e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800cb72:	e882 0003 	stmia.w	r2, {r0, r1}

            bool success = switchRelay(targetSwitch.port, targetSwitch.pin, status->valueint);
 800cb76:	68b9      	ldr	r1, [r7, #8]
 800cb78:	89ba      	ldrh	r2, [r7, #12]
 800cb7a:	69bb      	ldr	r3, [r7, #24]
 800cb7c:	695b      	ldr	r3, [r3, #20]
 800cb7e:	6878      	ldr	r0, [r7, #4]
 800cb80:	f7ff fc72 	bl	800c468 <_ZN5Utils11switchRelayEP12GPIO_TypeDefti>
 800cb84:	4603      	mov	r3, r0
 800cb86:	74fb      	strb	r3, [r7, #19]
            if (success) {
 800cb88:	7cfb      	ldrb	r3, [r7, #19]
 800cb8a:	2b00      	cmp	r3, #0
 800cb8c:	d006      	beq.n	800cb9c <_ZN5Utils11usartSwitchEP5cJSON+0x94>
                print("The %d switch has been toggled.\r\n", number->valueint);
 800cb8e:	69fb      	ldr	r3, [r7, #28]
 800cb90:	695b      	ldr	r3, [r3, #20]
 800cb92:	4619      	mov	r1, r3
 800cb94:	4807      	ldr	r0, [pc, #28]	; (800cbb4 <_ZN5Utils11usartSwitchEP5cJSON+0xac>)
 800cb96:	f7ff fc21 	bl	800c3dc <_ZN5Utils5printEPKcz>
            } else {
                print("There is an issue with switch \r\n");
            }
        }
    }
}
 800cb9a:	e002      	b.n	800cba2 <_ZN5Utils11usartSwitchEP5cJSON+0x9a>
                print("There is an issue with switch \r\n");
 800cb9c:	4806      	ldr	r0, [pc, #24]	; (800cbb8 <_ZN5Utils11usartSwitchEP5cJSON+0xb0>)
 800cb9e:	f7ff fc1d 	bl	800c3dc <_ZN5Utils5printEPKcz>
}
 800cba2:	bf00      	nop
 800cba4:	3720      	adds	r7, #32
 800cba6:	46bd      	mov	sp, r7
 800cba8:	bd80      	pop	{r7, pc}
 800cbaa:	bf00      	nop
 800cbac:	08016724 	.word	0x08016724
 800cbb0:	0801672c 	.word	0x0801672c
 800cbb4:	08016734 	.word	0x08016734
 800cbb8:	08016758 	.word	0x08016758

0800cbbc <_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EEixEj>:
      operator[](size_type __n) noexcept
 800cbbc:	b580      	push	{r7, lr}
 800cbbe:	b082      	sub	sp, #8
 800cbc0:	af00      	add	r7, sp, #0
 800cbc2:	6078      	str	r0, [r7, #4]
 800cbc4:	6039      	str	r1, [r7, #0]
	return _AT_Type::_S_ref(_M_elems, __n);
 800cbc6:	687b      	ldr	r3, [r7, #4]
 800cbc8:	6839      	ldr	r1, [r7, #0]
 800cbca:	4618      	mov	r0, r3
 800cbcc:	f000 f810 	bl	800cbf0 <_ZNSt14__array_traitsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EE6_S_refERA3_KS5_j>
 800cbd0:	4603      	mov	r3, r0
      }
 800cbd2:	4618      	mov	r0, r3
 800cbd4:	3708      	adds	r7, #8
 800cbd6:	46bd      	mov	sp, r7
 800cbd8:	bd80      	pop	{r7, pc}

0800cbda <_ZNKSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EE4sizeEv>:
      size() const noexcept { return _Nm; }
 800cbda:	b480      	push	{r7}
 800cbdc:	b083      	sub	sp, #12
 800cbde:	af00      	add	r7, sp, #0
 800cbe0:	6078      	str	r0, [r7, #4]
 800cbe2:	2303      	movs	r3, #3
 800cbe4:	4618      	mov	r0, r3
 800cbe6:	370c      	adds	r7, #12
 800cbe8:	46bd      	mov	sp, r7
 800cbea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbee:	4770      	bx	lr

0800cbf0 <_ZNSt14__array_traitsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj3EE6_S_refERA3_KS5_j>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
 800cbf0:	b480      	push	{r7}
 800cbf2:	b083      	sub	sp, #12
 800cbf4:	af00      	add	r7, sp, #0
 800cbf6:	6078      	str	r0, [r7, #4]
 800cbf8:	6039      	str	r1, [r7, #0]
      { return const_cast<_Tp&>(__t[__n]); }
 800cbfa:	683a      	ldr	r2, [r7, #0]
 800cbfc:	4613      	mov	r3, r2
 800cbfe:	005b      	lsls	r3, r3, #1
 800cc00:	4413      	add	r3, r2
 800cc02:	00db      	lsls	r3, r3, #3
 800cc04:	687a      	ldr	r2, [r7, #4]
 800cc06:	4413      	add	r3, r2
 800cc08:	4618      	mov	r0, r3
 800cc0a:	370c      	adds	r7, #12
 800cc0c:	46bd      	mov	sp, r7
 800cc0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc12:	4770      	bx	lr

0800cc14 <Reset_Handler>:
 800cc14:	f8df d034 	ldr.w	sp, [pc, #52]	; 800cc4c <LoopFillZerobss+0xe>
 800cc18:	f7ff fad4 	bl	800c1c4 <SystemInit>
 800cc1c:	480c      	ldr	r0, [pc, #48]	; (800cc50 <LoopFillZerobss+0x12>)
 800cc1e:	490d      	ldr	r1, [pc, #52]	; (800cc54 <LoopFillZerobss+0x16>)
 800cc20:	4a0d      	ldr	r2, [pc, #52]	; (800cc58 <LoopFillZerobss+0x1a>)
 800cc22:	2300      	movs	r3, #0
 800cc24:	e002      	b.n	800cc2c <LoopCopyDataInit>

0800cc26 <CopyDataInit>:
 800cc26:	58d4      	ldr	r4, [r2, r3]
 800cc28:	50c4      	str	r4, [r0, r3]
 800cc2a:	3304      	adds	r3, #4

0800cc2c <LoopCopyDataInit>:
 800cc2c:	18c4      	adds	r4, r0, r3
 800cc2e:	428c      	cmp	r4, r1
 800cc30:	d3f9      	bcc.n	800cc26 <CopyDataInit>
 800cc32:	4a0a      	ldr	r2, [pc, #40]	; (800cc5c <LoopFillZerobss+0x1e>)
 800cc34:	4c0a      	ldr	r4, [pc, #40]	; (800cc60 <LoopFillZerobss+0x22>)
 800cc36:	2300      	movs	r3, #0
 800cc38:	e001      	b.n	800cc3e <LoopFillZerobss>

0800cc3a <FillZerobss>:
 800cc3a:	6013      	str	r3, [r2, #0]
 800cc3c:	3204      	adds	r2, #4

0800cc3e <LoopFillZerobss>:
 800cc3e:	42a2      	cmp	r2, r4
 800cc40:	d3fb      	bcc.n	800cc3a <FillZerobss>
 800cc42:	f006 f9d7 	bl	8012ff4 <__libc_init_array>
 800cc46:	f7fe f9b7 	bl	800afb8 <main>
 800cc4a:	4770      	bx	lr
 800cc4c:	20020000 	.word	0x20020000
 800cc50:	20000000 	.word	0x20000000
 800cc54:	2000022c 	.word	0x2000022c
 800cc58:	08016d3c 	.word	0x08016d3c
 800cc5c:	2000022c 	.word	0x2000022c
 800cc60:	2000311c 	.word	0x2000311c

0800cc64 <CAN1_RX0_IRQHandler>:
 800cc64:	e7fe      	b.n	800cc64 <CAN1_RX0_IRQHandler>
	...

0800cc68 <HAL_Init>:
 800cc68:	b580      	push	{r7, lr}
 800cc6a:	af00      	add	r7, sp, #0
 800cc6c:	4b0e      	ldr	r3, [pc, #56]	; (800cca8 <HAL_Init+0x40>)
 800cc6e:	681b      	ldr	r3, [r3, #0]
 800cc70:	4a0d      	ldr	r2, [pc, #52]	; (800cca8 <HAL_Init+0x40>)
 800cc72:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800cc76:	6013      	str	r3, [r2, #0]
 800cc78:	4b0b      	ldr	r3, [pc, #44]	; (800cca8 <HAL_Init+0x40>)
 800cc7a:	681b      	ldr	r3, [r3, #0]
 800cc7c:	4a0a      	ldr	r2, [pc, #40]	; (800cca8 <HAL_Init+0x40>)
 800cc7e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800cc82:	6013      	str	r3, [r2, #0]
 800cc84:	4b08      	ldr	r3, [pc, #32]	; (800cca8 <HAL_Init+0x40>)
 800cc86:	681b      	ldr	r3, [r3, #0]
 800cc88:	4a07      	ldr	r2, [pc, #28]	; (800cca8 <HAL_Init+0x40>)
 800cc8a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cc8e:	6013      	str	r3, [r2, #0]
 800cc90:	2003      	movs	r0, #3
 800cc92:	f000 fe87 	bl	800d9a4 <HAL_NVIC_SetPriorityGrouping>
 800cc96:	200f      	movs	r0, #15
 800cc98:	f000 f808 	bl	800ccac <HAL_InitTick>
 800cc9c:	f7ff f832 	bl	800bd04 <HAL_MspInit>
 800cca0:	2300      	movs	r3, #0
 800cca2:	4618      	mov	r0, r3
 800cca4:	bd80      	pop	{r7, pc}
 800cca6:	bf00      	nop
 800cca8:	40023c00 	.word	0x40023c00

0800ccac <HAL_InitTick>:
 800ccac:	b580      	push	{r7, lr}
 800ccae:	b082      	sub	sp, #8
 800ccb0:	af00      	add	r7, sp, #0
 800ccb2:	6078      	str	r0, [r7, #4]
 800ccb4:	4b12      	ldr	r3, [pc, #72]	; (800cd00 <HAL_InitTick+0x54>)
 800ccb6:	681a      	ldr	r2, [r3, #0]
 800ccb8:	4b12      	ldr	r3, [pc, #72]	; (800cd04 <HAL_InitTick+0x58>)
 800ccba:	781b      	ldrb	r3, [r3, #0]
 800ccbc:	4619      	mov	r1, r3
 800ccbe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ccc2:	fbb3 f3f1 	udiv	r3, r3, r1
 800ccc6:	fbb2 f3f3 	udiv	r3, r2, r3
 800ccca:	4618      	mov	r0, r3
 800cccc:	f000 fe9f 	bl	800da0e <HAL_SYSTICK_Config>
 800ccd0:	4603      	mov	r3, r0
 800ccd2:	2b00      	cmp	r3, #0
 800ccd4:	d001      	beq.n	800ccda <HAL_InitTick+0x2e>
 800ccd6:	2301      	movs	r3, #1
 800ccd8:	e00e      	b.n	800ccf8 <HAL_InitTick+0x4c>
 800ccda:	687b      	ldr	r3, [r7, #4]
 800ccdc:	2b0f      	cmp	r3, #15
 800ccde:	d80a      	bhi.n	800ccf6 <HAL_InitTick+0x4a>
 800cce0:	2200      	movs	r2, #0
 800cce2:	6879      	ldr	r1, [r7, #4]
 800cce4:	f04f 30ff 	mov.w	r0, #4294967295
 800cce8:	f000 fe67 	bl	800d9ba <HAL_NVIC_SetPriority>
 800ccec:	4a06      	ldr	r2, [pc, #24]	; (800cd08 <HAL_InitTick+0x5c>)
 800ccee:	687b      	ldr	r3, [r7, #4]
 800ccf0:	6013      	str	r3, [r2, #0]
 800ccf2:	2300      	movs	r3, #0
 800ccf4:	e000      	b.n	800ccf8 <HAL_InitTick+0x4c>
 800ccf6:	2301      	movs	r3, #1
 800ccf8:	4618      	mov	r0, r3
 800ccfa:	3708      	adds	r7, #8
 800ccfc:	46bd      	mov	sp, r7
 800ccfe:	bd80      	pop	{r7, pc}
 800cd00:	20000058 	.word	0x20000058
 800cd04:	20000060 	.word	0x20000060
 800cd08:	2000005c 	.word	0x2000005c

0800cd0c <HAL_IncTick>:
 800cd0c:	b480      	push	{r7}
 800cd0e:	af00      	add	r7, sp, #0
 800cd10:	4b06      	ldr	r3, [pc, #24]	; (800cd2c <HAL_IncTick+0x20>)
 800cd12:	781b      	ldrb	r3, [r3, #0]
 800cd14:	461a      	mov	r2, r3
 800cd16:	4b06      	ldr	r3, [pc, #24]	; (800cd30 <HAL_IncTick+0x24>)
 800cd18:	681b      	ldr	r3, [r3, #0]
 800cd1a:	4413      	add	r3, r2
 800cd1c:	4a04      	ldr	r2, [pc, #16]	; (800cd30 <HAL_IncTick+0x24>)
 800cd1e:	6013      	str	r3, [r2, #0]
 800cd20:	bf00      	nop
 800cd22:	46bd      	mov	sp, r7
 800cd24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd28:	4770      	bx	lr
 800cd2a:	bf00      	nop
 800cd2c:	20000060 	.word	0x20000060
 800cd30:	20002fc8 	.word	0x20002fc8

0800cd34 <HAL_GetTick>:
 800cd34:	b480      	push	{r7}
 800cd36:	af00      	add	r7, sp, #0
 800cd38:	4b03      	ldr	r3, [pc, #12]	; (800cd48 <HAL_GetTick+0x14>)
 800cd3a:	681b      	ldr	r3, [r3, #0]
 800cd3c:	4618      	mov	r0, r3
 800cd3e:	46bd      	mov	sp, r7
 800cd40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd44:	4770      	bx	lr
 800cd46:	bf00      	nop
 800cd48:	20002fc8 	.word	0x20002fc8

0800cd4c <HAL_Delay>:
 800cd4c:	b580      	push	{r7, lr}
 800cd4e:	b084      	sub	sp, #16
 800cd50:	af00      	add	r7, sp, #0
 800cd52:	6078      	str	r0, [r7, #4]
 800cd54:	f7ff ffee 	bl	800cd34 <HAL_GetTick>
 800cd58:	60b8      	str	r0, [r7, #8]
 800cd5a:	687b      	ldr	r3, [r7, #4]
 800cd5c:	60fb      	str	r3, [r7, #12]
 800cd5e:	68fb      	ldr	r3, [r7, #12]
 800cd60:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cd64:	d005      	beq.n	800cd72 <HAL_Delay+0x26>
 800cd66:	4b0a      	ldr	r3, [pc, #40]	; (800cd90 <HAL_Delay+0x44>)
 800cd68:	781b      	ldrb	r3, [r3, #0]
 800cd6a:	461a      	mov	r2, r3
 800cd6c:	68fb      	ldr	r3, [r7, #12]
 800cd6e:	4413      	add	r3, r2
 800cd70:	60fb      	str	r3, [r7, #12]
 800cd72:	bf00      	nop
 800cd74:	f7ff ffde 	bl	800cd34 <HAL_GetTick>
 800cd78:	4602      	mov	r2, r0
 800cd7a:	68bb      	ldr	r3, [r7, #8]
 800cd7c:	1ad3      	subs	r3, r2, r3
 800cd7e:	68fa      	ldr	r2, [r7, #12]
 800cd80:	429a      	cmp	r2, r3
 800cd82:	d8f7      	bhi.n	800cd74 <HAL_Delay+0x28>
 800cd84:	bf00      	nop
 800cd86:	bf00      	nop
 800cd88:	3710      	adds	r7, #16
 800cd8a:	46bd      	mov	sp, r7
 800cd8c:	bd80      	pop	{r7, pc}
 800cd8e:	bf00      	nop
 800cd90:	20000060 	.word	0x20000060

0800cd94 <HAL_ADC_Init>:
 800cd94:	b580      	push	{r7, lr}
 800cd96:	b084      	sub	sp, #16
 800cd98:	af00      	add	r7, sp, #0
 800cd9a:	6078      	str	r0, [r7, #4]
 800cd9c:	2300      	movs	r3, #0
 800cd9e:	73fb      	strb	r3, [r7, #15]
 800cda0:	687b      	ldr	r3, [r7, #4]
 800cda2:	2b00      	cmp	r3, #0
 800cda4:	d101      	bne.n	800cdaa <HAL_ADC_Init+0x16>
 800cda6:	2301      	movs	r3, #1
 800cda8:	e033      	b.n	800ce12 <HAL_ADC_Init+0x7e>
 800cdaa:	687b      	ldr	r3, [r7, #4]
 800cdac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cdae:	2b00      	cmp	r3, #0
 800cdb0:	d109      	bne.n	800cdc6 <HAL_ADC_Init+0x32>
 800cdb2:	6878      	ldr	r0, [r7, #4]
 800cdb4:	f7fe ffce 	bl	800bd54 <HAL_ADC_MspInit>
 800cdb8:	687b      	ldr	r3, [r7, #4]
 800cdba:	2200      	movs	r2, #0
 800cdbc:	645a      	str	r2, [r3, #68]	; 0x44
 800cdbe:	687b      	ldr	r3, [r7, #4]
 800cdc0:	2200      	movs	r2, #0
 800cdc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800cdc6:	687b      	ldr	r3, [r7, #4]
 800cdc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cdca:	f003 0310 	and.w	r3, r3, #16
 800cdce:	2b00      	cmp	r3, #0
 800cdd0:	d118      	bne.n	800ce04 <HAL_ADC_Init+0x70>
 800cdd2:	687b      	ldr	r3, [r7, #4]
 800cdd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cdd6:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800cdda:	f023 0302 	bic.w	r3, r3, #2
 800cdde:	f043 0202 	orr.w	r2, r3, #2
 800cde2:	687b      	ldr	r3, [r7, #4]
 800cde4:	641a      	str	r2, [r3, #64]	; 0x40
 800cde6:	6878      	ldr	r0, [r7, #4]
 800cde8:	f000 fc06 	bl	800d5f8 <ADC_Init>
 800cdec:	687b      	ldr	r3, [r7, #4]
 800cdee:	2200      	movs	r2, #0
 800cdf0:	645a      	str	r2, [r3, #68]	; 0x44
 800cdf2:	687b      	ldr	r3, [r7, #4]
 800cdf4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cdf6:	f023 0303 	bic.w	r3, r3, #3
 800cdfa:	f043 0201 	orr.w	r2, r3, #1
 800cdfe:	687b      	ldr	r3, [r7, #4]
 800ce00:	641a      	str	r2, [r3, #64]	; 0x40
 800ce02:	e001      	b.n	800ce08 <HAL_ADC_Init+0x74>
 800ce04:	2301      	movs	r3, #1
 800ce06:	73fb      	strb	r3, [r7, #15]
 800ce08:	687b      	ldr	r3, [r7, #4]
 800ce0a:	2200      	movs	r2, #0
 800ce0c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ce10:	7bfb      	ldrb	r3, [r7, #15]
 800ce12:	4618      	mov	r0, r3
 800ce14:	3710      	adds	r7, #16
 800ce16:	46bd      	mov	sp, r7
 800ce18:	bd80      	pop	{r7, pc}
	...

0800ce1c <HAL_ADC_Start>:
 800ce1c:	b480      	push	{r7}
 800ce1e:	b085      	sub	sp, #20
 800ce20:	af00      	add	r7, sp, #0
 800ce22:	6078      	str	r0, [r7, #4]
 800ce24:	2300      	movs	r3, #0
 800ce26:	60bb      	str	r3, [r7, #8]
 800ce28:	687b      	ldr	r3, [r7, #4]
 800ce2a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ce2e:	2b01      	cmp	r3, #1
 800ce30:	d101      	bne.n	800ce36 <HAL_ADC_Start+0x1a>
 800ce32:	2302      	movs	r3, #2
 800ce34:	e0b2      	b.n	800cf9c <HAL_ADC_Start+0x180>
 800ce36:	687b      	ldr	r3, [r7, #4]
 800ce38:	2201      	movs	r2, #1
 800ce3a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ce3e:	687b      	ldr	r3, [r7, #4]
 800ce40:	681b      	ldr	r3, [r3, #0]
 800ce42:	689b      	ldr	r3, [r3, #8]
 800ce44:	f003 0301 	and.w	r3, r3, #1
 800ce48:	2b01      	cmp	r3, #1
 800ce4a:	d018      	beq.n	800ce7e <HAL_ADC_Start+0x62>
 800ce4c:	687b      	ldr	r3, [r7, #4]
 800ce4e:	681b      	ldr	r3, [r3, #0]
 800ce50:	689a      	ldr	r2, [r3, #8]
 800ce52:	687b      	ldr	r3, [r7, #4]
 800ce54:	681b      	ldr	r3, [r3, #0]
 800ce56:	f042 0201 	orr.w	r2, r2, #1
 800ce5a:	609a      	str	r2, [r3, #8]
 800ce5c:	4b52      	ldr	r3, [pc, #328]	; (800cfa8 <HAL_ADC_Start+0x18c>)
 800ce5e:	681b      	ldr	r3, [r3, #0]
 800ce60:	4a52      	ldr	r2, [pc, #328]	; (800cfac <HAL_ADC_Start+0x190>)
 800ce62:	fba2 2303 	umull	r2, r3, r2, r3
 800ce66:	0c9a      	lsrs	r2, r3, #18
 800ce68:	4613      	mov	r3, r2
 800ce6a:	005b      	lsls	r3, r3, #1
 800ce6c:	4413      	add	r3, r2
 800ce6e:	60bb      	str	r3, [r7, #8]
 800ce70:	e002      	b.n	800ce78 <HAL_ADC_Start+0x5c>
 800ce72:	68bb      	ldr	r3, [r7, #8]
 800ce74:	3b01      	subs	r3, #1
 800ce76:	60bb      	str	r3, [r7, #8]
 800ce78:	68bb      	ldr	r3, [r7, #8]
 800ce7a:	2b00      	cmp	r3, #0
 800ce7c:	d1f9      	bne.n	800ce72 <HAL_ADC_Start+0x56>
 800ce7e:	687b      	ldr	r3, [r7, #4]
 800ce80:	681b      	ldr	r3, [r3, #0]
 800ce82:	689b      	ldr	r3, [r3, #8]
 800ce84:	f003 0301 	and.w	r3, r3, #1
 800ce88:	2b01      	cmp	r3, #1
 800ce8a:	d17a      	bne.n	800cf82 <HAL_ADC_Start+0x166>
 800ce8c:	687b      	ldr	r3, [r7, #4]
 800ce8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ce90:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800ce94:	f023 0301 	bic.w	r3, r3, #1
 800ce98:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800ce9c:	687b      	ldr	r3, [r7, #4]
 800ce9e:	641a      	str	r2, [r3, #64]	; 0x40
 800cea0:	687b      	ldr	r3, [r7, #4]
 800cea2:	681b      	ldr	r3, [r3, #0]
 800cea4:	685b      	ldr	r3, [r3, #4]
 800cea6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800ceaa:	2b00      	cmp	r3, #0
 800ceac:	d007      	beq.n	800cebe <HAL_ADC_Start+0xa2>
 800ceae:	687b      	ldr	r3, [r7, #4]
 800ceb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ceb2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800ceb6:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800ceba:	687b      	ldr	r3, [r7, #4]
 800cebc:	641a      	str	r2, [r3, #64]	; 0x40
 800cebe:	687b      	ldr	r3, [r7, #4]
 800cec0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cec2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800cec6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ceca:	d106      	bne.n	800ceda <HAL_ADC_Start+0xbe>
 800cecc:	687b      	ldr	r3, [r7, #4]
 800cece:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ced0:	f023 0206 	bic.w	r2, r3, #6
 800ced4:	687b      	ldr	r3, [r7, #4]
 800ced6:	645a      	str	r2, [r3, #68]	; 0x44
 800ced8:	e002      	b.n	800cee0 <HAL_ADC_Start+0xc4>
 800ceda:	687b      	ldr	r3, [r7, #4]
 800cedc:	2200      	movs	r2, #0
 800cede:	645a      	str	r2, [r3, #68]	; 0x44
 800cee0:	687b      	ldr	r3, [r7, #4]
 800cee2:	2200      	movs	r2, #0
 800cee4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800cee8:	4b31      	ldr	r3, [pc, #196]	; (800cfb0 <HAL_ADC_Start+0x194>)
 800ceea:	60fb      	str	r3, [r7, #12]
 800ceec:	687b      	ldr	r3, [r7, #4]
 800ceee:	681b      	ldr	r3, [r3, #0]
 800cef0:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800cef4:	601a      	str	r2, [r3, #0]
 800cef6:	68fb      	ldr	r3, [r7, #12]
 800cef8:	685b      	ldr	r3, [r3, #4]
 800cefa:	f003 031f 	and.w	r3, r3, #31
 800cefe:	2b00      	cmp	r3, #0
 800cf00:	d12a      	bne.n	800cf58 <HAL_ADC_Start+0x13c>
 800cf02:	687b      	ldr	r3, [r7, #4]
 800cf04:	681b      	ldr	r3, [r3, #0]
 800cf06:	4a2b      	ldr	r2, [pc, #172]	; (800cfb4 <HAL_ADC_Start+0x198>)
 800cf08:	4293      	cmp	r3, r2
 800cf0a:	d015      	beq.n	800cf38 <HAL_ADC_Start+0x11c>
 800cf0c:	687b      	ldr	r3, [r7, #4]
 800cf0e:	681b      	ldr	r3, [r3, #0]
 800cf10:	4a29      	ldr	r2, [pc, #164]	; (800cfb8 <HAL_ADC_Start+0x19c>)
 800cf12:	4293      	cmp	r3, r2
 800cf14:	d105      	bne.n	800cf22 <HAL_ADC_Start+0x106>
 800cf16:	4b26      	ldr	r3, [pc, #152]	; (800cfb0 <HAL_ADC_Start+0x194>)
 800cf18:	685b      	ldr	r3, [r3, #4]
 800cf1a:	f003 031f 	and.w	r3, r3, #31
 800cf1e:	2b00      	cmp	r3, #0
 800cf20:	d00a      	beq.n	800cf38 <HAL_ADC_Start+0x11c>
 800cf22:	687b      	ldr	r3, [r7, #4]
 800cf24:	681b      	ldr	r3, [r3, #0]
 800cf26:	4a25      	ldr	r2, [pc, #148]	; (800cfbc <HAL_ADC_Start+0x1a0>)
 800cf28:	4293      	cmp	r3, r2
 800cf2a:	d136      	bne.n	800cf9a <HAL_ADC_Start+0x17e>
 800cf2c:	4b20      	ldr	r3, [pc, #128]	; (800cfb0 <HAL_ADC_Start+0x194>)
 800cf2e:	685b      	ldr	r3, [r3, #4]
 800cf30:	f003 0310 	and.w	r3, r3, #16
 800cf34:	2b00      	cmp	r3, #0
 800cf36:	d130      	bne.n	800cf9a <HAL_ADC_Start+0x17e>
 800cf38:	687b      	ldr	r3, [r7, #4]
 800cf3a:	681b      	ldr	r3, [r3, #0]
 800cf3c:	689b      	ldr	r3, [r3, #8]
 800cf3e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800cf42:	2b00      	cmp	r3, #0
 800cf44:	d129      	bne.n	800cf9a <HAL_ADC_Start+0x17e>
 800cf46:	687b      	ldr	r3, [r7, #4]
 800cf48:	681b      	ldr	r3, [r3, #0]
 800cf4a:	689a      	ldr	r2, [r3, #8]
 800cf4c:	687b      	ldr	r3, [r7, #4]
 800cf4e:	681b      	ldr	r3, [r3, #0]
 800cf50:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800cf54:	609a      	str	r2, [r3, #8]
 800cf56:	e020      	b.n	800cf9a <HAL_ADC_Start+0x17e>
 800cf58:	687b      	ldr	r3, [r7, #4]
 800cf5a:	681b      	ldr	r3, [r3, #0]
 800cf5c:	4a15      	ldr	r2, [pc, #84]	; (800cfb4 <HAL_ADC_Start+0x198>)
 800cf5e:	4293      	cmp	r3, r2
 800cf60:	d11b      	bne.n	800cf9a <HAL_ADC_Start+0x17e>
 800cf62:	687b      	ldr	r3, [r7, #4]
 800cf64:	681b      	ldr	r3, [r3, #0]
 800cf66:	689b      	ldr	r3, [r3, #8]
 800cf68:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800cf6c:	2b00      	cmp	r3, #0
 800cf6e:	d114      	bne.n	800cf9a <HAL_ADC_Start+0x17e>
 800cf70:	687b      	ldr	r3, [r7, #4]
 800cf72:	681b      	ldr	r3, [r3, #0]
 800cf74:	689a      	ldr	r2, [r3, #8]
 800cf76:	687b      	ldr	r3, [r7, #4]
 800cf78:	681b      	ldr	r3, [r3, #0]
 800cf7a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800cf7e:	609a      	str	r2, [r3, #8]
 800cf80:	e00b      	b.n	800cf9a <HAL_ADC_Start+0x17e>
 800cf82:	687b      	ldr	r3, [r7, #4]
 800cf84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cf86:	f043 0210 	orr.w	r2, r3, #16
 800cf8a:	687b      	ldr	r3, [r7, #4]
 800cf8c:	641a      	str	r2, [r3, #64]	; 0x40
 800cf8e:	687b      	ldr	r3, [r7, #4]
 800cf90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cf92:	f043 0201 	orr.w	r2, r3, #1
 800cf96:	687b      	ldr	r3, [r7, #4]
 800cf98:	645a      	str	r2, [r3, #68]	; 0x44
 800cf9a:	2300      	movs	r3, #0
 800cf9c:	4618      	mov	r0, r3
 800cf9e:	3714      	adds	r7, #20
 800cfa0:	46bd      	mov	sp, r7
 800cfa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfa6:	4770      	bx	lr
 800cfa8:	20000058 	.word	0x20000058
 800cfac:	431bde83 	.word	0x431bde83
 800cfb0:	40012300 	.word	0x40012300
 800cfb4:	40012000 	.word	0x40012000
 800cfb8:	40012100 	.word	0x40012100
 800cfbc:	40012200 	.word	0x40012200

0800cfc0 <HAL_ADC_Stop>:
 800cfc0:	b480      	push	{r7}
 800cfc2:	b083      	sub	sp, #12
 800cfc4:	af00      	add	r7, sp, #0
 800cfc6:	6078      	str	r0, [r7, #4]
 800cfc8:	687b      	ldr	r3, [r7, #4]
 800cfca:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800cfce:	2b01      	cmp	r3, #1
 800cfd0:	d101      	bne.n	800cfd6 <HAL_ADC_Stop+0x16>
 800cfd2:	2302      	movs	r3, #2
 800cfd4:	e021      	b.n	800d01a <HAL_ADC_Stop+0x5a>
 800cfd6:	687b      	ldr	r3, [r7, #4]
 800cfd8:	2201      	movs	r2, #1
 800cfda:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800cfde:	687b      	ldr	r3, [r7, #4]
 800cfe0:	681b      	ldr	r3, [r3, #0]
 800cfe2:	689a      	ldr	r2, [r3, #8]
 800cfe4:	687b      	ldr	r3, [r7, #4]
 800cfe6:	681b      	ldr	r3, [r3, #0]
 800cfe8:	f022 0201 	bic.w	r2, r2, #1
 800cfec:	609a      	str	r2, [r3, #8]
 800cfee:	687b      	ldr	r3, [r7, #4]
 800cff0:	681b      	ldr	r3, [r3, #0]
 800cff2:	689b      	ldr	r3, [r3, #8]
 800cff4:	f003 0301 	and.w	r3, r3, #1
 800cff8:	2b00      	cmp	r3, #0
 800cffa:	d109      	bne.n	800d010 <HAL_ADC_Stop+0x50>
 800cffc:	687b      	ldr	r3, [r7, #4]
 800cffe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d000:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800d004:	f023 0301 	bic.w	r3, r3, #1
 800d008:	f043 0201 	orr.w	r2, r3, #1
 800d00c:	687b      	ldr	r3, [r7, #4]
 800d00e:	641a      	str	r2, [r3, #64]	; 0x40
 800d010:	687b      	ldr	r3, [r7, #4]
 800d012:	2200      	movs	r2, #0
 800d014:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800d018:	2300      	movs	r3, #0
 800d01a:	4618      	mov	r0, r3
 800d01c:	370c      	adds	r7, #12
 800d01e:	46bd      	mov	sp, r7
 800d020:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d024:	4770      	bx	lr

0800d026 <HAL_ADC_PollForConversion>:
 800d026:	b580      	push	{r7, lr}
 800d028:	b084      	sub	sp, #16
 800d02a:	af00      	add	r7, sp, #0
 800d02c:	6078      	str	r0, [r7, #4]
 800d02e:	6039      	str	r1, [r7, #0]
 800d030:	2300      	movs	r3, #0
 800d032:	60fb      	str	r3, [r7, #12]
 800d034:	687b      	ldr	r3, [r7, #4]
 800d036:	681b      	ldr	r3, [r3, #0]
 800d038:	689b      	ldr	r3, [r3, #8]
 800d03a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800d03e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800d042:	d113      	bne.n	800d06c <HAL_ADC_PollForConversion+0x46>
 800d044:	687b      	ldr	r3, [r7, #4]
 800d046:	681b      	ldr	r3, [r3, #0]
 800d048:	689b      	ldr	r3, [r3, #8]
 800d04a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d04e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d052:	d10b      	bne.n	800d06c <HAL_ADC_PollForConversion+0x46>
 800d054:	687b      	ldr	r3, [r7, #4]
 800d056:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d058:	f043 0220 	orr.w	r2, r3, #32
 800d05c:	687b      	ldr	r3, [r7, #4]
 800d05e:	641a      	str	r2, [r3, #64]	; 0x40
 800d060:	687b      	ldr	r3, [r7, #4]
 800d062:	2200      	movs	r2, #0
 800d064:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800d068:	2301      	movs	r3, #1
 800d06a:	e063      	b.n	800d134 <HAL_ADC_PollForConversion+0x10e>
 800d06c:	f7ff fe62 	bl	800cd34 <HAL_GetTick>
 800d070:	60f8      	str	r0, [r7, #12]
 800d072:	e021      	b.n	800d0b8 <HAL_ADC_PollForConversion+0x92>
 800d074:	683b      	ldr	r3, [r7, #0]
 800d076:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d07a:	d01d      	beq.n	800d0b8 <HAL_ADC_PollForConversion+0x92>
 800d07c:	683b      	ldr	r3, [r7, #0]
 800d07e:	2b00      	cmp	r3, #0
 800d080:	d007      	beq.n	800d092 <HAL_ADC_PollForConversion+0x6c>
 800d082:	f7ff fe57 	bl	800cd34 <HAL_GetTick>
 800d086:	4602      	mov	r2, r0
 800d088:	68fb      	ldr	r3, [r7, #12]
 800d08a:	1ad3      	subs	r3, r2, r3
 800d08c:	683a      	ldr	r2, [r7, #0]
 800d08e:	429a      	cmp	r2, r3
 800d090:	d212      	bcs.n	800d0b8 <HAL_ADC_PollForConversion+0x92>
 800d092:	687b      	ldr	r3, [r7, #4]
 800d094:	681b      	ldr	r3, [r3, #0]
 800d096:	681b      	ldr	r3, [r3, #0]
 800d098:	f003 0302 	and.w	r3, r3, #2
 800d09c:	2b02      	cmp	r3, #2
 800d09e:	d00b      	beq.n	800d0b8 <HAL_ADC_PollForConversion+0x92>
 800d0a0:	687b      	ldr	r3, [r7, #4]
 800d0a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d0a4:	f043 0204 	orr.w	r2, r3, #4
 800d0a8:	687b      	ldr	r3, [r7, #4]
 800d0aa:	641a      	str	r2, [r3, #64]	; 0x40
 800d0ac:	687b      	ldr	r3, [r7, #4]
 800d0ae:	2200      	movs	r2, #0
 800d0b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800d0b4:	2303      	movs	r3, #3
 800d0b6:	e03d      	b.n	800d134 <HAL_ADC_PollForConversion+0x10e>
 800d0b8:	687b      	ldr	r3, [r7, #4]
 800d0ba:	681b      	ldr	r3, [r3, #0]
 800d0bc:	681b      	ldr	r3, [r3, #0]
 800d0be:	f003 0302 	and.w	r3, r3, #2
 800d0c2:	2b02      	cmp	r3, #2
 800d0c4:	d1d6      	bne.n	800d074 <HAL_ADC_PollForConversion+0x4e>
 800d0c6:	687b      	ldr	r3, [r7, #4]
 800d0c8:	681b      	ldr	r3, [r3, #0]
 800d0ca:	f06f 0212 	mvn.w	r2, #18
 800d0ce:	601a      	str	r2, [r3, #0]
 800d0d0:	687b      	ldr	r3, [r7, #4]
 800d0d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d0d4:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800d0d8:	687b      	ldr	r3, [r7, #4]
 800d0da:	641a      	str	r2, [r3, #64]	; 0x40
 800d0dc:	687b      	ldr	r3, [r7, #4]
 800d0de:	681b      	ldr	r3, [r3, #0]
 800d0e0:	689b      	ldr	r3, [r3, #8]
 800d0e2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800d0e6:	2b00      	cmp	r3, #0
 800d0e8:	d123      	bne.n	800d132 <HAL_ADC_PollForConversion+0x10c>
 800d0ea:	687b      	ldr	r3, [r7, #4]
 800d0ec:	7e1b      	ldrb	r3, [r3, #24]
 800d0ee:	2b00      	cmp	r3, #0
 800d0f0:	d11f      	bne.n	800d132 <HAL_ADC_PollForConversion+0x10c>
 800d0f2:	687b      	ldr	r3, [r7, #4]
 800d0f4:	681b      	ldr	r3, [r3, #0]
 800d0f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d0f8:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 800d0fc:	2b00      	cmp	r3, #0
 800d0fe:	d006      	beq.n	800d10e <HAL_ADC_PollForConversion+0xe8>
 800d100:	687b      	ldr	r3, [r7, #4]
 800d102:	681b      	ldr	r3, [r3, #0]
 800d104:	689b      	ldr	r3, [r3, #8]
 800d106:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	d111      	bne.n	800d132 <HAL_ADC_PollForConversion+0x10c>
 800d10e:	687b      	ldr	r3, [r7, #4]
 800d110:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d112:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800d116:	687b      	ldr	r3, [r7, #4]
 800d118:	641a      	str	r2, [r3, #64]	; 0x40
 800d11a:	687b      	ldr	r3, [r7, #4]
 800d11c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d11e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800d122:	2b00      	cmp	r3, #0
 800d124:	d105      	bne.n	800d132 <HAL_ADC_PollForConversion+0x10c>
 800d126:	687b      	ldr	r3, [r7, #4]
 800d128:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d12a:	f043 0201 	orr.w	r2, r3, #1
 800d12e:	687b      	ldr	r3, [r7, #4]
 800d130:	641a      	str	r2, [r3, #64]	; 0x40
 800d132:	2300      	movs	r3, #0
 800d134:	4618      	mov	r0, r3
 800d136:	3710      	adds	r7, #16
 800d138:	46bd      	mov	sp, r7
 800d13a:	bd80      	pop	{r7, pc}

0800d13c <HAL_ADC_IRQHandler>:
 800d13c:	b580      	push	{r7, lr}
 800d13e:	b086      	sub	sp, #24
 800d140:	af00      	add	r7, sp, #0
 800d142:	6078      	str	r0, [r7, #4]
 800d144:	2300      	movs	r3, #0
 800d146:	617b      	str	r3, [r7, #20]
 800d148:	2300      	movs	r3, #0
 800d14a:	613b      	str	r3, [r7, #16]
 800d14c:	687b      	ldr	r3, [r7, #4]
 800d14e:	681b      	ldr	r3, [r3, #0]
 800d150:	681b      	ldr	r3, [r3, #0]
 800d152:	60fb      	str	r3, [r7, #12]
 800d154:	687b      	ldr	r3, [r7, #4]
 800d156:	681b      	ldr	r3, [r3, #0]
 800d158:	685b      	ldr	r3, [r3, #4]
 800d15a:	60bb      	str	r3, [r7, #8]
 800d15c:	68fb      	ldr	r3, [r7, #12]
 800d15e:	f003 0302 	and.w	r3, r3, #2
 800d162:	617b      	str	r3, [r7, #20]
 800d164:	68bb      	ldr	r3, [r7, #8]
 800d166:	f003 0320 	and.w	r3, r3, #32
 800d16a:	613b      	str	r3, [r7, #16]
 800d16c:	697b      	ldr	r3, [r7, #20]
 800d16e:	2b00      	cmp	r3, #0
 800d170:	d049      	beq.n	800d206 <HAL_ADC_IRQHandler+0xca>
 800d172:	693b      	ldr	r3, [r7, #16]
 800d174:	2b00      	cmp	r3, #0
 800d176:	d046      	beq.n	800d206 <HAL_ADC_IRQHandler+0xca>
 800d178:	687b      	ldr	r3, [r7, #4]
 800d17a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d17c:	f003 0310 	and.w	r3, r3, #16
 800d180:	2b00      	cmp	r3, #0
 800d182:	d105      	bne.n	800d190 <HAL_ADC_IRQHandler+0x54>
 800d184:	687b      	ldr	r3, [r7, #4]
 800d186:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d188:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800d18c:	687b      	ldr	r3, [r7, #4]
 800d18e:	641a      	str	r2, [r3, #64]	; 0x40
 800d190:	687b      	ldr	r3, [r7, #4]
 800d192:	681b      	ldr	r3, [r3, #0]
 800d194:	689b      	ldr	r3, [r3, #8]
 800d196:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800d19a:	2b00      	cmp	r3, #0
 800d19c:	d12b      	bne.n	800d1f6 <HAL_ADC_IRQHandler+0xba>
 800d19e:	687b      	ldr	r3, [r7, #4]
 800d1a0:	7e1b      	ldrb	r3, [r3, #24]
 800d1a2:	2b00      	cmp	r3, #0
 800d1a4:	d127      	bne.n	800d1f6 <HAL_ADC_IRQHandler+0xba>
 800d1a6:	687b      	ldr	r3, [r7, #4]
 800d1a8:	681b      	ldr	r3, [r3, #0]
 800d1aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d1ac:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 800d1b0:	2b00      	cmp	r3, #0
 800d1b2:	d006      	beq.n	800d1c2 <HAL_ADC_IRQHandler+0x86>
 800d1b4:	687b      	ldr	r3, [r7, #4]
 800d1b6:	681b      	ldr	r3, [r3, #0]
 800d1b8:	689b      	ldr	r3, [r3, #8]
 800d1ba:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800d1be:	2b00      	cmp	r3, #0
 800d1c0:	d119      	bne.n	800d1f6 <HAL_ADC_IRQHandler+0xba>
 800d1c2:	687b      	ldr	r3, [r7, #4]
 800d1c4:	681b      	ldr	r3, [r3, #0]
 800d1c6:	685a      	ldr	r2, [r3, #4]
 800d1c8:	687b      	ldr	r3, [r7, #4]
 800d1ca:	681b      	ldr	r3, [r3, #0]
 800d1cc:	f022 0220 	bic.w	r2, r2, #32
 800d1d0:	605a      	str	r2, [r3, #4]
 800d1d2:	687b      	ldr	r3, [r7, #4]
 800d1d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d1d6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800d1da:	687b      	ldr	r3, [r7, #4]
 800d1dc:	641a      	str	r2, [r3, #64]	; 0x40
 800d1de:	687b      	ldr	r3, [r7, #4]
 800d1e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d1e2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800d1e6:	2b00      	cmp	r3, #0
 800d1e8:	d105      	bne.n	800d1f6 <HAL_ADC_IRQHandler+0xba>
 800d1ea:	687b      	ldr	r3, [r7, #4]
 800d1ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d1ee:	f043 0201 	orr.w	r2, r3, #1
 800d1f2:	687b      	ldr	r3, [r7, #4]
 800d1f4:	641a      	str	r2, [r3, #64]	; 0x40
 800d1f6:	6878      	ldr	r0, [r7, #4]
 800d1f8:	f000 f8bd 	bl	800d376 <HAL_ADC_ConvCpltCallback>
 800d1fc:	687b      	ldr	r3, [r7, #4]
 800d1fe:	681b      	ldr	r3, [r3, #0]
 800d200:	f06f 0212 	mvn.w	r2, #18
 800d204:	601a      	str	r2, [r3, #0]
 800d206:	68fb      	ldr	r3, [r7, #12]
 800d208:	f003 0304 	and.w	r3, r3, #4
 800d20c:	617b      	str	r3, [r7, #20]
 800d20e:	68bb      	ldr	r3, [r7, #8]
 800d210:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800d214:	613b      	str	r3, [r7, #16]
 800d216:	697b      	ldr	r3, [r7, #20]
 800d218:	2b00      	cmp	r3, #0
 800d21a:	d057      	beq.n	800d2cc <HAL_ADC_IRQHandler+0x190>
 800d21c:	693b      	ldr	r3, [r7, #16]
 800d21e:	2b00      	cmp	r3, #0
 800d220:	d054      	beq.n	800d2cc <HAL_ADC_IRQHandler+0x190>
 800d222:	687b      	ldr	r3, [r7, #4]
 800d224:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d226:	f003 0310 	and.w	r3, r3, #16
 800d22a:	2b00      	cmp	r3, #0
 800d22c:	d105      	bne.n	800d23a <HAL_ADC_IRQHandler+0xfe>
 800d22e:	687b      	ldr	r3, [r7, #4]
 800d230:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d232:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 800d236:	687b      	ldr	r3, [r7, #4]
 800d238:	641a      	str	r2, [r3, #64]	; 0x40
 800d23a:	687b      	ldr	r3, [r7, #4]
 800d23c:	681b      	ldr	r3, [r3, #0]
 800d23e:	689b      	ldr	r3, [r3, #8]
 800d240:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 800d244:	2b00      	cmp	r3, #0
 800d246:	d139      	bne.n	800d2bc <HAL_ADC_IRQHandler+0x180>
 800d248:	687b      	ldr	r3, [r7, #4]
 800d24a:	681b      	ldr	r3, [r3, #0]
 800d24c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d24e:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 800d252:	2b00      	cmp	r3, #0
 800d254:	d006      	beq.n	800d264 <HAL_ADC_IRQHandler+0x128>
 800d256:	687b      	ldr	r3, [r7, #4]
 800d258:	681b      	ldr	r3, [r3, #0]
 800d25a:	689b      	ldr	r3, [r3, #8]
 800d25c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800d260:	2b00      	cmp	r3, #0
 800d262:	d12b      	bne.n	800d2bc <HAL_ADC_IRQHandler+0x180>
 800d264:	687b      	ldr	r3, [r7, #4]
 800d266:	681b      	ldr	r3, [r3, #0]
 800d268:	685b      	ldr	r3, [r3, #4]
 800d26a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800d26e:	2b00      	cmp	r3, #0
 800d270:	d124      	bne.n	800d2bc <HAL_ADC_IRQHandler+0x180>
 800d272:	687b      	ldr	r3, [r7, #4]
 800d274:	681b      	ldr	r3, [r3, #0]
 800d276:	689b      	ldr	r3, [r3, #8]
 800d278:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800d27c:	2b00      	cmp	r3, #0
 800d27e:	d11d      	bne.n	800d2bc <HAL_ADC_IRQHandler+0x180>
 800d280:	687b      	ldr	r3, [r7, #4]
 800d282:	7e1b      	ldrb	r3, [r3, #24]
 800d284:	2b00      	cmp	r3, #0
 800d286:	d119      	bne.n	800d2bc <HAL_ADC_IRQHandler+0x180>
 800d288:	687b      	ldr	r3, [r7, #4]
 800d28a:	681b      	ldr	r3, [r3, #0]
 800d28c:	685a      	ldr	r2, [r3, #4]
 800d28e:	687b      	ldr	r3, [r7, #4]
 800d290:	681b      	ldr	r3, [r3, #0]
 800d292:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800d296:	605a      	str	r2, [r3, #4]
 800d298:	687b      	ldr	r3, [r7, #4]
 800d29a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d29c:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800d2a0:	687b      	ldr	r3, [r7, #4]
 800d2a2:	641a      	str	r2, [r3, #64]	; 0x40
 800d2a4:	687b      	ldr	r3, [r7, #4]
 800d2a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d2a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d2ac:	2b00      	cmp	r3, #0
 800d2ae:	d105      	bne.n	800d2bc <HAL_ADC_IRQHandler+0x180>
 800d2b0:	687b      	ldr	r3, [r7, #4]
 800d2b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d2b4:	f043 0201 	orr.w	r2, r3, #1
 800d2b8:	687b      	ldr	r3, [r7, #4]
 800d2ba:	641a      	str	r2, [r3, #64]	; 0x40
 800d2bc:	6878      	ldr	r0, [r7, #4]
 800d2be:	f000 fa97 	bl	800d7f0 <HAL_ADCEx_InjectedConvCpltCallback>
 800d2c2:	687b      	ldr	r3, [r7, #4]
 800d2c4:	681b      	ldr	r3, [r3, #0]
 800d2c6:	f06f 020c 	mvn.w	r2, #12
 800d2ca:	601a      	str	r2, [r3, #0]
 800d2cc:	68fb      	ldr	r3, [r7, #12]
 800d2ce:	f003 0301 	and.w	r3, r3, #1
 800d2d2:	617b      	str	r3, [r7, #20]
 800d2d4:	68bb      	ldr	r3, [r7, #8]
 800d2d6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d2da:	613b      	str	r3, [r7, #16]
 800d2dc:	697b      	ldr	r3, [r7, #20]
 800d2de:	2b00      	cmp	r3, #0
 800d2e0:	d017      	beq.n	800d312 <HAL_ADC_IRQHandler+0x1d6>
 800d2e2:	693b      	ldr	r3, [r7, #16]
 800d2e4:	2b00      	cmp	r3, #0
 800d2e6:	d014      	beq.n	800d312 <HAL_ADC_IRQHandler+0x1d6>
 800d2e8:	687b      	ldr	r3, [r7, #4]
 800d2ea:	681b      	ldr	r3, [r3, #0]
 800d2ec:	681b      	ldr	r3, [r3, #0]
 800d2ee:	f003 0301 	and.w	r3, r3, #1
 800d2f2:	2b01      	cmp	r3, #1
 800d2f4:	d10d      	bne.n	800d312 <HAL_ADC_IRQHandler+0x1d6>
 800d2f6:	687b      	ldr	r3, [r7, #4]
 800d2f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d2fa:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 800d2fe:	687b      	ldr	r3, [r7, #4]
 800d300:	641a      	str	r2, [r3, #64]	; 0x40
 800d302:	6878      	ldr	r0, [r7, #4]
 800d304:	f000 f841 	bl	800d38a <HAL_ADC_LevelOutOfWindowCallback>
 800d308:	687b      	ldr	r3, [r7, #4]
 800d30a:	681b      	ldr	r3, [r3, #0]
 800d30c:	f06f 0201 	mvn.w	r2, #1
 800d310:	601a      	str	r2, [r3, #0]
 800d312:	68fb      	ldr	r3, [r7, #12]
 800d314:	f003 0320 	and.w	r3, r3, #32
 800d318:	617b      	str	r3, [r7, #20]
 800d31a:	68bb      	ldr	r3, [r7, #8]
 800d31c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800d320:	613b      	str	r3, [r7, #16]
 800d322:	697b      	ldr	r3, [r7, #20]
 800d324:	2b00      	cmp	r3, #0
 800d326:	d015      	beq.n	800d354 <HAL_ADC_IRQHandler+0x218>
 800d328:	693b      	ldr	r3, [r7, #16]
 800d32a:	2b00      	cmp	r3, #0
 800d32c:	d012      	beq.n	800d354 <HAL_ADC_IRQHandler+0x218>
 800d32e:	687b      	ldr	r3, [r7, #4]
 800d330:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d332:	f043 0202 	orr.w	r2, r3, #2
 800d336:	687b      	ldr	r3, [r7, #4]
 800d338:	645a      	str	r2, [r3, #68]	; 0x44
 800d33a:	687b      	ldr	r3, [r7, #4]
 800d33c:	681b      	ldr	r3, [r3, #0]
 800d33e:	f06f 0220 	mvn.w	r2, #32
 800d342:	601a      	str	r2, [r3, #0]
 800d344:	6878      	ldr	r0, [r7, #4]
 800d346:	f000 f82a 	bl	800d39e <HAL_ADC_ErrorCallback>
 800d34a:	687b      	ldr	r3, [r7, #4]
 800d34c:	681b      	ldr	r3, [r3, #0]
 800d34e:	f06f 0220 	mvn.w	r2, #32
 800d352:	601a      	str	r2, [r3, #0]
 800d354:	bf00      	nop
 800d356:	3718      	adds	r7, #24
 800d358:	46bd      	mov	sp, r7
 800d35a:	bd80      	pop	{r7, pc}

0800d35c <HAL_ADC_GetValue>:
 800d35c:	b480      	push	{r7}
 800d35e:	b083      	sub	sp, #12
 800d360:	af00      	add	r7, sp, #0
 800d362:	6078      	str	r0, [r7, #4]
 800d364:	687b      	ldr	r3, [r7, #4]
 800d366:	681b      	ldr	r3, [r3, #0]
 800d368:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d36a:	4618      	mov	r0, r3
 800d36c:	370c      	adds	r7, #12
 800d36e:	46bd      	mov	sp, r7
 800d370:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d374:	4770      	bx	lr

0800d376 <HAL_ADC_ConvCpltCallback>:
 800d376:	b480      	push	{r7}
 800d378:	b083      	sub	sp, #12
 800d37a:	af00      	add	r7, sp, #0
 800d37c:	6078      	str	r0, [r7, #4]
 800d37e:	bf00      	nop
 800d380:	370c      	adds	r7, #12
 800d382:	46bd      	mov	sp, r7
 800d384:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d388:	4770      	bx	lr

0800d38a <HAL_ADC_LevelOutOfWindowCallback>:
 800d38a:	b480      	push	{r7}
 800d38c:	b083      	sub	sp, #12
 800d38e:	af00      	add	r7, sp, #0
 800d390:	6078      	str	r0, [r7, #4]
 800d392:	bf00      	nop
 800d394:	370c      	adds	r7, #12
 800d396:	46bd      	mov	sp, r7
 800d398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d39c:	4770      	bx	lr

0800d39e <HAL_ADC_ErrorCallback>:
 800d39e:	b480      	push	{r7}
 800d3a0:	b083      	sub	sp, #12
 800d3a2:	af00      	add	r7, sp, #0
 800d3a4:	6078      	str	r0, [r7, #4]
 800d3a6:	bf00      	nop
 800d3a8:	370c      	adds	r7, #12
 800d3aa:	46bd      	mov	sp, r7
 800d3ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3b0:	4770      	bx	lr
	...

0800d3b4 <HAL_ADC_ConfigChannel>:
 800d3b4:	b480      	push	{r7}
 800d3b6:	b085      	sub	sp, #20
 800d3b8:	af00      	add	r7, sp, #0
 800d3ba:	6078      	str	r0, [r7, #4]
 800d3bc:	6039      	str	r1, [r7, #0]
 800d3be:	2300      	movs	r3, #0
 800d3c0:	60bb      	str	r3, [r7, #8]
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800d3c8:	2b01      	cmp	r3, #1
 800d3ca:	d101      	bne.n	800d3d0 <HAL_ADC_ConfigChannel+0x1c>
 800d3cc:	2302      	movs	r3, #2
 800d3ce:	e105      	b.n	800d5dc <HAL_ADC_ConfigChannel+0x228>
 800d3d0:	687b      	ldr	r3, [r7, #4]
 800d3d2:	2201      	movs	r2, #1
 800d3d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800d3d8:	683b      	ldr	r3, [r7, #0]
 800d3da:	681b      	ldr	r3, [r3, #0]
 800d3dc:	2b09      	cmp	r3, #9
 800d3de:	d925      	bls.n	800d42c <HAL_ADC_ConfigChannel+0x78>
 800d3e0:	687b      	ldr	r3, [r7, #4]
 800d3e2:	681b      	ldr	r3, [r3, #0]
 800d3e4:	68d9      	ldr	r1, [r3, #12]
 800d3e6:	683b      	ldr	r3, [r7, #0]
 800d3e8:	681b      	ldr	r3, [r3, #0]
 800d3ea:	b29b      	uxth	r3, r3
 800d3ec:	461a      	mov	r2, r3
 800d3ee:	4613      	mov	r3, r2
 800d3f0:	005b      	lsls	r3, r3, #1
 800d3f2:	4413      	add	r3, r2
 800d3f4:	3b1e      	subs	r3, #30
 800d3f6:	2207      	movs	r2, #7
 800d3f8:	fa02 f303 	lsl.w	r3, r2, r3
 800d3fc:	43da      	mvns	r2, r3
 800d3fe:	687b      	ldr	r3, [r7, #4]
 800d400:	681b      	ldr	r3, [r3, #0]
 800d402:	400a      	ands	r2, r1
 800d404:	60da      	str	r2, [r3, #12]
 800d406:	687b      	ldr	r3, [r7, #4]
 800d408:	681b      	ldr	r3, [r3, #0]
 800d40a:	68d9      	ldr	r1, [r3, #12]
 800d40c:	683b      	ldr	r3, [r7, #0]
 800d40e:	689a      	ldr	r2, [r3, #8]
 800d410:	683b      	ldr	r3, [r7, #0]
 800d412:	681b      	ldr	r3, [r3, #0]
 800d414:	b29b      	uxth	r3, r3
 800d416:	4618      	mov	r0, r3
 800d418:	4603      	mov	r3, r0
 800d41a:	005b      	lsls	r3, r3, #1
 800d41c:	4403      	add	r3, r0
 800d41e:	3b1e      	subs	r3, #30
 800d420:	409a      	lsls	r2, r3
 800d422:	687b      	ldr	r3, [r7, #4]
 800d424:	681b      	ldr	r3, [r3, #0]
 800d426:	430a      	orrs	r2, r1
 800d428:	60da      	str	r2, [r3, #12]
 800d42a:	e022      	b.n	800d472 <HAL_ADC_ConfigChannel+0xbe>
 800d42c:	687b      	ldr	r3, [r7, #4]
 800d42e:	681b      	ldr	r3, [r3, #0]
 800d430:	6919      	ldr	r1, [r3, #16]
 800d432:	683b      	ldr	r3, [r7, #0]
 800d434:	681b      	ldr	r3, [r3, #0]
 800d436:	b29b      	uxth	r3, r3
 800d438:	461a      	mov	r2, r3
 800d43a:	4613      	mov	r3, r2
 800d43c:	005b      	lsls	r3, r3, #1
 800d43e:	4413      	add	r3, r2
 800d440:	2207      	movs	r2, #7
 800d442:	fa02 f303 	lsl.w	r3, r2, r3
 800d446:	43da      	mvns	r2, r3
 800d448:	687b      	ldr	r3, [r7, #4]
 800d44a:	681b      	ldr	r3, [r3, #0]
 800d44c:	400a      	ands	r2, r1
 800d44e:	611a      	str	r2, [r3, #16]
 800d450:	687b      	ldr	r3, [r7, #4]
 800d452:	681b      	ldr	r3, [r3, #0]
 800d454:	6919      	ldr	r1, [r3, #16]
 800d456:	683b      	ldr	r3, [r7, #0]
 800d458:	689a      	ldr	r2, [r3, #8]
 800d45a:	683b      	ldr	r3, [r7, #0]
 800d45c:	681b      	ldr	r3, [r3, #0]
 800d45e:	b29b      	uxth	r3, r3
 800d460:	4618      	mov	r0, r3
 800d462:	4603      	mov	r3, r0
 800d464:	005b      	lsls	r3, r3, #1
 800d466:	4403      	add	r3, r0
 800d468:	409a      	lsls	r2, r3
 800d46a:	687b      	ldr	r3, [r7, #4]
 800d46c:	681b      	ldr	r3, [r3, #0]
 800d46e:	430a      	orrs	r2, r1
 800d470:	611a      	str	r2, [r3, #16]
 800d472:	683b      	ldr	r3, [r7, #0]
 800d474:	685b      	ldr	r3, [r3, #4]
 800d476:	2b06      	cmp	r3, #6
 800d478:	d824      	bhi.n	800d4c4 <HAL_ADC_ConfigChannel+0x110>
 800d47a:	687b      	ldr	r3, [r7, #4]
 800d47c:	681b      	ldr	r3, [r3, #0]
 800d47e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800d480:	683b      	ldr	r3, [r7, #0]
 800d482:	685a      	ldr	r2, [r3, #4]
 800d484:	4613      	mov	r3, r2
 800d486:	009b      	lsls	r3, r3, #2
 800d488:	4413      	add	r3, r2
 800d48a:	3b05      	subs	r3, #5
 800d48c:	221f      	movs	r2, #31
 800d48e:	fa02 f303 	lsl.w	r3, r2, r3
 800d492:	43da      	mvns	r2, r3
 800d494:	687b      	ldr	r3, [r7, #4]
 800d496:	681b      	ldr	r3, [r3, #0]
 800d498:	400a      	ands	r2, r1
 800d49a:	635a      	str	r2, [r3, #52]	; 0x34
 800d49c:	687b      	ldr	r3, [r7, #4]
 800d49e:	681b      	ldr	r3, [r3, #0]
 800d4a0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800d4a2:	683b      	ldr	r3, [r7, #0]
 800d4a4:	681b      	ldr	r3, [r3, #0]
 800d4a6:	b29b      	uxth	r3, r3
 800d4a8:	4618      	mov	r0, r3
 800d4aa:	683b      	ldr	r3, [r7, #0]
 800d4ac:	685a      	ldr	r2, [r3, #4]
 800d4ae:	4613      	mov	r3, r2
 800d4b0:	009b      	lsls	r3, r3, #2
 800d4b2:	4413      	add	r3, r2
 800d4b4:	3b05      	subs	r3, #5
 800d4b6:	fa00 f203 	lsl.w	r2, r0, r3
 800d4ba:	687b      	ldr	r3, [r7, #4]
 800d4bc:	681b      	ldr	r3, [r3, #0]
 800d4be:	430a      	orrs	r2, r1
 800d4c0:	635a      	str	r2, [r3, #52]	; 0x34
 800d4c2:	e04c      	b.n	800d55e <HAL_ADC_ConfigChannel+0x1aa>
 800d4c4:	683b      	ldr	r3, [r7, #0]
 800d4c6:	685b      	ldr	r3, [r3, #4]
 800d4c8:	2b0c      	cmp	r3, #12
 800d4ca:	d824      	bhi.n	800d516 <HAL_ADC_ConfigChannel+0x162>
 800d4cc:	687b      	ldr	r3, [r7, #4]
 800d4ce:	681b      	ldr	r3, [r3, #0]
 800d4d0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800d4d2:	683b      	ldr	r3, [r7, #0]
 800d4d4:	685a      	ldr	r2, [r3, #4]
 800d4d6:	4613      	mov	r3, r2
 800d4d8:	009b      	lsls	r3, r3, #2
 800d4da:	4413      	add	r3, r2
 800d4dc:	3b23      	subs	r3, #35	; 0x23
 800d4de:	221f      	movs	r2, #31
 800d4e0:	fa02 f303 	lsl.w	r3, r2, r3
 800d4e4:	43da      	mvns	r2, r3
 800d4e6:	687b      	ldr	r3, [r7, #4]
 800d4e8:	681b      	ldr	r3, [r3, #0]
 800d4ea:	400a      	ands	r2, r1
 800d4ec:	631a      	str	r2, [r3, #48]	; 0x30
 800d4ee:	687b      	ldr	r3, [r7, #4]
 800d4f0:	681b      	ldr	r3, [r3, #0]
 800d4f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800d4f4:	683b      	ldr	r3, [r7, #0]
 800d4f6:	681b      	ldr	r3, [r3, #0]
 800d4f8:	b29b      	uxth	r3, r3
 800d4fa:	4618      	mov	r0, r3
 800d4fc:	683b      	ldr	r3, [r7, #0]
 800d4fe:	685a      	ldr	r2, [r3, #4]
 800d500:	4613      	mov	r3, r2
 800d502:	009b      	lsls	r3, r3, #2
 800d504:	4413      	add	r3, r2
 800d506:	3b23      	subs	r3, #35	; 0x23
 800d508:	fa00 f203 	lsl.w	r2, r0, r3
 800d50c:	687b      	ldr	r3, [r7, #4]
 800d50e:	681b      	ldr	r3, [r3, #0]
 800d510:	430a      	orrs	r2, r1
 800d512:	631a      	str	r2, [r3, #48]	; 0x30
 800d514:	e023      	b.n	800d55e <HAL_ADC_ConfigChannel+0x1aa>
 800d516:	687b      	ldr	r3, [r7, #4]
 800d518:	681b      	ldr	r3, [r3, #0]
 800d51a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800d51c:	683b      	ldr	r3, [r7, #0]
 800d51e:	685a      	ldr	r2, [r3, #4]
 800d520:	4613      	mov	r3, r2
 800d522:	009b      	lsls	r3, r3, #2
 800d524:	4413      	add	r3, r2
 800d526:	3b41      	subs	r3, #65	; 0x41
 800d528:	221f      	movs	r2, #31
 800d52a:	fa02 f303 	lsl.w	r3, r2, r3
 800d52e:	43da      	mvns	r2, r3
 800d530:	687b      	ldr	r3, [r7, #4]
 800d532:	681b      	ldr	r3, [r3, #0]
 800d534:	400a      	ands	r2, r1
 800d536:	62da      	str	r2, [r3, #44]	; 0x2c
 800d538:	687b      	ldr	r3, [r7, #4]
 800d53a:	681b      	ldr	r3, [r3, #0]
 800d53c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800d53e:	683b      	ldr	r3, [r7, #0]
 800d540:	681b      	ldr	r3, [r3, #0]
 800d542:	b29b      	uxth	r3, r3
 800d544:	4618      	mov	r0, r3
 800d546:	683b      	ldr	r3, [r7, #0]
 800d548:	685a      	ldr	r2, [r3, #4]
 800d54a:	4613      	mov	r3, r2
 800d54c:	009b      	lsls	r3, r3, #2
 800d54e:	4413      	add	r3, r2
 800d550:	3b41      	subs	r3, #65	; 0x41
 800d552:	fa00 f203 	lsl.w	r2, r0, r3
 800d556:	687b      	ldr	r3, [r7, #4]
 800d558:	681b      	ldr	r3, [r3, #0]
 800d55a:	430a      	orrs	r2, r1
 800d55c:	62da      	str	r2, [r3, #44]	; 0x2c
 800d55e:	4b22      	ldr	r3, [pc, #136]	; (800d5e8 <HAL_ADC_ConfigChannel+0x234>)
 800d560:	60fb      	str	r3, [r7, #12]
 800d562:	687b      	ldr	r3, [r7, #4]
 800d564:	681b      	ldr	r3, [r3, #0]
 800d566:	4a21      	ldr	r2, [pc, #132]	; (800d5ec <HAL_ADC_ConfigChannel+0x238>)
 800d568:	4293      	cmp	r3, r2
 800d56a:	d109      	bne.n	800d580 <HAL_ADC_ConfigChannel+0x1cc>
 800d56c:	683b      	ldr	r3, [r7, #0]
 800d56e:	681b      	ldr	r3, [r3, #0]
 800d570:	2b12      	cmp	r3, #18
 800d572:	d105      	bne.n	800d580 <HAL_ADC_ConfigChannel+0x1cc>
 800d574:	68fb      	ldr	r3, [r7, #12]
 800d576:	685b      	ldr	r3, [r3, #4]
 800d578:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800d57c:	68fb      	ldr	r3, [r7, #12]
 800d57e:	605a      	str	r2, [r3, #4]
 800d580:	687b      	ldr	r3, [r7, #4]
 800d582:	681b      	ldr	r3, [r3, #0]
 800d584:	4a19      	ldr	r2, [pc, #100]	; (800d5ec <HAL_ADC_ConfigChannel+0x238>)
 800d586:	4293      	cmp	r3, r2
 800d588:	d123      	bne.n	800d5d2 <HAL_ADC_ConfigChannel+0x21e>
 800d58a:	683b      	ldr	r3, [r7, #0]
 800d58c:	681b      	ldr	r3, [r3, #0]
 800d58e:	2b10      	cmp	r3, #16
 800d590:	d003      	beq.n	800d59a <HAL_ADC_ConfigChannel+0x1e6>
 800d592:	683b      	ldr	r3, [r7, #0]
 800d594:	681b      	ldr	r3, [r3, #0]
 800d596:	2b11      	cmp	r3, #17
 800d598:	d11b      	bne.n	800d5d2 <HAL_ADC_ConfigChannel+0x21e>
 800d59a:	68fb      	ldr	r3, [r7, #12]
 800d59c:	685b      	ldr	r3, [r3, #4]
 800d59e:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 800d5a2:	68fb      	ldr	r3, [r7, #12]
 800d5a4:	605a      	str	r2, [r3, #4]
 800d5a6:	683b      	ldr	r3, [r7, #0]
 800d5a8:	681b      	ldr	r3, [r3, #0]
 800d5aa:	2b10      	cmp	r3, #16
 800d5ac:	d111      	bne.n	800d5d2 <HAL_ADC_ConfigChannel+0x21e>
 800d5ae:	4b10      	ldr	r3, [pc, #64]	; (800d5f0 <HAL_ADC_ConfigChannel+0x23c>)
 800d5b0:	681b      	ldr	r3, [r3, #0]
 800d5b2:	4a10      	ldr	r2, [pc, #64]	; (800d5f4 <HAL_ADC_ConfigChannel+0x240>)
 800d5b4:	fba2 2303 	umull	r2, r3, r2, r3
 800d5b8:	0c9a      	lsrs	r2, r3, #18
 800d5ba:	4613      	mov	r3, r2
 800d5bc:	009b      	lsls	r3, r3, #2
 800d5be:	4413      	add	r3, r2
 800d5c0:	005b      	lsls	r3, r3, #1
 800d5c2:	60bb      	str	r3, [r7, #8]
 800d5c4:	e002      	b.n	800d5cc <HAL_ADC_ConfigChannel+0x218>
 800d5c6:	68bb      	ldr	r3, [r7, #8]
 800d5c8:	3b01      	subs	r3, #1
 800d5ca:	60bb      	str	r3, [r7, #8]
 800d5cc:	68bb      	ldr	r3, [r7, #8]
 800d5ce:	2b00      	cmp	r3, #0
 800d5d0:	d1f9      	bne.n	800d5c6 <HAL_ADC_ConfigChannel+0x212>
 800d5d2:	687b      	ldr	r3, [r7, #4]
 800d5d4:	2200      	movs	r2, #0
 800d5d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800d5da:	2300      	movs	r3, #0
 800d5dc:	4618      	mov	r0, r3
 800d5de:	3714      	adds	r7, #20
 800d5e0:	46bd      	mov	sp, r7
 800d5e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5e6:	4770      	bx	lr
 800d5e8:	40012300 	.word	0x40012300
 800d5ec:	40012000 	.word	0x40012000
 800d5f0:	20000058 	.word	0x20000058
 800d5f4:	431bde83 	.word	0x431bde83

0800d5f8 <ADC_Init>:
 800d5f8:	b480      	push	{r7}
 800d5fa:	b085      	sub	sp, #20
 800d5fc:	af00      	add	r7, sp, #0
 800d5fe:	6078      	str	r0, [r7, #4]
 800d600:	4b79      	ldr	r3, [pc, #484]	; (800d7e8 <ADC_Init+0x1f0>)
 800d602:	60fb      	str	r3, [r7, #12]
 800d604:	68fb      	ldr	r3, [r7, #12]
 800d606:	685b      	ldr	r3, [r3, #4]
 800d608:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800d60c:	68fb      	ldr	r3, [r7, #12]
 800d60e:	605a      	str	r2, [r3, #4]
 800d610:	68fb      	ldr	r3, [r7, #12]
 800d612:	685a      	ldr	r2, [r3, #4]
 800d614:	687b      	ldr	r3, [r7, #4]
 800d616:	685b      	ldr	r3, [r3, #4]
 800d618:	431a      	orrs	r2, r3
 800d61a:	68fb      	ldr	r3, [r7, #12]
 800d61c:	605a      	str	r2, [r3, #4]
 800d61e:	687b      	ldr	r3, [r7, #4]
 800d620:	681b      	ldr	r3, [r3, #0]
 800d622:	685a      	ldr	r2, [r3, #4]
 800d624:	687b      	ldr	r3, [r7, #4]
 800d626:	681b      	ldr	r3, [r3, #0]
 800d628:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800d62c:	605a      	str	r2, [r3, #4]
 800d62e:	687b      	ldr	r3, [r7, #4]
 800d630:	681b      	ldr	r3, [r3, #0]
 800d632:	6859      	ldr	r1, [r3, #4]
 800d634:	687b      	ldr	r3, [r7, #4]
 800d636:	691b      	ldr	r3, [r3, #16]
 800d638:	021a      	lsls	r2, r3, #8
 800d63a:	687b      	ldr	r3, [r7, #4]
 800d63c:	681b      	ldr	r3, [r3, #0]
 800d63e:	430a      	orrs	r2, r1
 800d640:	605a      	str	r2, [r3, #4]
 800d642:	687b      	ldr	r3, [r7, #4]
 800d644:	681b      	ldr	r3, [r3, #0]
 800d646:	685a      	ldr	r2, [r3, #4]
 800d648:	687b      	ldr	r3, [r7, #4]
 800d64a:	681b      	ldr	r3, [r3, #0]
 800d64c:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800d650:	605a      	str	r2, [r3, #4]
 800d652:	687b      	ldr	r3, [r7, #4]
 800d654:	681b      	ldr	r3, [r3, #0]
 800d656:	6859      	ldr	r1, [r3, #4]
 800d658:	687b      	ldr	r3, [r7, #4]
 800d65a:	689a      	ldr	r2, [r3, #8]
 800d65c:	687b      	ldr	r3, [r7, #4]
 800d65e:	681b      	ldr	r3, [r3, #0]
 800d660:	430a      	orrs	r2, r1
 800d662:	605a      	str	r2, [r3, #4]
 800d664:	687b      	ldr	r3, [r7, #4]
 800d666:	681b      	ldr	r3, [r3, #0]
 800d668:	689a      	ldr	r2, [r3, #8]
 800d66a:	687b      	ldr	r3, [r7, #4]
 800d66c:	681b      	ldr	r3, [r3, #0]
 800d66e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d672:	609a      	str	r2, [r3, #8]
 800d674:	687b      	ldr	r3, [r7, #4]
 800d676:	681b      	ldr	r3, [r3, #0]
 800d678:	6899      	ldr	r1, [r3, #8]
 800d67a:	687b      	ldr	r3, [r7, #4]
 800d67c:	68da      	ldr	r2, [r3, #12]
 800d67e:	687b      	ldr	r3, [r7, #4]
 800d680:	681b      	ldr	r3, [r3, #0]
 800d682:	430a      	orrs	r2, r1
 800d684:	609a      	str	r2, [r3, #8]
 800d686:	687b      	ldr	r3, [r7, #4]
 800d688:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d68a:	4a58      	ldr	r2, [pc, #352]	; (800d7ec <ADC_Init+0x1f4>)
 800d68c:	4293      	cmp	r3, r2
 800d68e:	d022      	beq.n	800d6d6 <ADC_Init+0xde>
 800d690:	687b      	ldr	r3, [r7, #4]
 800d692:	681b      	ldr	r3, [r3, #0]
 800d694:	689a      	ldr	r2, [r3, #8]
 800d696:	687b      	ldr	r3, [r7, #4]
 800d698:	681b      	ldr	r3, [r3, #0]
 800d69a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800d69e:	609a      	str	r2, [r3, #8]
 800d6a0:	687b      	ldr	r3, [r7, #4]
 800d6a2:	681b      	ldr	r3, [r3, #0]
 800d6a4:	6899      	ldr	r1, [r3, #8]
 800d6a6:	687b      	ldr	r3, [r7, #4]
 800d6a8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	681b      	ldr	r3, [r3, #0]
 800d6ae:	430a      	orrs	r2, r1
 800d6b0:	609a      	str	r2, [r3, #8]
 800d6b2:	687b      	ldr	r3, [r7, #4]
 800d6b4:	681b      	ldr	r3, [r3, #0]
 800d6b6:	689a      	ldr	r2, [r3, #8]
 800d6b8:	687b      	ldr	r3, [r7, #4]
 800d6ba:	681b      	ldr	r3, [r3, #0]
 800d6bc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800d6c0:	609a      	str	r2, [r3, #8]
 800d6c2:	687b      	ldr	r3, [r7, #4]
 800d6c4:	681b      	ldr	r3, [r3, #0]
 800d6c6:	6899      	ldr	r1, [r3, #8]
 800d6c8:	687b      	ldr	r3, [r7, #4]
 800d6ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800d6cc:	687b      	ldr	r3, [r7, #4]
 800d6ce:	681b      	ldr	r3, [r3, #0]
 800d6d0:	430a      	orrs	r2, r1
 800d6d2:	609a      	str	r2, [r3, #8]
 800d6d4:	e00f      	b.n	800d6f6 <ADC_Init+0xfe>
 800d6d6:	687b      	ldr	r3, [r7, #4]
 800d6d8:	681b      	ldr	r3, [r3, #0]
 800d6da:	689a      	ldr	r2, [r3, #8]
 800d6dc:	687b      	ldr	r3, [r7, #4]
 800d6de:	681b      	ldr	r3, [r3, #0]
 800d6e0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800d6e4:	609a      	str	r2, [r3, #8]
 800d6e6:	687b      	ldr	r3, [r7, #4]
 800d6e8:	681b      	ldr	r3, [r3, #0]
 800d6ea:	689a      	ldr	r2, [r3, #8]
 800d6ec:	687b      	ldr	r3, [r7, #4]
 800d6ee:	681b      	ldr	r3, [r3, #0]
 800d6f0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800d6f4:	609a      	str	r2, [r3, #8]
 800d6f6:	687b      	ldr	r3, [r7, #4]
 800d6f8:	681b      	ldr	r3, [r3, #0]
 800d6fa:	689a      	ldr	r2, [r3, #8]
 800d6fc:	687b      	ldr	r3, [r7, #4]
 800d6fe:	681b      	ldr	r3, [r3, #0]
 800d700:	f022 0202 	bic.w	r2, r2, #2
 800d704:	609a      	str	r2, [r3, #8]
 800d706:	687b      	ldr	r3, [r7, #4]
 800d708:	681b      	ldr	r3, [r3, #0]
 800d70a:	6899      	ldr	r1, [r3, #8]
 800d70c:	687b      	ldr	r3, [r7, #4]
 800d70e:	7e1b      	ldrb	r3, [r3, #24]
 800d710:	005a      	lsls	r2, r3, #1
 800d712:	687b      	ldr	r3, [r7, #4]
 800d714:	681b      	ldr	r3, [r3, #0]
 800d716:	430a      	orrs	r2, r1
 800d718:	609a      	str	r2, [r3, #8]
 800d71a:	687b      	ldr	r3, [r7, #4]
 800d71c:	f893 3020 	ldrb.w	r3, [r3, #32]
 800d720:	2b00      	cmp	r3, #0
 800d722:	d01b      	beq.n	800d75c <ADC_Init+0x164>
 800d724:	687b      	ldr	r3, [r7, #4]
 800d726:	681b      	ldr	r3, [r3, #0]
 800d728:	685a      	ldr	r2, [r3, #4]
 800d72a:	687b      	ldr	r3, [r7, #4]
 800d72c:	681b      	ldr	r3, [r3, #0]
 800d72e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d732:	605a      	str	r2, [r3, #4]
 800d734:	687b      	ldr	r3, [r7, #4]
 800d736:	681b      	ldr	r3, [r3, #0]
 800d738:	685a      	ldr	r2, [r3, #4]
 800d73a:	687b      	ldr	r3, [r7, #4]
 800d73c:	681b      	ldr	r3, [r3, #0]
 800d73e:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800d742:	605a      	str	r2, [r3, #4]
 800d744:	687b      	ldr	r3, [r7, #4]
 800d746:	681b      	ldr	r3, [r3, #0]
 800d748:	6859      	ldr	r1, [r3, #4]
 800d74a:	687b      	ldr	r3, [r7, #4]
 800d74c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d74e:	3b01      	subs	r3, #1
 800d750:	035a      	lsls	r2, r3, #13
 800d752:	687b      	ldr	r3, [r7, #4]
 800d754:	681b      	ldr	r3, [r3, #0]
 800d756:	430a      	orrs	r2, r1
 800d758:	605a      	str	r2, [r3, #4]
 800d75a:	e007      	b.n	800d76c <ADC_Init+0x174>
 800d75c:	687b      	ldr	r3, [r7, #4]
 800d75e:	681b      	ldr	r3, [r3, #0]
 800d760:	685a      	ldr	r2, [r3, #4]
 800d762:	687b      	ldr	r3, [r7, #4]
 800d764:	681b      	ldr	r3, [r3, #0]
 800d766:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d76a:	605a      	str	r2, [r3, #4]
 800d76c:	687b      	ldr	r3, [r7, #4]
 800d76e:	681b      	ldr	r3, [r3, #0]
 800d770:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800d772:	687b      	ldr	r3, [r7, #4]
 800d774:	681b      	ldr	r3, [r3, #0]
 800d776:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800d77a:	62da      	str	r2, [r3, #44]	; 0x2c
 800d77c:	687b      	ldr	r3, [r7, #4]
 800d77e:	681b      	ldr	r3, [r3, #0]
 800d780:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800d782:	687b      	ldr	r3, [r7, #4]
 800d784:	69db      	ldr	r3, [r3, #28]
 800d786:	3b01      	subs	r3, #1
 800d788:	051a      	lsls	r2, r3, #20
 800d78a:	687b      	ldr	r3, [r7, #4]
 800d78c:	681b      	ldr	r3, [r3, #0]
 800d78e:	430a      	orrs	r2, r1
 800d790:	62da      	str	r2, [r3, #44]	; 0x2c
 800d792:	687b      	ldr	r3, [r7, #4]
 800d794:	681b      	ldr	r3, [r3, #0]
 800d796:	689a      	ldr	r2, [r3, #8]
 800d798:	687b      	ldr	r3, [r7, #4]
 800d79a:	681b      	ldr	r3, [r3, #0]
 800d79c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800d7a0:	609a      	str	r2, [r3, #8]
 800d7a2:	687b      	ldr	r3, [r7, #4]
 800d7a4:	681b      	ldr	r3, [r3, #0]
 800d7a6:	6899      	ldr	r1, [r3, #8]
 800d7a8:	687b      	ldr	r3, [r7, #4]
 800d7aa:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800d7ae:	025a      	lsls	r2, r3, #9
 800d7b0:	687b      	ldr	r3, [r7, #4]
 800d7b2:	681b      	ldr	r3, [r3, #0]
 800d7b4:	430a      	orrs	r2, r1
 800d7b6:	609a      	str	r2, [r3, #8]
 800d7b8:	687b      	ldr	r3, [r7, #4]
 800d7ba:	681b      	ldr	r3, [r3, #0]
 800d7bc:	689a      	ldr	r2, [r3, #8]
 800d7be:	687b      	ldr	r3, [r7, #4]
 800d7c0:	681b      	ldr	r3, [r3, #0]
 800d7c2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d7c6:	609a      	str	r2, [r3, #8]
 800d7c8:	687b      	ldr	r3, [r7, #4]
 800d7ca:	681b      	ldr	r3, [r3, #0]
 800d7cc:	6899      	ldr	r1, [r3, #8]
 800d7ce:	687b      	ldr	r3, [r7, #4]
 800d7d0:	695b      	ldr	r3, [r3, #20]
 800d7d2:	029a      	lsls	r2, r3, #10
 800d7d4:	687b      	ldr	r3, [r7, #4]
 800d7d6:	681b      	ldr	r3, [r3, #0]
 800d7d8:	430a      	orrs	r2, r1
 800d7da:	609a      	str	r2, [r3, #8]
 800d7dc:	bf00      	nop
 800d7de:	3714      	adds	r7, #20
 800d7e0:	46bd      	mov	sp, r7
 800d7e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7e6:	4770      	bx	lr
 800d7e8:	40012300 	.word	0x40012300
 800d7ec:	0f000001 	.word	0x0f000001

0800d7f0 <HAL_ADCEx_InjectedConvCpltCallback>:
 800d7f0:	b480      	push	{r7}
 800d7f2:	b083      	sub	sp, #12
 800d7f4:	af00      	add	r7, sp, #0
 800d7f6:	6078      	str	r0, [r7, #4]
 800d7f8:	bf00      	nop
 800d7fa:	370c      	adds	r7, #12
 800d7fc:	46bd      	mov	sp, r7
 800d7fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d802:	4770      	bx	lr

0800d804 <__NVIC_SetPriorityGrouping>:
 800d804:	b480      	push	{r7}
 800d806:	b085      	sub	sp, #20
 800d808:	af00      	add	r7, sp, #0
 800d80a:	6078      	str	r0, [r7, #4]
 800d80c:	687b      	ldr	r3, [r7, #4]
 800d80e:	f003 0307 	and.w	r3, r3, #7
 800d812:	60fb      	str	r3, [r7, #12]
 800d814:	4b0c      	ldr	r3, [pc, #48]	; (800d848 <__NVIC_SetPriorityGrouping+0x44>)
 800d816:	68db      	ldr	r3, [r3, #12]
 800d818:	60bb      	str	r3, [r7, #8]
 800d81a:	68ba      	ldr	r2, [r7, #8]
 800d81c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800d820:	4013      	ands	r3, r2
 800d822:	60bb      	str	r3, [r7, #8]
 800d824:	68fb      	ldr	r3, [r7, #12]
 800d826:	021a      	lsls	r2, r3, #8
 800d828:	68bb      	ldr	r3, [r7, #8]
 800d82a:	4313      	orrs	r3, r2
 800d82c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800d830:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800d834:	60bb      	str	r3, [r7, #8]
 800d836:	4a04      	ldr	r2, [pc, #16]	; (800d848 <__NVIC_SetPriorityGrouping+0x44>)
 800d838:	68bb      	ldr	r3, [r7, #8]
 800d83a:	60d3      	str	r3, [r2, #12]
 800d83c:	bf00      	nop
 800d83e:	3714      	adds	r7, #20
 800d840:	46bd      	mov	sp, r7
 800d842:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d846:	4770      	bx	lr
 800d848:	e000ed00 	.word	0xe000ed00

0800d84c <__NVIC_GetPriorityGrouping>:
 800d84c:	b480      	push	{r7}
 800d84e:	af00      	add	r7, sp, #0
 800d850:	4b04      	ldr	r3, [pc, #16]	; (800d864 <__NVIC_GetPriorityGrouping+0x18>)
 800d852:	68db      	ldr	r3, [r3, #12]
 800d854:	0a1b      	lsrs	r3, r3, #8
 800d856:	f003 0307 	and.w	r3, r3, #7
 800d85a:	4618      	mov	r0, r3
 800d85c:	46bd      	mov	sp, r7
 800d85e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d862:	4770      	bx	lr
 800d864:	e000ed00 	.word	0xe000ed00

0800d868 <__NVIC_EnableIRQ>:
 800d868:	b480      	push	{r7}
 800d86a:	b083      	sub	sp, #12
 800d86c:	af00      	add	r7, sp, #0
 800d86e:	4603      	mov	r3, r0
 800d870:	71fb      	strb	r3, [r7, #7]
 800d872:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d876:	2b00      	cmp	r3, #0
 800d878:	db0b      	blt.n	800d892 <__NVIC_EnableIRQ+0x2a>
 800d87a:	79fb      	ldrb	r3, [r7, #7]
 800d87c:	f003 021f 	and.w	r2, r3, #31
 800d880:	4907      	ldr	r1, [pc, #28]	; (800d8a0 <__NVIC_EnableIRQ+0x38>)
 800d882:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d886:	095b      	lsrs	r3, r3, #5
 800d888:	2001      	movs	r0, #1
 800d88a:	fa00 f202 	lsl.w	r2, r0, r2
 800d88e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800d892:	bf00      	nop
 800d894:	370c      	adds	r7, #12
 800d896:	46bd      	mov	sp, r7
 800d898:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d89c:	4770      	bx	lr
 800d89e:	bf00      	nop
 800d8a0:	e000e100 	.word	0xe000e100

0800d8a4 <__NVIC_SetPriority>:
 800d8a4:	b480      	push	{r7}
 800d8a6:	b083      	sub	sp, #12
 800d8a8:	af00      	add	r7, sp, #0
 800d8aa:	4603      	mov	r3, r0
 800d8ac:	6039      	str	r1, [r7, #0]
 800d8ae:	71fb      	strb	r3, [r7, #7]
 800d8b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d8b4:	2b00      	cmp	r3, #0
 800d8b6:	db0a      	blt.n	800d8ce <__NVIC_SetPriority+0x2a>
 800d8b8:	683b      	ldr	r3, [r7, #0]
 800d8ba:	b2da      	uxtb	r2, r3
 800d8bc:	490c      	ldr	r1, [pc, #48]	; (800d8f0 <__NVIC_SetPriority+0x4c>)
 800d8be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d8c2:	0112      	lsls	r2, r2, #4
 800d8c4:	b2d2      	uxtb	r2, r2
 800d8c6:	440b      	add	r3, r1
 800d8c8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800d8cc:	e00a      	b.n	800d8e4 <__NVIC_SetPriority+0x40>
 800d8ce:	683b      	ldr	r3, [r7, #0]
 800d8d0:	b2da      	uxtb	r2, r3
 800d8d2:	4908      	ldr	r1, [pc, #32]	; (800d8f4 <__NVIC_SetPriority+0x50>)
 800d8d4:	79fb      	ldrb	r3, [r7, #7]
 800d8d6:	f003 030f 	and.w	r3, r3, #15
 800d8da:	3b04      	subs	r3, #4
 800d8dc:	0112      	lsls	r2, r2, #4
 800d8de:	b2d2      	uxtb	r2, r2
 800d8e0:	440b      	add	r3, r1
 800d8e2:	761a      	strb	r2, [r3, #24]
 800d8e4:	bf00      	nop
 800d8e6:	370c      	adds	r7, #12
 800d8e8:	46bd      	mov	sp, r7
 800d8ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8ee:	4770      	bx	lr
 800d8f0:	e000e100 	.word	0xe000e100
 800d8f4:	e000ed00 	.word	0xe000ed00

0800d8f8 <NVIC_EncodePriority>:
 800d8f8:	b480      	push	{r7}
 800d8fa:	b089      	sub	sp, #36	; 0x24
 800d8fc:	af00      	add	r7, sp, #0
 800d8fe:	60f8      	str	r0, [r7, #12]
 800d900:	60b9      	str	r1, [r7, #8]
 800d902:	607a      	str	r2, [r7, #4]
 800d904:	68fb      	ldr	r3, [r7, #12]
 800d906:	f003 0307 	and.w	r3, r3, #7
 800d90a:	61fb      	str	r3, [r7, #28]
 800d90c:	69fb      	ldr	r3, [r7, #28]
 800d90e:	f1c3 0307 	rsb	r3, r3, #7
 800d912:	2b04      	cmp	r3, #4
 800d914:	bf28      	it	cs
 800d916:	2304      	movcs	r3, #4
 800d918:	61bb      	str	r3, [r7, #24]
 800d91a:	69fb      	ldr	r3, [r7, #28]
 800d91c:	3304      	adds	r3, #4
 800d91e:	2b06      	cmp	r3, #6
 800d920:	d902      	bls.n	800d928 <NVIC_EncodePriority+0x30>
 800d922:	69fb      	ldr	r3, [r7, #28]
 800d924:	3b03      	subs	r3, #3
 800d926:	e000      	b.n	800d92a <NVIC_EncodePriority+0x32>
 800d928:	2300      	movs	r3, #0
 800d92a:	617b      	str	r3, [r7, #20]
 800d92c:	f04f 32ff 	mov.w	r2, #4294967295
 800d930:	69bb      	ldr	r3, [r7, #24]
 800d932:	fa02 f303 	lsl.w	r3, r2, r3
 800d936:	43da      	mvns	r2, r3
 800d938:	68bb      	ldr	r3, [r7, #8]
 800d93a:	401a      	ands	r2, r3
 800d93c:	697b      	ldr	r3, [r7, #20]
 800d93e:	409a      	lsls	r2, r3
 800d940:	f04f 31ff 	mov.w	r1, #4294967295
 800d944:	697b      	ldr	r3, [r7, #20]
 800d946:	fa01 f303 	lsl.w	r3, r1, r3
 800d94a:	43d9      	mvns	r1, r3
 800d94c:	687b      	ldr	r3, [r7, #4]
 800d94e:	400b      	ands	r3, r1
 800d950:	4313      	orrs	r3, r2
 800d952:	4618      	mov	r0, r3
 800d954:	3724      	adds	r7, #36	; 0x24
 800d956:	46bd      	mov	sp, r7
 800d958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d95c:	4770      	bx	lr
	...

0800d960 <SysTick_Config>:
 800d960:	b580      	push	{r7, lr}
 800d962:	b082      	sub	sp, #8
 800d964:	af00      	add	r7, sp, #0
 800d966:	6078      	str	r0, [r7, #4]
 800d968:	687b      	ldr	r3, [r7, #4]
 800d96a:	3b01      	subs	r3, #1
 800d96c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800d970:	d301      	bcc.n	800d976 <SysTick_Config+0x16>
 800d972:	2301      	movs	r3, #1
 800d974:	e00f      	b.n	800d996 <SysTick_Config+0x36>
 800d976:	4a0a      	ldr	r2, [pc, #40]	; (800d9a0 <SysTick_Config+0x40>)
 800d978:	687b      	ldr	r3, [r7, #4]
 800d97a:	3b01      	subs	r3, #1
 800d97c:	6053      	str	r3, [r2, #4]
 800d97e:	210f      	movs	r1, #15
 800d980:	f04f 30ff 	mov.w	r0, #4294967295
 800d984:	f7ff ff8e 	bl	800d8a4 <__NVIC_SetPriority>
 800d988:	4b05      	ldr	r3, [pc, #20]	; (800d9a0 <SysTick_Config+0x40>)
 800d98a:	2200      	movs	r2, #0
 800d98c:	609a      	str	r2, [r3, #8]
 800d98e:	4b04      	ldr	r3, [pc, #16]	; (800d9a0 <SysTick_Config+0x40>)
 800d990:	2207      	movs	r2, #7
 800d992:	601a      	str	r2, [r3, #0]
 800d994:	2300      	movs	r3, #0
 800d996:	4618      	mov	r0, r3
 800d998:	3708      	adds	r7, #8
 800d99a:	46bd      	mov	sp, r7
 800d99c:	bd80      	pop	{r7, pc}
 800d99e:	bf00      	nop
 800d9a0:	e000e010 	.word	0xe000e010

0800d9a4 <HAL_NVIC_SetPriorityGrouping>:
 800d9a4:	b580      	push	{r7, lr}
 800d9a6:	b082      	sub	sp, #8
 800d9a8:	af00      	add	r7, sp, #0
 800d9aa:	6078      	str	r0, [r7, #4]
 800d9ac:	6878      	ldr	r0, [r7, #4]
 800d9ae:	f7ff ff29 	bl	800d804 <__NVIC_SetPriorityGrouping>
 800d9b2:	bf00      	nop
 800d9b4:	3708      	adds	r7, #8
 800d9b6:	46bd      	mov	sp, r7
 800d9b8:	bd80      	pop	{r7, pc}

0800d9ba <HAL_NVIC_SetPriority>:
 800d9ba:	b580      	push	{r7, lr}
 800d9bc:	b086      	sub	sp, #24
 800d9be:	af00      	add	r7, sp, #0
 800d9c0:	4603      	mov	r3, r0
 800d9c2:	60b9      	str	r1, [r7, #8]
 800d9c4:	607a      	str	r2, [r7, #4]
 800d9c6:	73fb      	strb	r3, [r7, #15]
 800d9c8:	2300      	movs	r3, #0
 800d9ca:	617b      	str	r3, [r7, #20]
 800d9cc:	f7ff ff3e 	bl	800d84c <__NVIC_GetPriorityGrouping>
 800d9d0:	6178      	str	r0, [r7, #20]
 800d9d2:	687a      	ldr	r2, [r7, #4]
 800d9d4:	68b9      	ldr	r1, [r7, #8]
 800d9d6:	6978      	ldr	r0, [r7, #20]
 800d9d8:	f7ff ff8e 	bl	800d8f8 <NVIC_EncodePriority>
 800d9dc:	4602      	mov	r2, r0
 800d9de:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800d9e2:	4611      	mov	r1, r2
 800d9e4:	4618      	mov	r0, r3
 800d9e6:	f7ff ff5d 	bl	800d8a4 <__NVIC_SetPriority>
 800d9ea:	bf00      	nop
 800d9ec:	3718      	adds	r7, #24
 800d9ee:	46bd      	mov	sp, r7
 800d9f0:	bd80      	pop	{r7, pc}

0800d9f2 <HAL_NVIC_EnableIRQ>:
 800d9f2:	b580      	push	{r7, lr}
 800d9f4:	b082      	sub	sp, #8
 800d9f6:	af00      	add	r7, sp, #0
 800d9f8:	4603      	mov	r3, r0
 800d9fa:	71fb      	strb	r3, [r7, #7]
 800d9fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800da00:	4618      	mov	r0, r3
 800da02:	f7ff ff31 	bl	800d868 <__NVIC_EnableIRQ>
 800da06:	bf00      	nop
 800da08:	3708      	adds	r7, #8
 800da0a:	46bd      	mov	sp, r7
 800da0c:	bd80      	pop	{r7, pc}

0800da0e <HAL_SYSTICK_Config>:
 800da0e:	b580      	push	{r7, lr}
 800da10:	b082      	sub	sp, #8
 800da12:	af00      	add	r7, sp, #0
 800da14:	6078      	str	r0, [r7, #4]
 800da16:	6878      	ldr	r0, [r7, #4]
 800da18:	f7ff ffa2 	bl	800d960 <SysTick_Config>
 800da1c:	4603      	mov	r3, r0
 800da1e:	4618      	mov	r0, r3
 800da20:	3708      	adds	r7, #8
 800da22:	46bd      	mov	sp, r7
 800da24:	bd80      	pop	{r7, pc}

0800da26 <HAL_DMA_Abort>:
 800da26:	b580      	push	{r7, lr}
 800da28:	b084      	sub	sp, #16
 800da2a:	af00      	add	r7, sp, #0
 800da2c:	6078      	str	r0, [r7, #4]
 800da2e:	687b      	ldr	r3, [r7, #4]
 800da30:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800da32:	60fb      	str	r3, [r7, #12]
 800da34:	f7ff f97e 	bl	800cd34 <HAL_GetTick>
 800da38:	60b8      	str	r0, [r7, #8]
 800da3a:	687b      	ldr	r3, [r7, #4]
 800da3c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800da40:	b2db      	uxtb	r3, r3
 800da42:	2b02      	cmp	r3, #2
 800da44:	d008      	beq.n	800da58 <HAL_DMA_Abort+0x32>
 800da46:	687b      	ldr	r3, [r7, #4]
 800da48:	2280      	movs	r2, #128	; 0x80
 800da4a:	655a      	str	r2, [r3, #84]	; 0x54
 800da4c:	687b      	ldr	r3, [r7, #4]
 800da4e:	2200      	movs	r2, #0
 800da50:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800da54:	2301      	movs	r3, #1
 800da56:	e052      	b.n	800dafe <HAL_DMA_Abort+0xd8>
 800da58:	687b      	ldr	r3, [r7, #4]
 800da5a:	681b      	ldr	r3, [r3, #0]
 800da5c:	681a      	ldr	r2, [r3, #0]
 800da5e:	687b      	ldr	r3, [r7, #4]
 800da60:	681b      	ldr	r3, [r3, #0]
 800da62:	f022 0216 	bic.w	r2, r2, #22
 800da66:	601a      	str	r2, [r3, #0]
 800da68:	687b      	ldr	r3, [r7, #4]
 800da6a:	681b      	ldr	r3, [r3, #0]
 800da6c:	695a      	ldr	r2, [r3, #20]
 800da6e:	687b      	ldr	r3, [r7, #4]
 800da70:	681b      	ldr	r3, [r3, #0]
 800da72:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800da76:	615a      	str	r2, [r3, #20]
 800da78:	687b      	ldr	r3, [r7, #4]
 800da7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800da7c:	2b00      	cmp	r3, #0
 800da7e:	d103      	bne.n	800da88 <HAL_DMA_Abort+0x62>
 800da80:	687b      	ldr	r3, [r7, #4]
 800da82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800da84:	2b00      	cmp	r3, #0
 800da86:	d007      	beq.n	800da98 <HAL_DMA_Abort+0x72>
 800da88:	687b      	ldr	r3, [r7, #4]
 800da8a:	681b      	ldr	r3, [r3, #0]
 800da8c:	681a      	ldr	r2, [r3, #0]
 800da8e:	687b      	ldr	r3, [r7, #4]
 800da90:	681b      	ldr	r3, [r3, #0]
 800da92:	f022 0208 	bic.w	r2, r2, #8
 800da96:	601a      	str	r2, [r3, #0]
 800da98:	687b      	ldr	r3, [r7, #4]
 800da9a:	681b      	ldr	r3, [r3, #0]
 800da9c:	681a      	ldr	r2, [r3, #0]
 800da9e:	687b      	ldr	r3, [r7, #4]
 800daa0:	681b      	ldr	r3, [r3, #0]
 800daa2:	f022 0201 	bic.w	r2, r2, #1
 800daa6:	601a      	str	r2, [r3, #0]
 800daa8:	e013      	b.n	800dad2 <HAL_DMA_Abort+0xac>
 800daaa:	f7ff f943 	bl	800cd34 <HAL_GetTick>
 800daae:	4602      	mov	r2, r0
 800dab0:	68bb      	ldr	r3, [r7, #8]
 800dab2:	1ad3      	subs	r3, r2, r3
 800dab4:	2b05      	cmp	r3, #5
 800dab6:	d90c      	bls.n	800dad2 <HAL_DMA_Abort+0xac>
 800dab8:	687b      	ldr	r3, [r7, #4]
 800daba:	2220      	movs	r2, #32
 800dabc:	655a      	str	r2, [r3, #84]	; 0x54
 800dabe:	687b      	ldr	r3, [r7, #4]
 800dac0:	2203      	movs	r2, #3
 800dac2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800dac6:	687b      	ldr	r3, [r7, #4]
 800dac8:	2200      	movs	r2, #0
 800daca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800dace:	2303      	movs	r3, #3
 800dad0:	e015      	b.n	800dafe <HAL_DMA_Abort+0xd8>
 800dad2:	687b      	ldr	r3, [r7, #4]
 800dad4:	681b      	ldr	r3, [r3, #0]
 800dad6:	681b      	ldr	r3, [r3, #0]
 800dad8:	f003 0301 	and.w	r3, r3, #1
 800dadc:	2b00      	cmp	r3, #0
 800dade:	d1e4      	bne.n	800daaa <HAL_DMA_Abort+0x84>
 800dae0:	687b      	ldr	r3, [r7, #4]
 800dae2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800dae4:	223f      	movs	r2, #63	; 0x3f
 800dae6:	409a      	lsls	r2, r3
 800dae8:	68fb      	ldr	r3, [r7, #12]
 800daea:	609a      	str	r2, [r3, #8]
 800daec:	687b      	ldr	r3, [r7, #4]
 800daee:	2201      	movs	r2, #1
 800daf0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800daf4:	687b      	ldr	r3, [r7, #4]
 800daf6:	2200      	movs	r2, #0
 800daf8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800dafc:	2300      	movs	r3, #0
 800dafe:	4618      	mov	r0, r3
 800db00:	3710      	adds	r7, #16
 800db02:	46bd      	mov	sp, r7
 800db04:	bd80      	pop	{r7, pc}

0800db06 <HAL_DMA_Abort_IT>:
 800db06:	b480      	push	{r7}
 800db08:	b083      	sub	sp, #12
 800db0a:	af00      	add	r7, sp, #0
 800db0c:	6078      	str	r0, [r7, #4]
 800db0e:	687b      	ldr	r3, [r7, #4]
 800db10:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800db14:	b2db      	uxtb	r3, r3
 800db16:	2b02      	cmp	r3, #2
 800db18:	d004      	beq.n	800db24 <HAL_DMA_Abort_IT+0x1e>
 800db1a:	687b      	ldr	r3, [r7, #4]
 800db1c:	2280      	movs	r2, #128	; 0x80
 800db1e:	655a      	str	r2, [r3, #84]	; 0x54
 800db20:	2301      	movs	r3, #1
 800db22:	e00c      	b.n	800db3e <HAL_DMA_Abort_IT+0x38>
 800db24:	687b      	ldr	r3, [r7, #4]
 800db26:	2205      	movs	r2, #5
 800db28:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800db2c:	687b      	ldr	r3, [r7, #4]
 800db2e:	681b      	ldr	r3, [r3, #0]
 800db30:	681a      	ldr	r2, [r3, #0]
 800db32:	687b      	ldr	r3, [r7, #4]
 800db34:	681b      	ldr	r3, [r3, #0]
 800db36:	f022 0201 	bic.w	r2, r2, #1
 800db3a:	601a      	str	r2, [r3, #0]
 800db3c:	2300      	movs	r3, #0
 800db3e:	4618      	mov	r0, r3
 800db40:	370c      	adds	r7, #12
 800db42:	46bd      	mov	sp, r7
 800db44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db48:	4770      	bx	lr
	...

0800db4c <HAL_GPIO_Init>:
 800db4c:	b480      	push	{r7}
 800db4e:	b089      	sub	sp, #36	; 0x24
 800db50:	af00      	add	r7, sp, #0
 800db52:	6078      	str	r0, [r7, #4]
 800db54:	6039      	str	r1, [r7, #0]
 800db56:	2300      	movs	r3, #0
 800db58:	617b      	str	r3, [r7, #20]
 800db5a:	2300      	movs	r3, #0
 800db5c:	613b      	str	r3, [r7, #16]
 800db5e:	2300      	movs	r3, #0
 800db60:	61bb      	str	r3, [r7, #24]
 800db62:	2300      	movs	r3, #0
 800db64:	61fb      	str	r3, [r7, #28]
 800db66:	e16b      	b.n	800de40 <HAL_GPIO_Init+0x2f4>
 800db68:	2201      	movs	r2, #1
 800db6a:	69fb      	ldr	r3, [r7, #28]
 800db6c:	fa02 f303 	lsl.w	r3, r2, r3
 800db70:	617b      	str	r3, [r7, #20]
 800db72:	683b      	ldr	r3, [r7, #0]
 800db74:	681b      	ldr	r3, [r3, #0]
 800db76:	697a      	ldr	r2, [r7, #20]
 800db78:	4013      	ands	r3, r2
 800db7a:	613b      	str	r3, [r7, #16]
 800db7c:	693a      	ldr	r2, [r7, #16]
 800db7e:	697b      	ldr	r3, [r7, #20]
 800db80:	429a      	cmp	r2, r3
 800db82:	f040 815a 	bne.w	800de3a <HAL_GPIO_Init+0x2ee>
 800db86:	683b      	ldr	r3, [r7, #0]
 800db88:	685b      	ldr	r3, [r3, #4]
 800db8a:	f003 0303 	and.w	r3, r3, #3
 800db8e:	2b01      	cmp	r3, #1
 800db90:	d005      	beq.n	800db9e <HAL_GPIO_Init+0x52>
 800db92:	683b      	ldr	r3, [r7, #0]
 800db94:	685b      	ldr	r3, [r3, #4]
 800db96:	f003 0303 	and.w	r3, r3, #3
 800db9a:	2b02      	cmp	r3, #2
 800db9c:	d130      	bne.n	800dc00 <HAL_GPIO_Init+0xb4>
 800db9e:	687b      	ldr	r3, [r7, #4]
 800dba0:	689b      	ldr	r3, [r3, #8]
 800dba2:	61bb      	str	r3, [r7, #24]
 800dba4:	69fb      	ldr	r3, [r7, #28]
 800dba6:	005b      	lsls	r3, r3, #1
 800dba8:	2203      	movs	r2, #3
 800dbaa:	fa02 f303 	lsl.w	r3, r2, r3
 800dbae:	43db      	mvns	r3, r3
 800dbb0:	69ba      	ldr	r2, [r7, #24]
 800dbb2:	4013      	ands	r3, r2
 800dbb4:	61bb      	str	r3, [r7, #24]
 800dbb6:	683b      	ldr	r3, [r7, #0]
 800dbb8:	68da      	ldr	r2, [r3, #12]
 800dbba:	69fb      	ldr	r3, [r7, #28]
 800dbbc:	005b      	lsls	r3, r3, #1
 800dbbe:	fa02 f303 	lsl.w	r3, r2, r3
 800dbc2:	69ba      	ldr	r2, [r7, #24]
 800dbc4:	4313      	orrs	r3, r2
 800dbc6:	61bb      	str	r3, [r7, #24]
 800dbc8:	687b      	ldr	r3, [r7, #4]
 800dbca:	69ba      	ldr	r2, [r7, #24]
 800dbcc:	609a      	str	r2, [r3, #8]
 800dbce:	687b      	ldr	r3, [r7, #4]
 800dbd0:	685b      	ldr	r3, [r3, #4]
 800dbd2:	61bb      	str	r3, [r7, #24]
 800dbd4:	2201      	movs	r2, #1
 800dbd6:	69fb      	ldr	r3, [r7, #28]
 800dbd8:	fa02 f303 	lsl.w	r3, r2, r3
 800dbdc:	43db      	mvns	r3, r3
 800dbde:	69ba      	ldr	r2, [r7, #24]
 800dbe0:	4013      	ands	r3, r2
 800dbe2:	61bb      	str	r3, [r7, #24]
 800dbe4:	683b      	ldr	r3, [r7, #0]
 800dbe6:	685b      	ldr	r3, [r3, #4]
 800dbe8:	091b      	lsrs	r3, r3, #4
 800dbea:	f003 0201 	and.w	r2, r3, #1
 800dbee:	69fb      	ldr	r3, [r7, #28]
 800dbf0:	fa02 f303 	lsl.w	r3, r2, r3
 800dbf4:	69ba      	ldr	r2, [r7, #24]
 800dbf6:	4313      	orrs	r3, r2
 800dbf8:	61bb      	str	r3, [r7, #24]
 800dbfa:	687b      	ldr	r3, [r7, #4]
 800dbfc:	69ba      	ldr	r2, [r7, #24]
 800dbfe:	605a      	str	r2, [r3, #4]
 800dc00:	683b      	ldr	r3, [r7, #0]
 800dc02:	685b      	ldr	r3, [r3, #4]
 800dc04:	f003 0303 	and.w	r3, r3, #3
 800dc08:	2b03      	cmp	r3, #3
 800dc0a:	d017      	beq.n	800dc3c <HAL_GPIO_Init+0xf0>
 800dc0c:	687b      	ldr	r3, [r7, #4]
 800dc0e:	68db      	ldr	r3, [r3, #12]
 800dc10:	61bb      	str	r3, [r7, #24]
 800dc12:	69fb      	ldr	r3, [r7, #28]
 800dc14:	005b      	lsls	r3, r3, #1
 800dc16:	2203      	movs	r2, #3
 800dc18:	fa02 f303 	lsl.w	r3, r2, r3
 800dc1c:	43db      	mvns	r3, r3
 800dc1e:	69ba      	ldr	r2, [r7, #24]
 800dc20:	4013      	ands	r3, r2
 800dc22:	61bb      	str	r3, [r7, #24]
 800dc24:	683b      	ldr	r3, [r7, #0]
 800dc26:	689a      	ldr	r2, [r3, #8]
 800dc28:	69fb      	ldr	r3, [r7, #28]
 800dc2a:	005b      	lsls	r3, r3, #1
 800dc2c:	fa02 f303 	lsl.w	r3, r2, r3
 800dc30:	69ba      	ldr	r2, [r7, #24]
 800dc32:	4313      	orrs	r3, r2
 800dc34:	61bb      	str	r3, [r7, #24]
 800dc36:	687b      	ldr	r3, [r7, #4]
 800dc38:	69ba      	ldr	r2, [r7, #24]
 800dc3a:	60da      	str	r2, [r3, #12]
 800dc3c:	683b      	ldr	r3, [r7, #0]
 800dc3e:	685b      	ldr	r3, [r3, #4]
 800dc40:	f003 0303 	and.w	r3, r3, #3
 800dc44:	2b02      	cmp	r3, #2
 800dc46:	d123      	bne.n	800dc90 <HAL_GPIO_Init+0x144>
 800dc48:	69fb      	ldr	r3, [r7, #28]
 800dc4a:	08da      	lsrs	r2, r3, #3
 800dc4c:	687b      	ldr	r3, [r7, #4]
 800dc4e:	3208      	adds	r2, #8
 800dc50:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dc54:	61bb      	str	r3, [r7, #24]
 800dc56:	69fb      	ldr	r3, [r7, #28]
 800dc58:	f003 0307 	and.w	r3, r3, #7
 800dc5c:	009b      	lsls	r3, r3, #2
 800dc5e:	220f      	movs	r2, #15
 800dc60:	fa02 f303 	lsl.w	r3, r2, r3
 800dc64:	43db      	mvns	r3, r3
 800dc66:	69ba      	ldr	r2, [r7, #24]
 800dc68:	4013      	ands	r3, r2
 800dc6a:	61bb      	str	r3, [r7, #24]
 800dc6c:	683b      	ldr	r3, [r7, #0]
 800dc6e:	691a      	ldr	r2, [r3, #16]
 800dc70:	69fb      	ldr	r3, [r7, #28]
 800dc72:	f003 0307 	and.w	r3, r3, #7
 800dc76:	009b      	lsls	r3, r3, #2
 800dc78:	fa02 f303 	lsl.w	r3, r2, r3
 800dc7c:	69ba      	ldr	r2, [r7, #24]
 800dc7e:	4313      	orrs	r3, r2
 800dc80:	61bb      	str	r3, [r7, #24]
 800dc82:	69fb      	ldr	r3, [r7, #28]
 800dc84:	08da      	lsrs	r2, r3, #3
 800dc86:	687b      	ldr	r3, [r7, #4]
 800dc88:	3208      	adds	r2, #8
 800dc8a:	69b9      	ldr	r1, [r7, #24]
 800dc8c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800dc90:	687b      	ldr	r3, [r7, #4]
 800dc92:	681b      	ldr	r3, [r3, #0]
 800dc94:	61bb      	str	r3, [r7, #24]
 800dc96:	69fb      	ldr	r3, [r7, #28]
 800dc98:	005b      	lsls	r3, r3, #1
 800dc9a:	2203      	movs	r2, #3
 800dc9c:	fa02 f303 	lsl.w	r3, r2, r3
 800dca0:	43db      	mvns	r3, r3
 800dca2:	69ba      	ldr	r2, [r7, #24]
 800dca4:	4013      	ands	r3, r2
 800dca6:	61bb      	str	r3, [r7, #24]
 800dca8:	683b      	ldr	r3, [r7, #0]
 800dcaa:	685b      	ldr	r3, [r3, #4]
 800dcac:	f003 0203 	and.w	r2, r3, #3
 800dcb0:	69fb      	ldr	r3, [r7, #28]
 800dcb2:	005b      	lsls	r3, r3, #1
 800dcb4:	fa02 f303 	lsl.w	r3, r2, r3
 800dcb8:	69ba      	ldr	r2, [r7, #24]
 800dcba:	4313      	orrs	r3, r2
 800dcbc:	61bb      	str	r3, [r7, #24]
 800dcbe:	687b      	ldr	r3, [r7, #4]
 800dcc0:	69ba      	ldr	r2, [r7, #24]
 800dcc2:	601a      	str	r2, [r3, #0]
 800dcc4:	683b      	ldr	r3, [r7, #0]
 800dcc6:	685b      	ldr	r3, [r3, #4]
 800dcc8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800dccc:	2b00      	cmp	r3, #0
 800dcce:	f000 80b4 	beq.w	800de3a <HAL_GPIO_Init+0x2ee>
 800dcd2:	2300      	movs	r3, #0
 800dcd4:	60fb      	str	r3, [r7, #12]
 800dcd6:	4b60      	ldr	r3, [pc, #384]	; (800de58 <HAL_GPIO_Init+0x30c>)
 800dcd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dcda:	4a5f      	ldr	r2, [pc, #380]	; (800de58 <HAL_GPIO_Init+0x30c>)
 800dcdc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800dce0:	6453      	str	r3, [r2, #68]	; 0x44
 800dce2:	4b5d      	ldr	r3, [pc, #372]	; (800de58 <HAL_GPIO_Init+0x30c>)
 800dce4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dce6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800dcea:	60fb      	str	r3, [r7, #12]
 800dcec:	68fb      	ldr	r3, [r7, #12]
 800dcee:	4a5b      	ldr	r2, [pc, #364]	; (800de5c <HAL_GPIO_Init+0x310>)
 800dcf0:	69fb      	ldr	r3, [r7, #28]
 800dcf2:	089b      	lsrs	r3, r3, #2
 800dcf4:	3302      	adds	r3, #2
 800dcf6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800dcfa:	61bb      	str	r3, [r7, #24]
 800dcfc:	69fb      	ldr	r3, [r7, #28]
 800dcfe:	f003 0303 	and.w	r3, r3, #3
 800dd02:	009b      	lsls	r3, r3, #2
 800dd04:	220f      	movs	r2, #15
 800dd06:	fa02 f303 	lsl.w	r3, r2, r3
 800dd0a:	43db      	mvns	r3, r3
 800dd0c:	69ba      	ldr	r2, [r7, #24]
 800dd0e:	4013      	ands	r3, r2
 800dd10:	61bb      	str	r3, [r7, #24]
 800dd12:	687b      	ldr	r3, [r7, #4]
 800dd14:	4a52      	ldr	r2, [pc, #328]	; (800de60 <HAL_GPIO_Init+0x314>)
 800dd16:	4293      	cmp	r3, r2
 800dd18:	d02b      	beq.n	800dd72 <HAL_GPIO_Init+0x226>
 800dd1a:	687b      	ldr	r3, [r7, #4]
 800dd1c:	4a51      	ldr	r2, [pc, #324]	; (800de64 <HAL_GPIO_Init+0x318>)
 800dd1e:	4293      	cmp	r3, r2
 800dd20:	d025      	beq.n	800dd6e <HAL_GPIO_Init+0x222>
 800dd22:	687b      	ldr	r3, [r7, #4]
 800dd24:	4a50      	ldr	r2, [pc, #320]	; (800de68 <HAL_GPIO_Init+0x31c>)
 800dd26:	4293      	cmp	r3, r2
 800dd28:	d01f      	beq.n	800dd6a <HAL_GPIO_Init+0x21e>
 800dd2a:	687b      	ldr	r3, [r7, #4]
 800dd2c:	4a4f      	ldr	r2, [pc, #316]	; (800de6c <HAL_GPIO_Init+0x320>)
 800dd2e:	4293      	cmp	r3, r2
 800dd30:	d019      	beq.n	800dd66 <HAL_GPIO_Init+0x21a>
 800dd32:	687b      	ldr	r3, [r7, #4]
 800dd34:	4a4e      	ldr	r2, [pc, #312]	; (800de70 <HAL_GPIO_Init+0x324>)
 800dd36:	4293      	cmp	r3, r2
 800dd38:	d013      	beq.n	800dd62 <HAL_GPIO_Init+0x216>
 800dd3a:	687b      	ldr	r3, [r7, #4]
 800dd3c:	4a4d      	ldr	r2, [pc, #308]	; (800de74 <HAL_GPIO_Init+0x328>)
 800dd3e:	4293      	cmp	r3, r2
 800dd40:	d00d      	beq.n	800dd5e <HAL_GPIO_Init+0x212>
 800dd42:	687b      	ldr	r3, [r7, #4]
 800dd44:	4a4c      	ldr	r2, [pc, #304]	; (800de78 <HAL_GPIO_Init+0x32c>)
 800dd46:	4293      	cmp	r3, r2
 800dd48:	d007      	beq.n	800dd5a <HAL_GPIO_Init+0x20e>
 800dd4a:	687b      	ldr	r3, [r7, #4]
 800dd4c:	4a4b      	ldr	r2, [pc, #300]	; (800de7c <HAL_GPIO_Init+0x330>)
 800dd4e:	4293      	cmp	r3, r2
 800dd50:	d101      	bne.n	800dd56 <HAL_GPIO_Init+0x20a>
 800dd52:	2307      	movs	r3, #7
 800dd54:	e00e      	b.n	800dd74 <HAL_GPIO_Init+0x228>
 800dd56:	2308      	movs	r3, #8
 800dd58:	e00c      	b.n	800dd74 <HAL_GPIO_Init+0x228>
 800dd5a:	2306      	movs	r3, #6
 800dd5c:	e00a      	b.n	800dd74 <HAL_GPIO_Init+0x228>
 800dd5e:	2305      	movs	r3, #5
 800dd60:	e008      	b.n	800dd74 <HAL_GPIO_Init+0x228>
 800dd62:	2304      	movs	r3, #4
 800dd64:	e006      	b.n	800dd74 <HAL_GPIO_Init+0x228>
 800dd66:	2303      	movs	r3, #3
 800dd68:	e004      	b.n	800dd74 <HAL_GPIO_Init+0x228>
 800dd6a:	2302      	movs	r3, #2
 800dd6c:	e002      	b.n	800dd74 <HAL_GPIO_Init+0x228>
 800dd6e:	2301      	movs	r3, #1
 800dd70:	e000      	b.n	800dd74 <HAL_GPIO_Init+0x228>
 800dd72:	2300      	movs	r3, #0
 800dd74:	69fa      	ldr	r2, [r7, #28]
 800dd76:	f002 0203 	and.w	r2, r2, #3
 800dd7a:	0092      	lsls	r2, r2, #2
 800dd7c:	4093      	lsls	r3, r2
 800dd7e:	69ba      	ldr	r2, [r7, #24]
 800dd80:	4313      	orrs	r3, r2
 800dd82:	61bb      	str	r3, [r7, #24]
 800dd84:	4935      	ldr	r1, [pc, #212]	; (800de5c <HAL_GPIO_Init+0x310>)
 800dd86:	69fb      	ldr	r3, [r7, #28]
 800dd88:	089b      	lsrs	r3, r3, #2
 800dd8a:	3302      	adds	r3, #2
 800dd8c:	69ba      	ldr	r2, [r7, #24]
 800dd8e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800dd92:	4b3b      	ldr	r3, [pc, #236]	; (800de80 <HAL_GPIO_Init+0x334>)
 800dd94:	689b      	ldr	r3, [r3, #8]
 800dd96:	61bb      	str	r3, [r7, #24]
 800dd98:	693b      	ldr	r3, [r7, #16]
 800dd9a:	43db      	mvns	r3, r3
 800dd9c:	69ba      	ldr	r2, [r7, #24]
 800dd9e:	4013      	ands	r3, r2
 800dda0:	61bb      	str	r3, [r7, #24]
 800dda2:	683b      	ldr	r3, [r7, #0]
 800dda4:	685b      	ldr	r3, [r3, #4]
 800dda6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800ddaa:	2b00      	cmp	r3, #0
 800ddac:	d003      	beq.n	800ddb6 <HAL_GPIO_Init+0x26a>
 800ddae:	69ba      	ldr	r2, [r7, #24]
 800ddb0:	693b      	ldr	r3, [r7, #16]
 800ddb2:	4313      	orrs	r3, r2
 800ddb4:	61bb      	str	r3, [r7, #24]
 800ddb6:	4a32      	ldr	r2, [pc, #200]	; (800de80 <HAL_GPIO_Init+0x334>)
 800ddb8:	69bb      	ldr	r3, [r7, #24]
 800ddba:	6093      	str	r3, [r2, #8]
 800ddbc:	4b30      	ldr	r3, [pc, #192]	; (800de80 <HAL_GPIO_Init+0x334>)
 800ddbe:	68db      	ldr	r3, [r3, #12]
 800ddc0:	61bb      	str	r3, [r7, #24]
 800ddc2:	693b      	ldr	r3, [r7, #16]
 800ddc4:	43db      	mvns	r3, r3
 800ddc6:	69ba      	ldr	r2, [r7, #24]
 800ddc8:	4013      	ands	r3, r2
 800ddca:	61bb      	str	r3, [r7, #24]
 800ddcc:	683b      	ldr	r3, [r7, #0]
 800ddce:	685b      	ldr	r3, [r3, #4]
 800ddd0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800ddd4:	2b00      	cmp	r3, #0
 800ddd6:	d003      	beq.n	800dde0 <HAL_GPIO_Init+0x294>
 800ddd8:	69ba      	ldr	r2, [r7, #24]
 800ddda:	693b      	ldr	r3, [r7, #16]
 800dddc:	4313      	orrs	r3, r2
 800ddde:	61bb      	str	r3, [r7, #24]
 800dde0:	4a27      	ldr	r2, [pc, #156]	; (800de80 <HAL_GPIO_Init+0x334>)
 800dde2:	69bb      	ldr	r3, [r7, #24]
 800dde4:	60d3      	str	r3, [r2, #12]
 800dde6:	4b26      	ldr	r3, [pc, #152]	; (800de80 <HAL_GPIO_Init+0x334>)
 800dde8:	685b      	ldr	r3, [r3, #4]
 800ddea:	61bb      	str	r3, [r7, #24]
 800ddec:	693b      	ldr	r3, [r7, #16]
 800ddee:	43db      	mvns	r3, r3
 800ddf0:	69ba      	ldr	r2, [r7, #24]
 800ddf2:	4013      	ands	r3, r2
 800ddf4:	61bb      	str	r3, [r7, #24]
 800ddf6:	683b      	ldr	r3, [r7, #0]
 800ddf8:	685b      	ldr	r3, [r3, #4]
 800ddfa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800ddfe:	2b00      	cmp	r3, #0
 800de00:	d003      	beq.n	800de0a <HAL_GPIO_Init+0x2be>
 800de02:	69ba      	ldr	r2, [r7, #24]
 800de04:	693b      	ldr	r3, [r7, #16]
 800de06:	4313      	orrs	r3, r2
 800de08:	61bb      	str	r3, [r7, #24]
 800de0a:	4a1d      	ldr	r2, [pc, #116]	; (800de80 <HAL_GPIO_Init+0x334>)
 800de0c:	69bb      	ldr	r3, [r7, #24]
 800de0e:	6053      	str	r3, [r2, #4]
 800de10:	4b1b      	ldr	r3, [pc, #108]	; (800de80 <HAL_GPIO_Init+0x334>)
 800de12:	681b      	ldr	r3, [r3, #0]
 800de14:	61bb      	str	r3, [r7, #24]
 800de16:	693b      	ldr	r3, [r7, #16]
 800de18:	43db      	mvns	r3, r3
 800de1a:	69ba      	ldr	r2, [r7, #24]
 800de1c:	4013      	ands	r3, r2
 800de1e:	61bb      	str	r3, [r7, #24]
 800de20:	683b      	ldr	r3, [r7, #0]
 800de22:	685b      	ldr	r3, [r3, #4]
 800de24:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800de28:	2b00      	cmp	r3, #0
 800de2a:	d003      	beq.n	800de34 <HAL_GPIO_Init+0x2e8>
 800de2c:	69ba      	ldr	r2, [r7, #24]
 800de2e:	693b      	ldr	r3, [r7, #16]
 800de30:	4313      	orrs	r3, r2
 800de32:	61bb      	str	r3, [r7, #24]
 800de34:	4a12      	ldr	r2, [pc, #72]	; (800de80 <HAL_GPIO_Init+0x334>)
 800de36:	69bb      	ldr	r3, [r7, #24]
 800de38:	6013      	str	r3, [r2, #0]
 800de3a:	69fb      	ldr	r3, [r7, #28]
 800de3c:	3301      	adds	r3, #1
 800de3e:	61fb      	str	r3, [r7, #28]
 800de40:	69fb      	ldr	r3, [r7, #28]
 800de42:	2b0f      	cmp	r3, #15
 800de44:	f67f ae90 	bls.w	800db68 <HAL_GPIO_Init+0x1c>
 800de48:	bf00      	nop
 800de4a:	bf00      	nop
 800de4c:	3724      	adds	r7, #36	; 0x24
 800de4e:	46bd      	mov	sp, r7
 800de50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de54:	4770      	bx	lr
 800de56:	bf00      	nop
 800de58:	40023800 	.word	0x40023800
 800de5c:	40013800 	.word	0x40013800
 800de60:	40020000 	.word	0x40020000
 800de64:	40020400 	.word	0x40020400
 800de68:	40020800 	.word	0x40020800
 800de6c:	40020c00 	.word	0x40020c00
 800de70:	40021000 	.word	0x40021000
 800de74:	40021400 	.word	0x40021400
 800de78:	40021800 	.word	0x40021800
 800de7c:	40021c00 	.word	0x40021c00
 800de80:	40013c00 	.word	0x40013c00

0800de84 <HAL_GPIO_ReadPin>:
 800de84:	b480      	push	{r7}
 800de86:	b085      	sub	sp, #20
 800de88:	af00      	add	r7, sp, #0
 800de8a:	6078      	str	r0, [r7, #4]
 800de8c:	460b      	mov	r3, r1
 800de8e:	807b      	strh	r3, [r7, #2]
 800de90:	687b      	ldr	r3, [r7, #4]
 800de92:	691a      	ldr	r2, [r3, #16]
 800de94:	887b      	ldrh	r3, [r7, #2]
 800de96:	4013      	ands	r3, r2
 800de98:	2b00      	cmp	r3, #0
 800de9a:	d002      	beq.n	800dea2 <HAL_GPIO_ReadPin+0x1e>
 800de9c:	2301      	movs	r3, #1
 800de9e:	73fb      	strb	r3, [r7, #15]
 800dea0:	e001      	b.n	800dea6 <HAL_GPIO_ReadPin+0x22>
 800dea2:	2300      	movs	r3, #0
 800dea4:	73fb      	strb	r3, [r7, #15]
 800dea6:	7bfb      	ldrb	r3, [r7, #15]
 800dea8:	4618      	mov	r0, r3
 800deaa:	3714      	adds	r7, #20
 800deac:	46bd      	mov	sp, r7
 800deae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deb2:	4770      	bx	lr

0800deb4 <HAL_GPIO_WritePin>:
 800deb4:	b480      	push	{r7}
 800deb6:	b083      	sub	sp, #12
 800deb8:	af00      	add	r7, sp, #0
 800deba:	6078      	str	r0, [r7, #4]
 800debc:	460b      	mov	r3, r1
 800debe:	807b      	strh	r3, [r7, #2]
 800dec0:	4613      	mov	r3, r2
 800dec2:	707b      	strb	r3, [r7, #1]
 800dec4:	787b      	ldrb	r3, [r7, #1]
 800dec6:	2b00      	cmp	r3, #0
 800dec8:	d003      	beq.n	800ded2 <HAL_GPIO_WritePin+0x1e>
 800deca:	887a      	ldrh	r2, [r7, #2]
 800decc:	687b      	ldr	r3, [r7, #4]
 800dece:	619a      	str	r2, [r3, #24]
 800ded0:	e003      	b.n	800deda <HAL_GPIO_WritePin+0x26>
 800ded2:	887b      	ldrh	r3, [r7, #2]
 800ded4:	041a      	lsls	r2, r3, #16
 800ded6:	687b      	ldr	r3, [r7, #4]
 800ded8:	619a      	str	r2, [r3, #24]
 800deda:	bf00      	nop
 800dedc:	370c      	adds	r7, #12
 800dede:	46bd      	mov	sp, r7
 800dee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dee4:	4770      	bx	lr
	...

0800dee8 <HAL_GPIO_EXTI_IRQHandler>:
 800dee8:	b580      	push	{r7, lr}
 800deea:	b082      	sub	sp, #8
 800deec:	af00      	add	r7, sp, #0
 800deee:	4603      	mov	r3, r0
 800def0:	80fb      	strh	r3, [r7, #6]
 800def2:	4b08      	ldr	r3, [pc, #32]	; (800df14 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800def4:	695a      	ldr	r2, [r3, #20]
 800def6:	88fb      	ldrh	r3, [r7, #6]
 800def8:	4013      	ands	r3, r2
 800defa:	2b00      	cmp	r3, #0
 800defc:	d006      	beq.n	800df0c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800defe:	4a05      	ldr	r2, [pc, #20]	; (800df14 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800df00:	88fb      	ldrh	r3, [r7, #6]
 800df02:	6153      	str	r3, [r2, #20]
 800df04:	88fb      	ldrh	r3, [r7, #6]
 800df06:	4618      	mov	r0, r3
 800df08:	f7fd fbaa 	bl	800b660 <HAL_GPIO_EXTI_Callback>
 800df0c:	bf00      	nop
 800df0e:	3708      	adds	r7, #8
 800df10:	46bd      	mov	sp, r7
 800df12:	bd80      	pop	{r7, pc}
 800df14:	40013c00 	.word	0x40013c00

0800df18 <HAL_RCC_OscConfig>:
 800df18:	b580      	push	{r7, lr}
 800df1a:	b086      	sub	sp, #24
 800df1c:	af00      	add	r7, sp, #0
 800df1e:	6078      	str	r0, [r7, #4]
 800df20:	687b      	ldr	r3, [r7, #4]
 800df22:	2b00      	cmp	r3, #0
 800df24:	d101      	bne.n	800df2a <HAL_RCC_OscConfig+0x12>
 800df26:	2301      	movs	r3, #1
 800df28:	e267      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800df2a:	687b      	ldr	r3, [r7, #4]
 800df2c:	681b      	ldr	r3, [r3, #0]
 800df2e:	f003 0301 	and.w	r3, r3, #1
 800df32:	2b00      	cmp	r3, #0
 800df34:	d075      	beq.n	800e022 <HAL_RCC_OscConfig+0x10a>
 800df36:	4b88      	ldr	r3, [pc, #544]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800df38:	689b      	ldr	r3, [r3, #8]
 800df3a:	f003 030c 	and.w	r3, r3, #12
 800df3e:	2b04      	cmp	r3, #4
 800df40:	d00c      	beq.n	800df5c <HAL_RCC_OscConfig+0x44>
 800df42:	4b85      	ldr	r3, [pc, #532]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800df44:	689b      	ldr	r3, [r3, #8]
 800df46:	f003 030c 	and.w	r3, r3, #12
 800df4a:	2b08      	cmp	r3, #8
 800df4c:	d112      	bne.n	800df74 <HAL_RCC_OscConfig+0x5c>
 800df4e:	4b82      	ldr	r3, [pc, #520]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800df50:	685b      	ldr	r3, [r3, #4]
 800df52:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800df56:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800df5a:	d10b      	bne.n	800df74 <HAL_RCC_OscConfig+0x5c>
 800df5c:	4b7e      	ldr	r3, [pc, #504]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800df5e:	681b      	ldr	r3, [r3, #0]
 800df60:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800df64:	2b00      	cmp	r3, #0
 800df66:	d05b      	beq.n	800e020 <HAL_RCC_OscConfig+0x108>
 800df68:	687b      	ldr	r3, [r7, #4]
 800df6a:	685b      	ldr	r3, [r3, #4]
 800df6c:	2b00      	cmp	r3, #0
 800df6e:	d157      	bne.n	800e020 <HAL_RCC_OscConfig+0x108>
 800df70:	2301      	movs	r3, #1
 800df72:	e242      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800df74:	687b      	ldr	r3, [r7, #4]
 800df76:	685b      	ldr	r3, [r3, #4]
 800df78:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800df7c:	d106      	bne.n	800df8c <HAL_RCC_OscConfig+0x74>
 800df7e:	4b76      	ldr	r3, [pc, #472]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800df80:	681b      	ldr	r3, [r3, #0]
 800df82:	4a75      	ldr	r2, [pc, #468]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800df84:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800df88:	6013      	str	r3, [r2, #0]
 800df8a:	e01d      	b.n	800dfc8 <HAL_RCC_OscConfig+0xb0>
 800df8c:	687b      	ldr	r3, [r7, #4]
 800df8e:	685b      	ldr	r3, [r3, #4]
 800df90:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800df94:	d10c      	bne.n	800dfb0 <HAL_RCC_OscConfig+0x98>
 800df96:	4b70      	ldr	r3, [pc, #448]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800df98:	681b      	ldr	r3, [r3, #0]
 800df9a:	4a6f      	ldr	r2, [pc, #444]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800df9c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800dfa0:	6013      	str	r3, [r2, #0]
 800dfa2:	4b6d      	ldr	r3, [pc, #436]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800dfa4:	681b      	ldr	r3, [r3, #0]
 800dfa6:	4a6c      	ldr	r2, [pc, #432]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800dfa8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800dfac:	6013      	str	r3, [r2, #0]
 800dfae:	e00b      	b.n	800dfc8 <HAL_RCC_OscConfig+0xb0>
 800dfb0:	4b69      	ldr	r3, [pc, #420]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800dfb2:	681b      	ldr	r3, [r3, #0]
 800dfb4:	4a68      	ldr	r2, [pc, #416]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800dfb6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800dfba:	6013      	str	r3, [r2, #0]
 800dfbc:	4b66      	ldr	r3, [pc, #408]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800dfbe:	681b      	ldr	r3, [r3, #0]
 800dfc0:	4a65      	ldr	r2, [pc, #404]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800dfc2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800dfc6:	6013      	str	r3, [r2, #0]
 800dfc8:	687b      	ldr	r3, [r7, #4]
 800dfca:	685b      	ldr	r3, [r3, #4]
 800dfcc:	2b00      	cmp	r3, #0
 800dfce:	d013      	beq.n	800dff8 <HAL_RCC_OscConfig+0xe0>
 800dfd0:	f7fe feb0 	bl	800cd34 <HAL_GetTick>
 800dfd4:	6138      	str	r0, [r7, #16]
 800dfd6:	e008      	b.n	800dfea <HAL_RCC_OscConfig+0xd2>
 800dfd8:	f7fe feac 	bl	800cd34 <HAL_GetTick>
 800dfdc:	4602      	mov	r2, r0
 800dfde:	693b      	ldr	r3, [r7, #16]
 800dfe0:	1ad3      	subs	r3, r2, r3
 800dfe2:	2b64      	cmp	r3, #100	; 0x64
 800dfe4:	d901      	bls.n	800dfea <HAL_RCC_OscConfig+0xd2>
 800dfe6:	2303      	movs	r3, #3
 800dfe8:	e207      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800dfea:	4b5b      	ldr	r3, [pc, #364]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800dfec:	681b      	ldr	r3, [r3, #0]
 800dfee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800dff2:	2b00      	cmp	r3, #0
 800dff4:	d0f0      	beq.n	800dfd8 <HAL_RCC_OscConfig+0xc0>
 800dff6:	e014      	b.n	800e022 <HAL_RCC_OscConfig+0x10a>
 800dff8:	f7fe fe9c 	bl	800cd34 <HAL_GetTick>
 800dffc:	6138      	str	r0, [r7, #16]
 800dffe:	e008      	b.n	800e012 <HAL_RCC_OscConfig+0xfa>
 800e000:	f7fe fe98 	bl	800cd34 <HAL_GetTick>
 800e004:	4602      	mov	r2, r0
 800e006:	693b      	ldr	r3, [r7, #16]
 800e008:	1ad3      	subs	r3, r2, r3
 800e00a:	2b64      	cmp	r3, #100	; 0x64
 800e00c:	d901      	bls.n	800e012 <HAL_RCC_OscConfig+0xfa>
 800e00e:	2303      	movs	r3, #3
 800e010:	e1f3      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e012:	4b51      	ldr	r3, [pc, #324]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e014:	681b      	ldr	r3, [r3, #0]
 800e016:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800e01a:	2b00      	cmp	r3, #0
 800e01c:	d1f0      	bne.n	800e000 <HAL_RCC_OscConfig+0xe8>
 800e01e:	e000      	b.n	800e022 <HAL_RCC_OscConfig+0x10a>
 800e020:	bf00      	nop
 800e022:	687b      	ldr	r3, [r7, #4]
 800e024:	681b      	ldr	r3, [r3, #0]
 800e026:	f003 0302 	and.w	r3, r3, #2
 800e02a:	2b00      	cmp	r3, #0
 800e02c:	d063      	beq.n	800e0f6 <HAL_RCC_OscConfig+0x1de>
 800e02e:	4b4a      	ldr	r3, [pc, #296]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e030:	689b      	ldr	r3, [r3, #8]
 800e032:	f003 030c 	and.w	r3, r3, #12
 800e036:	2b00      	cmp	r3, #0
 800e038:	d00b      	beq.n	800e052 <HAL_RCC_OscConfig+0x13a>
 800e03a:	4b47      	ldr	r3, [pc, #284]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e03c:	689b      	ldr	r3, [r3, #8]
 800e03e:	f003 030c 	and.w	r3, r3, #12
 800e042:	2b08      	cmp	r3, #8
 800e044:	d11c      	bne.n	800e080 <HAL_RCC_OscConfig+0x168>
 800e046:	4b44      	ldr	r3, [pc, #272]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e048:	685b      	ldr	r3, [r3, #4]
 800e04a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800e04e:	2b00      	cmp	r3, #0
 800e050:	d116      	bne.n	800e080 <HAL_RCC_OscConfig+0x168>
 800e052:	4b41      	ldr	r3, [pc, #260]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e054:	681b      	ldr	r3, [r3, #0]
 800e056:	f003 0302 	and.w	r3, r3, #2
 800e05a:	2b00      	cmp	r3, #0
 800e05c:	d005      	beq.n	800e06a <HAL_RCC_OscConfig+0x152>
 800e05e:	687b      	ldr	r3, [r7, #4]
 800e060:	68db      	ldr	r3, [r3, #12]
 800e062:	2b01      	cmp	r3, #1
 800e064:	d001      	beq.n	800e06a <HAL_RCC_OscConfig+0x152>
 800e066:	2301      	movs	r3, #1
 800e068:	e1c7      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e06a:	4b3b      	ldr	r3, [pc, #236]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e06c:	681b      	ldr	r3, [r3, #0]
 800e06e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800e072:	687b      	ldr	r3, [r7, #4]
 800e074:	691b      	ldr	r3, [r3, #16]
 800e076:	00db      	lsls	r3, r3, #3
 800e078:	4937      	ldr	r1, [pc, #220]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e07a:	4313      	orrs	r3, r2
 800e07c:	600b      	str	r3, [r1, #0]
 800e07e:	e03a      	b.n	800e0f6 <HAL_RCC_OscConfig+0x1de>
 800e080:	687b      	ldr	r3, [r7, #4]
 800e082:	68db      	ldr	r3, [r3, #12]
 800e084:	2b00      	cmp	r3, #0
 800e086:	d020      	beq.n	800e0ca <HAL_RCC_OscConfig+0x1b2>
 800e088:	4b34      	ldr	r3, [pc, #208]	; (800e15c <HAL_RCC_OscConfig+0x244>)
 800e08a:	2201      	movs	r2, #1
 800e08c:	601a      	str	r2, [r3, #0]
 800e08e:	f7fe fe51 	bl	800cd34 <HAL_GetTick>
 800e092:	6138      	str	r0, [r7, #16]
 800e094:	e008      	b.n	800e0a8 <HAL_RCC_OscConfig+0x190>
 800e096:	f7fe fe4d 	bl	800cd34 <HAL_GetTick>
 800e09a:	4602      	mov	r2, r0
 800e09c:	693b      	ldr	r3, [r7, #16]
 800e09e:	1ad3      	subs	r3, r2, r3
 800e0a0:	2b02      	cmp	r3, #2
 800e0a2:	d901      	bls.n	800e0a8 <HAL_RCC_OscConfig+0x190>
 800e0a4:	2303      	movs	r3, #3
 800e0a6:	e1a8      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e0a8:	4b2b      	ldr	r3, [pc, #172]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e0aa:	681b      	ldr	r3, [r3, #0]
 800e0ac:	f003 0302 	and.w	r3, r3, #2
 800e0b0:	2b00      	cmp	r3, #0
 800e0b2:	d0f0      	beq.n	800e096 <HAL_RCC_OscConfig+0x17e>
 800e0b4:	4b28      	ldr	r3, [pc, #160]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e0b6:	681b      	ldr	r3, [r3, #0]
 800e0b8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800e0bc:	687b      	ldr	r3, [r7, #4]
 800e0be:	691b      	ldr	r3, [r3, #16]
 800e0c0:	00db      	lsls	r3, r3, #3
 800e0c2:	4925      	ldr	r1, [pc, #148]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e0c4:	4313      	orrs	r3, r2
 800e0c6:	600b      	str	r3, [r1, #0]
 800e0c8:	e015      	b.n	800e0f6 <HAL_RCC_OscConfig+0x1de>
 800e0ca:	4b24      	ldr	r3, [pc, #144]	; (800e15c <HAL_RCC_OscConfig+0x244>)
 800e0cc:	2200      	movs	r2, #0
 800e0ce:	601a      	str	r2, [r3, #0]
 800e0d0:	f7fe fe30 	bl	800cd34 <HAL_GetTick>
 800e0d4:	6138      	str	r0, [r7, #16]
 800e0d6:	e008      	b.n	800e0ea <HAL_RCC_OscConfig+0x1d2>
 800e0d8:	f7fe fe2c 	bl	800cd34 <HAL_GetTick>
 800e0dc:	4602      	mov	r2, r0
 800e0de:	693b      	ldr	r3, [r7, #16]
 800e0e0:	1ad3      	subs	r3, r2, r3
 800e0e2:	2b02      	cmp	r3, #2
 800e0e4:	d901      	bls.n	800e0ea <HAL_RCC_OscConfig+0x1d2>
 800e0e6:	2303      	movs	r3, #3
 800e0e8:	e187      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e0ea:	4b1b      	ldr	r3, [pc, #108]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e0ec:	681b      	ldr	r3, [r3, #0]
 800e0ee:	f003 0302 	and.w	r3, r3, #2
 800e0f2:	2b00      	cmp	r3, #0
 800e0f4:	d1f0      	bne.n	800e0d8 <HAL_RCC_OscConfig+0x1c0>
 800e0f6:	687b      	ldr	r3, [r7, #4]
 800e0f8:	681b      	ldr	r3, [r3, #0]
 800e0fa:	f003 0308 	and.w	r3, r3, #8
 800e0fe:	2b00      	cmp	r3, #0
 800e100:	d036      	beq.n	800e170 <HAL_RCC_OscConfig+0x258>
 800e102:	687b      	ldr	r3, [r7, #4]
 800e104:	695b      	ldr	r3, [r3, #20]
 800e106:	2b00      	cmp	r3, #0
 800e108:	d016      	beq.n	800e138 <HAL_RCC_OscConfig+0x220>
 800e10a:	4b15      	ldr	r3, [pc, #84]	; (800e160 <HAL_RCC_OscConfig+0x248>)
 800e10c:	2201      	movs	r2, #1
 800e10e:	601a      	str	r2, [r3, #0]
 800e110:	f7fe fe10 	bl	800cd34 <HAL_GetTick>
 800e114:	6138      	str	r0, [r7, #16]
 800e116:	e008      	b.n	800e12a <HAL_RCC_OscConfig+0x212>
 800e118:	f7fe fe0c 	bl	800cd34 <HAL_GetTick>
 800e11c:	4602      	mov	r2, r0
 800e11e:	693b      	ldr	r3, [r7, #16]
 800e120:	1ad3      	subs	r3, r2, r3
 800e122:	2b02      	cmp	r3, #2
 800e124:	d901      	bls.n	800e12a <HAL_RCC_OscConfig+0x212>
 800e126:	2303      	movs	r3, #3
 800e128:	e167      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e12a:	4b0b      	ldr	r3, [pc, #44]	; (800e158 <HAL_RCC_OscConfig+0x240>)
 800e12c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e12e:	f003 0302 	and.w	r3, r3, #2
 800e132:	2b00      	cmp	r3, #0
 800e134:	d0f0      	beq.n	800e118 <HAL_RCC_OscConfig+0x200>
 800e136:	e01b      	b.n	800e170 <HAL_RCC_OscConfig+0x258>
 800e138:	4b09      	ldr	r3, [pc, #36]	; (800e160 <HAL_RCC_OscConfig+0x248>)
 800e13a:	2200      	movs	r2, #0
 800e13c:	601a      	str	r2, [r3, #0]
 800e13e:	f7fe fdf9 	bl	800cd34 <HAL_GetTick>
 800e142:	6138      	str	r0, [r7, #16]
 800e144:	e00e      	b.n	800e164 <HAL_RCC_OscConfig+0x24c>
 800e146:	f7fe fdf5 	bl	800cd34 <HAL_GetTick>
 800e14a:	4602      	mov	r2, r0
 800e14c:	693b      	ldr	r3, [r7, #16]
 800e14e:	1ad3      	subs	r3, r2, r3
 800e150:	2b02      	cmp	r3, #2
 800e152:	d907      	bls.n	800e164 <HAL_RCC_OscConfig+0x24c>
 800e154:	2303      	movs	r3, #3
 800e156:	e150      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e158:	40023800 	.word	0x40023800
 800e15c:	42470000 	.word	0x42470000
 800e160:	42470e80 	.word	0x42470e80
 800e164:	4b88      	ldr	r3, [pc, #544]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e166:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e168:	f003 0302 	and.w	r3, r3, #2
 800e16c:	2b00      	cmp	r3, #0
 800e16e:	d1ea      	bne.n	800e146 <HAL_RCC_OscConfig+0x22e>
 800e170:	687b      	ldr	r3, [r7, #4]
 800e172:	681b      	ldr	r3, [r3, #0]
 800e174:	f003 0304 	and.w	r3, r3, #4
 800e178:	2b00      	cmp	r3, #0
 800e17a:	f000 8097 	beq.w	800e2ac <HAL_RCC_OscConfig+0x394>
 800e17e:	2300      	movs	r3, #0
 800e180:	75fb      	strb	r3, [r7, #23]
 800e182:	4b81      	ldr	r3, [pc, #516]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e184:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e186:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e18a:	2b00      	cmp	r3, #0
 800e18c:	d10f      	bne.n	800e1ae <HAL_RCC_OscConfig+0x296>
 800e18e:	2300      	movs	r3, #0
 800e190:	60bb      	str	r3, [r7, #8]
 800e192:	4b7d      	ldr	r3, [pc, #500]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e194:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e196:	4a7c      	ldr	r2, [pc, #496]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e198:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800e19c:	6413      	str	r3, [r2, #64]	; 0x40
 800e19e:	4b7a      	ldr	r3, [pc, #488]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e1a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e1a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e1a6:	60bb      	str	r3, [r7, #8]
 800e1a8:	68bb      	ldr	r3, [r7, #8]
 800e1aa:	2301      	movs	r3, #1
 800e1ac:	75fb      	strb	r3, [r7, #23]
 800e1ae:	4b77      	ldr	r3, [pc, #476]	; (800e38c <HAL_RCC_OscConfig+0x474>)
 800e1b0:	681b      	ldr	r3, [r3, #0]
 800e1b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e1b6:	2b00      	cmp	r3, #0
 800e1b8:	d118      	bne.n	800e1ec <HAL_RCC_OscConfig+0x2d4>
 800e1ba:	4b74      	ldr	r3, [pc, #464]	; (800e38c <HAL_RCC_OscConfig+0x474>)
 800e1bc:	681b      	ldr	r3, [r3, #0]
 800e1be:	4a73      	ldr	r2, [pc, #460]	; (800e38c <HAL_RCC_OscConfig+0x474>)
 800e1c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e1c4:	6013      	str	r3, [r2, #0]
 800e1c6:	f7fe fdb5 	bl	800cd34 <HAL_GetTick>
 800e1ca:	6138      	str	r0, [r7, #16]
 800e1cc:	e008      	b.n	800e1e0 <HAL_RCC_OscConfig+0x2c8>
 800e1ce:	f7fe fdb1 	bl	800cd34 <HAL_GetTick>
 800e1d2:	4602      	mov	r2, r0
 800e1d4:	693b      	ldr	r3, [r7, #16]
 800e1d6:	1ad3      	subs	r3, r2, r3
 800e1d8:	2b02      	cmp	r3, #2
 800e1da:	d901      	bls.n	800e1e0 <HAL_RCC_OscConfig+0x2c8>
 800e1dc:	2303      	movs	r3, #3
 800e1de:	e10c      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e1e0:	4b6a      	ldr	r3, [pc, #424]	; (800e38c <HAL_RCC_OscConfig+0x474>)
 800e1e2:	681b      	ldr	r3, [r3, #0]
 800e1e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e1e8:	2b00      	cmp	r3, #0
 800e1ea:	d0f0      	beq.n	800e1ce <HAL_RCC_OscConfig+0x2b6>
 800e1ec:	687b      	ldr	r3, [r7, #4]
 800e1ee:	689b      	ldr	r3, [r3, #8]
 800e1f0:	2b01      	cmp	r3, #1
 800e1f2:	d106      	bne.n	800e202 <HAL_RCC_OscConfig+0x2ea>
 800e1f4:	4b64      	ldr	r3, [pc, #400]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e1f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e1f8:	4a63      	ldr	r2, [pc, #396]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e1fa:	f043 0301 	orr.w	r3, r3, #1
 800e1fe:	6713      	str	r3, [r2, #112]	; 0x70
 800e200:	e01c      	b.n	800e23c <HAL_RCC_OscConfig+0x324>
 800e202:	687b      	ldr	r3, [r7, #4]
 800e204:	689b      	ldr	r3, [r3, #8]
 800e206:	2b05      	cmp	r3, #5
 800e208:	d10c      	bne.n	800e224 <HAL_RCC_OscConfig+0x30c>
 800e20a:	4b5f      	ldr	r3, [pc, #380]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e20c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e20e:	4a5e      	ldr	r2, [pc, #376]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e210:	f043 0304 	orr.w	r3, r3, #4
 800e214:	6713      	str	r3, [r2, #112]	; 0x70
 800e216:	4b5c      	ldr	r3, [pc, #368]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e218:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e21a:	4a5b      	ldr	r2, [pc, #364]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e21c:	f043 0301 	orr.w	r3, r3, #1
 800e220:	6713      	str	r3, [r2, #112]	; 0x70
 800e222:	e00b      	b.n	800e23c <HAL_RCC_OscConfig+0x324>
 800e224:	4b58      	ldr	r3, [pc, #352]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e226:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e228:	4a57      	ldr	r2, [pc, #348]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e22a:	f023 0301 	bic.w	r3, r3, #1
 800e22e:	6713      	str	r3, [r2, #112]	; 0x70
 800e230:	4b55      	ldr	r3, [pc, #340]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e232:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e234:	4a54      	ldr	r2, [pc, #336]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e236:	f023 0304 	bic.w	r3, r3, #4
 800e23a:	6713      	str	r3, [r2, #112]	; 0x70
 800e23c:	687b      	ldr	r3, [r7, #4]
 800e23e:	689b      	ldr	r3, [r3, #8]
 800e240:	2b00      	cmp	r3, #0
 800e242:	d015      	beq.n	800e270 <HAL_RCC_OscConfig+0x358>
 800e244:	f7fe fd76 	bl	800cd34 <HAL_GetTick>
 800e248:	6138      	str	r0, [r7, #16]
 800e24a:	e00a      	b.n	800e262 <HAL_RCC_OscConfig+0x34a>
 800e24c:	f7fe fd72 	bl	800cd34 <HAL_GetTick>
 800e250:	4602      	mov	r2, r0
 800e252:	693b      	ldr	r3, [r7, #16]
 800e254:	1ad3      	subs	r3, r2, r3
 800e256:	f241 3288 	movw	r2, #5000	; 0x1388
 800e25a:	4293      	cmp	r3, r2
 800e25c:	d901      	bls.n	800e262 <HAL_RCC_OscConfig+0x34a>
 800e25e:	2303      	movs	r3, #3
 800e260:	e0cb      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e262:	4b49      	ldr	r3, [pc, #292]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e264:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e266:	f003 0302 	and.w	r3, r3, #2
 800e26a:	2b00      	cmp	r3, #0
 800e26c:	d0ee      	beq.n	800e24c <HAL_RCC_OscConfig+0x334>
 800e26e:	e014      	b.n	800e29a <HAL_RCC_OscConfig+0x382>
 800e270:	f7fe fd60 	bl	800cd34 <HAL_GetTick>
 800e274:	6138      	str	r0, [r7, #16]
 800e276:	e00a      	b.n	800e28e <HAL_RCC_OscConfig+0x376>
 800e278:	f7fe fd5c 	bl	800cd34 <HAL_GetTick>
 800e27c:	4602      	mov	r2, r0
 800e27e:	693b      	ldr	r3, [r7, #16]
 800e280:	1ad3      	subs	r3, r2, r3
 800e282:	f241 3288 	movw	r2, #5000	; 0x1388
 800e286:	4293      	cmp	r3, r2
 800e288:	d901      	bls.n	800e28e <HAL_RCC_OscConfig+0x376>
 800e28a:	2303      	movs	r3, #3
 800e28c:	e0b5      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e28e:	4b3e      	ldr	r3, [pc, #248]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e290:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e292:	f003 0302 	and.w	r3, r3, #2
 800e296:	2b00      	cmp	r3, #0
 800e298:	d1ee      	bne.n	800e278 <HAL_RCC_OscConfig+0x360>
 800e29a:	7dfb      	ldrb	r3, [r7, #23]
 800e29c:	2b01      	cmp	r3, #1
 800e29e:	d105      	bne.n	800e2ac <HAL_RCC_OscConfig+0x394>
 800e2a0:	4b39      	ldr	r3, [pc, #228]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e2a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e2a4:	4a38      	ldr	r2, [pc, #224]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e2a6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800e2aa:	6413      	str	r3, [r2, #64]	; 0x40
 800e2ac:	687b      	ldr	r3, [r7, #4]
 800e2ae:	699b      	ldr	r3, [r3, #24]
 800e2b0:	2b00      	cmp	r3, #0
 800e2b2:	f000 80a1 	beq.w	800e3f8 <HAL_RCC_OscConfig+0x4e0>
 800e2b6:	4b34      	ldr	r3, [pc, #208]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e2b8:	689b      	ldr	r3, [r3, #8]
 800e2ba:	f003 030c 	and.w	r3, r3, #12
 800e2be:	2b08      	cmp	r3, #8
 800e2c0:	d05c      	beq.n	800e37c <HAL_RCC_OscConfig+0x464>
 800e2c2:	687b      	ldr	r3, [r7, #4]
 800e2c4:	699b      	ldr	r3, [r3, #24]
 800e2c6:	2b02      	cmp	r3, #2
 800e2c8:	d141      	bne.n	800e34e <HAL_RCC_OscConfig+0x436>
 800e2ca:	4b31      	ldr	r3, [pc, #196]	; (800e390 <HAL_RCC_OscConfig+0x478>)
 800e2cc:	2200      	movs	r2, #0
 800e2ce:	601a      	str	r2, [r3, #0]
 800e2d0:	f7fe fd30 	bl	800cd34 <HAL_GetTick>
 800e2d4:	6138      	str	r0, [r7, #16]
 800e2d6:	e008      	b.n	800e2ea <HAL_RCC_OscConfig+0x3d2>
 800e2d8:	f7fe fd2c 	bl	800cd34 <HAL_GetTick>
 800e2dc:	4602      	mov	r2, r0
 800e2de:	693b      	ldr	r3, [r7, #16]
 800e2e0:	1ad3      	subs	r3, r2, r3
 800e2e2:	2b02      	cmp	r3, #2
 800e2e4:	d901      	bls.n	800e2ea <HAL_RCC_OscConfig+0x3d2>
 800e2e6:	2303      	movs	r3, #3
 800e2e8:	e087      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e2ea:	4b27      	ldr	r3, [pc, #156]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e2ec:	681b      	ldr	r3, [r3, #0]
 800e2ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800e2f2:	2b00      	cmp	r3, #0
 800e2f4:	d1f0      	bne.n	800e2d8 <HAL_RCC_OscConfig+0x3c0>
 800e2f6:	687b      	ldr	r3, [r7, #4]
 800e2f8:	69da      	ldr	r2, [r3, #28]
 800e2fa:	687b      	ldr	r3, [r7, #4]
 800e2fc:	6a1b      	ldr	r3, [r3, #32]
 800e2fe:	431a      	orrs	r2, r3
 800e300:	687b      	ldr	r3, [r7, #4]
 800e302:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e304:	019b      	lsls	r3, r3, #6
 800e306:	431a      	orrs	r2, r3
 800e308:	687b      	ldr	r3, [r7, #4]
 800e30a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e30c:	085b      	lsrs	r3, r3, #1
 800e30e:	3b01      	subs	r3, #1
 800e310:	041b      	lsls	r3, r3, #16
 800e312:	431a      	orrs	r2, r3
 800e314:	687b      	ldr	r3, [r7, #4]
 800e316:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e318:	061b      	lsls	r3, r3, #24
 800e31a:	491b      	ldr	r1, [pc, #108]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e31c:	4313      	orrs	r3, r2
 800e31e:	604b      	str	r3, [r1, #4]
 800e320:	4b1b      	ldr	r3, [pc, #108]	; (800e390 <HAL_RCC_OscConfig+0x478>)
 800e322:	2201      	movs	r2, #1
 800e324:	601a      	str	r2, [r3, #0]
 800e326:	f7fe fd05 	bl	800cd34 <HAL_GetTick>
 800e32a:	6138      	str	r0, [r7, #16]
 800e32c:	e008      	b.n	800e340 <HAL_RCC_OscConfig+0x428>
 800e32e:	f7fe fd01 	bl	800cd34 <HAL_GetTick>
 800e332:	4602      	mov	r2, r0
 800e334:	693b      	ldr	r3, [r7, #16]
 800e336:	1ad3      	subs	r3, r2, r3
 800e338:	2b02      	cmp	r3, #2
 800e33a:	d901      	bls.n	800e340 <HAL_RCC_OscConfig+0x428>
 800e33c:	2303      	movs	r3, #3
 800e33e:	e05c      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e340:	4b11      	ldr	r3, [pc, #68]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e342:	681b      	ldr	r3, [r3, #0]
 800e344:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800e348:	2b00      	cmp	r3, #0
 800e34a:	d0f0      	beq.n	800e32e <HAL_RCC_OscConfig+0x416>
 800e34c:	e054      	b.n	800e3f8 <HAL_RCC_OscConfig+0x4e0>
 800e34e:	4b10      	ldr	r3, [pc, #64]	; (800e390 <HAL_RCC_OscConfig+0x478>)
 800e350:	2200      	movs	r2, #0
 800e352:	601a      	str	r2, [r3, #0]
 800e354:	f7fe fcee 	bl	800cd34 <HAL_GetTick>
 800e358:	6138      	str	r0, [r7, #16]
 800e35a:	e008      	b.n	800e36e <HAL_RCC_OscConfig+0x456>
 800e35c:	f7fe fcea 	bl	800cd34 <HAL_GetTick>
 800e360:	4602      	mov	r2, r0
 800e362:	693b      	ldr	r3, [r7, #16]
 800e364:	1ad3      	subs	r3, r2, r3
 800e366:	2b02      	cmp	r3, #2
 800e368:	d901      	bls.n	800e36e <HAL_RCC_OscConfig+0x456>
 800e36a:	2303      	movs	r3, #3
 800e36c:	e045      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e36e:	4b06      	ldr	r3, [pc, #24]	; (800e388 <HAL_RCC_OscConfig+0x470>)
 800e370:	681b      	ldr	r3, [r3, #0]
 800e372:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800e376:	2b00      	cmp	r3, #0
 800e378:	d1f0      	bne.n	800e35c <HAL_RCC_OscConfig+0x444>
 800e37a:	e03d      	b.n	800e3f8 <HAL_RCC_OscConfig+0x4e0>
 800e37c:	687b      	ldr	r3, [r7, #4]
 800e37e:	699b      	ldr	r3, [r3, #24]
 800e380:	2b01      	cmp	r3, #1
 800e382:	d107      	bne.n	800e394 <HAL_RCC_OscConfig+0x47c>
 800e384:	2301      	movs	r3, #1
 800e386:	e038      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e388:	40023800 	.word	0x40023800
 800e38c:	40007000 	.word	0x40007000
 800e390:	42470060 	.word	0x42470060
 800e394:	4b1b      	ldr	r3, [pc, #108]	; (800e404 <HAL_RCC_OscConfig+0x4ec>)
 800e396:	685b      	ldr	r3, [r3, #4]
 800e398:	60fb      	str	r3, [r7, #12]
 800e39a:	687b      	ldr	r3, [r7, #4]
 800e39c:	699b      	ldr	r3, [r3, #24]
 800e39e:	2b01      	cmp	r3, #1
 800e3a0:	d028      	beq.n	800e3f4 <HAL_RCC_OscConfig+0x4dc>
 800e3a2:	68fb      	ldr	r3, [r7, #12]
 800e3a4:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800e3a8:	687b      	ldr	r3, [r7, #4]
 800e3aa:	69db      	ldr	r3, [r3, #28]
 800e3ac:	429a      	cmp	r2, r3
 800e3ae:	d121      	bne.n	800e3f4 <HAL_RCC_OscConfig+0x4dc>
 800e3b0:	68fb      	ldr	r3, [r7, #12]
 800e3b2:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800e3b6:	687b      	ldr	r3, [r7, #4]
 800e3b8:	6a1b      	ldr	r3, [r3, #32]
 800e3ba:	429a      	cmp	r2, r3
 800e3bc:	d11a      	bne.n	800e3f4 <HAL_RCC_OscConfig+0x4dc>
 800e3be:	68fa      	ldr	r2, [r7, #12]
 800e3c0:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800e3c4:	4013      	ands	r3, r2
 800e3c6:	687a      	ldr	r2, [r7, #4]
 800e3c8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800e3ca:	0192      	lsls	r2, r2, #6
 800e3cc:	4293      	cmp	r3, r2
 800e3ce:	d111      	bne.n	800e3f4 <HAL_RCC_OscConfig+0x4dc>
 800e3d0:	68fb      	ldr	r3, [r7, #12]
 800e3d2:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800e3d6:	687b      	ldr	r3, [r7, #4]
 800e3d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e3da:	085b      	lsrs	r3, r3, #1
 800e3dc:	3b01      	subs	r3, #1
 800e3de:	041b      	lsls	r3, r3, #16
 800e3e0:	429a      	cmp	r2, r3
 800e3e2:	d107      	bne.n	800e3f4 <HAL_RCC_OscConfig+0x4dc>
 800e3e4:	68fb      	ldr	r3, [r7, #12]
 800e3e6:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800e3ea:	687b      	ldr	r3, [r7, #4]
 800e3ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e3ee:	061b      	lsls	r3, r3, #24
 800e3f0:	429a      	cmp	r2, r3
 800e3f2:	d001      	beq.n	800e3f8 <HAL_RCC_OscConfig+0x4e0>
 800e3f4:	2301      	movs	r3, #1
 800e3f6:	e000      	b.n	800e3fa <HAL_RCC_OscConfig+0x4e2>
 800e3f8:	2300      	movs	r3, #0
 800e3fa:	4618      	mov	r0, r3
 800e3fc:	3718      	adds	r7, #24
 800e3fe:	46bd      	mov	sp, r7
 800e400:	bd80      	pop	{r7, pc}
 800e402:	bf00      	nop
 800e404:	40023800 	.word	0x40023800

0800e408 <HAL_RCC_ClockConfig>:
 800e408:	b580      	push	{r7, lr}
 800e40a:	b084      	sub	sp, #16
 800e40c:	af00      	add	r7, sp, #0
 800e40e:	6078      	str	r0, [r7, #4]
 800e410:	6039      	str	r1, [r7, #0]
 800e412:	687b      	ldr	r3, [r7, #4]
 800e414:	2b00      	cmp	r3, #0
 800e416:	d101      	bne.n	800e41c <HAL_RCC_ClockConfig+0x14>
 800e418:	2301      	movs	r3, #1
 800e41a:	e0cc      	b.n	800e5b6 <HAL_RCC_ClockConfig+0x1ae>
 800e41c:	4b68      	ldr	r3, [pc, #416]	; (800e5c0 <HAL_RCC_ClockConfig+0x1b8>)
 800e41e:	681b      	ldr	r3, [r3, #0]
 800e420:	f003 0307 	and.w	r3, r3, #7
 800e424:	683a      	ldr	r2, [r7, #0]
 800e426:	429a      	cmp	r2, r3
 800e428:	d90c      	bls.n	800e444 <HAL_RCC_ClockConfig+0x3c>
 800e42a:	4b65      	ldr	r3, [pc, #404]	; (800e5c0 <HAL_RCC_ClockConfig+0x1b8>)
 800e42c:	683a      	ldr	r2, [r7, #0]
 800e42e:	b2d2      	uxtb	r2, r2
 800e430:	701a      	strb	r2, [r3, #0]
 800e432:	4b63      	ldr	r3, [pc, #396]	; (800e5c0 <HAL_RCC_ClockConfig+0x1b8>)
 800e434:	681b      	ldr	r3, [r3, #0]
 800e436:	f003 0307 	and.w	r3, r3, #7
 800e43a:	683a      	ldr	r2, [r7, #0]
 800e43c:	429a      	cmp	r2, r3
 800e43e:	d001      	beq.n	800e444 <HAL_RCC_ClockConfig+0x3c>
 800e440:	2301      	movs	r3, #1
 800e442:	e0b8      	b.n	800e5b6 <HAL_RCC_ClockConfig+0x1ae>
 800e444:	687b      	ldr	r3, [r7, #4]
 800e446:	681b      	ldr	r3, [r3, #0]
 800e448:	f003 0302 	and.w	r3, r3, #2
 800e44c:	2b00      	cmp	r3, #0
 800e44e:	d020      	beq.n	800e492 <HAL_RCC_ClockConfig+0x8a>
 800e450:	687b      	ldr	r3, [r7, #4]
 800e452:	681b      	ldr	r3, [r3, #0]
 800e454:	f003 0304 	and.w	r3, r3, #4
 800e458:	2b00      	cmp	r3, #0
 800e45a:	d005      	beq.n	800e468 <HAL_RCC_ClockConfig+0x60>
 800e45c:	4b59      	ldr	r3, [pc, #356]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e45e:	689b      	ldr	r3, [r3, #8]
 800e460:	4a58      	ldr	r2, [pc, #352]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e462:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800e466:	6093      	str	r3, [r2, #8]
 800e468:	687b      	ldr	r3, [r7, #4]
 800e46a:	681b      	ldr	r3, [r3, #0]
 800e46c:	f003 0308 	and.w	r3, r3, #8
 800e470:	2b00      	cmp	r3, #0
 800e472:	d005      	beq.n	800e480 <HAL_RCC_ClockConfig+0x78>
 800e474:	4b53      	ldr	r3, [pc, #332]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e476:	689b      	ldr	r3, [r3, #8]
 800e478:	4a52      	ldr	r2, [pc, #328]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e47a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800e47e:	6093      	str	r3, [r2, #8]
 800e480:	4b50      	ldr	r3, [pc, #320]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e482:	689b      	ldr	r3, [r3, #8]
 800e484:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800e488:	687b      	ldr	r3, [r7, #4]
 800e48a:	689b      	ldr	r3, [r3, #8]
 800e48c:	494d      	ldr	r1, [pc, #308]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e48e:	4313      	orrs	r3, r2
 800e490:	608b      	str	r3, [r1, #8]
 800e492:	687b      	ldr	r3, [r7, #4]
 800e494:	681b      	ldr	r3, [r3, #0]
 800e496:	f003 0301 	and.w	r3, r3, #1
 800e49a:	2b00      	cmp	r3, #0
 800e49c:	d044      	beq.n	800e528 <HAL_RCC_ClockConfig+0x120>
 800e49e:	687b      	ldr	r3, [r7, #4]
 800e4a0:	685b      	ldr	r3, [r3, #4]
 800e4a2:	2b01      	cmp	r3, #1
 800e4a4:	d107      	bne.n	800e4b6 <HAL_RCC_ClockConfig+0xae>
 800e4a6:	4b47      	ldr	r3, [pc, #284]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e4a8:	681b      	ldr	r3, [r3, #0]
 800e4aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800e4ae:	2b00      	cmp	r3, #0
 800e4b0:	d119      	bne.n	800e4e6 <HAL_RCC_ClockConfig+0xde>
 800e4b2:	2301      	movs	r3, #1
 800e4b4:	e07f      	b.n	800e5b6 <HAL_RCC_ClockConfig+0x1ae>
 800e4b6:	687b      	ldr	r3, [r7, #4]
 800e4b8:	685b      	ldr	r3, [r3, #4]
 800e4ba:	2b02      	cmp	r3, #2
 800e4bc:	d003      	beq.n	800e4c6 <HAL_RCC_ClockConfig+0xbe>
 800e4be:	687b      	ldr	r3, [r7, #4]
 800e4c0:	685b      	ldr	r3, [r3, #4]
 800e4c2:	2b03      	cmp	r3, #3
 800e4c4:	d107      	bne.n	800e4d6 <HAL_RCC_ClockConfig+0xce>
 800e4c6:	4b3f      	ldr	r3, [pc, #252]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e4c8:	681b      	ldr	r3, [r3, #0]
 800e4ca:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800e4ce:	2b00      	cmp	r3, #0
 800e4d0:	d109      	bne.n	800e4e6 <HAL_RCC_ClockConfig+0xde>
 800e4d2:	2301      	movs	r3, #1
 800e4d4:	e06f      	b.n	800e5b6 <HAL_RCC_ClockConfig+0x1ae>
 800e4d6:	4b3b      	ldr	r3, [pc, #236]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e4d8:	681b      	ldr	r3, [r3, #0]
 800e4da:	f003 0302 	and.w	r3, r3, #2
 800e4de:	2b00      	cmp	r3, #0
 800e4e0:	d101      	bne.n	800e4e6 <HAL_RCC_ClockConfig+0xde>
 800e4e2:	2301      	movs	r3, #1
 800e4e4:	e067      	b.n	800e5b6 <HAL_RCC_ClockConfig+0x1ae>
 800e4e6:	4b37      	ldr	r3, [pc, #220]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e4e8:	689b      	ldr	r3, [r3, #8]
 800e4ea:	f023 0203 	bic.w	r2, r3, #3
 800e4ee:	687b      	ldr	r3, [r7, #4]
 800e4f0:	685b      	ldr	r3, [r3, #4]
 800e4f2:	4934      	ldr	r1, [pc, #208]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e4f4:	4313      	orrs	r3, r2
 800e4f6:	608b      	str	r3, [r1, #8]
 800e4f8:	f7fe fc1c 	bl	800cd34 <HAL_GetTick>
 800e4fc:	60f8      	str	r0, [r7, #12]
 800e4fe:	e00a      	b.n	800e516 <HAL_RCC_ClockConfig+0x10e>
 800e500:	f7fe fc18 	bl	800cd34 <HAL_GetTick>
 800e504:	4602      	mov	r2, r0
 800e506:	68fb      	ldr	r3, [r7, #12]
 800e508:	1ad3      	subs	r3, r2, r3
 800e50a:	f241 3288 	movw	r2, #5000	; 0x1388
 800e50e:	4293      	cmp	r3, r2
 800e510:	d901      	bls.n	800e516 <HAL_RCC_ClockConfig+0x10e>
 800e512:	2303      	movs	r3, #3
 800e514:	e04f      	b.n	800e5b6 <HAL_RCC_ClockConfig+0x1ae>
 800e516:	4b2b      	ldr	r3, [pc, #172]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e518:	689b      	ldr	r3, [r3, #8]
 800e51a:	f003 020c 	and.w	r2, r3, #12
 800e51e:	687b      	ldr	r3, [r7, #4]
 800e520:	685b      	ldr	r3, [r3, #4]
 800e522:	009b      	lsls	r3, r3, #2
 800e524:	429a      	cmp	r2, r3
 800e526:	d1eb      	bne.n	800e500 <HAL_RCC_ClockConfig+0xf8>
 800e528:	4b25      	ldr	r3, [pc, #148]	; (800e5c0 <HAL_RCC_ClockConfig+0x1b8>)
 800e52a:	681b      	ldr	r3, [r3, #0]
 800e52c:	f003 0307 	and.w	r3, r3, #7
 800e530:	683a      	ldr	r2, [r7, #0]
 800e532:	429a      	cmp	r2, r3
 800e534:	d20c      	bcs.n	800e550 <HAL_RCC_ClockConfig+0x148>
 800e536:	4b22      	ldr	r3, [pc, #136]	; (800e5c0 <HAL_RCC_ClockConfig+0x1b8>)
 800e538:	683a      	ldr	r2, [r7, #0]
 800e53a:	b2d2      	uxtb	r2, r2
 800e53c:	701a      	strb	r2, [r3, #0]
 800e53e:	4b20      	ldr	r3, [pc, #128]	; (800e5c0 <HAL_RCC_ClockConfig+0x1b8>)
 800e540:	681b      	ldr	r3, [r3, #0]
 800e542:	f003 0307 	and.w	r3, r3, #7
 800e546:	683a      	ldr	r2, [r7, #0]
 800e548:	429a      	cmp	r2, r3
 800e54a:	d001      	beq.n	800e550 <HAL_RCC_ClockConfig+0x148>
 800e54c:	2301      	movs	r3, #1
 800e54e:	e032      	b.n	800e5b6 <HAL_RCC_ClockConfig+0x1ae>
 800e550:	687b      	ldr	r3, [r7, #4]
 800e552:	681b      	ldr	r3, [r3, #0]
 800e554:	f003 0304 	and.w	r3, r3, #4
 800e558:	2b00      	cmp	r3, #0
 800e55a:	d008      	beq.n	800e56e <HAL_RCC_ClockConfig+0x166>
 800e55c:	4b19      	ldr	r3, [pc, #100]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e55e:	689b      	ldr	r3, [r3, #8]
 800e560:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800e564:	687b      	ldr	r3, [r7, #4]
 800e566:	68db      	ldr	r3, [r3, #12]
 800e568:	4916      	ldr	r1, [pc, #88]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e56a:	4313      	orrs	r3, r2
 800e56c:	608b      	str	r3, [r1, #8]
 800e56e:	687b      	ldr	r3, [r7, #4]
 800e570:	681b      	ldr	r3, [r3, #0]
 800e572:	f003 0308 	and.w	r3, r3, #8
 800e576:	2b00      	cmp	r3, #0
 800e578:	d009      	beq.n	800e58e <HAL_RCC_ClockConfig+0x186>
 800e57a:	4b12      	ldr	r3, [pc, #72]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e57c:	689b      	ldr	r3, [r3, #8]
 800e57e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800e582:	687b      	ldr	r3, [r7, #4]
 800e584:	691b      	ldr	r3, [r3, #16]
 800e586:	00db      	lsls	r3, r3, #3
 800e588:	490e      	ldr	r1, [pc, #56]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e58a:	4313      	orrs	r3, r2
 800e58c:	608b      	str	r3, [r1, #8]
 800e58e:	f000 f821 	bl	800e5d4 <HAL_RCC_GetSysClockFreq>
 800e592:	4602      	mov	r2, r0
 800e594:	4b0b      	ldr	r3, [pc, #44]	; (800e5c4 <HAL_RCC_ClockConfig+0x1bc>)
 800e596:	689b      	ldr	r3, [r3, #8]
 800e598:	091b      	lsrs	r3, r3, #4
 800e59a:	f003 030f 	and.w	r3, r3, #15
 800e59e:	490a      	ldr	r1, [pc, #40]	; (800e5c8 <HAL_RCC_ClockConfig+0x1c0>)
 800e5a0:	5ccb      	ldrb	r3, [r1, r3]
 800e5a2:	fa22 f303 	lsr.w	r3, r2, r3
 800e5a6:	4a09      	ldr	r2, [pc, #36]	; (800e5cc <HAL_RCC_ClockConfig+0x1c4>)
 800e5a8:	6013      	str	r3, [r2, #0]
 800e5aa:	4b09      	ldr	r3, [pc, #36]	; (800e5d0 <HAL_RCC_ClockConfig+0x1c8>)
 800e5ac:	681b      	ldr	r3, [r3, #0]
 800e5ae:	4618      	mov	r0, r3
 800e5b0:	f7fe fb7c 	bl	800ccac <HAL_InitTick>
 800e5b4:	2300      	movs	r3, #0
 800e5b6:	4618      	mov	r0, r3
 800e5b8:	3710      	adds	r7, #16
 800e5ba:	46bd      	mov	sp, r7
 800e5bc:	bd80      	pop	{r7, pc}
 800e5be:	bf00      	nop
 800e5c0:	40023c00 	.word	0x40023c00
 800e5c4:	40023800 	.word	0x40023800
 800e5c8:	08016858 	.word	0x08016858
 800e5cc:	20000058 	.word	0x20000058
 800e5d0:	2000005c 	.word	0x2000005c

0800e5d4 <HAL_RCC_GetSysClockFreq>:
 800e5d4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800e5d8:	b090      	sub	sp, #64	; 0x40
 800e5da:	af00      	add	r7, sp, #0
 800e5dc:	2300      	movs	r3, #0
 800e5de:	637b      	str	r3, [r7, #52]	; 0x34
 800e5e0:	2300      	movs	r3, #0
 800e5e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e5e4:	2300      	movs	r3, #0
 800e5e6:	633b      	str	r3, [r7, #48]	; 0x30
 800e5e8:	2300      	movs	r3, #0
 800e5ea:	63bb      	str	r3, [r7, #56]	; 0x38
 800e5ec:	4b59      	ldr	r3, [pc, #356]	; (800e754 <HAL_RCC_GetSysClockFreq+0x180>)
 800e5ee:	689b      	ldr	r3, [r3, #8]
 800e5f0:	f003 030c 	and.w	r3, r3, #12
 800e5f4:	2b08      	cmp	r3, #8
 800e5f6:	d00d      	beq.n	800e614 <HAL_RCC_GetSysClockFreq+0x40>
 800e5f8:	2b08      	cmp	r3, #8
 800e5fa:	f200 80a1 	bhi.w	800e740 <HAL_RCC_GetSysClockFreq+0x16c>
 800e5fe:	2b00      	cmp	r3, #0
 800e600:	d002      	beq.n	800e608 <HAL_RCC_GetSysClockFreq+0x34>
 800e602:	2b04      	cmp	r3, #4
 800e604:	d003      	beq.n	800e60e <HAL_RCC_GetSysClockFreq+0x3a>
 800e606:	e09b      	b.n	800e740 <HAL_RCC_GetSysClockFreq+0x16c>
 800e608:	4b53      	ldr	r3, [pc, #332]	; (800e758 <HAL_RCC_GetSysClockFreq+0x184>)
 800e60a:	63bb      	str	r3, [r7, #56]	; 0x38
 800e60c:	e09b      	b.n	800e746 <HAL_RCC_GetSysClockFreq+0x172>
 800e60e:	4b53      	ldr	r3, [pc, #332]	; (800e75c <HAL_RCC_GetSysClockFreq+0x188>)
 800e610:	63bb      	str	r3, [r7, #56]	; 0x38
 800e612:	e098      	b.n	800e746 <HAL_RCC_GetSysClockFreq+0x172>
 800e614:	4b4f      	ldr	r3, [pc, #316]	; (800e754 <HAL_RCC_GetSysClockFreq+0x180>)
 800e616:	685b      	ldr	r3, [r3, #4]
 800e618:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800e61c:	637b      	str	r3, [r7, #52]	; 0x34
 800e61e:	4b4d      	ldr	r3, [pc, #308]	; (800e754 <HAL_RCC_GetSysClockFreq+0x180>)
 800e620:	685b      	ldr	r3, [r3, #4]
 800e622:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800e626:	2b00      	cmp	r3, #0
 800e628:	d028      	beq.n	800e67c <HAL_RCC_GetSysClockFreq+0xa8>
 800e62a:	4b4a      	ldr	r3, [pc, #296]	; (800e754 <HAL_RCC_GetSysClockFreq+0x180>)
 800e62c:	685b      	ldr	r3, [r3, #4]
 800e62e:	099b      	lsrs	r3, r3, #6
 800e630:	2200      	movs	r2, #0
 800e632:	623b      	str	r3, [r7, #32]
 800e634:	627a      	str	r2, [r7, #36]	; 0x24
 800e636:	6a3b      	ldr	r3, [r7, #32]
 800e638:	f3c3 0008 	ubfx	r0, r3, #0, #9
 800e63c:	2100      	movs	r1, #0
 800e63e:	4b47      	ldr	r3, [pc, #284]	; (800e75c <HAL_RCC_GetSysClockFreq+0x188>)
 800e640:	fb03 f201 	mul.w	r2, r3, r1
 800e644:	2300      	movs	r3, #0
 800e646:	fb00 f303 	mul.w	r3, r0, r3
 800e64a:	4413      	add	r3, r2
 800e64c:	4a43      	ldr	r2, [pc, #268]	; (800e75c <HAL_RCC_GetSysClockFreq+0x188>)
 800e64e:	fba0 1202 	umull	r1, r2, r0, r2
 800e652:	62fa      	str	r2, [r7, #44]	; 0x2c
 800e654:	460a      	mov	r2, r1
 800e656:	62ba      	str	r2, [r7, #40]	; 0x28
 800e658:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800e65a:	4413      	add	r3, r2
 800e65c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e65e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e660:	2200      	movs	r2, #0
 800e662:	61bb      	str	r3, [r7, #24]
 800e664:	61fa      	str	r2, [r7, #28]
 800e666:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800e66a:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800e66e:	f7f2 facb 	bl	8000c08 <__aeabi_uldivmod>
 800e672:	4602      	mov	r2, r0
 800e674:	460b      	mov	r3, r1
 800e676:	4613      	mov	r3, r2
 800e678:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e67a:	e053      	b.n	800e724 <HAL_RCC_GetSysClockFreq+0x150>
 800e67c:	4b35      	ldr	r3, [pc, #212]	; (800e754 <HAL_RCC_GetSysClockFreq+0x180>)
 800e67e:	685b      	ldr	r3, [r3, #4]
 800e680:	099b      	lsrs	r3, r3, #6
 800e682:	2200      	movs	r2, #0
 800e684:	613b      	str	r3, [r7, #16]
 800e686:	617a      	str	r2, [r7, #20]
 800e688:	693b      	ldr	r3, [r7, #16]
 800e68a:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800e68e:	f04f 0b00 	mov.w	fp, #0
 800e692:	4652      	mov	r2, sl
 800e694:	465b      	mov	r3, fp
 800e696:	f04f 0000 	mov.w	r0, #0
 800e69a:	f04f 0100 	mov.w	r1, #0
 800e69e:	0159      	lsls	r1, r3, #5
 800e6a0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800e6a4:	0150      	lsls	r0, r2, #5
 800e6a6:	4602      	mov	r2, r0
 800e6a8:	460b      	mov	r3, r1
 800e6aa:	ebb2 080a 	subs.w	r8, r2, sl
 800e6ae:	eb63 090b 	sbc.w	r9, r3, fp
 800e6b2:	f04f 0200 	mov.w	r2, #0
 800e6b6:	f04f 0300 	mov.w	r3, #0
 800e6ba:	ea4f 1389 	mov.w	r3, r9, lsl #6
 800e6be:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800e6c2:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800e6c6:	ebb2 0408 	subs.w	r4, r2, r8
 800e6ca:	eb63 0509 	sbc.w	r5, r3, r9
 800e6ce:	f04f 0200 	mov.w	r2, #0
 800e6d2:	f04f 0300 	mov.w	r3, #0
 800e6d6:	00eb      	lsls	r3, r5, #3
 800e6d8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800e6dc:	00e2      	lsls	r2, r4, #3
 800e6de:	4614      	mov	r4, r2
 800e6e0:	461d      	mov	r5, r3
 800e6e2:	eb14 030a 	adds.w	r3, r4, sl
 800e6e6:	603b      	str	r3, [r7, #0]
 800e6e8:	eb45 030b 	adc.w	r3, r5, fp
 800e6ec:	607b      	str	r3, [r7, #4]
 800e6ee:	f04f 0200 	mov.w	r2, #0
 800e6f2:	f04f 0300 	mov.w	r3, #0
 800e6f6:	e9d7 4500 	ldrd	r4, r5, [r7]
 800e6fa:	4629      	mov	r1, r5
 800e6fc:	028b      	lsls	r3, r1, #10
 800e6fe:	4621      	mov	r1, r4
 800e700:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800e704:	4621      	mov	r1, r4
 800e706:	028a      	lsls	r2, r1, #10
 800e708:	4610      	mov	r0, r2
 800e70a:	4619      	mov	r1, r3
 800e70c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e70e:	2200      	movs	r2, #0
 800e710:	60bb      	str	r3, [r7, #8]
 800e712:	60fa      	str	r2, [r7, #12]
 800e714:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800e718:	f7f2 fa76 	bl	8000c08 <__aeabi_uldivmod>
 800e71c:	4602      	mov	r2, r0
 800e71e:	460b      	mov	r3, r1
 800e720:	4613      	mov	r3, r2
 800e722:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e724:	4b0b      	ldr	r3, [pc, #44]	; (800e754 <HAL_RCC_GetSysClockFreq+0x180>)
 800e726:	685b      	ldr	r3, [r3, #4]
 800e728:	0c1b      	lsrs	r3, r3, #16
 800e72a:	f003 0303 	and.w	r3, r3, #3
 800e72e:	3301      	adds	r3, #1
 800e730:	005b      	lsls	r3, r3, #1
 800e732:	633b      	str	r3, [r7, #48]	; 0x30
 800e734:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800e736:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e738:	fbb2 f3f3 	udiv	r3, r2, r3
 800e73c:	63bb      	str	r3, [r7, #56]	; 0x38
 800e73e:	e002      	b.n	800e746 <HAL_RCC_GetSysClockFreq+0x172>
 800e740:	4b05      	ldr	r3, [pc, #20]	; (800e758 <HAL_RCC_GetSysClockFreq+0x184>)
 800e742:	63bb      	str	r3, [r7, #56]	; 0x38
 800e744:	bf00      	nop
 800e746:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e748:	4618      	mov	r0, r3
 800e74a:	3740      	adds	r7, #64	; 0x40
 800e74c:	46bd      	mov	sp, r7
 800e74e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800e752:	bf00      	nop
 800e754:	40023800 	.word	0x40023800
 800e758:	00f42400 	.word	0x00f42400
 800e75c:	017d7840 	.word	0x017d7840

0800e760 <HAL_RCC_GetHCLKFreq>:
 800e760:	b480      	push	{r7}
 800e762:	af00      	add	r7, sp, #0
 800e764:	4b03      	ldr	r3, [pc, #12]	; (800e774 <HAL_RCC_GetHCLKFreq+0x14>)
 800e766:	681b      	ldr	r3, [r3, #0]
 800e768:	4618      	mov	r0, r3
 800e76a:	46bd      	mov	sp, r7
 800e76c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e770:	4770      	bx	lr
 800e772:	bf00      	nop
 800e774:	20000058 	.word	0x20000058

0800e778 <HAL_RCC_GetPCLK1Freq>:
 800e778:	b580      	push	{r7, lr}
 800e77a:	af00      	add	r7, sp, #0
 800e77c:	f7ff fff0 	bl	800e760 <HAL_RCC_GetHCLKFreq>
 800e780:	4602      	mov	r2, r0
 800e782:	4b05      	ldr	r3, [pc, #20]	; (800e798 <HAL_RCC_GetPCLK1Freq+0x20>)
 800e784:	689b      	ldr	r3, [r3, #8]
 800e786:	0a9b      	lsrs	r3, r3, #10
 800e788:	f003 0307 	and.w	r3, r3, #7
 800e78c:	4903      	ldr	r1, [pc, #12]	; (800e79c <HAL_RCC_GetPCLK1Freq+0x24>)
 800e78e:	5ccb      	ldrb	r3, [r1, r3]
 800e790:	fa22 f303 	lsr.w	r3, r2, r3
 800e794:	4618      	mov	r0, r3
 800e796:	bd80      	pop	{r7, pc}
 800e798:	40023800 	.word	0x40023800
 800e79c:	08016868 	.word	0x08016868

0800e7a0 <HAL_RCC_GetPCLK2Freq>:
 800e7a0:	b580      	push	{r7, lr}
 800e7a2:	af00      	add	r7, sp, #0
 800e7a4:	f7ff ffdc 	bl	800e760 <HAL_RCC_GetHCLKFreq>
 800e7a8:	4602      	mov	r2, r0
 800e7aa:	4b05      	ldr	r3, [pc, #20]	; (800e7c0 <HAL_RCC_GetPCLK2Freq+0x20>)
 800e7ac:	689b      	ldr	r3, [r3, #8]
 800e7ae:	0b5b      	lsrs	r3, r3, #13
 800e7b0:	f003 0307 	and.w	r3, r3, #7
 800e7b4:	4903      	ldr	r1, [pc, #12]	; (800e7c4 <HAL_RCC_GetPCLK2Freq+0x24>)
 800e7b6:	5ccb      	ldrb	r3, [r1, r3]
 800e7b8:	fa22 f303 	lsr.w	r3, r2, r3
 800e7bc:	4618      	mov	r0, r3
 800e7be:	bd80      	pop	{r7, pc}
 800e7c0:	40023800 	.word	0x40023800
 800e7c4:	08016868 	.word	0x08016868

0800e7c8 <HAL_RCC_NMI_IRQHandler>:
 800e7c8:	b580      	push	{r7, lr}
 800e7ca:	af00      	add	r7, sp, #0
 800e7cc:	4b06      	ldr	r3, [pc, #24]	; (800e7e8 <HAL_RCC_NMI_IRQHandler+0x20>)
 800e7ce:	68db      	ldr	r3, [r3, #12]
 800e7d0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800e7d4:	2b80      	cmp	r3, #128	; 0x80
 800e7d6:	d104      	bne.n	800e7e2 <HAL_RCC_NMI_IRQHandler+0x1a>
 800e7d8:	f000 f80a 	bl	800e7f0 <HAL_RCC_CSSCallback>
 800e7dc:	4b03      	ldr	r3, [pc, #12]	; (800e7ec <HAL_RCC_NMI_IRQHandler+0x24>)
 800e7de:	2280      	movs	r2, #128	; 0x80
 800e7e0:	701a      	strb	r2, [r3, #0]
 800e7e2:	bf00      	nop
 800e7e4:	bd80      	pop	{r7, pc}
 800e7e6:	bf00      	nop
 800e7e8:	40023800 	.word	0x40023800
 800e7ec:	4002380e 	.word	0x4002380e

0800e7f0 <HAL_RCC_CSSCallback>:
 800e7f0:	b480      	push	{r7}
 800e7f2:	af00      	add	r7, sp, #0
 800e7f4:	bf00      	nop
 800e7f6:	46bd      	mov	sp, r7
 800e7f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7fc:	4770      	bx	lr

0800e7fe <HAL_SPI_Init>:
 800e7fe:	b580      	push	{r7, lr}
 800e800:	b082      	sub	sp, #8
 800e802:	af00      	add	r7, sp, #0
 800e804:	6078      	str	r0, [r7, #4]
 800e806:	687b      	ldr	r3, [r7, #4]
 800e808:	2b00      	cmp	r3, #0
 800e80a:	d101      	bne.n	800e810 <HAL_SPI_Init+0x12>
 800e80c:	2301      	movs	r3, #1
 800e80e:	e07b      	b.n	800e908 <HAL_SPI_Init+0x10a>
 800e810:	687b      	ldr	r3, [r7, #4]
 800e812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e814:	2b00      	cmp	r3, #0
 800e816:	d108      	bne.n	800e82a <HAL_SPI_Init+0x2c>
 800e818:	687b      	ldr	r3, [r7, #4]
 800e81a:	685b      	ldr	r3, [r3, #4]
 800e81c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e820:	d009      	beq.n	800e836 <HAL_SPI_Init+0x38>
 800e822:	687b      	ldr	r3, [r7, #4]
 800e824:	2200      	movs	r2, #0
 800e826:	61da      	str	r2, [r3, #28]
 800e828:	e005      	b.n	800e836 <HAL_SPI_Init+0x38>
 800e82a:	687b      	ldr	r3, [r7, #4]
 800e82c:	2200      	movs	r2, #0
 800e82e:	611a      	str	r2, [r3, #16]
 800e830:	687b      	ldr	r3, [r7, #4]
 800e832:	2200      	movs	r2, #0
 800e834:	615a      	str	r2, [r3, #20]
 800e836:	687b      	ldr	r3, [r7, #4]
 800e838:	2200      	movs	r2, #0
 800e83a:	629a      	str	r2, [r3, #40]	; 0x28
 800e83c:	687b      	ldr	r3, [r7, #4]
 800e83e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800e842:	b2db      	uxtb	r3, r3
 800e844:	2b00      	cmp	r3, #0
 800e846:	d106      	bne.n	800e856 <HAL_SPI_Init+0x58>
 800e848:	687b      	ldr	r3, [r7, #4]
 800e84a:	2200      	movs	r2, #0
 800e84c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800e850:	6878      	ldr	r0, [r7, #4]
 800e852:	f7fd facb 	bl	800bdec <HAL_SPI_MspInit>
 800e856:	687b      	ldr	r3, [r7, #4]
 800e858:	2202      	movs	r2, #2
 800e85a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800e85e:	687b      	ldr	r3, [r7, #4]
 800e860:	681b      	ldr	r3, [r3, #0]
 800e862:	681a      	ldr	r2, [r3, #0]
 800e864:	687b      	ldr	r3, [r7, #4]
 800e866:	681b      	ldr	r3, [r3, #0]
 800e868:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e86c:	601a      	str	r2, [r3, #0]
 800e86e:	687b      	ldr	r3, [r7, #4]
 800e870:	685b      	ldr	r3, [r3, #4]
 800e872:	f403 7282 	and.w	r2, r3, #260	; 0x104
 800e876:	687b      	ldr	r3, [r7, #4]
 800e878:	689b      	ldr	r3, [r3, #8]
 800e87a:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 800e87e:	431a      	orrs	r2, r3
 800e880:	687b      	ldr	r3, [r7, #4]
 800e882:	68db      	ldr	r3, [r3, #12]
 800e884:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800e888:	431a      	orrs	r2, r3
 800e88a:	687b      	ldr	r3, [r7, #4]
 800e88c:	691b      	ldr	r3, [r3, #16]
 800e88e:	f003 0302 	and.w	r3, r3, #2
 800e892:	431a      	orrs	r2, r3
 800e894:	687b      	ldr	r3, [r7, #4]
 800e896:	695b      	ldr	r3, [r3, #20]
 800e898:	f003 0301 	and.w	r3, r3, #1
 800e89c:	431a      	orrs	r2, r3
 800e89e:	687b      	ldr	r3, [r7, #4]
 800e8a0:	699b      	ldr	r3, [r3, #24]
 800e8a2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800e8a6:	431a      	orrs	r2, r3
 800e8a8:	687b      	ldr	r3, [r7, #4]
 800e8aa:	69db      	ldr	r3, [r3, #28]
 800e8ac:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800e8b0:	431a      	orrs	r2, r3
 800e8b2:	687b      	ldr	r3, [r7, #4]
 800e8b4:	6a1b      	ldr	r3, [r3, #32]
 800e8b6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800e8ba:	ea42 0103 	orr.w	r1, r2, r3
 800e8be:	687b      	ldr	r3, [r7, #4]
 800e8c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e8c2:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800e8c6:	687b      	ldr	r3, [r7, #4]
 800e8c8:	681b      	ldr	r3, [r3, #0]
 800e8ca:	430a      	orrs	r2, r1
 800e8cc:	601a      	str	r2, [r3, #0]
 800e8ce:	687b      	ldr	r3, [r7, #4]
 800e8d0:	699b      	ldr	r3, [r3, #24]
 800e8d2:	0c1b      	lsrs	r3, r3, #16
 800e8d4:	f003 0104 	and.w	r1, r3, #4
 800e8d8:	687b      	ldr	r3, [r7, #4]
 800e8da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e8dc:	f003 0210 	and.w	r2, r3, #16
 800e8e0:	687b      	ldr	r3, [r7, #4]
 800e8e2:	681b      	ldr	r3, [r3, #0]
 800e8e4:	430a      	orrs	r2, r1
 800e8e6:	605a      	str	r2, [r3, #4]
 800e8e8:	687b      	ldr	r3, [r7, #4]
 800e8ea:	681b      	ldr	r3, [r3, #0]
 800e8ec:	69da      	ldr	r2, [r3, #28]
 800e8ee:	687b      	ldr	r3, [r7, #4]
 800e8f0:	681b      	ldr	r3, [r3, #0]
 800e8f2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800e8f6:	61da      	str	r2, [r3, #28]
 800e8f8:	687b      	ldr	r3, [r7, #4]
 800e8fa:	2200      	movs	r2, #0
 800e8fc:	655a      	str	r2, [r3, #84]	; 0x54
 800e8fe:	687b      	ldr	r3, [r7, #4]
 800e900:	2201      	movs	r2, #1
 800e902:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800e906:	2300      	movs	r3, #0
 800e908:	4618      	mov	r0, r3
 800e90a:	3708      	adds	r7, #8
 800e90c:	46bd      	mov	sp, r7
 800e90e:	bd80      	pop	{r7, pc}

0800e910 <HAL_SPI_Transmit>:
 800e910:	b580      	push	{r7, lr}
 800e912:	b088      	sub	sp, #32
 800e914:	af00      	add	r7, sp, #0
 800e916:	60f8      	str	r0, [r7, #12]
 800e918:	60b9      	str	r1, [r7, #8]
 800e91a:	603b      	str	r3, [r7, #0]
 800e91c:	4613      	mov	r3, r2
 800e91e:	80fb      	strh	r3, [r7, #6]
 800e920:	2300      	movs	r3, #0
 800e922:	77fb      	strb	r3, [r7, #31]
 800e924:	68fb      	ldr	r3, [r7, #12]
 800e926:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800e92a:	2b01      	cmp	r3, #1
 800e92c:	d101      	bne.n	800e932 <HAL_SPI_Transmit+0x22>
 800e92e:	2302      	movs	r3, #2
 800e930:	e12d      	b.n	800eb8e <HAL_SPI_Transmit+0x27e>
 800e932:	68fb      	ldr	r3, [r7, #12]
 800e934:	2201      	movs	r2, #1
 800e936:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800e93a:	f7fe f9fb 	bl	800cd34 <HAL_GetTick>
 800e93e:	61b8      	str	r0, [r7, #24]
 800e940:	88fb      	ldrh	r3, [r7, #6]
 800e942:	82fb      	strh	r3, [r7, #22]
 800e944:	68fb      	ldr	r3, [r7, #12]
 800e946:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800e94a:	b2db      	uxtb	r3, r3
 800e94c:	2b01      	cmp	r3, #1
 800e94e:	d002      	beq.n	800e956 <HAL_SPI_Transmit+0x46>
 800e950:	2302      	movs	r3, #2
 800e952:	77fb      	strb	r3, [r7, #31]
 800e954:	e116      	b.n	800eb84 <HAL_SPI_Transmit+0x274>
 800e956:	68bb      	ldr	r3, [r7, #8]
 800e958:	2b00      	cmp	r3, #0
 800e95a:	d002      	beq.n	800e962 <HAL_SPI_Transmit+0x52>
 800e95c:	88fb      	ldrh	r3, [r7, #6]
 800e95e:	2b00      	cmp	r3, #0
 800e960:	d102      	bne.n	800e968 <HAL_SPI_Transmit+0x58>
 800e962:	2301      	movs	r3, #1
 800e964:	77fb      	strb	r3, [r7, #31]
 800e966:	e10d      	b.n	800eb84 <HAL_SPI_Transmit+0x274>
 800e968:	68fb      	ldr	r3, [r7, #12]
 800e96a:	2203      	movs	r2, #3
 800e96c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800e970:	68fb      	ldr	r3, [r7, #12]
 800e972:	2200      	movs	r2, #0
 800e974:	655a      	str	r2, [r3, #84]	; 0x54
 800e976:	68fb      	ldr	r3, [r7, #12]
 800e978:	68ba      	ldr	r2, [r7, #8]
 800e97a:	631a      	str	r2, [r3, #48]	; 0x30
 800e97c:	68fb      	ldr	r3, [r7, #12]
 800e97e:	88fa      	ldrh	r2, [r7, #6]
 800e980:	869a      	strh	r2, [r3, #52]	; 0x34
 800e982:	68fb      	ldr	r3, [r7, #12]
 800e984:	88fa      	ldrh	r2, [r7, #6]
 800e986:	86da      	strh	r2, [r3, #54]	; 0x36
 800e988:	68fb      	ldr	r3, [r7, #12]
 800e98a:	2200      	movs	r2, #0
 800e98c:	639a      	str	r2, [r3, #56]	; 0x38
 800e98e:	68fb      	ldr	r3, [r7, #12]
 800e990:	2200      	movs	r2, #0
 800e992:	879a      	strh	r2, [r3, #60]	; 0x3c
 800e994:	68fb      	ldr	r3, [r7, #12]
 800e996:	2200      	movs	r2, #0
 800e998:	87da      	strh	r2, [r3, #62]	; 0x3e
 800e99a:	68fb      	ldr	r3, [r7, #12]
 800e99c:	2200      	movs	r2, #0
 800e99e:	645a      	str	r2, [r3, #68]	; 0x44
 800e9a0:	68fb      	ldr	r3, [r7, #12]
 800e9a2:	2200      	movs	r2, #0
 800e9a4:	641a      	str	r2, [r3, #64]	; 0x40
 800e9a6:	68fb      	ldr	r3, [r7, #12]
 800e9a8:	689b      	ldr	r3, [r3, #8]
 800e9aa:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800e9ae:	d10f      	bne.n	800e9d0 <HAL_SPI_Transmit+0xc0>
 800e9b0:	68fb      	ldr	r3, [r7, #12]
 800e9b2:	681b      	ldr	r3, [r3, #0]
 800e9b4:	681a      	ldr	r2, [r3, #0]
 800e9b6:	68fb      	ldr	r3, [r7, #12]
 800e9b8:	681b      	ldr	r3, [r3, #0]
 800e9ba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e9be:	601a      	str	r2, [r3, #0]
 800e9c0:	68fb      	ldr	r3, [r7, #12]
 800e9c2:	681b      	ldr	r3, [r3, #0]
 800e9c4:	681a      	ldr	r2, [r3, #0]
 800e9c6:	68fb      	ldr	r3, [r7, #12]
 800e9c8:	681b      	ldr	r3, [r3, #0]
 800e9ca:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800e9ce:	601a      	str	r2, [r3, #0]
 800e9d0:	68fb      	ldr	r3, [r7, #12]
 800e9d2:	681b      	ldr	r3, [r3, #0]
 800e9d4:	681b      	ldr	r3, [r3, #0]
 800e9d6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800e9da:	2b40      	cmp	r3, #64	; 0x40
 800e9dc:	d007      	beq.n	800e9ee <HAL_SPI_Transmit+0xde>
 800e9de:	68fb      	ldr	r3, [r7, #12]
 800e9e0:	681b      	ldr	r3, [r3, #0]
 800e9e2:	681a      	ldr	r2, [r3, #0]
 800e9e4:	68fb      	ldr	r3, [r7, #12]
 800e9e6:	681b      	ldr	r3, [r3, #0]
 800e9e8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800e9ec:	601a      	str	r2, [r3, #0]
 800e9ee:	68fb      	ldr	r3, [r7, #12]
 800e9f0:	68db      	ldr	r3, [r3, #12]
 800e9f2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e9f6:	d14f      	bne.n	800ea98 <HAL_SPI_Transmit+0x188>
 800e9f8:	68fb      	ldr	r3, [r7, #12]
 800e9fa:	685b      	ldr	r3, [r3, #4]
 800e9fc:	2b00      	cmp	r3, #0
 800e9fe:	d002      	beq.n	800ea06 <HAL_SPI_Transmit+0xf6>
 800ea00:	8afb      	ldrh	r3, [r7, #22]
 800ea02:	2b01      	cmp	r3, #1
 800ea04:	d142      	bne.n	800ea8c <HAL_SPI_Transmit+0x17c>
 800ea06:	68fb      	ldr	r3, [r7, #12]
 800ea08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ea0a:	881a      	ldrh	r2, [r3, #0]
 800ea0c:	68fb      	ldr	r3, [r7, #12]
 800ea0e:	681b      	ldr	r3, [r3, #0]
 800ea10:	60da      	str	r2, [r3, #12]
 800ea12:	68fb      	ldr	r3, [r7, #12]
 800ea14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ea16:	1c9a      	adds	r2, r3, #2
 800ea18:	68fb      	ldr	r3, [r7, #12]
 800ea1a:	631a      	str	r2, [r3, #48]	; 0x30
 800ea1c:	68fb      	ldr	r3, [r7, #12]
 800ea1e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800ea20:	b29b      	uxth	r3, r3
 800ea22:	3b01      	subs	r3, #1
 800ea24:	b29a      	uxth	r2, r3
 800ea26:	68fb      	ldr	r3, [r7, #12]
 800ea28:	86da      	strh	r2, [r3, #54]	; 0x36
 800ea2a:	e02f      	b.n	800ea8c <HAL_SPI_Transmit+0x17c>
 800ea2c:	68fb      	ldr	r3, [r7, #12]
 800ea2e:	681b      	ldr	r3, [r3, #0]
 800ea30:	689b      	ldr	r3, [r3, #8]
 800ea32:	f003 0302 	and.w	r3, r3, #2
 800ea36:	2b02      	cmp	r3, #2
 800ea38:	d112      	bne.n	800ea60 <HAL_SPI_Transmit+0x150>
 800ea3a:	68fb      	ldr	r3, [r7, #12]
 800ea3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ea3e:	881a      	ldrh	r2, [r3, #0]
 800ea40:	68fb      	ldr	r3, [r7, #12]
 800ea42:	681b      	ldr	r3, [r3, #0]
 800ea44:	60da      	str	r2, [r3, #12]
 800ea46:	68fb      	ldr	r3, [r7, #12]
 800ea48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ea4a:	1c9a      	adds	r2, r3, #2
 800ea4c:	68fb      	ldr	r3, [r7, #12]
 800ea4e:	631a      	str	r2, [r3, #48]	; 0x30
 800ea50:	68fb      	ldr	r3, [r7, #12]
 800ea52:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800ea54:	b29b      	uxth	r3, r3
 800ea56:	3b01      	subs	r3, #1
 800ea58:	b29a      	uxth	r2, r3
 800ea5a:	68fb      	ldr	r3, [r7, #12]
 800ea5c:	86da      	strh	r2, [r3, #54]	; 0x36
 800ea5e:	e015      	b.n	800ea8c <HAL_SPI_Transmit+0x17c>
 800ea60:	f7fe f968 	bl	800cd34 <HAL_GetTick>
 800ea64:	4602      	mov	r2, r0
 800ea66:	69bb      	ldr	r3, [r7, #24]
 800ea68:	1ad3      	subs	r3, r2, r3
 800ea6a:	683a      	ldr	r2, [r7, #0]
 800ea6c:	429a      	cmp	r2, r3
 800ea6e:	d803      	bhi.n	800ea78 <HAL_SPI_Transmit+0x168>
 800ea70:	683b      	ldr	r3, [r7, #0]
 800ea72:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ea76:	d102      	bne.n	800ea7e <HAL_SPI_Transmit+0x16e>
 800ea78:	683b      	ldr	r3, [r7, #0]
 800ea7a:	2b00      	cmp	r3, #0
 800ea7c:	d106      	bne.n	800ea8c <HAL_SPI_Transmit+0x17c>
 800ea7e:	2303      	movs	r3, #3
 800ea80:	77fb      	strb	r3, [r7, #31]
 800ea82:	68fb      	ldr	r3, [r7, #12]
 800ea84:	2201      	movs	r2, #1
 800ea86:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800ea8a:	e07b      	b.n	800eb84 <HAL_SPI_Transmit+0x274>
 800ea8c:	68fb      	ldr	r3, [r7, #12]
 800ea8e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800ea90:	b29b      	uxth	r3, r3
 800ea92:	2b00      	cmp	r3, #0
 800ea94:	d1ca      	bne.n	800ea2c <HAL_SPI_Transmit+0x11c>
 800ea96:	e050      	b.n	800eb3a <HAL_SPI_Transmit+0x22a>
 800ea98:	68fb      	ldr	r3, [r7, #12]
 800ea9a:	685b      	ldr	r3, [r3, #4]
 800ea9c:	2b00      	cmp	r3, #0
 800ea9e:	d002      	beq.n	800eaa6 <HAL_SPI_Transmit+0x196>
 800eaa0:	8afb      	ldrh	r3, [r7, #22]
 800eaa2:	2b01      	cmp	r3, #1
 800eaa4:	d144      	bne.n	800eb30 <HAL_SPI_Transmit+0x220>
 800eaa6:	68fb      	ldr	r3, [r7, #12]
 800eaa8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800eaaa:	68fb      	ldr	r3, [r7, #12]
 800eaac:	681b      	ldr	r3, [r3, #0]
 800eaae:	330c      	adds	r3, #12
 800eab0:	7812      	ldrb	r2, [r2, #0]
 800eab2:	701a      	strb	r2, [r3, #0]
 800eab4:	68fb      	ldr	r3, [r7, #12]
 800eab6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eab8:	1c5a      	adds	r2, r3, #1
 800eaba:	68fb      	ldr	r3, [r7, #12]
 800eabc:	631a      	str	r2, [r3, #48]	; 0x30
 800eabe:	68fb      	ldr	r3, [r7, #12]
 800eac0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800eac2:	b29b      	uxth	r3, r3
 800eac4:	3b01      	subs	r3, #1
 800eac6:	b29a      	uxth	r2, r3
 800eac8:	68fb      	ldr	r3, [r7, #12]
 800eaca:	86da      	strh	r2, [r3, #54]	; 0x36
 800eacc:	e030      	b.n	800eb30 <HAL_SPI_Transmit+0x220>
 800eace:	68fb      	ldr	r3, [r7, #12]
 800ead0:	681b      	ldr	r3, [r3, #0]
 800ead2:	689b      	ldr	r3, [r3, #8]
 800ead4:	f003 0302 	and.w	r3, r3, #2
 800ead8:	2b02      	cmp	r3, #2
 800eada:	d113      	bne.n	800eb04 <HAL_SPI_Transmit+0x1f4>
 800eadc:	68fb      	ldr	r3, [r7, #12]
 800eade:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800eae0:	68fb      	ldr	r3, [r7, #12]
 800eae2:	681b      	ldr	r3, [r3, #0]
 800eae4:	330c      	adds	r3, #12
 800eae6:	7812      	ldrb	r2, [r2, #0]
 800eae8:	701a      	strb	r2, [r3, #0]
 800eaea:	68fb      	ldr	r3, [r7, #12]
 800eaec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eaee:	1c5a      	adds	r2, r3, #1
 800eaf0:	68fb      	ldr	r3, [r7, #12]
 800eaf2:	631a      	str	r2, [r3, #48]	; 0x30
 800eaf4:	68fb      	ldr	r3, [r7, #12]
 800eaf6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800eaf8:	b29b      	uxth	r3, r3
 800eafa:	3b01      	subs	r3, #1
 800eafc:	b29a      	uxth	r2, r3
 800eafe:	68fb      	ldr	r3, [r7, #12]
 800eb00:	86da      	strh	r2, [r3, #54]	; 0x36
 800eb02:	e015      	b.n	800eb30 <HAL_SPI_Transmit+0x220>
 800eb04:	f7fe f916 	bl	800cd34 <HAL_GetTick>
 800eb08:	4602      	mov	r2, r0
 800eb0a:	69bb      	ldr	r3, [r7, #24]
 800eb0c:	1ad3      	subs	r3, r2, r3
 800eb0e:	683a      	ldr	r2, [r7, #0]
 800eb10:	429a      	cmp	r2, r3
 800eb12:	d803      	bhi.n	800eb1c <HAL_SPI_Transmit+0x20c>
 800eb14:	683b      	ldr	r3, [r7, #0]
 800eb16:	f1b3 3fff 	cmp.w	r3, #4294967295
 800eb1a:	d102      	bne.n	800eb22 <HAL_SPI_Transmit+0x212>
 800eb1c:	683b      	ldr	r3, [r7, #0]
 800eb1e:	2b00      	cmp	r3, #0
 800eb20:	d106      	bne.n	800eb30 <HAL_SPI_Transmit+0x220>
 800eb22:	2303      	movs	r3, #3
 800eb24:	77fb      	strb	r3, [r7, #31]
 800eb26:	68fb      	ldr	r3, [r7, #12]
 800eb28:	2201      	movs	r2, #1
 800eb2a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800eb2e:	e029      	b.n	800eb84 <HAL_SPI_Transmit+0x274>
 800eb30:	68fb      	ldr	r3, [r7, #12]
 800eb32:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800eb34:	b29b      	uxth	r3, r3
 800eb36:	2b00      	cmp	r3, #0
 800eb38:	d1c9      	bne.n	800eace <HAL_SPI_Transmit+0x1be>
 800eb3a:	69ba      	ldr	r2, [r7, #24]
 800eb3c:	6839      	ldr	r1, [r7, #0]
 800eb3e:	68f8      	ldr	r0, [r7, #12]
 800eb40:	f000 fbe0 	bl	800f304 <SPI_EndRxTxTransaction>
 800eb44:	4603      	mov	r3, r0
 800eb46:	2b00      	cmp	r3, #0
 800eb48:	d002      	beq.n	800eb50 <HAL_SPI_Transmit+0x240>
 800eb4a:	68fb      	ldr	r3, [r7, #12]
 800eb4c:	2220      	movs	r2, #32
 800eb4e:	655a      	str	r2, [r3, #84]	; 0x54
 800eb50:	68fb      	ldr	r3, [r7, #12]
 800eb52:	689b      	ldr	r3, [r3, #8]
 800eb54:	2b00      	cmp	r3, #0
 800eb56:	d10a      	bne.n	800eb6e <HAL_SPI_Transmit+0x25e>
 800eb58:	2300      	movs	r3, #0
 800eb5a:	613b      	str	r3, [r7, #16]
 800eb5c:	68fb      	ldr	r3, [r7, #12]
 800eb5e:	681b      	ldr	r3, [r3, #0]
 800eb60:	68db      	ldr	r3, [r3, #12]
 800eb62:	613b      	str	r3, [r7, #16]
 800eb64:	68fb      	ldr	r3, [r7, #12]
 800eb66:	681b      	ldr	r3, [r3, #0]
 800eb68:	689b      	ldr	r3, [r3, #8]
 800eb6a:	613b      	str	r3, [r7, #16]
 800eb6c:	693b      	ldr	r3, [r7, #16]
 800eb6e:	68fb      	ldr	r3, [r7, #12]
 800eb70:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800eb72:	2b00      	cmp	r3, #0
 800eb74:	d002      	beq.n	800eb7c <HAL_SPI_Transmit+0x26c>
 800eb76:	2301      	movs	r3, #1
 800eb78:	77fb      	strb	r3, [r7, #31]
 800eb7a:	e003      	b.n	800eb84 <HAL_SPI_Transmit+0x274>
 800eb7c:	68fb      	ldr	r3, [r7, #12]
 800eb7e:	2201      	movs	r2, #1
 800eb80:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800eb84:	68fb      	ldr	r3, [r7, #12]
 800eb86:	2200      	movs	r2, #0
 800eb88:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800eb8c:	7ffb      	ldrb	r3, [r7, #31]
 800eb8e:	4618      	mov	r0, r3
 800eb90:	3720      	adds	r7, #32
 800eb92:	46bd      	mov	sp, r7
 800eb94:	bd80      	pop	{r7, pc}

0800eb96 <HAL_SPI_Receive>:
 800eb96:	b580      	push	{r7, lr}
 800eb98:	b088      	sub	sp, #32
 800eb9a:	af02      	add	r7, sp, #8
 800eb9c:	60f8      	str	r0, [r7, #12]
 800eb9e:	60b9      	str	r1, [r7, #8]
 800eba0:	603b      	str	r3, [r7, #0]
 800eba2:	4613      	mov	r3, r2
 800eba4:	80fb      	strh	r3, [r7, #6]
 800eba6:	2300      	movs	r3, #0
 800eba8:	75fb      	strb	r3, [r7, #23]
 800ebaa:	68fb      	ldr	r3, [r7, #12]
 800ebac:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800ebb0:	b2db      	uxtb	r3, r3
 800ebb2:	2b01      	cmp	r3, #1
 800ebb4:	d002      	beq.n	800ebbc <HAL_SPI_Receive+0x26>
 800ebb6:	2302      	movs	r3, #2
 800ebb8:	75fb      	strb	r3, [r7, #23]
 800ebba:	e0fb      	b.n	800edb4 <HAL_SPI_Receive+0x21e>
 800ebbc:	68fb      	ldr	r3, [r7, #12]
 800ebbe:	685b      	ldr	r3, [r3, #4]
 800ebc0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800ebc4:	d112      	bne.n	800ebec <HAL_SPI_Receive+0x56>
 800ebc6:	68fb      	ldr	r3, [r7, #12]
 800ebc8:	689b      	ldr	r3, [r3, #8]
 800ebca:	2b00      	cmp	r3, #0
 800ebcc:	d10e      	bne.n	800ebec <HAL_SPI_Receive+0x56>
 800ebce:	68fb      	ldr	r3, [r7, #12]
 800ebd0:	2204      	movs	r2, #4
 800ebd2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800ebd6:	88fa      	ldrh	r2, [r7, #6]
 800ebd8:	683b      	ldr	r3, [r7, #0]
 800ebda:	9300      	str	r3, [sp, #0]
 800ebdc:	4613      	mov	r3, r2
 800ebde:	68ba      	ldr	r2, [r7, #8]
 800ebe0:	68b9      	ldr	r1, [r7, #8]
 800ebe2:	68f8      	ldr	r0, [r7, #12]
 800ebe4:	f000 f8ef 	bl	800edc6 <HAL_SPI_TransmitReceive>
 800ebe8:	4603      	mov	r3, r0
 800ebea:	e0e8      	b.n	800edbe <HAL_SPI_Receive+0x228>
 800ebec:	68fb      	ldr	r3, [r7, #12]
 800ebee:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800ebf2:	2b01      	cmp	r3, #1
 800ebf4:	d101      	bne.n	800ebfa <HAL_SPI_Receive+0x64>
 800ebf6:	2302      	movs	r3, #2
 800ebf8:	e0e1      	b.n	800edbe <HAL_SPI_Receive+0x228>
 800ebfa:	68fb      	ldr	r3, [r7, #12]
 800ebfc:	2201      	movs	r2, #1
 800ebfe:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800ec02:	f7fe f897 	bl	800cd34 <HAL_GetTick>
 800ec06:	6138      	str	r0, [r7, #16]
 800ec08:	68bb      	ldr	r3, [r7, #8]
 800ec0a:	2b00      	cmp	r3, #0
 800ec0c:	d002      	beq.n	800ec14 <HAL_SPI_Receive+0x7e>
 800ec0e:	88fb      	ldrh	r3, [r7, #6]
 800ec10:	2b00      	cmp	r3, #0
 800ec12:	d102      	bne.n	800ec1a <HAL_SPI_Receive+0x84>
 800ec14:	2301      	movs	r3, #1
 800ec16:	75fb      	strb	r3, [r7, #23]
 800ec18:	e0cc      	b.n	800edb4 <HAL_SPI_Receive+0x21e>
 800ec1a:	68fb      	ldr	r3, [r7, #12]
 800ec1c:	2204      	movs	r2, #4
 800ec1e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800ec22:	68fb      	ldr	r3, [r7, #12]
 800ec24:	2200      	movs	r2, #0
 800ec26:	655a      	str	r2, [r3, #84]	; 0x54
 800ec28:	68fb      	ldr	r3, [r7, #12]
 800ec2a:	68ba      	ldr	r2, [r7, #8]
 800ec2c:	639a      	str	r2, [r3, #56]	; 0x38
 800ec2e:	68fb      	ldr	r3, [r7, #12]
 800ec30:	88fa      	ldrh	r2, [r7, #6]
 800ec32:	879a      	strh	r2, [r3, #60]	; 0x3c
 800ec34:	68fb      	ldr	r3, [r7, #12]
 800ec36:	88fa      	ldrh	r2, [r7, #6]
 800ec38:	87da      	strh	r2, [r3, #62]	; 0x3e
 800ec3a:	68fb      	ldr	r3, [r7, #12]
 800ec3c:	2200      	movs	r2, #0
 800ec3e:	631a      	str	r2, [r3, #48]	; 0x30
 800ec40:	68fb      	ldr	r3, [r7, #12]
 800ec42:	2200      	movs	r2, #0
 800ec44:	869a      	strh	r2, [r3, #52]	; 0x34
 800ec46:	68fb      	ldr	r3, [r7, #12]
 800ec48:	2200      	movs	r2, #0
 800ec4a:	86da      	strh	r2, [r3, #54]	; 0x36
 800ec4c:	68fb      	ldr	r3, [r7, #12]
 800ec4e:	2200      	movs	r2, #0
 800ec50:	641a      	str	r2, [r3, #64]	; 0x40
 800ec52:	68fb      	ldr	r3, [r7, #12]
 800ec54:	2200      	movs	r2, #0
 800ec56:	645a      	str	r2, [r3, #68]	; 0x44
 800ec58:	68fb      	ldr	r3, [r7, #12]
 800ec5a:	689b      	ldr	r3, [r3, #8]
 800ec5c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800ec60:	d10f      	bne.n	800ec82 <HAL_SPI_Receive+0xec>
 800ec62:	68fb      	ldr	r3, [r7, #12]
 800ec64:	681b      	ldr	r3, [r3, #0]
 800ec66:	681a      	ldr	r2, [r3, #0]
 800ec68:	68fb      	ldr	r3, [r7, #12]
 800ec6a:	681b      	ldr	r3, [r3, #0]
 800ec6c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ec70:	601a      	str	r2, [r3, #0]
 800ec72:	68fb      	ldr	r3, [r7, #12]
 800ec74:	681b      	ldr	r3, [r3, #0]
 800ec76:	681a      	ldr	r2, [r3, #0]
 800ec78:	68fb      	ldr	r3, [r7, #12]
 800ec7a:	681b      	ldr	r3, [r3, #0]
 800ec7c:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800ec80:	601a      	str	r2, [r3, #0]
 800ec82:	68fb      	ldr	r3, [r7, #12]
 800ec84:	681b      	ldr	r3, [r3, #0]
 800ec86:	681b      	ldr	r3, [r3, #0]
 800ec88:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ec8c:	2b40      	cmp	r3, #64	; 0x40
 800ec8e:	d007      	beq.n	800eca0 <HAL_SPI_Receive+0x10a>
 800ec90:	68fb      	ldr	r3, [r7, #12]
 800ec92:	681b      	ldr	r3, [r3, #0]
 800ec94:	681a      	ldr	r2, [r3, #0]
 800ec96:	68fb      	ldr	r3, [r7, #12]
 800ec98:	681b      	ldr	r3, [r3, #0]
 800ec9a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800ec9e:	601a      	str	r2, [r3, #0]
 800eca0:	68fb      	ldr	r3, [r7, #12]
 800eca2:	68db      	ldr	r3, [r3, #12]
 800eca4:	2b00      	cmp	r3, #0
 800eca6:	d16a      	bne.n	800ed7e <HAL_SPI_Receive+0x1e8>
 800eca8:	e032      	b.n	800ed10 <HAL_SPI_Receive+0x17a>
 800ecaa:	68fb      	ldr	r3, [r7, #12]
 800ecac:	681b      	ldr	r3, [r3, #0]
 800ecae:	689b      	ldr	r3, [r3, #8]
 800ecb0:	f003 0301 	and.w	r3, r3, #1
 800ecb4:	2b01      	cmp	r3, #1
 800ecb6:	d115      	bne.n	800ece4 <HAL_SPI_Receive+0x14e>
 800ecb8:	68fb      	ldr	r3, [r7, #12]
 800ecba:	681b      	ldr	r3, [r3, #0]
 800ecbc:	f103 020c 	add.w	r2, r3, #12
 800ecc0:	68fb      	ldr	r3, [r7, #12]
 800ecc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ecc4:	7812      	ldrb	r2, [r2, #0]
 800ecc6:	b2d2      	uxtb	r2, r2
 800ecc8:	701a      	strb	r2, [r3, #0]
 800ecca:	68fb      	ldr	r3, [r7, #12]
 800eccc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ecce:	1c5a      	adds	r2, r3, #1
 800ecd0:	68fb      	ldr	r3, [r7, #12]
 800ecd2:	639a      	str	r2, [r3, #56]	; 0x38
 800ecd4:	68fb      	ldr	r3, [r7, #12]
 800ecd6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800ecd8:	b29b      	uxth	r3, r3
 800ecda:	3b01      	subs	r3, #1
 800ecdc:	b29a      	uxth	r2, r3
 800ecde:	68fb      	ldr	r3, [r7, #12]
 800ece0:	87da      	strh	r2, [r3, #62]	; 0x3e
 800ece2:	e015      	b.n	800ed10 <HAL_SPI_Receive+0x17a>
 800ece4:	f7fe f826 	bl	800cd34 <HAL_GetTick>
 800ece8:	4602      	mov	r2, r0
 800ecea:	693b      	ldr	r3, [r7, #16]
 800ecec:	1ad3      	subs	r3, r2, r3
 800ecee:	683a      	ldr	r2, [r7, #0]
 800ecf0:	429a      	cmp	r2, r3
 800ecf2:	d803      	bhi.n	800ecfc <HAL_SPI_Receive+0x166>
 800ecf4:	683b      	ldr	r3, [r7, #0]
 800ecf6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ecfa:	d102      	bne.n	800ed02 <HAL_SPI_Receive+0x16c>
 800ecfc:	683b      	ldr	r3, [r7, #0]
 800ecfe:	2b00      	cmp	r3, #0
 800ed00:	d106      	bne.n	800ed10 <HAL_SPI_Receive+0x17a>
 800ed02:	2303      	movs	r3, #3
 800ed04:	75fb      	strb	r3, [r7, #23]
 800ed06:	68fb      	ldr	r3, [r7, #12]
 800ed08:	2201      	movs	r2, #1
 800ed0a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800ed0e:	e051      	b.n	800edb4 <HAL_SPI_Receive+0x21e>
 800ed10:	68fb      	ldr	r3, [r7, #12]
 800ed12:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800ed14:	b29b      	uxth	r3, r3
 800ed16:	2b00      	cmp	r3, #0
 800ed18:	d1c7      	bne.n	800ecaa <HAL_SPI_Receive+0x114>
 800ed1a:	e035      	b.n	800ed88 <HAL_SPI_Receive+0x1f2>
 800ed1c:	68fb      	ldr	r3, [r7, #12]
 800ed1e:	681b      	ldr	r3, [r3, #0]
 800ed20:	689b      	ldr	r3, [r3, #8]
 800ed22:	f003 0301 	and.w	r3, r3, #1
 800ed26:	2b01      	cmp	r3, #1
 800ed28:	d113      	bne.n	800ed52 <HAL_SPI_Receive+0x1bc>
 800ed2a:	68fb      	ldr	r3, [r7, #12]
 800ed2c:	681b      	ldr	r3, [r3, #0]
 800ed2e:	68da      	ldr	r2, [r3, #12]
 800ed30:	68fb      	ldr	r3, [r7, #12]
 800ed32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ed34:	b292      	uxth	r2, r2
 800ed36:	801a      	strh	r2, [r3, #0]
 800ed38:	68fb      	ldr	r3, [r7, #12]
 800ed3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ed3c:	1c9a      	adds	r2, r3, #2
 800ed3e:	68fb      	ldr	r3, [r7, #12]
 800ed40:	639a      	str	r2, [r3, #56]	; 0x38
 800ed42:	68fb      	ldr	r3, [r7, #12]
 800ed44:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800ed46:	b29b      	uxth	r3, r3
 800ed48:	3b01      	subs	r3, #1
 800ed4a:	b29a      	uxth	r2, r3
 800ed4c:	68fb      	ldr	r3, [r7, #12]
 800ed4e:	87da      	strh	r2, [r3, #62]	; 0x3e
 800ed50:	e015      	b.n	800ed7e <HAL_SPI_Receive+0x1e8>
 800ed52:	f7fd ffef 	bl	800cd34 <HAL_GetTick>
 800ed56:	4602      	mov	r2, r0
 800ed58:	693b      	ldr	r3, [r7, #16]
 800ed5a:	1ad3      	subs	r3, r2, r3
 800ed5c:	683a      	ldr	r2, [r7, #0]
 800ed5e:	429a      	cmp	r2, r3
 800ed60:	d803      	bhi.n	800ed6a <HAL_SPI_Receive+0x1d4>
 800ed62:	683b      	ldr	r3, [r7, #0]
 800ed64:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ed68:	d102      	bne.n	800ed70 <HAL_SPI_Receive+0x1da>
 800ed6a:	683b      	ldr	r3, [r7, #0]
 800ed6c:	2b00      	cmp	r3, #0
 800ed6e:	d106      	bne.n	800ed7e <HAL_SPI_Receive+0x1e8>
 800ed70:	2303      	movs	r3, #3
 800ed72:	75fb      	strb	r3, [r7, #23]
 800ed74:	68fb      	ldr	r3, [r7, #12]
 800ed76:	2201      	movs	r2, #1
 800ed78:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800ed7c:	e01a      	b.n	800edb4 <HAL_SPI_Receive+0x21e>
 800ed7e:	68fb      	ldr	r3, [r7, #12]
 800ed80:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800ed82:	b29b      	uxth	r3, r3
 800ed84:	2b00      	cmp	r3, #0
 800ed86:	d1c9      	bne.n	800ed1c <HAL_SPI_Receive+0x186>
 800ed88:	693a      	ldr	r2, [r7, #16]
 800ed8a:	6839      	ldr	r1, [r7, #0]
 800ed8c:	68f8      	ldr	r0, [r7, #12]
 800ed8e:	f000 fa53 	bl	800f238 <SPI_EndRxTransaction>
 800ed92:	4603      	mov	r3, r0
 800ed94:	2b00      	cmp	r3, #0
 800ed96:	d002      	beq.n	800ed9e <HAL_SPI_Receive+0x208>
 800ed98:	68fb      	ldr	r3, [r7, #12]
 800ed9a:	2220      	movs	r2, #32
 800ed9c:	655a      	str	r2, [r3, #84]	; 0x54
 800ed9e:	68fb      	ldr	r3, [r7, #12]
 800eda0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800eda2:	2b00      	cmp	r3, #0
 800eda4:	d002      	beq.n	800edac <HAL_SPI_Receive+0x216>
 800eda6:	2301      	movs	r3, #1
 800eda8:	75fb      	strb	r3, [r7, #23]
 800edaa:	e003      	b.n	800edb4 <HAL_SPI_Receive+0x21e>
 800edac:	68fb      	ldr	r3, [r7, #12]
 800edae:	2201      	movs	r2, #1
 800edb0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800edb4:	68fb      	ldr	r3, [r7, #12]
 800edb6:	2200      	movs	r2, #0
 800edb8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800edbc:	7dfb      	ldrb	r3, [r7, #23]
 800edbe:	4618      	mov	r0, r3
 800edc0:	3718      	adds	r7, #24
 800edc2:	46bd      	mov	sp, r7
 800edc4:	bd80      	pop	{r7, pc}

0800edc6 <HAL_SPI_TransmitReceive>:
 800edc6:	b580      	push	{r7, lr}
 800edc8:	b08c      	sub	sp, #48	; 0x30
 800edca:	af00      	add	r7, sp, #0
 800edcc:	60f8      	str	r0, [r7, #12]
 800edce:	60b9      	str	r1, [r7, #8]
 800edd0:	607a      	str	r2, [r7, #4]
 800edd2:	807b      	strh	r3, [r7, #2]
 800edd4:	2301      	movs	r3, #1
 800edd6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800edd8:	2300      	movs	r3, #0
 800edda:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800edde:	68fb      	ldr	r3, [r7, #12]
 800ede0:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800ede4:	2b01      	cmp	r3, #1
 800ede6:	d101      	bne.n	800edec <HAL_SPI_TransmitReceive+0x26>
 800ede8:	2302      	movs	r3, #2
 800edea:	e198      	b.n	800f11e <HAL_SPI_TransmitReceive+0x358>
 800edec:	68fb      	ldr	r3, [r7, #12]
 800edee:	2201      	movs	r2, #1
 800edf0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800edf4:	f7fd ff9e 	bl	800cd34 <HAL_GetTick>
 800edf8:	6278      	str	r0, [r7, #36]	; 0x24
 800edfa:	68fb      	ldr	r3, [r7, #12]
 800edfc:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800ee00:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800ee04:	68fb      	ldr	r3, [r7, #12]
 800ee06:	685b      	ldr	r3, [r3, #4]
 800ee08:	61fb      	str	r3, [r7, #28]
 800ee0a:	887b      	ldrh	r3, [r7, #2]
 800ee0c:	837b      	strh	r3, [r7, #26]
 800ee0e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800ee12:	2b01      	cmp	r3, #1
 800ee14:	d00f      	beq.n	800ee36 <HAL_SPI_TransmitReceive+0x70>
 800ee16:	69fb      	ldr	r3, [r7, #28]
 800ee18:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800ee1c:	d107      	bne.n	800ee2e <HAL_SPI_TransmitReceive+0x68>
 800ee1e:	68fb      	ldr	r3, [r7, #12]
 800ee20:	689b      	ldr	r3, [r3, #8]
 800ee22:	2b00      	cmp	r3, #0
 800ee24:	d103      	bne.n	800ee2e <HAL_SPI_TransmitReceive+0x68>
 800ee26:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800ee2a:	2b04      	cmp	r3, #4
 800ee2c:	d003      	beq.n	800ee36 <HAL_SPI_TransmitReceive+0x70>
 800ee2e:	2302      	movs	r3, #2
 800ee30:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800ee34:	e16d      	b.n	800f112 <HAL_SPI_TransmitReceive+0x34c>
 800ee36:	68bb      	ldr	r3, [r7, #8]
 800ee38:	2b00      	cmp	r3, #0
 800ee3a:	d005      	beq.n	800ee48 <HAL_SPI_TransmitReceive+0x82>
 800ee3c:	687b      	ldr	r3, [r7, #4]
 800ee3e:	2b00      	cmp	r3, #0
 800ee40:	d002      	beq.n	800ee48 <HAL_SPI_TransmitReceive+0x82>
 800ee42:	887b      	ldrh	r3, [r7, #2]
 800ee44:	2b00      	cmp	r3, #0
 800ee46:	d103      	bne.n	800ee50 <HAL_SPI_TransmitReceive+0x8a>
 800ee48:	2301      	movs	r3, #1
 800ee4a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800ee4e:	e160      	b.n	800f112 <HAL_SPI_TransmitReceive+0x34c>
 800ee50:	68fb      	ldr	r3, [r7, #12]
 800ee52:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800ee56:	b2db      	uxtb	r3, r3
 800ee58:	2b04      	cmp	r3, #4
 800ee5a:	d003      	beq.n	800ee64 <HAL_SPI_TransmitReceive+0x9e>
 800ee5c:	68fb      	ldr	r3, [r7, #12]
 800ee5e:	2205      	movs	r2, #5
 800ee60:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800ee64:	68fb      	ldr	r3, [r7, #12]
 800ee66:	2200      	movs	r2, #0
 800ee68:	655a      	str	r2, [r3, #84]	; 0x54
 800ee6a:	68fb      	ldr	r3, [r7, #12]
 800ee6c:	687a      	ldr	r2, [r7, #4]
 800ee6e:	639a      	str	r2, [r3, #56]	; 0x38
 800ee70:	68fb      	ldr	r3, [r7, #12]
 800ee72:	887a      	ldrh	r2, [r7, #2]
 800ee74:	87da      	strh	r2, [r3, #62]	; 0x3e
 800ee76:	68fb      	ldr	r3, [r7, #12]
 800ee78:	887a      	ldrh	r2, [r7, #2]
 800ee7a:	879a      	strh	r2, [r3, #60]	; 0x3c
 800ee7c:	68fb      	ldr	r3, [r7, #12]
 800ee7e:	68ba      	ldr	r2, [r7, #8]
 800ee80:	631a      	str	r2, [r3, #48]	; 0x30
 800ee82:	68fb      	ldr	r3, [r7, #12]
 800ee84:	887a      	ldrh	r2, [r7, #2]
 800ee86:	86da      	strh	r2, [r3, #54]	; 0x36
 800ee88:	68fb      	ldr	r3, [r7, #12]
 800ee8a:	887a      	ldrh	r2, [r7, #2]
 800ee8c:	869a      	strh	r2, [r3, #52]	; 0x34
 800ee8e:	68fb      	ldr	r3, [r7, #12]
 800ee90:	2200      	movs	r2, #0
 800ee92:	641a      	str	r2, [r3, #64]	; 0x40
 800ee94:	68fb      	ldr	r3, [r7, #12]
 800ee96:	2200      	movs	r2, #0
 800ee98:	645a      	str	r2, [r3, #68]	; 0x44
 800ee9a:	68fb      	ldr	r3, [r7, #12]
 800ee9c:	681b      	ldr	r3, [r3, #0]
 800ee9e:	681b      	ldr	r3, [r3, #0]
 800eea0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800eea4:	2b40      	cmp	r3, #64	; 0x40
 800eea6:	d007      	beq.n	800eeb8 <HAL_SPI_TransmitReceive+0xf2>
 800eea8:	68fb      	ldr	r3, [r7, #12]
 800eeaa:	681b      	ldr	r3, [r3, #0]
 800eeac:	681a      	ldr	r2, [r3, #0]
 800eeae:	68fb      	ldr	r3, [r7, #12]
 800eeb0:	681b      	ldr	r3, [r3, #0]
 800eeb2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800eeb6:	601a      	str	r2, [r3, #0]
 800eeb8:	68fb      	ldr	r3, [r7, #12]
 800eeba:	68db      	ldr	r3, [r3, #12]
 800eebc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800eec0:	d17c      	bne.n	800efbc <HAL_SPI_TransmitReceive+0x1f6>
 800eec2:	68fb      	ldr	r3, [r7, #12]
 800eec4:	685b      	ldr	r3, [r3, #4]
 800eec6:	2b00      	cmp	r3, #0
 800eec8:	d002      	beq.n	800eed0 <HAL_SPI_TransmitReceive+0x10a>
 800eeca:	8b7b      	ldrh	r3, [r7, #26]
 800eecc:	2b01      	cmp	r3, #1
 800eece:	d16a      	bne.n	800efa6 <HAL_SPI_TransmitReceive+0x1e0>
 800eed0:	68fb      	ldr	r3, [r7, #12]
 800eed2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eed4:	881a      	ldrh	r2, [r3, #0]
 800eed6:	68fb      	ldr	r3, [r7, #12]
 800eed8:	681b      	ldr	r3, [r3, #0]
 800eeda:	60da      	str	r2, [r3, #12]
 800eedc:	68fb      	ldr	r3, [r7, #12]
 800eede:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eee0:	1c9a      	adds	r2, r3, #2
 800eee2:	68fb      	ldr	r3, [r7, #12]
 800eee4:	631a      	str	r2, [r3, #48]	; 0x30
 800eee6:	68fb      	ldr	r3, [r7, #12]
 800eee8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800eeea:	b29b      	uxth	r3, r3
 800eeec:	3b01      	subs	r3, #1
 800eeee:	b29a      	uxth	r2, r3
 800eef0:	68fb      	ldr	r3, [r7, #12]
 800eef2:	86da      	strh	r2, [r3, #54]	; 0x36
 800eef4:	e057      	b.n	800efa6 <HAL_SPI_TransmitReceive+0x1e0>
 800eef6:	68fb      	ldr	r3, [r7, #12]
 800eef8:	681b      	ldr	r3, [r3, #0]
 800eefa:	689b      	ldr	r3, [r3, #8]
 800eefc:	f003 0302 	and.w	r3, r3, #2
 800ef00:	2b02      	cmp	r3, #2
 800ef02:	d11b      	bne.n	800ef3c <HAL_SPI_TransmitReceive+0x176>
 800ef04:	68fb      	ldr	r3, [r7, #12]
 800ef06:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800ef08:	b29b      	uxth	r3, r3
 800ef0a:	2b00      	cmp	r3, #0
 800ef0c:	d016      	beq.n	800ef3c <HAL_SPI_TransmitReceive+0x176>
 800ef0e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ef10:	2b01      	cmp	r3, #1
 800ef12:	d113      	bne.n	800ef3c <HAL_SPI_TransmitReceive+0x176>
 800ef14:	68fb      	ldr	r3, [r7, #12]
 800ef16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ef18:	881a      	ldrh	r2, [r3, #0]
 800ef1a:	68fb      	ldr	r3, [r7, #12]
 800ef1c:	681b      	ldr	r3, [r3, #0]
 800ef1e:	60da      	str	r2, [r3, #12]
 800ef20:	68fb      	ldr	r3, [r7, #12]
 800ef22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ef24:	1c9a      	adds	r2, r3, #2
 800ef26:	68fb      	ldr	r3, [r7, #12]
 800ef28:	631a      	str	r2, [r3, #48]	; 0x30
 800ef2a:	68fb      	ldr	r3, [r7, #12]
 800ef2c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800ef2e:	b29b      	uxth	r3, r3
 800ef30:	3b01      	subs	r3, #1
 800ef32:	b29a      	uxth	r2, r3
 800ef34:	68fb      	ldr	r3, [r7, #12]
 800ef36:	86da      	strh	r2, [r3, #54]	; 0x36
 800ef38:	2300      	movs	r3, #0
 800ef3a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ef3c:	68fb      	ldr	r3, [r7, #12]
 800ef3e:	681b      	ldr	r3, [r3, #0]
 800ef40:	689b      	ldr	r3, [r3, #8]
 800ef42:	f003 0301 	and.w	r3, r3, #1
 800ef46:	2b01      	cmp	r3, #1
 800ef48:	d119      	bne.n	800ef7e <HAL_SPI_TransmitReceive+0x1b8>
 800ef4a:	68fb      	ldr	r3, [r7, #12]
 800ef4c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800ef4e:	b29b      	uxth	r3, r3
 800ef50:	2b00      	cmp	r3, #0
 800ef52:	d014      	beq.n	800ef7e <HAL_SPI_TransmitReceive+0x1b8>
 800ef54:	68fb      	ldr	r3, [r7, #12]
 800ef56:	681b      	ldr	r3, [r3, #0]
 800ef58:	68da      	ldr	r2, [r3, #12]
 800ef5a:	68fb      	ldr	r3, [r7, #12]
 800ef5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ef5e:	b292      	uxth	r2, r2
 800ef60:	801a      	strh	r2, [r3, #0]
 800ef62:	68fb      	ldr	r3, [r7, #12]
 800ef64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ef66:	1c9a      	adds	r2, r3, #2
 800ef68:	68fb      	ldr	r3, [r7, #12]
 800ef6a:	639a      	str	r2, [r3, #56]	; 0x38
 800ef6c:	68fb      	ldr	r3, [r7, #12]
 800ef6e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800ef70:	b29b      	uxth	r3, r3
 800ef72:	3b01      	subs	r3, #1
 800ef74:	b29a      	uxth	r2, r3
 800ef76:	68fb      	ldr	r3, [r7, #12]
 800ef78:	87da      	strh	r2, [r3, #62]	; 0x3e
 800ef7a:	2301      	movs	r3, #1
 800ef7c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ef7e:	f7fd fed9 	bl	800cd34 <HAL_GetTick>
 800ef82:	4602      	mov	r2, r0
 800ef84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef86:	1ad3      	subs	r3, r2, r3
 800ef88:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800ef8a:	429a      	cmp	r2, r3
 800ef8c:	d80b      	bhi.n	800efa6 <HAL_SPI_TransmitReceive+0x1e0>
 800ef8e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ef90:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ef94:	d007      	beq.n	800efa6 <HAL_SPI_TransmitReceive+0x1e0>
 800ef96:	2303      	movs	r3, #3
 800ef98:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800ef9c:	68fb      	ldr	r3, [r7, #12]
 800ef9e:	2201      	movs	r2, #1
 800efa0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800efa4:	e0b5      	b.n	800f112 <HAL_SPI_TransmitReceive+0x34c>
 800efa6:	68fb      	ldr	r3, [r7, #12]
 800efa8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800efaa:	b29b      	uxth	r3, r3
 800efac:	2b00      	cmp	r3, #0
 800efae:	d1a2      	bne.n	800eef6 <HAL_SPI_TransmitReceive+0x130>
 800efb0:	68fb      	ldr	r3, [r7, #12]
 800efb2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800efb4:	b29b      	uxth	r3, r3
 800efb6:	2b00      	cmp	r3, #0
 800efb8:	d19d      	bne.n	800eef6 <HAL_SPI_TransmitReceive+0x130>
 800efba:	e080      	b.n	800f0be <HAL_SPI_TransmitReceive+0x2f8>
 800efbc:	68fb      	ldr	r3, [r7, #12]
 800efbe:	685b      	ldr	r3, [r3, #4]
 800efc0:	2b00      	cmp	r3, #0
 800efc2:	d002      	beq.n	800efca <HAL_SPI_TransmitReceive+0x204>
 800efc4:	8b7b      	ldrh	r3, [r7, #26]
 800efc6:	2b01      	cmp	r3, #1
 800efc8:	d16f      	bne.n	800f0aa <HAL_SPI_TransmitReceive+0x2e4>
 800efca:	68fb      	ldr	r3, [r7, #12]
 800efcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800efce:	68fb      	ldr	r3, [r7, #12]
 800efd0:	681b      	ldr	r3, [r3, #0]
 800efd2:	330c      	adds	r3, #12
 800efd4:	7812      	ldrb	r2, [r2, #0]
 800efd6:	701a      	strb	r2, [r3, #0]
 800efd8:	68fb      	ldr	r3, [r7, #12]
 800efda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800efdc:	1c5a      	adds	r2, r3, #1
 800efde:	68fb      	ldr	r3, [r7, #12]
 800efe0:	631a      	str	r2, [r3, #48]	; 0x30
 800efe2:	68fb      	ldr	r3, [r7, #12]
 800efe4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800efe6:	b29b      	uxth	r3, r3
 800efe8:	3b01      	subs	r3, #1
 800efea:	b29a      	uxth	r2, r3
 800efec:	68fb      	ldr	r3, [r7, #12]
 800efee:	86da      	strh	r2, [r3, #54]	; 0x36
 800eff0:	e05b      	b.n	800f0aa <HAL_SPI_TransmitReceive+0x2e4>
 800eff2:	68fb      	ldr	r3, [r7, #12]
 800eff4:	681b      	ldr	r3, [r3, #0]
 800eff6:	689b      	ldr	r3, [r3, #8]
 800eff8:	f003 0302 	and.w	r3, r3, #2
 800effc:	2b02      	cmp	r3, #2
 800effe:	d11c      	bne.n	800f03a <HAL_SPI_TransmitReceive+0x274>
 800f000:	68fb      	ldr	r3, [r7, #12]
 800f002:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800f004:	b29b      	uxth	r3, r3
 800f006:	2b00      	cmp	r3, #0
 800f008:	d017      	beq.n	800f03a <HAL_SPI_TransmitReceive+0x274>
 800f00a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f00c:	2b01      	cmp	r3, #1
 800f00e:	d114      	bne.n	800f03a <HAL_SPI_TransmitReceive+0x274>
 800f010:	68fb      	ldr	r3, [r7, #12]
 800f012:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f014:	68fb      	ldr	r3, [r7, #12]
 800f016:	681b      	ldr	r3, [r3, #0]
 800f018:	330c      	adds	r3, #12
 800f01a:	7812      	ldrb	r2, [r2, #0]
 800f01c:	701a      	strb	r2, [r3, #0]
 800f01e:	68fb      	ldr	r3, [r7, #12]
 800f020:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f022:	1c5a      	adds	r2, r3, #1
 800f024:	68fb      	ldr	r3, [r7, #12]
 800f026:	631a      	str	r2, [r3, #48]	; 0x30
 800f028:	68fb      	ldr	r3, [r7, #12]
 800f02a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800f02c:	b29b      	uxth	r3, r3
 800f02e:	3b01      	subs	r3, #1
 800f030:	b29a      	uxth	r2, r3
 800f032:	68fb      	ldr	r3, [r7, #12]
 800f034:	86da      	strh	r2, [r3, #54]	; 0x36
 800f036:	2300      	movs	r3, #0
 800f038:	62fb      	str	r3, [r7, #44]	; 0x2c
 800f03a:	68fb      	ldr	r3, [r7, #12]
 800f03c:	681b      	ldr	r3, [r3, #0]
 800f03e:	689b      	ldr	r3, [r3, #8]
 800f040:	f003 0301 	and.w	r3, r3, #1
 800f044:	2b01      	cmp	r3, #1
 800f046:	d119      	bne.n	800f07c <HAL_SPI_TransmitReceive+0x2b6>
 800f048:	68fb      	ldr	r3, [r7, #12]
 800f04a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800f04c:	b29b      	uxth	r3, r3
 800f04e:	2b00      	cmp	r3, #0
 800f050:	d014      	beq.n	800f07c <HAL_SPI_TransmitReceive+0x2b6>
 800f052:	68fb      	ldr	r3, [r7, #12]
 800f054:	681b      	ldr	r3, [r3, #0]
 800f056:	68da      	ldr	r2, [r3, #12]
 800f058:	68fb      	ldr	r3, [r7, #12]
 800f05a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f05c:	b2d2      	uxtb	r2, r2
 800f05e:	701a      	strb	r2, [r3, #0]
 800f060:	68fb      	ldr	r3, [r7, #12]
 800f062:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f064:	1c5a      	adds	r2, r3, #1
 800f066:	68fb      	ldr	r3, [r7, #12]
 800f068:	639a      	str	r2, [r3, #56]	; 0x38
 800f06a:	68fb      	ldr	r3, [r7, #12]
 800f06c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800f06e:	b29b      	uxth	r3, r3
 800f070:	3b01      	subs	r3, #1
 800f072:	b29a      	uxth	r2, r3
 800f074:	68fb      	ldr	r3, [r7, #12]
 800f076:	87da      	strh	r2, [r3, #62]	; 0x3e
 800f078:	2301      	movs	r3, #1
 800f07a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800f07c:	f7fd fe5a 	bl	800cd34 <HAL_GetTick>
 800f080:	4602      	mov	r2, r0
 800f082:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f084:	1ad3      	subs	r3, r2, r3
 800f086:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800f088:	429a      	cmp	r2, r3
 800f08a:	d803      	bhi.n	800f094 <HAL_SPI_TransmitReceive+0x2ce>
 800f08c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800f08e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800f092:	d102      	bne.n	800f09a <HAL_SPI_TransmitReceive+0x2d4>
 800f094:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800f096:	2b00      	cmp	r3, #0
 800f098:	d107      	bne.n	800f0aa <HAL_SPI_TransmitReceive+0x2e4>
 800f09a:	2303      	movs	r3, #3
 800f09c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800f0a0:	68fb      	ldr	r3, [r7, #12]
 800f0a2:	2201      	movs	r2, #1
 800f0a4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800f0a8:	e033      	b.n	800f112 <HAL_SPI_TransmitReceive+0x34c>
 800f0aa:	68fb      	ldr	r3, [r7, #12]
 800f0ac:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800f0ae:	b29b      	uxth	r3, r3
 800f0b0:	2b00      	cmp	r3, #0
 800f0b2:	d19e      	bne.n	800eff2 <HAL_SPI_TransmitReceive+0x22c>
 800f0b4:	68fb      	ldr	r3, [r7, #12]
 800f0b6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800f0b8:	b29b      	uxth	r3, r3
 800f0ba:	2b00      	cmp	r3, #0
 800f0bc:	d199      	bne.n	800eff2 <HAL_SPI_TransmitReceive+0x22c>
 800f0be:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800f0c0:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800f0c2:	68f8      	ldr	r0, [r7, #12]
 800f0c4:	f000 f91e 	bl	800f304 <SPI_EndRxTxTransaction>
 800f0c8:	4603      	mov	r3, r0
 800f0ca:	2b00      	cmp	r3, #0
 800f0cc:	d006      	beq.n	800f0dc <HAL_SPI_TransmitReceive+0x316>
 800f0ce:	2301      	movs	r3, #1
 800f0d0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800f0d4:	68fb      	ldr	r3, [r7, #12]
 800f0d6:	2220      	movs	r2, #32
 800f0d8:	655a      	str	r2, [r3, #84]	; 0x54
 800f0da:	e01a      	b.n	800f112 <HAL_SPI_TransmitReceive+0x34c>
 800f0dc:	68fb      	ldr	r3, [r7, #12]
 800f0de:	689b      	ldr	r3, [r3, #8]
 800f0e0:	2b00      	cmp	r3, #0
 800f0e2:	d10a      	bne.n	800f0fa <HAL_SPI_TransmitReceive+0x334>
 800f0e4:	2300      	movs	r3, #0
 800f0e6:	617b      	str	r3, [r7, #20]
 800f0e8:	68fb      	ldr	r3, [r7, #12]
 800f0ea:	681b      	ldr	r3, [r3, #0]
 800f0ec:	68db      	ldr	r3, [r3, #12]
 800f0ee:	617b      	str	r3, [r7, #20]
 800f0f0:	68fb      	ldr	r3, [r7, #12]
 800f0f2:	681b      	ldr	r3, [r3, #0]
 800f0f4:	689b      	ldr	r3, [r3, #8]
 800f0f6:	617b      	str	r3, [r7, #20]
 800f0f8:	697b      	ldr	r3, [r7, #20]
 800f0fa:	68fb      	ldr	r3, [r7, #12]
 800f0fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f0fe:	2b00      	cmp	r3, #0
 800f100:	d003      	beq.n	800f10a <HAL_SPI_TransmitReceive+0x344>
 800f102:	2301      	movs	r3, #1
 800f104:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800f108:	e003      	b.n	800f112 <HAL_SPI_TransmitReceive+0x34c>
 800f10a:	68fb      	ldr	r3, [r7, #12]
 800f10c:	2201      	movs	r2, #1
 800f10e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800f112:	68fb      	ldr	r3, [r7, #12]
 800f114:	2200      	movs	r2, #0
 800f116:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800f11a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800f11e:	4618      	mov	r0, r3
 800f120:	3730      	adds	r7, #48	; 0x30
 800f122:	46bd      	mov	sp, r7
 800f124:	bd80      	pop	{r7, pc}
	...

0800f128 <SPI_WaitFlagStateUntilTimeout>:
 800f128:	b580      	push	{r7, lr}
 800f12a:	b088      	sub	sp, #32
 800f12c:	af00      	add	r7, sp, #0
 800f12e:	60f8      	str	r0, [r7, #12]
 800f130:	60b9      	str	r1, [r7, #8]
 800f132:	603b      	str	r3, [r7, #0]
 800f134:	4613      	mov	r3, r2
 800f136:	71fb      	strb	r3, [r7, #7]
 800f138:	f7fd fdfc 	bl	800cd34 <HAL_GetTick>
 800f13c:	4602      	mov	r2, r0
 800f13e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800f140:	1a9b      	subs	r3, r3, r2
 800f142:	683a      	ldr	r2, [r7, #0]
 800f144:	4413      	add	r3, r2
 800f146:	61fb      	str	r3, [r7, #28]
 800f148:	f7fd fdf4 	bl	800cd34 <HAL_GetTick>
 800f14c:	61b8      	str	r0, [r7, #24]
 800f14e:	4b39      	ldr	r3, [pc, #228]	; (800f234 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800f150:	681b      	ldr	r3, [r3, #0]
 800f152:	015b      	lsls	r3, r3, #5
 800f154:	0d1b      	lsrs	r3, r3, #20
 800f156:	69fa      	ldr	r2, [r7, #28]
 800f158:	fb02 f303 	mul.w	r3, r2, r3
 800f15c:	617b      	str	r3, [r7, #20]
 800f15e:	e054      	b.n	800f20a <SPI_WaitFlagStateUntilTimeout+0xe2>
 800f160:	683b      	ldr	r3, [r7, #0]
 800f162:	f1b3 3fff 	cmp.w	r3, #4294967295
 800f166:	d050      	beq.n	800f20a <SPI_WaitFlagStateUntilTimeout+0xe2>
 800f168:	f7fd fde4 	bl	800cd34 <HAL_GetTick>
 800f16c:	4602      	mov	r2, r0
 800f16e:	69bb      	ldr	r3, [r7, #24]
 800f170:	1ad3      	subs	r3, r2, r3
 800f172:	69fa      	ldr	r2, [r7, #28]
 800f174:	429a      	cmp	r2, r3
 800f176:	d902      	bls.n	800f17e <SPI_WaitFlagStateUntilTimeout+0x56>
 800f178:	69fb      	ldr	r3, [r7, #28]
 800f17a:	2b00      	cmp	r3, #0
 800f17c:	d13d      	bne.n	800f1fa <SPI_WaitFlagStateUntilTimeout+0xd2>
 800f17e:	68fb      	ldr	r3, [r7, #12]
 800f180:	681b      	ldr	r3, [r3, #0]
 800f182:	685a      	ldr	r2, [r3, #4]
 800f184:	68fb      	ldr	r3, [r7, #12]
 800f186:	681b      	ldr	r3, [r3, #0]
 800f188:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800f18c:	605a      	str	r2, [r3, #4]
 800f18e:	68fb      	ldr	r3, [r7, #12]
 800f190:	685b      	ldr	r3, [r3, #4]
 800f192:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800f196:	d111      	bne.n	800f1bc <SPI_WaitFlagStateUntilTimeout+0x94>
 800f198:	68fb      	ldr	r3, [r7, #12]
 800f19a:	689b      	ldr	r3, [r3, #8]
 800f19c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800f1a0:	d004      	beq.n	800f1ac <SPI_WaitFlagStateUntilTimeout+0x84>
 800f1a2:	68fb      	ldr	r3, [r7, #12]
 800f1a4:	689b      	ldr	r3, [r3, #8]
 800f1a6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800f1aa:	d107      	bne.n	800f1bc <SPI_WaitFlagStateUntilTimeout+0x94>
 800f1ac:	68fb      	ldr	r3, [r7, #12]
 800f1ae:	681b      	ldr	r3, [r3, #0]
 800f1b0:	681a      	ldr	r2, [r3, #0]
 800f1b2:	68fb      	ldr	r3, [r7, #12]
 800f1b4:	681b      	ldr	r3, [r3, #0]
 800f1b6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f1ba:	601a      	str	r2, [r3, #0]
 800f1bc:	68fb      	ldr	r3, [r7, #12]
 800f1be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f1c0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f1c4:	d10f      	bne.n	800f1e6 <SPI_WaitFlagStateUntilTimeout+0xbe>
 800f1c6:	68fb      	ldr	r3, [r7, #12]
 800f1c8:	681b      	ldr	r3, [r3, #0]
 800f1ca:	681a      	ldr	r2, [r3, #0]
 800f1cc:	68fb      	ldr	r3, [r7, #12]
 800f1ce:	681b      	ldr	r3, [r3, #0]
 800f1d0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800f1d4:	601a      	str	r2, [r3, #0]
 800f1d6:	68fb      	ldr	r3, [r7, #12]
 800f1d8:	681b      	ldr	r3, [r3, #0]
 800f1da:	681a      	ldr	r2, [r3, #0]
 800f1dc:	68fb      	ldr	r3, [r7, #12]
 800f1de:	681b      	ldr	r3, [r3, #0]
 800f1e0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800f1e4:	601a      	str	r2, [r3, #0]
 800f1e6:	68fb      	ldr	r3, [r7, #12]
 800f1e8:	2201      	movs	r2, #1
 800f1ea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800f1ee:	68fb      	ldr	r3, [r7, #12]
 800f1f0:	2200      	movs	r2, #0
 800f1f2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800f1f6:	2303      	movs	r3, #3
 800f1f8:	e017      	b.n	800f22a <SPI_WaitFlagStateUntilTimeout+0x102>
 800f1fa:	697b      	ldr	r3, [r7, #20]
 800f1fc:	2b00      	cmp	r3, #0
 800f1fe:	d101      	bne.n	800f204 <SPI_WaitFlagStateUntilTimeout+0xdc>
 800f200:	2300      	movs	r3, #0
 800f202:	61fb      	str	r3, [r7, #28]
 800f204:	697b      	ldr	r3, [r7, #20]
 800f206:	3b01      	subs	r3, #1
 800f208:	617b      	str	r3, [r7, #20]
 800f20a:	68fb      	ldr	r3, [r7, #12]
 800f20c:	681b      	ldr	r3, [r3, #0]
 800f20e:	689a      	ldr	r2, [r3, #8]
 800f210:	68bb      	ldr	r3, [r7, #8]
 800f212:	4013      	ands	r3, r2
 800f214:	68ba      	ldr	r2, [r7, #8]
 800f216:	429a      	cmp	r2, r3
 800f218:	bf0c      	ite	eq
 800f21a:	2301      	moveq	r3, #1
 800f21c:	2300      	movne	r3, #0
 800f21e:	b2db      	uxtb	r3, r3
 800f220:	461a      	mov	r2, r3
 800f222:	79fb      	ldrb	r3, [r7, #7]
 800f224:	429a      	cmp	r2, r3
 800f226:	d19b      	bne.n	800f160 <SPI_WaitFlagStateUntilTimeout+0x38>
 800f228:	2300      	movs	r3, #0
 800f22a:	4618      	mov	r0, r3
 800f22c:	3720      	adds	r7, #32
 800f22e:	46bd      	mov	sp, r7
 800f230:	bd80      	pop	{r7, pc}
 800f232:	bf00      	nop
 800f234:	20000058 	.word	0x20000058

0800f238 <SPI_EndRxTransaction>:
 800f238:	b580      	push	{r7, lr}
 800f23a:	b086      	sub	sp, #24
 800f23c:	af02      	add	r7, sp, #8
 800f23e:	60f8      	str	r0, [r7, #12]
 800f240:	60b9      	str	r1, [r7, #8]
 800f242:	607a      	str	r2, [r7, #4]
 800f244:	68fb      	ldr	r3, [r7, #12]
 800f246:	685b      	ldr	r3, [r3, #4]
 800f248:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800f24c:	d111      	bne.n	800f272 <SPI_EndRxTransaction+0x3a>
 800f24e:	68fb      	ldr	r3, [r7, #12]
 800f250:	689b      	ldr	r3, [r3, #8]
 800f252:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800f256:	d004      	beq.n	800f262 <SPI_EndRxTransaction+0x2a>
 800f258:	68fb      	ldr	r3, [r7, #12]
 800f25a:	689b      	ldr	r3, [r3, #8]
 800f25c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800f260:	d107      	bne.n	800f272 <SPI_EndRxTransaction+0x3a>
 800f262:	68fb      	ldr	r3, [r7, #12]
 800f264:	681b      	ldr	r3, [r3, #0]
 800f266:	681a      	ldr	r2, [r3, #0]
 800f268:	68fb      	ldr	r3, [r7, #12]
 800f26a:	681b      	ldr	r3, [r3, #0]
 800f26c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f270:	601a      	str	r2, [r3, #0]
 800f272:	68fb      	ldr	r3, [r7, #12]
 800f274:	685b      	ldr	r3, [r3, #4]
 800f276:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800f27a:	d12a      	bne.n	800f2d2 <SPI_EndRxTransaction+0x9a>
 800f27c:	68fb      	ldr	r3, [r7, #12]
 800f27e:	689b      	ldr	r3, [r3, #8]
 800f280:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800f284:	d012      	beq.n	800f2ac <SPI_EndRxTransaction+0x74>
 800f286:	687b      	ldr	r3, [r7, #4]
 800f288:	9300      	str	r3, [sp, #0]
 800f28a:	68bb      	ldr	r3, [r7, #8]
 800f28c:	2200      	movs	r2, #0
 800f28e:	2180      	movs	r1, #128	; 0x80
 800f290:	68f8      	ldr	r0, [r7, #12]
 800f292:	f7ff ff49 	bl	800f128 <SPI_WaitFlagStateUntilTimeout>
 800f296:	4603      	mov	r3, r0
 800f298:	2b00      	cmp	r3, #0
 800f29a:	d02d      	beq.n	800f2f8 <SPI_EndRxTransaction+0xc0>
 800f29c:	68fb      	ldr	r3, [r7, #12]
 800f29e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f2a0:	f043 0220 	orr.w	r2, r3, #32
 800f2a4:	68fb      	ldr	r3, [r7, #12]
 800f2a6:	655a      	str	r2, [r3, #84]	; 0x54
 800f2a8:	2303      	movs	r3, #3
 800f2aa:	e026      	b.n	800f2fa <SPI_EndRxTransaction+0xc2>
 800f2ac:	687b      	ldr	r3, [r7, #4]
 800f2ae:	9300      	str	r3, [sp, #0]
 800f2b0:	68bb      	ldr	r3, [r7, #8]
 800f2b2:	2200      	movs	r2, #0
 800f2b4:	2101      	movs	r1, #1
 800f2b6:	68f8      	ldr	r0, [r7, #12]
 800f2b8:	f7ff ff36 	bl	800f128 <SPI_WaitFlagStateUntilTimeout>
 800f2bc:	4603      	mov	r3, r0
 800f2be:	2b00      	cmp	r3, #0
 800f2c0:	d01a      	beq.n	800f2f8 <SPI_EndRxTransaction+0xc0>
 800f2c2:	68fb      	ldr	r3, [r7, #12]
 800f2c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f2c6:	f043 0220 	orr.w	r2, r3, #32
 800f2ca:	68fb      	ldr	r3, [r7, #12]
 800f2cc:	655a      	str	r2, [r3, #84]	; 0x54
 800f2ce:	2303      	movs	r3, #3
 800f2d0:	e013      	b.n	800f2fa <SPI_EndRxTransaction+0xc2>
 800f2d2:	687b      	ldr	r3, [r7, #4]
 800f2d4:	9300      	str	r3, [sp, #0]
 800f2d6:	68bb      	ldr	r3, [r7, #8]
 800f2d8:	2200      	movs	r2, #0
 800f2da:	2101      	movs	r1, #1
 800f2dc:	68f8      	ldr	r0, [r7, #12]
 800f2de:	f7ff ff23 	bl	800f128 <SPI_WaitFlagStateUntilTimeout>
 800f2e2:	4603      	mov	r3, r0
 800f2e4:	2b00      	cmp	r3, #0
 800f2e6:	d007      	beq.n	800f2f8 <SPI_EndRxTransaction+0xc0>
 800f2e8:	68fb      	ldr	r3, [r7, #12]
 800f2ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f2ec:	f043 0220 	orr.w	r2, r3, #32
 800f2f0:	68fb      	ldr	r3, [r7, #12]
 800f2f2:	655a      	str	r2, [r3, #84]	; 0x54
 800f2f4:	2303      	movs	r3, #3
 800f2f6:	e000      	b.n	800f2fa <SPI_EndRxTransaction+0xc2>
 800f2f8:	2300      	movs	r3, #0
 800f2fa:	4618      	mov	r0, r3
 800f2fc:	3710      	adds	r7, #16
 800f2fe:	46bd      	mov	sp, r7
 800f300:	bd80      	pop	{r7, pc}
	...

0800f304 <SPI_EndRxTxTransaction>:
 800f304:	b580      	push	{r7, lr}
 800f306:	b088      	sub	sp, #32
 800f308:	af02      	add	r7, sp, #8
 800f30a:	60f8      	str	r0, [r7, #12]
 800f30c:	60b9      	str	r1, [r7, #8]
 800f30e:	607a      	str	r2, [r7, #4]
 800f310:	687b      	ldr	r3, [r7, #4]
 800f312:	9300      	str	r3, [sp, #0]
 800f314:	68bb      	ldr	r3, [r7, #8]
 800f316:	2201      	movs	r2, #1
 800f318:	2102      	movs	r1, #2
 800f31a:	68f8      	ldr	r0, [r7, #12]
 800f31c:	f7ff ff04 	bl	800f128 <SPI_WaitFlagStateUntilTimeout>
 800f320:	4603      	mov	r3, r0
 800f322:	2b00      	cmp	r3, #0
 800f324:	d007      	beq.n	800f336 <SPI_EndRxTxTransaction+0x32>
 800f326:	68fb      	ldr	r3, [r7, #12]
 800f328:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f32a:	f043 0220 	orr.w	r2, r3, #32
 800f32e:	68fb      	ldr	r3, [r7, #12]
 800f330:	655a      	str	r2, [r3, #84]	; 0x54
 800f332:	2303      	movs	r3, #3
 800f334:	e032      	b.n	800f39c <SPI_EndRxTxTransaction+0x98>
 800f336:	4b1b      	ldr	r3, [pc, #108]	; (800f3a4 <SPI_EndRxTxTransaction+0xa0>)
 800f338:	681b      	ldr	r3, [r3, #0]
 800f33a:	4a1b      	ldr	r2, [pc, #108]	; (800f3a8 <SPI_EndRxTxTransaction+0xa4>)
 800f33c:	fba2 2303 	umull	r2, r3, r2, r3
 800f340:	0d5b      	lsrs	r3, r3, #21
 800f342:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f346:	fb02 f303 	mul.w	r3, r2, r3
 800f34a:	617b      	str	r3, [r7, #20]
 800f34c:	68fb      	ldr	r3, [r7, #12]
 800f34e:	685b      	ldr	r3, [r3, #4]
 800f350:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800f354:	d112      	bne.n	800f37c <SPI_EndRxTxTransaction+0x78>
 800f356:	687b      	ldr	r3, [r7, #4]
 800f358:	9300      	str	r3, [sp, #0]
 800f35a:	68bb      	ldr	r3, [r7, #8]
 800f35c:	2200      	movs	r2, #0
 800f35e:	2180      	movs	r1, #128	; 0x80
 800f360:	68f8      	ldr	r0, [r7, #12]
 800f362:	f7ff fee1 	bl	800f128 <SPI_WaitFlagStateUntilTimeout>
 800f366:	4603      	mov	r3, r0
 800f368:	2b00      	cmp	r3, #0
 800f36a:	d016      	beq.n	800f39a <SPI_EndRxTxTransaction+0x96>
 800f36c:	68fb      	ldr	r3, [r7, #12]
 800f36e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f370:	f043 0220 	orr.w	r2, r3, #32
 800f374:	68fb      	ldr	r3, [r7, #12]
 800f376:	655a      	str	r2, [r3, #84]	; 0x54
 800f378:	2303      	movs	r3, #3
 800f37a:	e00f      	b.n	800f39c <SPI_EndRxTxTransaction+0x98>
 800f37c:	697b      	ldr	r3, [r7, #20]
 800f37e:	2b00      	cmp	r3, #0
 800f380:	d00a      	beq.n	800f398 <SPI_EndRxTxTransaction+0x94>
 800f382:	697b      	ldr	r3, [r7, #20]
 800f384:	3b01      	subs	r3, #1
 800f386:	617b      	str	r3, [r7, #20]
 800f388:	68fb      	ldr	r3, [r7, #12]
 800f38a:	681b      	ldr	r3, [r3, #0]
 800f38c:	689b      	ldr	r3, [r3, #8]
 800f38e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800f392:	2b80      	cmp	r3, #128	; 0x80
 800f394:	d0f2      	beq.n	800f37c <SPI_EndRxTxTransaction+0x78>
 800f396:	e000      	b.n	800f39a <SPI_EndRxTxTransaction+0x96>
 800f398:	bf00      	nop
 800f39a:	2300      	movs	r3, #0
 800f39c:	4618      	mov	r0, r3
 800f39e:	3718      	adds	r7, #24
 800f3a0:	46bd      	mov	sp, r7
 800f3a2:	bd80      	pop	{r7, pc}
 800f3a4:	20000058 	.word	0x20000058
 800f3a8:	165e9f81 	.word	0x165e9f81

0800f3ac <HAL_TIM_Base_Init>:
 800f3ac:	b580      	push	{r7, lr}
 800f3ae:	b082      	sub	sp, #8
 800f3b0:	af00      	add	r7, sp, #0
 800f3b2:	6078      	str	r0, [r7, #4]
 800f3b4:	687b      	ldr	r3, [r7, #4]
 800f3b6:	2b00      	cmp	r3, #0
 800f3b8:	d101      	bne.n	800f3be <HAL_TIM_Base_Init+0x12>
 800f3ba:	2301      	movs	r3, #1
 800f3bc:	e041      	b.n	800f442 <HAL_TIM_Base_Init+0x96>
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800f3c4:	b2db      	uxtb	r3, r3
 800f3c6:	2b00      	cmp	r3, #0
 800f3c8:	d106      	bne.n	800f3d8 <HAL_TIM_Base_Init+0x2c>
 800f3ca:	687b      	ldr	r3, [r7, #4]
 800f3cc:	2200      	movs	r2, #0
 800f3ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f3d2:	6878      	ldr	r0, [r7, #4]
 800f3d4:	f7fc fd52 	bl	800be7c <HAL_TIM_Base_MspInit>
 800f3d8:	687b      	ldr	r3, [r7, #4]
 800f3da:	2202      	movs	r2, #2
 800f3dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800f3e0:	687b      	ldr	r3, [r7, #4]
 800f3e2:	681a      	ldr	r2, [r3, #0]
 800f3e4:	687b      	ldr	r3, [r7, #4]
 800f3e6:	3304      	adds	r3, #4
 800f3e8:	4619      	mov	r1, r3
 800f3ea:	4610      	mov	r0, r2
 800f3ec:	f000 fa7e 	bl	800f8ec <TIM_Base_SetConfig>
 800f3f0:	687b      	ldr	r3, [r7, #4]
 800f3f2:	2201      	movs	r2, #1
 800f3f4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800f3f8:	687b      	ldr	r3, [r7, #4]
 800f3fa:	2201      	movs	r2, #1
 800f3fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800f400:	687b      	ldr	r3, [r7, #4]
 800f402:	2201      	movs	r2, #1
 800f404:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800f408:	687b      	ldr	r3, [r7, #4]
 800f40a:	2201      	movs	r2, #1
 800f40c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800f410:	687b      	ldr	r3, [r7, #4]
 800f412:	2201      	movs	r2, #1
 800f414:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800f418:	687b      	ldr	r3, [r7, #4]
 800f41a:	2201      	movs	r2, #1
 800f41c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800f420:	687b      	ldr	r3, [r7, #4]
 800f422:	2201      	movs	r2, #1
 800f424:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800f428:	687b      	ldr	r3, [r7, #4]
 800f42a:	2201      	movs	r2, #1
 800f42c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800f430:	687b      	ldr	r3, [r7, #4]
 800f432:	2201      	movs	r2, #1
 800f434:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800f438:	687b      	ldr	r3, [r7, #4]
 800f43a:	2201      	movs	r2, #1
 800f43c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800f440:	2300      	movs	r3, #0
 800f442:	4618      	mov	r0, r3
 800f444:	3708      	adds	r7, #8
 800f446:	46bd      	mov	sp, r7
 800f448:	bd80      	pop	{r7, pc}
	...

0800f44c <HAL_TIM_Base_Start_IT>:
 800f44c:	b480      	push	{r7}
 800f44e:	b085      	sub	sp, #20
 800f450:	af00      	add	r7, sp, #0
 800f452:	6078      	str	r0, [r7, #4]
 800f454:	687b      	ldr	r3, [r7, #4]
 800f456:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800f45a:	b2db      	uxtb	r3, r3
 800f45c:	2b01      	cmp	r3, #1
 800f45e:	d001      	beq.n	800f464 <HAL_TIM_Base_Start_IT+0x18>
 800f460:	2301      	movs	r3, #1
 800f462:	e04e      	b.n	800f502 <HAL_TIM_Base_Start_IT+0xb6>
 800f464:	687b      	ldr	r3, [r7, #4]
 800f466:	2202      	movs	r2, #2
 800f468:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800f46c:	687b      	ldr	r3, [r7, #4]
 800f46e:	681b      	ldr	r3, [r3, #0]
 800f470:	68da      	ldr	r2, [r3, #12]
 800f472:	687b      	ldr	r3, [r7, #4]
 800f474:	681b      	ldr	r3, [r3, #0]
 800f476:	f042 0201 	orr.w	r2, r2, #1
 800f47a:	60da      	str	r2, [r3, #12]
 800f47c:	687b      	ldr	r3, [r7, #4]
 800f47e:	681b      	ldr	r3, [r3, #0]
 800f480:	4a23      	ldr	r2, [pc, #140]	; (800f510 <HAL_TIM_Base_Start_IT+0xc4>)
 800f482:	4293      	cmp	r3, r2
 800f484:	d022      	beq.n	800f4cc <HAL_TIM_Base_Start_IT+0x80>
 800f486:	687b      	ldr	r3, [r7, #4]
 800f488:	681b      	ldr	r3, [r3, #0]
 800f48a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f48e:	d01d      	beq.n	800f4cc <HAL_TIM_Base_Start_IT+0x80>
 800f490:	687b      	ldr	r3, [r7, #4]
 800f492:	681b      	ldr	r3, [r3, #0]
 800f494:	4a1f      	ldr	r2, [pc, #124]	; (800f514 <HAL_TIM_Base_Start_IT+0xc8>)
 800f496:	4293      	cmp	r3, r2
 800f498:	d018      	beq.n	800f4cc <HAL_TIM_Base_Start_IT+0x80>
 800f49a:	687b      	ldr	r3, [r7, #4]
 800f49c:	681b      	ldr	r3, [r3, #0]
 800f49e:	4a1e      	ldr	r2, [pc, #120]	; (800f518 <HAL_TIM_Base_Start_IT+0xcc>)
 800f4a0:	4293      	cmp	r3, r2
 800f4a2:	d013      	beq.n	800f4cc <HAL_TIM_Base_Start_IT+0x80>
 800f4a4:	687b      	ldr	r3, [r7, #4]
 800f4a6:	681b      	ldr	r3, [r3, #0]
 800f4a8:	4a1c      	ldr	r2, [pc, #112]	; (800f51c <HAL_TIM_Base_Start_IT+0xd0>)
 800f4aa:	4293      	cmp	r3, r2
 800f4ac:	d00e      	beq.n	800f4cc <HAL_TIM_Base_Start_IT+0x80>
 800f4ae:	687b      	ldr	r3, [r7, #4]
 800f4b0:	681b      	ldr	r3, [r3, #0]
 800f4b2:	4a1b      	ldr	r2, [pc, #108]	; (800f520 <HAL_TIM_Base_Start_IT+0xd4>)
 800f4b4:	4293      	cmp	r3, r2
 800f4b6:	d009      	beq.n	800f4cc <HAL_TIM_Base_Start_IT+0x80>
 800f4b8:	687b      	ldr	r3, [r7, #4]
 800f4ba:	681b      	ldr	r3, [r3, #0]
 800f4bc:	4a19      	ldr	r2, [pc, #100]	; (800f524 <HAL_TIM_Base_Start_IT+0xd8>)
 800f4be:	4293      	cmp	r3, r2
 800f4c0:	d004      	beq.n	800f4cc <HAL_TIM_Base_Start_IT+0x80>
 800f4c2:	687b      	ldr	r3, [r7, #4]
 800f4c4:	681b      	ldr	r3, [r3, #0]
 800f4c6:	4a18      	ldr	r2, [pc, #96]	; (800f528 <HAL_TIM_Base_Start_IT+0xdc>)
 800f4c8:	4293      	cmp	r3, r2
 800f4ca:	d111      	bne.n	800f4f0 <HAL_TIM_Base_Start_IT+0xa4>
 800f4cc:	687b      	ldr	r3, [r7, #4]
 800f4ce:	681b      	ldr	r3, [r3, #0]
 800f4d0:	689b      	ldr	r3, [r3, #8]
 800f4d2:	f003 0307 	and.w	r3, r3, #7
 800f4d6:	60fb      	str	r3, [r7, #12]
 800f4d8:	68fb      	ldr	r3, [r7, #12]
 800f4da:	2b06      	cmp	r3, #6
 800f4dc:	d010      	beq.n	800f500 <HAL_TIM_Base_Start_IT+0xb4>
 800f4de:	687b      	ldr	r3, [r7, #4]
 800f4e0:	681b      	ldr	r3, [r3, #0]
 800f4e2:	681a      	ldr	r2, [r3, #0]
 800f4e4:	687b      	ldr	r3, [r7, #4]
 800f4e6:	681b      	ldr	r3, [r3, #0]
 800f4e8:	f042 0201 	orr.w	r2, r2, #1
 800f4ec:	601a      	str	r2, [r3, #0]
 800f4ee:	e007      	b.n	800f500 <HAL_TIM_Base_Start_IT+0xb4>
 800f4f0:	687b      	ldr	r3, [r7, #4]
 800f4f2:	681b      	ldr	r3, [r3, #0]
 800f4f4:	681a      	ldr	r2, [r3, #0]
 800f4f6:	687b      	ldr	r3, [r7, #4]
 800f4f8:	681b      	ldr	r3, [r3, #0]
 800f4fa:	f042 0201 	orr.w	r2, r2, #1
 800f4fe:	601a      	str	r2, [r3, #0]
 800f500:	2300      	movs	r3, #0
 800f502:	4618      	mov	r0, r3
 800f504:	3714      	adds	r7, #20
 800f506:	46bd      	mov	sp, r7
 800f508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f50c:	4770      	bx	lr
 800f50e:	bf00      	nop
 800f510:	40010000 	.word	0x40010000
 800f514:	40000400 	.word	0x40000400
 800f518:	40000800 	.word	0x40000800
 800f51c:	40000c00 	.word	0x40000c00
 800f520:	40010400 	.word	0x40010400
 800f524:	40014000 	.word	0x40014000
 800f528:	40001800 	.word	0x40001800

0800f52c <HAL_TIM_IRQHandler>:
 800f52c:	b580      	push	{r7, lr}
 800f52e:	b084      	sub	sp, #16
 800f530:	af00      	add	r7, sp, #0
 800f532:	6078      	str	r0, [r7, #4]
 800f534:	687b      	ldr	r3, [r7, #4]
 800f536:	681b      	ldr	r3, [r3, #0]
 800f538:	68db      	ldr	r3, [r3, #12]
 800f53a:	60fb      	str	r3, [r7, #12]
 800f53c:	687b      	ldr	r3, [r7, #4]
 800f53e:	681b      	ldr	r3, [r3, #0]
 800f540:	691b      	ldr	r3, [r3, #16]
 800f542:	60bb      	str	r3, [r7, #8]
 800f544:	68bb      	ldr	r3, [r7, #8]
 800f546:	f003 0302 	and.w	r3, r3, #2
 800f54a:	2b00      	cmp	r3, #0
 800f54c:	d020      	beq.n	800f590 <HAL_TIM_IRQHandler+0x64>
 800f54e:	68fb      	ldr	r3, [r7, #12]
 800f550:	f003 0302 	and.w	r3, r3, #2
 800f554:	2b00      	cmp	r3, #0
 800f556:	d01b      	beq.n	800f590 <HAL_TIM_IRQHandler+0x64>
 800f558:	687b      	ldr	r3, [r7, #4]
 800f55a:	681b      	ldr	r3, [r3, #0]
 800f55c:	f06f 0202 	mvn.w	r2, #2
 800f560:	611a      	str	r2, [r3, #16]
 800f562:	687b      	ldr	r3, [r7, #4]
 800f564:	2201      	movs	r2, #1
 800f566:	771a      	strb	r2, [r3, #28]
 800f568:	687b      	ldr	r3, [r7, #4]
 800f56a:	681b      	ldr	r3, [r3, #0]
 800f56c:	699b      	ldr	r3, [r3, #24]
 800f56e:	f003 0303 	and.w	r3, r3, #3
 800f572:	2b00      	cmp	r3, #0
 800f574:	d003      	beq.n	800f57e <HAL_TIM_IRQHandler+0x52>
 800f576:	6878      	ldr	r0, [r7, #4]
 800f578:	f000 f999 	bl	800f8ae <HAL_TIM_IC_CaptureCallback>
 800f57c:	e005      	b.n	800f58a <HAL_TIM_IRQHandler+0x5e>
 800f57e:	6878      	ldr	r0, [r7, #4]
 800f580:	f000 f98b 	bl	800f89a <HAL_TIM_OC_DelayElapsedCallback>
 800f584:	6878      	ldr	r0, [r7, #4]
 800f586:	f000 f99c 	bl	800f8c2 <HAL_TIM_PWM_PulseFinishedCallback>
 800f58a:	687b      	ldr	r3, [r7, #4]
 800f58c:	2200      	movs	r2, #0
 800f58e:	771a      	strb	r2, [r3, #28]
 800f590:	68bb      	ldr	r3, [r7, #8]
 800f592:	f003 0304 	and.w	r3, r3, #4
 800f596:	2b00      	cmp	r3, #0
 800f598:	d020      	beq.n	800f5dc <HAL_TIM_IRQHandler+0xb0>
 800f59a:	68fb      	ldr	r3, [r7, #12]
 800f59c:	f003 0304 	and.w	r3, r3, #4
 800f5a0:	2b00      	cmp	r3, #0
 800f5a2:	d01b      	beq.n	800f5dc <HAL_TIM_IRQHandler+0xb0>
 800f5a4:	687b      	ldr	r3, [r7, #4]
 800f5a6:	681b      	ldr	r3, [r3, #0]
 800f5a8:	f06f 0204 	mvn.w	r2, #4
 800f5ac:	611a      	str	r2, [r3, #16]
 800f5ae:	687b      	ldr	r3, [r7, #4]
 800f5b0:	2202      	movs	r2, #2
 800f5b2:	771a      	strb	r2, [r3, #28]
 800f5b4:	687b      	ldr	r3, [r7, #4]
 800f5b6:	681b      	ldr	r3, [r3, #0]
 800f5b8:	699b      	ldr	r3, [r3, #24]
 800f5ba:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800f5be:	2b00      	cmp	r3, #0
 800f5c0:	d003      	beq.n	800f5ca <HAL_TIM_IRQHandler+0x9e>
 800f5c2:	6878      	ldr	r0, [r7, #4]
 800f5c4:	f000 f973 	bl	800f8ae <HAL_TIM_IC_CaptureCallback>
 800f5c8:	e005      	b.n	800f5d6 <HAL_TIM_IRQHandler+0xaa>
 800f5ca:	6878      	ldr	r0, [r7, #4]
 800f5cc:	f000 f965 	bl	800f89a <HAL_TIM_OC_DelayElapsedCallback>
 800f5d0:	6878      	ldr	r0, [r7, #4]
 800f5d2:	f000 f976 	bl	800f8c2 <HAL_TIM_PWM_PulseFinishedCallback>
 800f5d6:	687b      	ldr	r3, [r7, #4]
 800f5d8:	2200      	movs	r2, #0
 800f5da:	771a      	strb	r2, [r3, #28]
 800f5dc:	68bb      	ldr	r3, [r7, #8]
 800f5de:	f003 0308 	and.w	r3, r3, #8
 800f5e2:	2b00      	cmp	r3, #0
 800f5e4:	d020      	beq.n	800f628 <HAL_TIM_IRQHandler+0xfc>
 800f5e6:	68fb      	ldr	r3, [r7, #12]
 800f5e8:	f003 0308 	and.w	r3, r3, #8
 800f5ec:	2b00      	cmp	r3, #0
 800f5ee:	d01b      	beq.n	800f628 <HAL_TIM_IRQHandler+0xfc>
 800f5f0:	687b      	ldr	r3, [r7, #4]
 800f5f2:	681b      	ldr	r3, [r3, #0]
 800f5f4:	f06f 0208 	mvn.w	r2, #8
 800f5f8:	611a      	str	r2, [r3, #16]
 800f5fa:	687b      	ldr	r3, [r7, #4]
 800f5fc:	2204      	movs	r2, #4
 800f5fe:	771a      	strb	r2, [r3, #28]
 800f600:	687b      	ldr	r3, [r7, #4]
 800f602:	681b      	ldr	r3, [r3, #0]
 800f604:	69db      	ldr	r3, [r3, #28]
 800f606:	f003 0303 	and.w	r3, r3, #3
 800f60a:	2b00      	cmp	r3, #0
 800f60c:	d003      	beq.n	800f616 <HAL_TIM_IRQHandler+0xea>
 800f60e:	6878      	ldr	r0, [r7, #4]
 800f610:	f000 f94d 	bl	800f8ae <HAL_TIM_IC_CaptureCallback>
 800f614:	e005      	b.n	800f622 <HAL_TIM_IRQHandler+0xf6>
 800f616:	6878      	ldr	r0, [r7, #4]
 800f618:	f000 f93f 	bl	800f89a <HAL_TIM_OC_DelayElapsedCallback>
 800f61c:	6878      	ldr	r0, [r7, #4]
 800f61e:	f000 f950 	bl	800f8c2 <HAL_TIM_PWM_PulseFinishedCallback>
 800f622:	687b      	ldr	r3, [r7, #4]
 800f624:	2200      	movs	r2, #0
 800f626:	771a      	strb	r2, [r3, #28]
 800f628:	68bb      	ldr	r3, [r7, #8]
 800f62a:	f003 0310 	and.w	r3, r3, #16
 800f62e:	2b00      	cmp	r3, #0
 800f630:	d020      	beq.n	800f674 <HAL_TIM_IRQHandler+0x148>
 800f632:	68fb      	ldr	r3, [r7, #12]
 800f634:	f003 0310 	and.w	r3, r3, #16
 800f638:	2b00      	cmp	r3, #0
 800f63a:	d01b      	beq.n	800f674 <HAL_TIM_IRQHandler+0x148>
 800f63c:	687b      	ldr	r3, [r7, #4]
 800f63e:	681b      	ldr	r3, [r3, #0]
 800f640:	f06f 0210 	mvn.w	r2, #16
 800f644:	611a      	str	r2, [r3, #16]
 800f646:	687b      	ldr	r3, [r7, #4]
 800f648:	2208      	movs	r2, #8
 800f64a:	771a      	strb	r2, [r3, #28]
 800f64c:	687b      	ldr	r3, [r7, #4]
 800f64e:	681b      	ldr	r3, [r3, #0]
 800f650:	69db      	ldr	r3, [r3, #28]
 800f652:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800f656:	2b00      	cmp	r3, #0
 800f658:	d003      	beq.n	800f662 <HAL_TIM_IRQHandler+0x136>
 800f65a:	6878      	ldr	r0, [r7, #4]
 800f65c:	f000 f927 	bl	800f8ae <HAL_TIM_IC_CaptureCallback>
 800f660:	e005      	b.n	800f66e <HAL_TIM_IRQHandler+0x142>
 800f662:	6878      	ldr	r0, [r7, #4]
 800f664:	f000 f919 	bl	800f89a <HAL_TIM_OC_DelayElapsedCallback>
 800f668:	6878      	ldr	r0, [r7, #4]
 800f66a:	f000 f92a 	bl	800f8c2 <HAL_TIM_PWM_PulseFinishedCallback>
 800f66e:	687b      	ldr	r3, [r7, #4]
 800f670:	2200      	movs	r2, #0
 800f672:	771a      	strb	r2, [r3, #28]
 800f674:	68bb      	ldr	r3, [r7, #8]
 800f676:	f003 0301 	and.w	r3, r3, #1
 800f67a:	2b00      	cmp	r3, #0
 800f67c:	d00c      	beq.n	800f698 <HAL_TIM_IRQHandler+0x16c>
 800f67e:	68fb      	ldr	r3, [r7, #12]
 800f680:	f003 0301 	and.w	r3, r3, #1
 800f684:	2b00      	cmp	r3, #0
 800f686:	d007      	beq.n	800f698 <HAL_TIM_IRQHandler+0x16c>
 800f688:	687b      	ldr	r3, [r7, #4]
 800f68a:	681b      	ldr	r3, [r3, #0]
 800f68c:	f06f 0201 	mvn.w	r2, #1
 800f690:	611a      	str	r2, [r3, #16]
 800f692:	6878      	ldr	r0, [r7, #4]
 800f694:	f7fb ffc6 	bl	800b624 <HAL_TIM_PeriodElapsedCallback>
 800f698:	68bb      	ldr	r3, [r7, #8]
 800f69a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800f69e:	2b00      	cmp	r3, #0
 800f6a0:	d00c      	beq.n	800f6bc <HAL_TIM_IRQHandler+0x190>
 800f6a2:	68fb      	ldr	r3, [r7, #12]
 800f6a4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800f6a8:	2b00      	cmp	r3, #0
 800f6aa:	d007      	beq.n	800f6bc <HAL_TIM_IRQHandler+0x190>
 800f6ac:	687b      	ldr	r3, [r7, #4]
 800f6ae:	681b      	ldr	r3, [r3, #0]
 800f6b0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800f6b4:	611a      	str	r2, [r3, #16]
 800f6b6:	6878      	ldr	r0, [r7, #4]
 800f6b8:	f000 fae4 	bl	800fc84 <HAL_TIMEx_BreakCallback>
 800f6bc:	68bb      	ldr	r3, [r7, #8]
 800f6be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800f6c2:	2b00      	cmp	r3, #0
 800f6c4:	d00c      	beq.n	800f6e0 <HAL_TIM_IRQHandler+0x1b4>
 800f6c6:	68fb      	ldr	r3, [r7, #12]
 800f6c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800f6cc:	2b00      	cmp	r3, #0
 800f6ce:	d007      	beq.n	800f6e0 <HAL_TIM_IRQHandler+0x1b4>
 800f6d0:	687b      	ldr	r3, [r7, #4]
 800f6d2:	681b      	ldr	r3, [r3, #0]
 800f6d4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800f6d8:	611a      	str	r2, [r3, #16]
 800f6da:	6878      	ldr	r0, [r7, #4]
 800f6dc:	f000 f8fb 	bl	800f8d6 <HAL_TIM_TriggerCallback>
 800f6e0:	68bb      	ldr	r3, [r7, #8]
 800f6e2:	f003 0320 	and.w	r3, r3, #32
 800f6e6:	2b00      	cmp	r3, #0
 800f6e8:	d00c      	beq.n	800f704 <HAL_TIM_IRQHandler+0x1d8>
 800f6ea:	68fb      	ldr	r3, [r7, #12]
 800f6ec:	f003 0320 	and.w	r3, r3, #32
 800f6f0:	2b00      	cmp	r3, #0
 800f6f2:	d007      	beq.n	800f704 <HAL_TIM_IRQHandler+0x1d8>
 800f6f4:	687b      	ldr	r3, [r7, #4]
 800f6f6:	681b      	ldr	r3, [r3, #0]
 800f6f8:	f06f 0220 	mvn.w	r2, #32
 800f6fc:	611a      	str	r2, [r3, #16]
 800f6fe:	6878      	ldr	r0, [r7, #4]
 800f700:	f000 fab6 	bl	800fc70 <HAL_TIMEx_CommutCallback>
 800f704:	bf00      	nop
 800f706:	3710      	adds	r7, #16
 800f708:	46bd      	mov	sp, r7
 800f70a:	bd80      	pop	{r7, pc}

0800f70c <HAL_TIM_ConfigClockSource>:
 800f70c:	b580      	push	{r7, lr}
 800f70e:	b084      	sub	sp, #16
 800f710:	af00      	add	r7, sp, #0
 800f712:	6078      	str	r0, [r7, #4]
 800f714:	6039      	str	r1, [r7, #0]
 800f716:	2300      	movs	r3, #0
 800f718:	73fb      	strb	r3, [r7, #15]
 800f71a:	687b      	ldr	r3, [r7, #4]
 800f71c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800f720:	2b01      	cmp	r3, #1
 800f722:	d101      	bne.n	800f728 <HAL_TIM_ConfigClockSource+0x1c>
 800f724:	2302      	movs	r3, #2
 800f726:	e0b4      	b.n	800f892 <HAL_TIM_ConfigClockSource+0x186>
 800f728:	687b      	ldr	r3, [r7, #4]
 800f72a:	2201      	movs	r2, #1
 800f72c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f730:	687b      	ldr	r3, [r7, #4]
 800f732:	2202      	movs	r2, #2
 800f734:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800f738:	687b      	ldr	r3, [r7, #4]
 800f73a:	681b      	ldr	r3, [r3, #0]
 800f73c:	689b      	ldr	r3, [r3, #8]
 800f73e:	60bb      	str	r3, [r7, #8]
 800f740:	68bb      	ldr	r3, [r7, #8]
 800f742:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800f746:	60bb      	str	r3, [r7, #8]
 800f748:	68bb      	ldr	r3, [r7, #8]
 800f74a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800f74e:	60bb      	str	r3, [r7, #8]
 800f750:	687b      	ldr	r3, [r7, #4]
 800f752:	681b      	ldr	r3, [r3, #0]
 800f754:	68ba      	ldr	r2, [r7, #8]
 800f756:	609a      	str	r2, [r3, #8]
 800f758:	683b      	ldr	r3, [r7, #0]
 800f75a:	681b      	ldr	r3, [r3, #0]
 800f75c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f760:	d03e      	beq.n	800f7e0 <HAL_TIM_ConfigClockSource+0xd4>
 800f762:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f766:	f200 8087 	bhi.w	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f76a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f76e:	f000 8086 	beq.w	800f87e <HAL_TIM_ConfigClockSource+0x172>
 800f772:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f776:	d87f      	bhi.n	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f778:	2b70      	cmp	r3, #112	; 0x70
 800f77a:	d01a      	beq.n	800f7b2 <HAL_TIM_ConfigClockSource+0xa6>
 800f77c:	2b70      	cmp	r3, #112	; 0x70
 800f77e:	d87b      	bhi.n	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f780:	2b60      	cmp	r3, #96	; 0x60
 800f782:	d050      	beq.n	800f826 <HAL_TIM_ConfigClockSource+0x11a>
 800f784:	2b60      	cmp	r3, #96	; 0x60
 800f786:	d877      	bhi.n	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f788:	2b50      	cmp	r3, #80	; 0x50
 800f78a:	d03c      	beq.n	800f806 <HAL_TIM_ConfigClockSource+0xfa>
 800f78c:	2b50      	cmp	r3, #80	; 0x50
 800f78e:	d873      	bhi.n	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f790:	2b40      	cmp	r3, #64	; 0x40
 800f792:	d058      	beq.n	800f846 <HAL_TIM_ConfigClockSource+0x13a>
 800f794:	2b40      	cmp	r3, #64	; 0x40
 800f796:	d86f      	bhi.n	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f798:	2b30      	cmp	r3, #48	; 0x30
 800f79a:	d064      	beq.n	800f866 <HAL_TIM_ConfigClockSource+0x15a>
 800f79c:	2b30      	cmp	r3, #48	; 0x30
 800f79e:	d86b      	bhi.n	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f7a0:	2b20      	cmp	r3, #32
 800f7a2:	d060      	beq.n	800f866 <HAL_TIM_ConfigClockSource+0x15a>
 800f7a4:	2b20      	cmp	r3, #32
 800f7a6:	d867      	bhi.n	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f7a8:	2b00      	cmp	r3, #0
 800f7aa:	d05c      	beq.n	800f866 <HAL_TIM_ConfigClockSource+0x15a>
 800f7ac:	2b10      	cmp	r3, #16
 800f7ae:	d05a      	beq.n	800f866 <HAL_TIM_ConfigClockSource+0x15a>
 800f7b0:	e062      	b.n	800f878 <HAL_TIM_ConfigClockSource+0x16c>
 800f7b2:	687b      	ldr	r3, [r7, #4]
 800f7b4:	6818      	ldr	r0, [r3, #0]
 800f7b6:	683b      	ldr	r3, [r7, #0]
 800f7b8:	6899      	ldr	r1, [r3, #8]
 800f7ba:	683b      	ldr	r3, [r7, #0]
 800f7bc:	685a      	ldr	r2, [r3, #4]
 800f7be:	683b      	ldr	r3, [r7, #0]
 800f7c0:	68db      	ldr	r3, [r3, #12]
 800f7c2:	f000 f9b9 	bl	800fb38 <TIM_ETR_SetConfig>
 800f7c6:	687b      	ldr	r3, [r7, #4]
 800f7c8:	681b      	ldr	r3, [r3, #0]
 800f7ca:	689b      	ldr	r3, [r3, #8]
 800f7cc:	60bb      	str	r3, [r7, #8]
 800f7ce:	68bb      	ldr	r3, [r7, #8]
 800f7d0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800f7d4:	60bb      	str	r3, [r7, #8]
 800f7d6:	687b      	ldr	r3, [r7, #4]
 800f7d8:	681b      	ldr	r3, [r3, #0]
 800f7da:	68ba      	ldr	r2, [r7, #8]
 800f7dc:	609a      	str	r2, [r3, #8]
 800f7de:	e04f      	b.n	800f880 <HAL_TIM_ConfigClockSource+0x174>
 800f7e0:	687b      	ldr	r3, [r7, #4]
 800f7e2:	6818      	ldr	r0, [r3, #0]
 800f7e4:	683b      	ldr	r3, [r7, #0]
 800f7e6:	6899      	ldr	r1, [r3, #8]
 800f7e8:	683b      	ldr	r3, [r7, #0]
 800f7ea:	685a      	ldr	r2, [r3, #4]
 800f7ec:	683b      	ldr	r3, [r7, #0]
 800f7ee:	68db      	ldr	r3, [r3, #12]
 800f7f0:	f000 f9a2 	bl	800fb38 <TIM_ETR_SetConfig>
 800f7f4:	687b      	ldr	r3, [r7, #4]
 800f7f6:	681b      	ldr	r3, [r3, #0]
 800f7f8:	689a      	ldr	r2, [r3, #8]
 800f7fa:	687b      	ldr	r3, [r7, #4]
 800f7fc:	681b      	ldr	r3, [r3, #0]
 800f7fe:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800f802:	609a      	str	r2, [r3, #8]
 800f804:	e03c      	b.n	800f880 <HAL_TIM_ConfigClockSource+0x174>
 800f806:	687b      	ldr	r3, [r7, #4]
 800f808:	6818      	ldr	r0, [r3, #0]
 800f80a:	683b      	ldr	r3, [r7, #0]
 800f80c:	6859      	ldr	r1, [r3, #4]
 800f80e:	683b      	ldr	r3, [r7, #0]
 800f810:	68db      	ldr	r3, [r3, #12]
 800f812:	461a      	mov	r2, r3
 800f814:	f000 f916 	bl	800fa44 <TIM_TI1_ConfigInputStage>
 800f818:	687b      	ldr	r3, [r7, #4]
 800f81a:	681b      	ldr	r3, [r3, #0]
 800f81c:	2150      	movs	r1, #80	; 0x50
 800f81e:	4618      	mov	r0, r3
 800f820:	f000 f96f 	bl	800fb02 <TIM_ITRx_SetConfig>
 800f824:	e02c      	b.n	800f880 <HAL_TIM_ConfigClockSource+0x174>
 800f826:	687b      	ldr	r3, [r7, #4]
 800f828:	6818      	ldr	r0, [r3, #0]
 800f82a:	683b      	ldr	r3, [r7, #0]
 800f82c:	6859      	ldr	r1, [r3, #4]
 800f82e:	683b      	ldr	r3, [r7, #0]
 800f830:	68db      	ldr	r3, [r3, #12]
 800f832:	461a      	mov	r2, r3
 800f834:	f000 f935 	bl	800faa2 <TIM_TI2_ConfigInputStage>
 800f838:	687b      	ldr	r3, [r7, #4]
 800f83a:	681b      	ldr	r3, [r3, #0]
 800f83c:	2160      	movs	r1, #96	; 0x60
 800f83e:	4618      	mov	r0, r3
 800f840:	f000 f95f 	bl	800fb02 <TIM_ITRx_SetConfig>
 800f844:	e01c      	b.n	800f880 <HAL_TIM_ConfigClockSource+0x174>
 800f846:	687b      	ldr	r3, [r7, #4]
 800f848:	6818      	ldr	r0, [r3, #0]
 800f84a:	683b      	ldr	r3, [r7, #0]
 800f84c:	6859      	ldr	r1, [r3, #4]
 800f84e:	683b      	ldr	r3, [r7, #0]
 800f850:	68db      	ldr	r3, [r3, #12]
 800f852:	461a      	mov	r2, r3
 800f854:	f000 f8f6 	bl	800fa44 <TIM_TI1_ConfigInputStage>
 800f858:	687b      	ldr	r3, [r7, #4]
 800f85a:	681b      	ldr	r3, [r3, #0]
 800f85c:	2140      	movs	r1, #64	; 0x40
 800f85e:	4618      	mov	r0, r3
 800f860:	f000 f94f 	bl	800fb02 <TIM_ITRx_SetConfig>
 800f864:	e00c      	b.n	800f880 <HAL_TIM_ConfigClockSource+0x174>
 800f866:	687b      	ldr	r3, [r7, #4]
 800f868:	681a      	ldr	r2, [r3, #0]
 800f86a:	683b      	ldr	r3, [r7, #0]
 800f86c:	681b      	ldr	r3, [r3, #0]
 800f86e:	4619      	mov	r1, r3
 800f870:	4610      	mov	r0, r2
 800f872:	f000 f946 	bl	800fb02 <TIM_ITRx_SetConfig>
 800f876:	e003      	b.n	800f880 <HAL_TIM_ConfigClockSource+0x174>
 800f878:	2301      	movs	r3, #1
 800f87a:	73fb      	strb	r3, [r7, #15]
 800f87c:	e000      	b.n	800f880 <HAL_TIM_ConfigClockSource+0x174>
 800f87e:	bf00      	nop
 800f880:	687b      	ldr	r3, [r7, #4]
 800f882:	2201      	movs	r2, #1
 800f884:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800f888:	687b      	ldr	r3, [r7, #4]
 800f88a:	2200      	movs	r2, #0
 800f88c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f890:	7bfb      	ldrb	r3, [r7, #15]
 800f892:	4618      	mov	r0, r3
 800f894:	3710      	adds	r7, #16
 800f896:	46bd      	mov	sp, r7
 800f898:	bd80      	pop	{r7, pc}

0800f89a <HAL_TIM_OC_DelayElapsedCallback>:
 800f89a:	b480      	push	{r7}
 800f89c:	b083      	sub	sp, #12
 800f89e:	af00      	add	r7, sp, #0
 800f8a0:	6078      	str	r0, [r7, #4]
 800f8a2:	bf00      	nop
 800f8a4:	370c      	adds	r7, #12
 800f8a6:	46bd      	mov	sp, r7
 800f8a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8ac:	4770      	bx	lr

0800f8ae <HAL_TIM_IC_CaptureCallback>:
 800f8ae:	b480      	push	{r7}
 800f8b0:	b083      	sub	sp, #12
 800f8b2:	af00      	add	r7, sp, #0
 800f8b4:	6078      	str	r0, [r7, #4]
 800f8b6:	bf00      	nop
 800f8b8:	370c      	adds	r7, #12
 800f8ba:	46bd      	mov	sp, r7
 800f8bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8c0:	4770      	bx	lr

0800f8c2 <HAL_TIM_PWM_PulseFinishedCallback>:
 800f8c2:	b480      	push	{r7}
 800f8c4:	b083      	sub	sp, #12
 800f8c6:	af00      	add	r7, sp, #0
 800f8c8:	6078      	str	r0, [r7, #4]
 800f8ca:	bf00      	nop
 800f8cc:	370c      	adds	r7, #12
 800f8ce:	46bd      	mov	sp, r7
 800f8d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8d4:	4770      	bx	lr

0800f8d6 <HAL_TIM_TriggerCallback>:
 800f8d6:	b480      	push	{r7}
 800f8d8:	b083      	sub	sp, #12
 800f8da:	af00      	add	r7, sp, #0
 800f8dc:	6078      	str	r0, [r7, #4]
 800f8de:	bf00      	nop
 800f8e0:	370c      	adds	r7, #12
 800f8e2:	46bd      	mov	sp, r7
 800f8e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8e8:	4770      	bx	lr
	...

0800f8ec <TIM_Base_SetConfig>:
 800f8ec:	b480      	push	{r7}
 800f8ee:	b085      	sub	sp, #20
 800f8f0:	af00      	add	r7, sp, #0
 800f8f2:	6078      	str	r0, [r7, #4]
 800f8f4:	6039      	str	r1, [r7, #0]
 800f8f6:	687b      	ldr	r3, [r7, #4]
 800f8f8:	681b      	ldr	r3, [r3, #0]
 800f8fa:	60fb      	str	r3, [r7, #12]
 800f8fc:	687b      	ldr	r3, [r7, #4]
 800f8fe:	4a46      	ldr	r2, [pc, #280]	; (800fa18 <TIM_Base_SetConfig+0x12c>)
 800f900:	4293      	cmp	r3, r2
 800f902:	d013      	beq.n	800f92c <TIM_Base_SetConfig+0x40>
 800f904:	687b      	ldr	r3, [r7, #4]
 800f906:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f90a:	d00f      	beq.n	800f92c <TIM_Base_SetConfig+0x40>
 800f90c:	687b      	ldr	r3, [r7, #4]
 800f90e:	4a43      	ldr	r2, [pc, #268]	; (800fa1c <TIM_Base_SetConfig+0x130>)
 800f910:	4293      	cmp	r3, r2
 800f912:	d00b      	beq.n	800f92c <TIM_Base_SetConfig+0x40>
 800f914:	687b      	ldr	r3, [r7, #4]
 800f916:	4a42      	ldr	r2, [pc, #264]	; (800fa20 <TIM_Base_SetConfig+0x134>)
 800f918:	4293      	cmp	r3, r2
 800f91a:	d007      	beq.n	800f92c <TIM_Base_SetConfig+0x40>
 800f91c:	687b      	ldr	r3, [r7, #4]
 800f91e:	4a41      	ldr	r2, [pc, #260]	; (800fa24 <TIM_Base_SetConfig+0x138>)
 800f920:	4293      	cmp	r3, r2
 800f922:	d003      	beq.n	800f92c <TIM_Base_SetConfig+0x40>
 800f924:	687b      	ldr	r3, [r7, #4]
 800f926:	4a40      	ldr	r2, [pc, #256]	; (800fa28 <TIM_Base_SetConfig+0x13c>)
 800f928:	4293      	cmp	r3, r2
 800f92a:	d108      	bne.n	800f93e <TIM_Base_SetConfig+0x52>
 800f92c:	68fb      	ldr	r3, [r7, #12]
 800f92e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800f932:	60fb      	str	r3, [r7, #12]
 800f934:	683b      	ldr	r3, [r7, #0]
 800f936:	685b      	ldr	r3, [r3, #4]
 800f938:	68fa      	ldr	r2, [r7, #12]
 800f93a:	4313      	orrs	r3, r2
 800f93c:	60fb      	str	r3, [r7, #12]
 800f93e:	687b      	ldr	r3, [r7, #4]
 800f940:	4a35      	ldr	r2, [pc, #212]	; (800fa18 <TIM_Base_SetConfig+0x12c>)
 800f942:	4293      	cmp	r3, r2
 800f944:	d02b      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f946:	687b      	ldr	r3, [r7, #4]
 800f948:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f94c:	d027      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f94e:	687b      	ldr	r3, [r7, #4]
 800f950:	4a32      	ldr	r2, [pc, #200]	; (800fa1c <TIM_Base_SetConfig+0x130>)
 800f952:	4293      	cmp	r3, r2
 800f954:	d023      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f956:	687b      	ldr	r3, [r7, #4]
 800f958:	4a31      	ldr	r2, [pc, #196]	; (800fa20 <TIM_Base_SetConfig+0x134>)
 800f95a:	4293      	cmp	r3, r2
 800f95c:	d01f      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f95e:	687b      	ldr	r3, [r7, #4]
 800f960:	4a30      	ldr	r2, [pc, #192]	; (800fa24 <TIM_Base_SetConfig+0x138>)
 800f962:	4293      	cmp	r3, r2
 800f964:	d01b      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f966:	687b      	ldr	r3, [r7, #4]
 800f968:	4a2f      	ldr	r2, [pc, #188]	; (800fa28 <TIM_Base_SetConfig+0x13c>)
 800f96a:	4293      	cmp	r3, r2
 800f96c:	d017      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f96e:	687b      	ldr	r3, [r7, #4]
 800f970:	4a2e      	ldr	r2, [pc, #184]	; (800fa2c <TIM_Base_SetConfig+0x140>)
 800f972:	4293      	cmp	r3, r2
 800f974:	d013      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f976:	687b      	ldr	r3, [r7, #4]
 800f978:	4a2d      	ldr	r2, [pc, #180]	; (800fa30 <TIM_Base_SetConfig+0x144>)
 800f97a:	4293      	cmp	r3, r2
 800f97c:	d00f      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f97e:	687b      	ldr	r3, [r7, #4]
 800f980:	4a2c      	ldr	r2, [pc, #176]	; (800fa34 <TIM_Base_SetConfig+0x148>)
 800f982:	4293      	cmp	r3, r2
 800f984:	d00b      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f986:	687b      	ldr	r3, [r7, #4]
 800f988:	4a2b      	ldr	r2, [pc, #172]	; (800fa38 <TIM_Base_SetConfig+0x14c>)
 800f98a:	4293      	cmp	r3, r2
 800f98c:	d007      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f98e:	687b      	ldr	r3, [r7, #4]
 800f990:	4a2a      	ldr	r2, [pc, #168]	; (800fa3c <TIM_Base_SetConfig+0x150>)
 800f992:	4293      	cmp	r3, r2
 800f994:	d003      	beq.n	800f99e <TIM_Base_SetConfig+0xb2>
 800f996:	687b      	ldr	r3, [r7, #4]
 800f998:	4a29      	ldr	r2, [pc, #164]	; (800fa40 <TIM_Base_SetConfig+0x154>)
 800f99a:	4293      	cmp	r3, r2
 800f99c:	d108      	bne.n	800f9b0 <TIM_Base_SetConfig+0xc4>
 800f99e:	68fb      	ldr	r3, [r7, #12]
 800f9a0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800f9a4:	60fb      	str	r3, [r7, #12]
 800f9a6:	683b      	ldr	r3, [r7, #0]
 800f9a8:	68db      	ldr	r3, [r3, #12]
 800f9aa:	68fa      	ldr	r2, [r7, #12]
 800f9ac:	4313      	orrs	r3, r2
 800f9ae:	60fb      	str	r3, [r7, #12]
 800f9b0:	68fb      	ldr	r3, [r7, #12]
 800f9b2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800f9b6:	683b      	ldr	r3, [r7, #0]
 800f9b8:	695b      	ldr	r3, [r3, #20]
 800f9ba:	4313      	orrs	r3, r2
 800f9bc:	60fb      	str	r3, [r7, #12]
 800f9be:	687b      	ldr	r3, [r7, #4]
 800f9c0:	68fa      	ldr	r2, [r7, #12]
 800f9c2:	601a      	str	r2, [r3, #0]
 800f9c4:	683b      	ldr	r3, [r7, #0]
 800f9c6:	689a      	ldr	r2, [r3, #8]
 800f9c8:	687b      	ldr	r3, [r7, #4]
 800f9ca:	62da      	str	r2, [r3, #44]	; 0x2c
 800f9cc:	683b      	ldr	r3, [r7, #0]
 800f9ce:	681a      	ldr	r2, [r3, #0]
 800f9d0:	687b      	ldr	r3, [r7, #4]
 800f9d2:	629a      	str	r2, [r3, #40]	; 0x28
 800f9d4:	687b      	ldr	r3, [r7, #4]
 800f9d6:	4a10      	ldr	r2, [pc, #64]	; (800fa18 <TIM_Base_SetConfig+0x12c>)
 800f9d8:	4293      	cmp	r3, r2
 800f9da:	d003      	beq.n	800f9e4 <TIM_Base_SetConfig+0xf8>
 800f9dc:	687b      	ldr	r3, [r7, #4]
 800f9de:	4a12      	ldr	r2, [pc, #72]	; (800fa28 <TIM_Base_SetConfig+0x13c>)
 800f9e0:	4293      	cmp	r3, r2
 800f9e2:	d103      	bne.n	800f9ec <TIM_Base_SetConfig+0x100>
 800f9e4:	683b      	ldr	r3, [r7, #0]
 800f9e6:	691a      	ldr	r2, [r3, #16]
 800f9e8:	687b      	ldr	r3, [r7, #4]
 800f9ea:	631a      	str	r2, [r3, #48]	; 0x30
 800f9ec:	687b      	ldr	r3, [r7, #4]
 800f9ee:	2201      	movs	r2, #1
 800f9f0:	615a      	str	r2, [r3, #20]
 800f9f2:	687b      	ldr	r3, [r7, #4]
 800f9f4:	691b      	ldr	r3, [r3, #16]
 800f9f6:	f003 0301 	and.w	r3, r3, #1
 800f9fa:	2b01      	cmp	r3, #1
 800f9fc:	d105      	bne.n	800fa0a <TIM_Base_SetConfig+0x11e>
 800f9fe:	687b      	ldr	r3, [r7, #4]
 800fa00:	691b      	ldr	r3, [r3, #16]
 800fa02:	f023 0201 	bic.w	r2, r3, #1
 800fa06:	687b      	ldr	r3, [r7, #4]
 800fa08:	611a      	str	r2, [r3, #16]
 800fa0a:	bf00      	nop
 800fa0c:	3714      	adds	r7, #20
 800fa0e:	46bd      	mov	sp, r7
 800fa10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa14:	4770      	bx	lr
 800fa16:	bf00      	nop
 800fa18:	40010000 	.word	0x40010000
 800fa1c:	40000400 	.word	0x40000400
 800fa20:	40000800 	.word	0x40000800
 800fa24:	40000c00 	.word	0x40000c00
 800fa28:	40010400 	.word	0x40010400
 800fa2c:	40014000 	.word	0x40014000
 800fa30:	40014400 	.word	0x40014400
 800fa34:	40014800 	.word	0x40014800
 800fa38:	40001800 	.word	0x40001800
 800fa3c:	40001c00 	.word	0x40001c00
 800fa40:	40002000 	.word	0x40002000

0800fa44 <TIM_TI1_ConfigInputStage>:
 800fa44:	b480      	push	{r7}
 800fa46:	b087      	sub	sp, #28
 800fa48:	af00      	add	r7, sp, #0
 800fa4a:	60f8      	str	r0, [r7, #12]
 800fa4c:	60b9      	str	r1, [r7, #8]
 800fa4e:	607a      	str	r2, [r7, #4]
 800fa50:	68fb      	ldr	r3, [r7, #12]
 800fa52:	6a1b      	ldr	r3, [r3, #32]
 800fa54:	617b      	str	r3, [r7, #20]
 800fa56:	68fb      	ldr	r3, [r7, #12]
 800fa58:	6a1b      	ldr	r3, [r3, #32]
 800fa5a:	f023 0201 	bic.w	r2, r3, #1
 800fa5e:	68fb      	ldr	r3, [r7, #12]
 800fa60:	621a      	str	r2, [r3, #32]
 800fa62:	68fb      	ldr	r3, [r7, #12]
 800fa64:	699b      	ldr	r3, [r3, #24]
 800fa66:	613b      	str	r3, [r7, #16]
 800fa68:	693b      	ldr	r3, [r7, #16]
 800fa6a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800fa6e:	613b      	str	r3, [r7, #16]
 800fa70:	687b      	ldr	r3, [r7, #4]
 800fa72:	011b      	lsls	r3, r3, #4
 800fa74:	693a      	ldr	r2, [r7, #16]
 800fa76:	4313      	orrs	r3, r2
 800fa78:	613b      	str	r3, [r7, #16]
 800fa7a:	697b      	ldr	r3, [r7, #20]
 800fa7c:	f023 030a 	bic.w	r3, r3, #10
 800fa80:	617b      	str	r3, [r7, #20]
 800fa82:	697a      	ldr	r2, [r7, #20]
 800fa84:	68bb      	ldr	r3, [r7, #8]
 800fa86:	4313      	orrs	r3, r2
 800fa88:	617b      	str	r3, [r7, #20]
 800fa8a:	68fb      	ldr	r3, [r7, #12]
 800fa8c:	693a      	ldr	r2, [r7, #16]
 800fa8e:	619a      	str	r2, [r3, #24]
 800fa90:	68fb      	ldr	r3, [r7, #12]
 800fa92:	697a      	ldr	r2, [r7, #20]
 800fa94:	621a      	str	r2, [r3, #32]
 800fa96:	bf00      	nop
 800fa98:	371c      	adds	r7, #28
 800fa9a:	46bd      	mov	sp, r7
 800fa9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faa0:	4770      	bx	lr

0800faa2 <TIM_TI2_ConfigInputStage>:
 800faa2:	b480      	push	{r7}
 800faa4:	b087      	sub	sp, #28
 800faa6:	af00      	add	r7, sp, #0
 800faa8:	60f8      	str	r0, [r7, #12]
 800faaa:	60b9      	str	r1, [r7, #8]
 800faac:	607a      	str	r2, [r7, #4]
 800faae:	68fb      	ldr	r3, [r7, #12]
 800fab0:	6a1b      	ldr	r3, [r3, #32]
 800fab2:	617b      	str	r3, [r7, #20]
 800fab4:	68fb      	ldr	r3, [r7, #12]
 800fab6:	6a1b      	ldr	r3, [r3, #32]
 800fab8:	f023 0210 	bic.w	r2, r3, #16
 800fabc:	68fb      	ldr	r3, [r7, #12]
 800fabe:	621a      	str	r2, [r3, #32]
 800fac0:	68fb      	ldr	r3, [r7, #12]
 800fac2:	699b      	ldr	r3, [r3, #24]
 800fac4:	613b      	str	r3, [r7, #16]
 800fac6:	693b      	ldr	r3, [r7, #16]
 800fac8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800facc:	613b      	str	r3, [r7, #16]
 800face:	687b      	ldr	r3, [r7, #4]
 800fad0:	031b      	lsls	r3, r3, #12
 800fad2:	693a      	ldr	r2, [r7, #16]
 800fad4:	4313      	orrs	r3, r2
 800fad6:	613b      	str	r3, [r7, #16]
 800fad8:	697b      	ldr	r3, [r7, #20]
 800fada:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800fade:	617b      	str	r3, [r7, #20]
 800fae0:	68bb      	ldr	r3, [r7, #8]
 800fae2:	011b      	lsls	r3, r3, #4
 800fae4:	697a      	ldr	r2, [r7, #20]
 800fae6:	4313      	orrs	r3, r2
 800fae8:	617b      	str	r3, [r7, #20]
 800faea:	68fb      	ldr	r3, [r7, #12]
 800faec:	693a      	ldr	r2, [r7, #16]
 800faee:	619a      	str	r2, [r3, #24]
 800faf0:	68fb      	ldr	r3, [r7, #12]
 800faf2:	697a      	ldr	r2, [r7, #20]
 800faf4:	621a      	str	r2, [r3, #32]
 800faf6:	bf00      	nop
 800faf8:	371c      	adds	r7, #28
 800fafa:	46bd      	mov	sp, r7
 800fafc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb00:	4770      	bx	lr

0800fb02 <TIM_ITRx_SetConfig>:
 800fb02:	b480      	push	{r7}
 800fb04:	b085      	sub	sp, #20
 800fb06:	af00      	add	r7, sp, #0
 800fb08:	6078      	str	r0, [r7, #4]
 800fb0a:	6039      	str	r1, [r7, #0]
 800fb0c:	687b      	ldr	r3, [r7, #4]
 800fb0e:	689b      	ldr	r3, [r3, #8]
 800fb10:	60fb      	str	r3, [r7, #12]
 800fb12:	68fb      	ldr	r3, [r7, #12]
 800fb14:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fb18:	60fb      	str	r3, [r7, #12]
 800fb1a:	683a      	ldr	r2, [r7, #0]
 800fb1c:	68fb      	ldr	r3, [r7, #12]
 800fb1e:	4313      	orrs	r3, r2
 800fb20:	f043 0307 	orr.w	r3, r3, #7
 800fb24:	60fb      	str	r3, [r7, #12]
 800fb26:	687b      	ldr	r3, [r7, #4]
 800fb28:	68fa      	ldr	r2, [r7, #12]
 800fb2a:	609a      	str	r2, [r3, #8]
 800fb2c:	bf00      	nop
 800fb2e:	3714      	adds	r7, #20
 800fb30:	46bd      	mov	sp, r7
 800fb32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb36:	4770      	bx	lr

0800fb38 <TIM_ETR_SetConfig>:
 800fb38:	b480      	push	{r7}
 800fb3a:	b087      	sub	sp, #28
 800fb3c:	af00      	add	r7, sp, #0
 800fb3e:	60f8      	str	r0, [r7, #12]
 800fb40:	60b9      	str	r1, [r7, #8]
 800fb42:	607a      	str	r2, [r7, #4]
 800fb44:	603b      	str	r3, [r7, #0]
 800fb46:	68fb      	ldr	r3, [r7, #12]
 800fb48:	689b      	ldr	r3, [r3, #8]
 800fb4a:	617b      	str	r3, [r7, #20]
 800fb4c:	697b      	ldr	r3, [r7, #20]
 800fb4e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800fb52:	617b      	str	r3, [r7, #20]
 800fb54:	683b      	ldr	r3, [r7, #0]
 800fb56:	021a      	lsls	r2, r3, #8
 800fb58:	687b      	ldr	r3, [r7, #4]
 800fb5a:	431a      	orrs	r2, r3
 800fb5c:	68bb      	ldr	r3, [r7, #8]
 800fb5e:	4313      	orrs	r3, r2
 800fb60:	697a      	ldr	r2, [r7, #20]
 800fb62:	4313      	orrs	r3, r2
 800fb64:	617b      	str	r3, [r7, #20]
 800fb66:	68fb      	ldr	r3, [r7, #12]
 800fb68:	697a      	ldr	r2, [r7, #20]
 800fb6a:	609a      	str	r2, [r3, #8]
 800fb6c:	bf00      	nop
 800fb6e:	371c      	adds	r7, #28
 800fb70:	46bd      	mov	sp, r7
 800fb72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb76:	4770      	bx	lr

0800fb78 <HAL_TIMEx_MasterConfigSynchronization>:
 800fb78:	b480      	push	{r7}
 800fb7a:	b085      	sub	sp, #20
 800fb7c:	af00      	add	r7, sp, #0
 800fb7e:	6078      	str	r0, [r7, #4]
 800fb80:	6039      	str	r1, [r7, #0]
 800fb82:	687b      	ldr	r3, [r7, #4]
 800fb84:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800fb88:	2b01      	cmp	r3, #1
 800fb8a:	d101      	bne.n	800fb90 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800fb8c:	2302      	movs	r3, #2
 800fb8e:	e05a      	b.n	800fc46 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800fb90:	687b      	ldr	r3, [r7, #4]
 800fb92:	2201      	movs	r2, #1
 800fb94:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800fb98:	687b      	ldr	r3, [r7, #4]
 800fb9a:	2202      	movs	r2, #2
 800fb9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800fba0:	687b      	ldr	r3, [r7, #4]
 800fba2:	681b      	ldr	r3, [r3, #0]
 800fba4:	685b      	ldr	r3, [r3, #4]
 800fba6:	60fb      	str	r3, [r7, #12]
 800fba8:	687b      	ldr	r3, [r7, #4]
 800fbaa:	681b      	ldr	r3, [r3, #0]
 800fbac:	689b      	ldr	r3, [r3, #8]
 800fbae:	60bb      	str	r3, [r7, #8]
 800fbb0:	68fb      	ldr	r3, [r7, #12]
 800fbb2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fbb6:	60fb      	str	r3, [r7, #12]
 800fbb8:	683b      	ldr	r3, [r7, #0]
 800fbba:	681b      	ldr	r3, [r3, #0]
 800fbbc:	68fa      	ldr	r2, [r7, #12]
 800fbbe:	4313      	orrs	r3, r2
 800fbc0:	60fb      	str	r3, [r7, #12]
 800fbc2:	687b      	ldr	r3, [r7, #4]
 800fbc4:	681b      	ldr	r3, [r3, #0]
 800fbc6:	68fa      	ldr	r2, [r7, #12]
 800fbc8:	605a      	str	r2, [r3, #4]
 800fbca:	687b      	ldr	r3, [r7, #4]
 800fbcc:	681b      	ldr	r3, [r3, #0]
 800fbce:	4a21      	ldr	r2, [pc, #132]	; (800fc54 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800fbd0:	4293      	cmp	r3, r2
 800fbd2:	d022      	beq.n	800fc1a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800fbd4:	687b      	ldr	r3, [r7, #4]
 800fbd6:	681b      	ldr	r3, [r3, #0]
 800fbd8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800fbdc:	d01d      	beq.n	800fc1a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800fbde:	687b      	ldr	r3, [r7, #4]
 800fbe0:	681b      	ldr	r3, [r3, #0]
 800fbe2:	4a1d      	ldr	r2, [pc, #116]	; (800fc58 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800fbe4:	4293      	cmp	r3, r2
 800fbe6:	d018      	beq.n	800fc1a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800fbe8:	687b      	ldr	r3, [r7, #4]
 800fbea:	681b      	ldr	r3, [r3, #0]
 800fbec:	4a1b      	ldr	r2, [pc, #108]	; (800fc5c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800fbee:	4293      	cmp	r3, r2
 800fbf0:	d013      	beq.n	800fc1a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800fbf2:	687b      	ldr	r3, [r7, #4]
 800fbf4:	681b      	ldr	r3, [r3, #0]
 800fbf6:	4a1a      	ldr	r2, [pc, #104]	; (800fc60 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800fbf8:	4293      	cmp	r3, r2
 800fbfa:	d00e      	beq.n	800fc1a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800fbfc:	687b      	ldr	r3, [r7, #4]
 800fbfe:	681b      	ldr	r3, [r3, #0]
 800fc00:	4a18      	ldr	r2, [pc, #96]	; (800fc64 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800fc02:	4293      	cmp	r3, r2
 800fc04:	d009      	beq.n	800fc1a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800fc06:	687b      	ldr	r3, [r7, #4]
 800fc08:	681b      	ldr	r3, [r3, #0]
 800fc0a:	4a17      	ldr	r2, [pc, #92]	; (800fc68 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800fc0c:	4293      	cmp	r3, r2
 800fc0e:	d004      	beq.n	800fc1a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800fc10:	687b      	ldr	r3, [r7, #4]
 800fc12:	681b      	ldr	r3, [r3, #0]
 800fc14:	4a15      	ldr	r2, [pc, #84]	; (800fc6c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800fc16:	4293      	cmp	r3, r2
 800fc18:	d10c      	bne.n	800fc34 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800fc1a:	68bb      	ldr	r3, [r7, #8]
 800fc1c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800fc20:	60bb      	str	r3, [r7, #8]
 800fc22:	683b      	ldr	r3, [r7, #0]
 800fc24:	685b      	ldr	r3, [r3, #4]
 800fc26:	68ba      	ldr	r2, [r7, #8]
 800fc28:	4313      	orrs	r3, r2
 800fc2a:	60bb      	str	r3, [r7, #8]
 800fc2c:	687b      	ldr	r3, [r7, #4]
 800fc2e:	681b      	ldr	r3, [r3, #0]
 800fc30:	68ba      	ldr	r2, [r7, #8]
 800fc32:	609a      	str	r2, [r3, #8]
 800fc34:	687b      	ldr	r3, [r7, #4]
 800fc36:	2201      	movs	r2, #1
 800fc38:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800fc3c:	687b      	ldr	r3, [r7, #4]
 800fc3e:	2200      	movs	r2, #0
 800fc40:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800fc44:	2300      	movs	r3, #0
 800fc46:	4618      	mov	r0, r3
 800fc48:	3714      	adds	r7, #20
 800fc4a:	46bd      	mov	sp, r7
 800fc4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc50:	4770      	bx	lr
 800fc52:	bf00      	nop
 800fc54:	40010000 	.word	0x40010000
 800fc58:	40000400 	.word	0x40000400
 800fc5c:	40000800 	.word	0x40000800
 800fc60:	40000c00 	.word	0x40000c00
 800fc64:	40010400 	.word	0x40010400
 800fc68:	40014000 	.word	0x40014000
 800fc6c:	40001800 	.word	0x40001800

0800fc70 <HAL_TIMEx_CommutCallback>:
 800fc70:	b480      	push	{r7}
 800fc72:	b083      	sub	sp, #12
 800fc74:	af00      	add	r7, sp, #0
 800fc76:	6078      	str	r0, [r7, #4]
 800fc78:	bf00      	nop
 800fc7a:	370c      	adds	r7, #12
 800fc7c:	46bd      	mov	sp, r7
 800fc7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc82:	4770      	bx	lr

0800fc84 <HAL_TIMEx_BreakCallback>:
 800fc84:	b480      	push	{r7}
 800fc86:	b083      	sub	sp, #12
 800fc88:	af00      	add	r7, sp, #0
 800fc8a:	6078      	str	r0, [r7, #4]
 800fc8c:	bf00      	nop
 800fc8e:	370c      	adds	r7, #12
 800fc90:	46bd      	mov	sp, r7
 800fc92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc96:	4770      	bx	lr

0800fc98 <HAL_UART_Init>:
 800fc98:	b580      	push	{r7, lr}
 800fc9a:	b082      	sub	sp, #8
 800fc9c:	af00      	add	r7, sp, #0
 800fc9e:	6078      	str	r0, [r7, #4]
 800fca0:	687b      	ldr	r3, [r7, #4]
 800fca2:	2b00      	cmp	r3, #0
 800fca4:	d101      	bne.n	800fcaa <HAL_UART_Init+0x12>
 800fca6:	2301      	movs	r3, #1
 800fca8:	e042      	b.n	800fd30 <HAL_UART_Init+0x98>
 800fcaa:	687b      	ldr	r3, [r7, #4]
 800fcac:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800fcb0:	b2db      	uxtb	r3, r3
 800fcb2:	2b00      	cmp	r3, #0
 800fcb4:	d106      	bne.n	800fcc4 <HAL_UART_Init+0x2c>
 800fcb6:	687b      	ldr	r3, [r7, #4]
 800fcb8:	2200      	movs	r2, #0
 800fcba:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800fcbe:	6878      	ldr	r0, [r7, #4]
 800fcc0:	f7fc f904 	bl	800becc <HAL_UART_MspInit>
 800fcc4:	687b      	ldr	r3, [r7, #4]
 800fcc6:	2224      	movs	r2, #36	; 0x24
 800fcc8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800fccc:	687b      	ldr	r3, [r7, #4]
 800fcce:	681b      	ldr	r3, [r3, #0]
 800fcd0:	68da      	ldr	r2, [r3, #12]
 800fcd2:	687b      	ldr	r3, [r7, #4]
 800fcd4:	681b      	ldr	r3, [r3, #0]
 800fcd6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800fcda:	60da      	str	r2, [r3, #12]
 800fcdc:	6878      	ldr	r0, [r7, #4]
 800fcde:	f000 fdbd 	bl	801085c <UART_SetConfig>
 800fce2:	687b      	ldr	r3, [r7, #4]
 800fce4:	681b      	ldr	r3, [r3, #0]
 800fce6:	691a      	ldr	r2, [r3, #16]
 800fce8:	687b      	ldr	r3, [r7, #4]
 800fcea:	681b      	ldr	r3, [r3, #0]
 800fcec:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800fcf0:	611a      	str	r2, [r3, #16]
 800fcf2:	687b      	ldr	r3, [r7, #4]
 800fcf4:	681b      	ldr	r3, [r3, #0]
 800fcf6:	695a      	ldr	r2, [r3, #20]
 800fcf8:	687b      	ldr	r3, [r7, #4]
 800fcfa:	681b      	ldr	r3, [r3, #0]
 800fcfc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800fd00:	615a      	str	r2, [r3, #20]
 800fd02:	687b      	ldr	r3, [r7, #4]
 800fd04:	681b      	ldr	r3, [r3, #0]
 800fd06:	68da      	ldr	r2, [r3, #12]
 800fd08:	687b      	ldr	r3, [r7, #4]
 800fd0a:	681b      	ldr	r3, [r3, #0]
 800fd0c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800fd10:	60da      	str	r2, [r3, #12]
 800fd12:	687b      	ldr	r3, [r7, #4]
 800fd14:	2200      	movs	r2, #0
 800fd16:	645a      	str	r2, [r3, #68]	; 0x44
 800fd18:	687b      	ldr	r3, [r7, #4]
 800fd1a:	2220      	movs	r2, #32
 800fd1c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800fd20:	687b      	ldr	r3, [r7, #4]
 800fd22:	2220      	movs	r2, #32
 800fd24:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800fd28:	687b      	ldr	r3, [r7, #4]
 800fd2a:	2200      	movs	r2, #0
 800fd2c:	635a      	str	r2, [r3, #52]	; 0x34
 800fd2e:	2300      	movs	r3, #0
 800fd30:	4618      	mov	r0, r3
 800fd32:	3708      	adds	r7, #8
 800fd34:	46bd      	mov	sp, r7
 800fd36:	bd80      	pop	{r7, pc}

0800fd38 <HAL_UART_Transmit>:
 800fd38:	b580      	push	{r7, lr}
 800fd3a:	b08a      	sub	sp, #40	; 0x28
 800fd3c:	af02      	add	r7, sp, #8
 800fd3e:	60f8      	str	r0, [r7, #12]
 800fd40:	60b9      	str	r1, [r7, #8]
 800fd42:	603b      	str	r3, [r7, #0]
 800fd44:	4613      	mov	r3, r2
 800fd46:	80fb      	strh	r3, [r7, #6]
 800fd48:	2300      	movs	r3, #0
 800fd4a:	617b      	str	r3, [r7, #20]
 800fd4c:	68fb      	ldr	r3, [r7, #12]
 800fd4e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800fd52:	b2db      	uxtb	r3, r3
 800fd54:	2b20      	cmp	r3, #32
 800fd56:	d175      	bne.n	800fe44 <HAL_UART_Transmit+0x10c>
 800fd58:	68bb      	ldr	r3, [r7, #8]
 800fd5a:	2b00      	cmp	r3, #0
 800fd5c:	d002      	beq.n	800fd64 <HAL_UART_Transmit+0x2c>
 800fd5e:	88fb      	ldrh	r3, [r7, #6]
 800fd60:	2b00      	cmp	r3, #0
 800fd62:	d101      	bne.n	800fd68 <HAL_UART_Transmit+0x30>
 800fd64:	2301      	movs	r3, #1
 800fd66:	e06e      	b.n	800fe46 <HAL_UART_Transmit+0x10e>
 800fd68:	68fb      	ldr	r3, [r7, #12]
 800fd6a:	2200      	movs	r2, #0
 800fd6c:	645a      	str	r2, [r3, #68]	; 0x44
 800fd6e:	68fb      	ldr	r3, [r7, #12]
 800fd70:	2221      	movs	r2, #33	; 0x21
 800fd72:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800fd76:	f7fc ffdd 	bl	800cd34 <HAL_GetTick>
 800fd7a:	6178      	str	r0, [r7, #20]
 800fd7c:	68fb      	ldr	r3, [r7, #12]
 800fd7e:	88fa      	ldrh	r2, [r7, #6]
 800fd80:	849a      	strh	r2, [r3, #36]	; 0x24
 800fd82:	68fb      	ldr	r3, [r7, #12]
 800fd84:	88fa      	ldrh	r2, [r7, #6]
 800fd86:	84da      	strh	r2, [r3, #38]	; 0x26
 800fd88:	68fb      	ldr	r3, [r7, #12]
 800fd8a:	689b      	ldr	r3, [r3, #8]
 800fd8c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800fd90:	d108      	bne.n	800fda4 <HAL_UART_Transmit+0x6c>
 800fd92:	68fb      	ldr	r3, [r7, #12]
 800fd94:	691b      	ldr	r3, [r3, #16]
 800fd96:	2b00      	cmp	r3, #0
 800fd98:	d104      	bne.n	800fda4 <HAL_UART_Transmit+0x6c>
 800fd9a:	2300      	movs	r3, #0
 800fd9c:	61fb      	str	r3, [r7, #28]
 800fd9e:	68bb      	ldr	r3, [r7, #8]
 800fda0:	61bb      	str	r3, [r7, #24]
 800fda2:	e003      	b.n	800fdac <HAL_UART_Transmit+0x74>
 800fda4:	68bb      	ldr	r3, [r7, #8]
 800fda6:	61fb      	str	r3, [r7, #28]
 800fda8:	2300      	movs	r3, #0
 800fdaa:	61bb      	str	r3, [r7, #24]
 800fdac:	e02e      	b.n	800fe0c <HAL_UART_Transmit+0xd4>
 800fdae:	683b      	ldr	r3, [r7, #0]
 800fdb0:	9300      	str	r3, [sp, #0]
 800fdb2:	697b      	ldr	r3, [r7, #20]
 800fdb4:	2200      	movs	r2, #0
 800fdb6:	2180      	movs	r1, #128	; 0x80
 800fdb8:	68f8      	ldr	r0, [r7, #12]
 800fdba:	f000 fb1f 	bl	80103fc <UART_WaitOnFlagUntilTimeout>
 800fdbe:	4603      	mov	r3, r0
 800fdc0:	2b00      	cmp	r3, #0
 800fdc2:	d005      	beq.n	800fdd0 <HAL_UART_Transmit+0x98>
 800fdc4:	68fb      	ldr	r3, [r7, #12]
 800fdc6:	2220      	movs	r2, #32
 800fdc8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800fdcc:	2303      	movs	r3, #3
 800fdce:	e03a      	b.n	800fe46 <HAL_UART_Transmit+0x10e>
 800fdd0:	69fb      	ldr	r3, [r7, #28]
 800fdd2:	2b00      	cmp	r3, #0
 800fdd4:	d10b      	bne.n	800fdee <HAL_UART_Transmit+0xb6>
 800fdd6:	69bb      	ldr	r3, [r7, #24]
 800fdd8:	881b      	ldrh	r3, [r3, #0]
 800fdda:	461a      	mov	r2, r3
 800fddc:	68fb      	ldr	r3, [r7, #12]
 800fdde:	681b      	ldr	r3, [r3, #0]
 800fde0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800fde4:	605a      	str	r2, [r3, #4]
 800fde6:	69bb      	ldr	r3, [r7, #24]
 800fde8:	3302      	adds	r3, #2
 800fdea:	61bb      	str	r3, [r7, #24]
 800fdec:	e007      	b.n	800fdfe <HAL_UART_Transmit+0xc6>
 800fdee:	69fb      	ldr	r3, [r7, #28]
 800fdf0:	781a      	ldrb	r2, [r3, #0]
 800fdf2:	68fb      	ldr	r3, [r7, #12]
 800fdf4:	681b      	ldr	r3, [r3, #0]
 800fdf6:	605a      	str	r2, [r3, #4]
 800fdf8:	69fb      	ldr	r3, [r7, #28]
 800fdfa:	3301      	adds	r3, #1
 800fdfc:	61fb      	str	r3, [r7, #28]
 800fdfe:	68fb      	ldr	r3, [r7, #12]
 800fe00:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800fe02:	b29b      	uxth	r3, r3
 800fe04:	3b01      	subs	r3, #1
 800fe06:	b29a      	uxth	r2, r3
 800fe08:	68fb      	ldr	r3, [r7, #12]
 800fe0a:	84da      	strh	r2, [r3, #38]	; 0x26
 800fe0c:	68fb      	ldr	r3, [r7, #12]
 800fe0e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800fe10:	b29b      	uxth	r3, r3
 800fe12:	2b00      	cmp	r3, #0
 800fe14:	d1cb      	bne.n	800fdae <HAL_UART_Transmit+0x76>
 800fe16:	683b      	ldr	r3, [r7, #0]
 800fe18:	9300      	str	r3, [sp, #0]
 800fe1a:	697b      	ldr	r3, [r7, #20]
 800fe1c:	2200      	movs	r2, #0
 800fe1e:	2140      	movs	r1, #64	; 0x40
 800fe20:	68f8      	ldr	r0, [r7, #12]
 800fe22:	f000 faeb 	bl	80103fc <UART_WaitOnFlagUntilTimeout>
 800fe26:	4603      	mov	r3, r0
 800fe28:	2b00      	cmp	r3, #0
 800fe2a:	d005      	beq.n	800fe38 <HAL_UART_Transmit+0x100>
 800fe2c:	68fb      	ldr	r3, [r7, #12]
 800fe2e:	2220      	movs	r2, #32
 800fe30:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800fe34:	2303      	movs	r3, #3
 800fe36:	e006      	b.n	800fe46 <HAL_UART_Transmit+0x10e>
 800fe38:	68fb      	ldr	r3, [r7, #12]
 800fe3a:	2220      	movs	r2, #32
 800fe3c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800fe40:	2300      	movs	r3, #0
 800fe42:	e000      	b.n	800fe46 <HAL_UART_Transmit+0x10e>
 800fe44:	2302      	movs	r3, #2
 800fe46:	4618      	mov	r0, r3
 800fe48:	3720      	adds	r7, #32
 800fe4a:	46bd      	mov	sp, r7
 800fe4c:	bd80      	pop	{r7, pc}

0800fe4e <HAL_UART_Receive_IT>:
 800fe4e:	b580      	push	{r7, lr}
 800fe50:	b084      	sub	sp, #16
 800fe52:	af00      	add	r7, sp, #0
 800fe54:	60f8      	str	r0, [r7, #12]
 800fe56:	60b9      	str	r1, [r7, #8]
 800fe58:	4613      	mov	r3, r2
 800fe5a:	80fb      	strh	r3, [r7, #6]
 800fe5c:	68fb      	ldr	r3, [r7, #12]
 800fe5e:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800fe62:	b2db      	uxtb	r3, r3
 800fe64:	2b20      	cmp	r3, #32
 800fe66:	d112      	bne.n	800fe8e <HAL_UART_Receive_IT+0x40>
 800fe68:	68bb      	ldr	r3, [r7, #8]
 800fe6a:	2b00      	cmp	r3, #0
 800fe6c:	d002      	beq.n	800fe74 <HAL_UART_Receive_IT+0x26>
 800fe6e:	88fb      	ldrh	r3, [r7, #6]
 800fe70:	2b00      	cmp	r3, #0
 800fe72:	d101      	bne.n	800fe78 <HAL_UART_Receive_IT+0x2a>
 800fe74:	2301      	movs	r3, #1
 800fe76:	e00b      	b.n	800fe90 <HAL_UART_Receive_IT+0x42>
 800fe78:	68fb      	ldr	r3, [r7, #12]
 800fe7a:	2200      	movs	r2, #0
 800fe7c:	631a      	str	r2, [r3, #48]	; 0x30
 800fe7e:	88fb      	ldrh	r3, [r7, #6]
 800fe80:	461a      	mov	r2, r3
 800fe82:	68b9      	ldr	r1, [r7, #8]
 800fe84:	68f8      	ldr	r0, [r7, #12]
 800fe86:	f000 fb12 	bl	80104ae <UART_Start_Receive_IT>
 800fe8a:	4603      	mov	r3, r0
 800fe8c:	e000      	b.n	800fe90 <HAL_UART_Receive_IT+0x42>
 800fe8e:	2302      	movs	r3, #2
 800fe90:	4618      	mov	r0, r3
 800fe92:	3710      	adds	r7, #16
 800fe94:	46bd      	mov	sp, r7
 800fe96:	bd80      	pop	{r7, pc}

0800fe98 <HAL_UART_IRQHandler>:
 800fe98:	b580      	push	{r7, lr}
 800fe9a:	b0ba      	sub	sp, #232	; 0xe8
 800fe9c:	af00      	add	r7, sp, #0
 800fe9e:	6078      	str	r0, [r7, #4]
 800fea0:	687b      	ldr	r3, [r7, #4]
 800fea2:	681b      	ldr	r3, [r3, #0]
 800fea4:	681b      	ldr	r3, [r3, #0]
 800fea6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800feaa:	687b      	ldr	r3, [r7, #4]
 800feac:	681b      	ldr	r3, [r3, #0]
 800feae:	68db      	ldr	r3, [r3, #12]
 800feb0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800feb4:	687b      	ldr	r3, [r7, #4]
 800feb6:	681b      	ldr	r3, [r3, #0]
 800feb8:	695b      	ldr	r3, [r3, #20]
 800feba:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800febe:	2300      	movs	r3, #0
 800fec0:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800fec4:	2300      	movs	r3, #0
 800fec6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800feca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800fece:	f003 030f 	and.w	r3, r3, #15
 800fed2:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800fed6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800feda:	2b00      	cmp	r3, #0
 800fedc:	d10f      	bne.n	800fefe <HAL_UART_IRQHandler+0x66>
 800fede:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800fee2:	f003 0320 	and.w	r3, r3, #32
 800fee6:	2b00      	cmp	r3, #0
 800fee8:	d009      	beq.n	800fefe <HAL_UART_IRQHandler+0x66>
 800feea:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800feee:	f003 0320 	and.w	r3, r3, #32
 800fef2:	2b00      	cmp	r3, #0
 800fef4:	d003      	beq.n	800fefe <HAL_UART_IRQHandler+0x66>
 800fef6:	6878      	ldr	r0, [r7, #4]
 800fef8:	f000 fbf2 	bl	80106e0 <UART_Receive_IT>
 800fefc:	e25b      	b.n	80103b6 <HAL_UART_IRQHandler+0x51e>
 800fefe:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800ff02:	2b00      	cmp	r3, #0
 800ff04:	f000 80de 	beq.w	80100c4 <HAL_UART_IRQHandler+0x22c>
 800ff08:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800ff0c:	f003 0301 	and.w	r3, r3, #1
 800ff10:	2b00      	cmp	r3, #0
 800ff12:	d106      	bne.n	800ff22 <HAL_UART_IRQHandler+0x8a>
 800ff14:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ff18:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800ff1c:	2b00      	cmp	r3, #0
 800ff1e:	f000 80d1 	beq.w	80100c4 <HAL_UART_IRQHandler+0x22c>
 800ff22:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ff26:	f003 0301 	and.w	r3, r3, #1
 800ff2a:	2b00      	cmp	r3, #0
 800ff2c:	d00b      	beq.n	800ff46 <HAL_UART_IRQHandler+0xae>
 800ff2e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ff32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ff36:	2b00      	cmp	r3, #0
 800ff38:	d005      	beq.n	800ff46 <HAL_UART_IRQHandler+0xae>
 800ff3a:	687b      	ldr	r3, [r7, #4]
 800ff3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ff3e:	f043 0201 	orr.w	r2, r3, #1
 800ff42:	687b      	ldr	r3, [r7, #4]
 800ff44:	645a      	str	r2, [r3, #68]	; 0x44
 800ff46:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ff4a:	f003 0304 	and.w	r3, r3, #4
 800ff4e:	2b00      	cmp	r3, #0
 800ff50:	d00b      	beq.n	800ff6a <HAL_UART_IRQHandler+0xd2>
 800ff52:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800ff56:	f003 0301 	and.w	r3, r3, #1
 800ff5a:	2b00      	cmp	r3, #0
 800ff5c:	d005      	beq.n	800ff6a <HAL_UART_IRQHandler+0xd2>
 800ff5e:	687b      	ldr	r3, [r7, #4]
 800ff60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ff62:	f043 0202 	orr.w	r2, r3, #2
 800ff66:	687b      	ldr	r3, [r7, #4]
 800ff68:	645a      	str	r2, [r3, #68]	; 0x44
 800ff6a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ff6e:	f003 0302 	and.w	r3, r3, #2
 800ff72:	2b00      	cmp	r3, #0
 800ff74:	d00b      	beq.n	800ff8e <HAL_UART_IRQHandler+0xf6>
 800ff76:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800ff7a:	f003 0301 	and.w	r3, r3, #1
 800ff7e:	2b00      	cmp	r3, #0
 800ff80:	d005      	beq.n	800ff8e <HAL_UART_IRQHandler+0xf6>
 800ff82:	687b      	ldr	r3, [r7, #4]
 800ff84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ff86:	f043 0204 	orr.w	r2, r3, #4
 800ff8a:	687b      	ldr	r3, [r7, #4]
 800ff8c:	645a      	str	r2, [r3, #68]	; 0x44
 800ff8e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ff92:	f003 0308 	and.w	r3, r3, #8
 800ff96:	2b00      	cmp	r3, #0
 800ff98:	d011      	beq.n	800ffbe <HAL_UART_IRQHandler+0x126>
 800ff9a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ff9e:	f003 0320 	and.w	r3, r3, #32
 800ffa2:	2b00      	cmp	r3, #0
 800ffa4:	d105      	bne.n	800ffb2 <HAL_UART_IRQHandler+0x11a>
 800ffa6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800ffaa:	f003 0301 	and.w	r3, r3, #1
 800ffae:	2b00      	cmp	r3, #0
 800ffb0:	d005      	beq.n	800ffbe <HAL_UART_IRQHandler+0x126>
 800ffb2:	687b      	ldr	r3, [r7, #4]
 800ffb4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ffb6:	f043 0208 	orr.w	r2, r3, #8
 800ffba:	687b      	ldr	r3, [r7, #4]
 800ffbc:	645a      	str	r2, [r3, #68]	; 0x44
 800ffbe:	687b      	ldr	r3, [r7, #4]
 800ffc0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ffc2:	2b00      	cmp	r3, #0
 800ffc4:	f000 81f2 	beq.w	80103ac <HAL_UART_IRQHandler+0x514>
 800ffc8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ffcc:	f003 0320 	and.w	r3, r3, #32
 800ffd0:	2b00      	cmp	r3, #0
 800ffd2:	d008      	beq.n	800ffe6 <HAL_UART_IRQHandler+0x14e>
 800ffd4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ffd8:	f003 0320 	and.w	r3, r3, #32
 800ffdc:	2b00      	cmp	r3, #0
 800ffde:	d002      	beq.n	800ffe6 <HAL_UART_IRQHandler+0x14e>
 800ffe0:	6878      	ldr	r0, [r7, #4]
 800ffe2:	f000 fb7d 	bl	80106e0 <UART_Receive_IT>
 800ffe6:	687b      	ldr	r3, [r7, #4]
 800ffe8:	681b      	ldr	r3, [r3, #0]
 800ffea:	695b      	ldr	r3, [r3, #20]
 800ffec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800fff0:	2b40      	cmp	r3, #64	; 0x40
 800fff2:	bf0c      	ite	eq
 800fff4:	2301      	moveq	r3, #1
 800fff6:	2300      	movne	r3, #0
 800fff8:	b2db      	uxtb	r3, r3
 800fffa:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800fffe:	687b      	ldr	r3, [r7, #4]
 8010000:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010002:	f003 0308 	and.w	r3, r3, #8
 8010006:	2b00      	cmp	r3, #0
 8010008:	d103      	bne.n	8010012 <HAL_UART_IRQHandler+0x17a>
 801000a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 801000e:	2b00      	cmp	r3, #0
 8010010:	d04f      	beq.n	80100b2 <HAL_UART_IRQHandler+0x21a>
 8010012:	6878      	ldr	r0, [r7, #4]
 8010014:	f000 fa85 	bl	8010522 <UART_EndRxTransfer>
 8010018:	687b      	ldr	r3, [r7, #4]
 801001a:	681b      	ldr	r3, [r3, #0]
 801001c:	695b      	ldr	r3, [r3, #20]
 801001e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8010022:	2b40      	cmp	r3, #64	; 0x40
 8010024:	d141      	bne.n	80100aa <HAL_UART_IRQHandler+0x212>
 8010026:	687b      	ldr	r3, [r7, #4]
 8010028:	681b      	ldr	r3, [r3, #0]
 801002a:	3314      	adds	r3, #20
 801002c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8010030:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8010034:	e853 3f00 	ldrex	r3, [r3]
 8010038:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 801003c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8010040:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8010044:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8010048:	687b      	ldr	r3, [r7, #4]
 801004a:	681b      	ldr	r3, [r3, #0]
 801004c:	3314      	adds	r3, #20
 801004e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8010052:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8010056:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 801005a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 801005e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8010062:	e841 2300 	strex	r3, r2, [r1]
 8010066:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 801006a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 801006e:	2b00      	cmp	r3, #0
 8010070:	d1d9      	bne.n	8010026 <HAL_UART_IRQHandler+0x18e>
 8010072:	687b      	ldr	r3, [r7, #4]
 8010074:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010076:	2b00      	cmp	r3, #0
 8010078:	d013      	beq.n	80100a2 <HAL_UART_IRQHandler+0x20a>
 801007a:	687b      	ldr	r3, [r7, #4]
 801007c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801007e:	4a7e      	ldr	r2, [pc, #504]	; (8010278 <HAL_UART_IRQHandler+0x3e0>)
 8010080:	651a      	str	r2, [r3, #80]	; 0x50
 8010082:	687b      	ldr	r3, [r7, #4]
 8010084:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010086:	4618      	mov	r0, r3
 8010088:	f7fd fd3d 	bl	800db06 <HAL_DMA_Abort_IT>
 801008c:	4603      	mov	r3, r0
 801008e:	2b00      	cmp	r3, #0
 8010090:	d016      	beq.n	80100c0 <HAL_UART_IRQHandler+0x228>
 8010092:	687b      	ldr	r3, [r7, #4]
 8010094:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010096:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010098:	687a      	ldr	r2, [r7, #4]
 801009a:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 801009c:	4610      	mov	r0, r2
 801009e:	4798      	blx	r3
 80100a0:	e00e      	b.n	80100c0 <HAL_UART_IRQHandler+0x228>
 80100a2:	6878      	ldr	r0, [r7, #4]
 80100a4:	f000 f994 	bl	80103d0 <HAL_UART_ErrorCallback>
 80100a8:	e00a      	b.n	80100c0 <HAL_UART_IRQHandler+0x228>
 80100aa:	6878      	ldr	r0, [r7, #4]
 80100ac:	f000 f990 	bl	80103d0 <HAL_UART_ErrorCallback>
 80100b0:	e006      	b.n	80100c0 <HAL_UART_IRQHandler+0x228>
 80100b2:	6878      	ldr	r0, [r7, #4]
 80100b4:	f000 f98c 	bl	80103d0 <HAL_UART_ErrorCallback>
 80100b8:	687b      	ldr	r3, [r7, #4]
 80100ba:	2200      	movs	r2, #0
 80100bc:	645a      	str	r2, [r3, #68]	; 0x44
 80100be:	e175      	b.n	80103ac <HAL_UART_IRQHandler+0x514>
 80100c0:	bf00      	nop
 80100c2:	e173      	b.n	80103ac <HAL_UART_IRQHandler+0x514>
 80100c4:	687b      	ldr	r3, [r7, #4]
 80100c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80100c8:	2b01      	cmp	r3, #1
 80100ca:	f040 814f 	bne.w	801036c <HAL_UART_IRQHandler+0x4d4>
 80100ce:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80100d2:	f003 0310 	and.w	r3, r3, #16
 80100d6:	2b00      	cmp	r3, #0
 80100d8:	f000 8148 	beq.w	801036c <HAL_UART_IRQHandler+0x4d4>
 80100dc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80100e0:	f003 0310 	and.w	r3, r3, #16
 80100e4:	2b00      	cmp	r3, #0
 80100e6:	f000 8141 	beq.w	801036c <HAL_UART_IRQHandler+0x4d4>
 80100ea:	2300      	movs	r3, #0
 80100ec:	60bb      	str	r3, [r7, #8]
 80100ee:	687b      	ldr	r3, [r7, #4]
 80100f0:	681b      	ldr	r3, [r3, #0]
 80100f2:	681b      	ldr	r3, [r3, #0]
 80100f4:	60bb      	str	r3, [r7, #8]
 80100f6:	687b      	ldr	r3, [r7, #4]
 80100f8:	681b      	ldr	r3, [r3, #0]
 80100fa:	685b      	ldr	r3, [r3, #4]
 80100fc:	60bb      	str	r3, [r7, #8]
 80100fe:	68bb      	ldr	r3, [r7, #8]
 8010100:	687b      	ldr	r3, [r7, #4]
 8010102:	681b      	ldr	r3, [r3, #0]
 8010104:	695b      	ldr	r3, [r3, #20]
 8010106:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801010a:	2b40      	cmp	r3, #64	; 0x40
 801010c:	f040 80b6 	bne.w	801027c <HAL_UART_IRQHandler+0x3e4>
 8010110:	687b      	ldr	r3, [r7, #4]
 8010112:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010114:	681b      	ldr	r3, [r3, #0]
 8010116:	685b      	ldr	r3, [r3, #4]
 8010118:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 801011c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8010120:	2b00      	cmp	r3, #0
 8010122:	f000 8145 	beq.w	80103b0 <HAL_UART_IRQHandler+0x518>
 8010126:	687b      	ldr	r3, [r7, #4]
 8010128:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 801012a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 801012e:	429a      	cmp	r2, r3
 8010130:	f080 813e 	bcs.w	80103b0 <HAL_UART_IRQHandler+0x518>
 8010134:	687b      	ldr	r3, [r7, #4]
 8010136:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 801013a:	85da      	strh	r2, [r3, #46]	; 0x2e
 801013c:	687b      	ldr	r3, [r7, #4]
 801013e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010140:	69db      	ldr	r3, [r3, #28]
 8010142:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010146:	f000 8088 	beq.w	801025a <HAL_UART_IRQHandler+0x3c2>
 801014a:	687b      	ldr	r3, [r7, #4]
 801014c:	681b      	ldr	r3, [r3, #0]
 801014e:	330c      	adds	r3, #12
 8010150:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8010154:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8010158:	e853 3f00 	ldrex	r3, [r3]
 801015c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8010160:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8010164:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8010168:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 801016c:	687b      	ldr	r3, [r7, #4]
 801016e:	681b      	ldr	r3, [r3, #0]
 8010170:	330c      	adds	r3, #12
 8010172:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8010176:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 801017a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 801017e:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8010182:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8010186:	e841 2300 	strex	r3, r2, [r1]
 801018a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 801018e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8010192:	2b00      	cmp	r3, #0
 8010194:	d1d9      	bne.n	801014a <HAL_UART_IRQHandler+0x2b2>
 8010196:	687b      	ldr	r3, [r7, #4]
 8010198:	681b      	ldr	r3, [r3, #0]
 801019a:	3314      	adds	r3, #20
 801019c:	677b      	str	r3, [r7, #116]	; 0x74
 801019e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80101a0:	e853 3f00 	ldrex	r3, [r3]
 80101a4:	673b      	str	r3, [r7, #112]	; 0x70
 80101a6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80101a8:	f023 0301 	bic.w	r3, r3, #1
 80101ac:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80101b0:	687b      	ldr	r3, [r7, #4]
 80101b2:	681b      	ldr	r3, [r3, #0]
 80101b4:	3314      	adds	r3, #20
 80101b6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80101ba:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 80101be:	67fb      	str	r3, [r7, #124]	; 0x7c
 80101c0:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 80101c2:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 80101c6:	e841 2300 	strex	r3, r2, [r1]
 80101ca:	67bb      	str	r3, [r7, #120]	; 0x78
 80101cc:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80101ce:	2b00      	cmp	r3, #0
 80101d0:	d1e1      	bne.n	8010196 <HAL_UART_IRQHandler+0x2fe>
 80101d2:	687b      	ldr	r3, [r7, #4]
 80101d4:	681b      	ldr	r3, [r3, #0]
 80101d6:	3314      	adds	r3, #20
 80101d8:	663b      	str	r3, [r7, #96]	; 0x60
 80101da:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80101dc:	e853 3f00 	ldrex	r3, [r3]
 80101e0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80101e2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80101e4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80101e8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80101ec:	687b      	ldr	r3, [r7, #4]
 80101ee:	681b      	ldr	r3, [r3, #0]
 80101f0:	3314      	adds	r3, #20
 80101f2:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 80101f6:	66fa      	str	r2, [r7, #108]	; 0x6c
 80101f8:	66bb      	str	r3, [r7, #104]	; 0x68
 80101fa:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80101fc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80101fe:	e841 2300 	strex	r3, r2, [r1]
 8010202:	667b      	str	r3, [r7, #100]	; 0x64
 8010204:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8010206:	2b00      	cmp	r3, #0
 8010208:	d1e3      	bne.n	80101d2 <HAL_UART_IRQHandler+0x33a>
 801020a:	687b      	ldr	r3, [r7, #4]
 801020c:	2220      	movs	r2, #32
 801020e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8010212:	687b      	ldr	r3, [r7, #4]
 8010214:	2200      	movs	r2, #0
 8010216:	631a      	str	r2, [r3, #48]	; 0x30
 8010218:	687b      	ldr	r3, [r7, #4]
 801021a:	681b      	ldr	r3, [r3, #0]
 801021c:	330c      	adds	r3, #12
 801021e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8010220:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8010222:	e853 3f00 	ldrex	r3, [r3]
 8010226:	64bb      	str	r3, [r7, #72]	; 0x48
 8010228:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801022a:	f023 0310 	bic.w	r3, r3, #16
 801022e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8010232:	687b      	ldr	r3, [r7, #4]
 8010234:	681b      	ldr	r3, [r3, #0]
 8010236:	330c      	adds	r3, #12
 8010238:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 801023c:	65ba      	str	r2, [r7, #88]	; 0x58
 801023e:	657b      	str	r3, [r7, #84]	; 0x54
 8010240:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8010242:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8010244:	e841 2300 	strex	r3, r2, [r1]
 8010248:	653b      	str	r3, [r7, #80]	; 0x50
 801024a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801024c:	2b00      	cmp	r3, #0
 801024e:	d1e3      	bne.n	8010218 <HAL_UART_IRQHandler+0x380>
 8010250:	687b      	ldr	r3, [r7, #4]
 8010252:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010254:	4618      	mov	r0, r3
 8010256:	f7fd fbe6 	bl	800da26 <HAL_DMA_Abort>
 801025a:	687b      	ldr	r3, [r7, #4]
 801025c:	2202      	movs	r2, #2
 801025e:	635a      	str	r2, [r3, #52]	; 0x34
 8010260:	687b      	ldr	r3, [r7, #4]
 8010262:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8010264:	687b      	ldr	r3, [r7, #4]
 8010266:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8010268:	b29b      	uxth	r3, r3
 801026a:	1ad3      	subs	r3, r2, r3
 801026c:	b29b      	uxth	r3, r3
 801026e:	4619      	mov	r1, r3
 8010270:	6878      	ldr	r0, [r7, #4]
 8010272:	f000 f8b7 	bl	80103e4 <HAL_UARTEx_RxEventCallback>
 8010276:	e09b      	b.n	80103b0 <HAL_UART_IRQHandler+0x518>
 8010278:	080105e9 	.word	0x080105e9
 801027c:	687b      	ldr	r3, [r7, #4]
 801027e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8010280:	687b      	ldr	r3, [r7, #4]
 8010282:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8010284:	b29b      	uxth	r3, r3
 8010286:	1ad3      	subs	r3, r2, r3
 8010288:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 801028c:	687b      	ldr	r3, [r7, #4]
 801028e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8010290:	b29b      	uxth	r3, r3
 8010292:	2b00      	cmp	r3, #0
 8010294:	f000 808e 	beq.w	80103b4 <HAL_UART_IRQHandler+0x51c>
 8010298:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 801029c:	2b00      	cmp	r3, #0
 801029e:	f000 8089 	beq.w	80103b4 <HAL_UART_IRQHandler+0x51c>
 80102a2:	687b      	ldr	r3, [r7, #4]
 80102a4:	681b      	ldr	r3, [r3, #0]
 80102a6:	330c      	adds	r3, #12
 80102a8:	63bb      	str	r3, [r7, #56]	; 0x38
 80102aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80102ac:	e853 3f00 	ldrex	r3, [r3]
 80102b0:	637b      	str	r3, [r7, #52]	; 0x34
 80102b2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80102b4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80102b8:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80102bc:	687b      	ldr	r3, [r7, #4]
 80102be:	681b      	ldr	r3, [r3, #0]
 80102c0:	330c      	adds	r3, #12
 80102c2:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80102c6:	647a      	str	r2, [r7, #68]	; 0x44
 80102c8:	643b      	str	r3, [r7, #64]	; 0x40
 80102ca:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80102cc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80102ce:	e841 2300 	strex	r3, r2, [r1]
 80102d2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80102d4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80102d6:	2b00      	cmp	r3, #0
 80102d8:	d1e3      	bne.n	80102a2 <HAL_UART_IRQHandler+0x40a>
 80102da:	687b      	ldr	r3, [r7, #4]
 80102dc:	681b      	ldr	r3, [r3, #0]
 80102de:	3314      	adds	r3, #20
 80102e0:	627b      	str	r3, [r7, #36]	; 0x24
 80102e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80102e4:	e853 3f00 	ldrex	r3, [r3]
 80102e8:	623b      	str	r3, [r7, #32]
 80102ea:	6a3b      	ldr	r3, [r7, #32]
 80102ec:	f023 0301 	bic.w	r3, r3, #1
 80102f0:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80102f4:	687b      	ldr	r3, [r7, #4]
 80102f6:	681b      	ldr	r3, [r3, #0]
 80102f8:	3314      	adds	r3, #20
 80102fa:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 80102fe:	633a      	str	r2, [r7, #48]	; 0x30
 8010300:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010302:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8010304:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8010306:	e841 2300 	strex	r3, r2, [r1]
 801030a:	62bb      	str	r3, [r7, #40]	; 0x28
 801030c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801030e:	2b00      	cmp	r3, #0
 8010310:	d1e3      	bne.n	80102da <HAL_UART_IRQHandler+0x442>
 8010312:	687b      	ldr	r3, [r7, #4]
 8010314:	2220      	movs	r2, #32
 8010316:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 801031a:	687b      	ldr	r3, [r7, #4]
 801031c:	2200      	movs	r2, #0
 801031e:	631a      	str	r2, [r3, #48]	; 0x30
 8010320:	687b      	ldr	r3, [r7, #4]
 8010322:	681b      	ldr	r3, [r3, #0]
 8010324:	330c      	adds	r3, #12
 8010326:	613b      	str	r3, [r7, #16]
 8010328:	693b      	ldr	r3, [r7, #16]
 801032a:	e853 3f00 	ldrex	r3, [r3]
 801032e:	60fb      	str	r3, [r7, #12]
 8010330:	68fb      	ldr	r3, [r7, #12]
 8010332:	f023 0310 	bic.w	r3, r3, #16
 8010336:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 801033a:	687b      	ldr	r3, [r7, #4]
 801033c:	681b      	ldr	r3, [r3, #0]
 801033e:	330c      	adds	r3, #12
 8010340:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8010344:	61fa      	str	r2, [r7, #28]
 8010346:	61bb      	str	r3, [r7, #24]
 8010348:	69b9      	ldr	r1, [r7, #24]
 801034a:	69fa      	ldr	r2, [r7, #28]
 801034c:	e841 2300 	strex	r3, r2, [r1]
 8010350:	617b      	str	r3, [r7, #20]
 8010352:	697b      	ldr	r3, [r7, #20]
 8010354:	2b00      	cmp	r3, #0
 8010356:	d1e3      	bne.n	8010320 <HAL_UART_IRQHandler+0x488>
 8010358:	687b      	ldr	r3, [r7, #4]
 801035a:	2202      	movs	r2, #2
 801035c:	635a      	str	r2, [r3, #52]	; 0x34
 801035e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8010362:	4619      	mov	r1, r3
 8010364:	6878      	ldr	r0, [r7, #4]
 8010366:	f000 f83d 	bl	80103e4 <HAL_UARTEx_RxEventCallback>
 801036a:	e023      	b.n	80103b4 <HAL_UART_IRQHandler+0x51c>
 801036c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8010370:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8010374:	2b00      	cmp	r3, #0
 8010376:	d009      	beq.n	801038c <HAL_UART_IRQHandler+0x4f4>
 8010378:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 801037c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8010380:	2b00      	cmp	r3, #0
 8010382:	d003      	beq.n	801038c <HAL_UART_IRQHandler+0x4f4>
 8010384:	6878      	ldr	r0, [r7, #4]
 8010386:	f000 f943 	bl	8010610 <UART_Transmit_IT>
 801038a:	e014      	b.n	80103b6 <HAL_UART_IRQHandler+0x51e>
 801038c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8010390:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8010394:	2b00      	cmp	r3, #0
 8010396:	d00e      	beq.n	80103b6 <HAL_UART_IRQHandler+0x51e>
 8010398:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 801039c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80103a0:	2b00      	cmp	r3, #0
 80103a2:	d008      	beq.n	80103b6 <HAL_UART_IRQHandler+0x51e>
 80103a4:	6878      	ldr	r0, [r7, #4]
 80103a6:	f000 f983 	bl	80106b0 <UART_EndTransmit_IT>
 80103aa:	e004      	b.n	80103b6 <HAL_UART_IRQHandler+0x51e>
 80103ac:	bf00      	nop
 80103ae:	e002      	b.n	80103b6 <HAL_UART_IRQHandler+0x51e>
 80103b0:	bf00      	nop
 80103b2:	e000      	b.n	80103b6 <HAL_UART_IRQHandler+0x51e>
 80103b4:	bf00      	nop
 80103b6:	37e8      	adds	r7, #232	; 0xe8
 80103b8:	46bd      	mov	sp, r7
 80103ba:	bd80      	pop	{r7, pc}

080103bc <HAL_UART_TxCpltCallback>:
 80103bc:	b480      	push	{r7}
 80103be:	b083      	sub	sp, #12
 80103c0:	af00      	add	r7, sp, #0
 80103c2:	6078      	str	r0, [r7, #4]
 80103c4:	bf00      	nop
 80103c6:	370c      	adds	r7, #12
 80103c8:	46bd      	mov	sp, r7
 80103ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103ce:	4770      	bx	lr

080103d0 <HAL_UART_ErrorCallback>:
 80103d0:	b480      	push	{r7}
 80103d2:	b083      	sub	sp, #12
 80103d4:	af00      	add	r7, sp, #0
 80103d6:	6078      	str	r0, [r7, #4]
 80103d8:	bf00      	nop
 80103da:	370c      	adds	r7, #12
 80103dc:	46bd      	mov	sp, r7
 80103de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103e2:	4770      	bx	lr

080103e4 <HAL_UARTEx_RxEventCallback>:
 80103e4:	b480      	push	{r7}
 80103e6:	b083      	sub	sp, #12
 80103e8:	af00      	add	r7, sp, #0
 80103ea:	6078      	str	r0, [r7, #4]
 80103ec:	460b      	mov	r3, r1
 80103ee:	807b      	strh	r3, [r7, #2]
 80103f0:	bf00      	nop
 80103f2:	370c      	adds	r7, #12
 80103f4:	46bd      	mov	sp, r7
 80103f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103fa:	4770      	bx	lr

080103fc <UART_WaitOnFlagUntilTimeout>:
 80103fc:	b580      	push	{r7, lr}
 80103fe:	b086      	sub	sp, #24
 8010400:	af00      	add	r7, sp, #0
 8010402:	60f8      	str	r0, [r7, #12]
 8010404:	60b9      	str	r1, [r7, #8]
 8010406:	603b      	str	r3, [r7, #0]
 8010408:	4613      	mov	r3, r2
 801040a:	71fb      	strb	r3, [r7, #7]
 801040c:	e03b      	b.n	8010486 <UART_WaitOnFlagUntilTimeout+0x8a>
 801040e:	6a3b      	ldr	r3, [r7, #32]
 8010410:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010414:	d037      	beq.n	8010486 <UART_WaitOnFlagUntilTimeout+0x8a>
 8010416:	f7fc fc8d 	bl	800cd34 <HAL_GetTick>
 801041a:	4602      	mov	r2, r0
 801041c:	683b      	ldr	r3, [r7, #0]
 801041e:	1ad3      	subs	r3, r2, r3
 8010420:	6a3a      	ldr	r2, [r7, #32]
 8010422:	429a      	cmp	r2, r3
 8010424:	d302      	bcc.n	801042c <UART_WaitOnFlagUntilTimeout+0x30>
 8010426:	6a3b      	ldr	r3, [r7, #32]
 8010428:	2b00      	cmp	r3, #0
 801042a:	d101      	bne.n	8010430 <UART_WaitOnFlagUntilTimeout+0x34>
 801042c:	2303      	movs	r3, #3
 801042e:	e03a      	b.n	80104a6 <UART_WaitOnFlagUntilTimeout+0xaa>
 8010430:	68fb      	ldr	r3, [r7, #12]
 8010432:	681b      	ldr	r3, [r3, #0]
 8010434:	68db      	ldr	r3, [r3, #12]
 8010436:	f003 0304 	and.w	r3, r3, #4
 801043a:	2b00      	cmp	r3, #0
 801043c:	d023      	beq.n	8010486 <UART_WaitOnFlagUntilTimeout+0x8a>
 801043e:	68bb      	ldr	r3, [r7, #8]
 8010440:	2b80      	cmp	r3, #128	; 0x80
 8010442:	d020      	beq.n	8010486 <UART_WaitOnFlagUntilTimeout+0x8a>
 8010444:	68bb      	ldr	r3, [r7, #8]
 8010446:	2b40      	cmp	r3, #64	; 0x40
 8010448:	d01d      	beq.n	8010486 <UART_WaitOnFlagUntilTimeout+0x8a>
 801044a:	68fb      	ldr	r3, [r7, #12]
 801044c:	681b      	ldr	r3, [r3, #0]
 801044e:	681b      	ldr	r3, [r3, #0]
 8010450:	f003 0308 	and.w	r3, r3, #8
 8010454:	2b08      	cmp	r3, #8
 8010456:	d116      	bne.n	8010486 <UART_WaitOnFlagUntilTimeout+0x8a>
 8010458:	2300      	movs	r3, #0
 801045a:	617b      	str	r3, [r7, #20]
 801045c:	68fb      	ldr	r3, [r7, #12]
 801045e:	681b      	ldr	r3, [r3, #0]
 8010460:	681b      	ldr	r3, [r3, #0]
 8010462:	617b      	str	r3, [r7, #20]
 8010464:	68fb      	ldr	r3, [r7, #12]
 8010466:	681b      	ldr	r3, [r3, #0]
 8010468:	685b      	ldr	r3, [r3, #4]
 801046a:	617b      	str	r3, [r7, #20]
 801046c:	697b      	ldr	r3, [r7, #20]
 801046e:	68f8      	ldr	r0, [r7, #12]
 8010470:	f000 f857 	bl	8010522 <UART_EndRxTransfer>
 8010474:	68fb      	ldr	r3, [r7, #12]
 8010476:	2208      	movs	r2, #8
 8010478:	645a      	str	r2, [r3, #68]	; 0x44
 801047a:	68fb      	ldr	r3, [r7, #12]
 801047c:	2200      	movs	r2, #0
 801047e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8010482:	2301      	movs	r3, #1
 8010484:	e00f      	b.n	80104a6 <UART_WaitOnFlagUntilTimeout+0xaa>
 8010486:	68fb      	ldr	r3, [r7, #12]
 8010488:	681b      	ldr	r3, [r3, #0]
 801048a:	681a      	ldr	r2, [r3, #0]
 801048c:	68bb      	ldr	r3, [r7, #8]
 801048e:	4013      	ands	r3, r2
 8010490:	68ba      	ldr	r2, [r7, #8]
 8010492:	429a      	cmp	r2, r3
 8010494:	bf0c      	ite	eq
 8010496:	2301      	moveq	r3, #1
 8010498:	2300      	movne	r3, #0
 801049a:	b2db      	uxtb	r3, r3
 801049c:	461a      	mov	r2, r3
 801049e:	79fb      	ldrb	r3, [r7, #7]
 80104a0:	429a      	cmp	r2, r3
 80104a2:	d0b4      	beq.n	801040e <UART_WaitOnFlagUntilTimeout+0x12>
 80104a4:	2300      	movs	r3, #0
 80104a6:	4618      	mov	r0, r3
 80104a8:	3718      	adds	r7, #24
 80104aa:	46bd      	mov	sp, r7
 80104ac:	bd80      	pop	{r7, pc}

080104ae <UART_Start_Receive_IT>:
 80104ae:	b480      	push	{r7}
 80104b0:	b085      	sub	sp, #20
 80104b2:	af00      	add	r7, sp, #0
 80104b4:	60f8      	str	r0, [r7, #12]
 80104b6:	60b9      	str	r1, [r7, #8]
 80104b8:	4613      	mov	r3, r2
 80104ba:	80fb      	strh	r3, [r7, #6]
 80104bc:	68fb      	ldr	r3, [r7, #12]
 80104be:	68ba      	ldr	r2, [r7, #8]
 80104c0:	629a      	str	r2, [r3, #40]	; 0x28
 80104c2:	68fb      	ldr	r3, [r7, #12]
 80104c4:	88fa      	ldrh	r2, [r7, #6]
 80104c6:	859a      	strh	r2, [r3, #44]	; 0x2c
 80104c8:	68fb      	ldr	r3, [r7, #12]
 80104ca:	88fa      	ldrh	r2, [r7, #6]
 80104cc:	85da      	strh	r2, [r3, #46]	; 0x2e
 80104ce:	68fb      	ldr	r3, [r7, #12]
 80104d0:	2200      	movs	r2, #0
 80104d2:	645a      	str	r2, [r3, #68]	; 0x44
 80104d4:	68fb      	ldr	r3, [r7, #12]
 80104d6:	2222      	movs	r2, #34	; 0x22
 80104d8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80104dc:	68fb      	ldr	r3, [r7, #12]
 80104de:	691b      	ldr	r3, [r3, #16]
 80104e0:	2b00      	cmp	r3, #0
 80104e2:	d007      	beq.n	80104f4 <UART_Start_Receive_IT+0x46>
 80104e4:	68fb      	ldr	r3, [r7, #12]
 80104e6:	681b      	ldr	r3, [r3, #0]
 80104e8:	68da      	ldr	r2, [r3, #12]
 80104ea:	68fb      	ldr	r3, [r7, #12]
 80104ec:	681b      	ldr	r3, [r3, #0]
 80104ee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80104f2:	60da      	str	r2, [r3, #12]
 80104f4:	68fb      	ldr	r3, [r7, #12]
 80104f6:	681b      	ldr	r3, [r3, #0]
 80104f8:	695a      	ldr	r2, [r3, #20]
 80104fa:	68fb      	ldr	r3, [r7, #12]
 80104fc:	681b      	ldr	r3, [r3, #0]
 80104fe:	f042 0201 	orr.w	r2, r2, #1
 8010502:	615a      	str	r2, [r3, #20]
 8010504:	68fb      	ldr	r3, [r7, #12]
 8010506:	681b      	ldr	r3, [r3, #0]
 8010508:	68da      	ldr	r2, [r3, #12]
 801050a:	68fb      	ldr	r3, [r7, #12]
 801050c:	681b      	ldr	r3, [r3, #0]
 801050e:	f042 0220 	orr.w	r2, r2, #32
 8010512:	60da      	str	r2, [r3, #12]
 8010514:	2300      	movs	r3, #0
 8010516:	4618      	mov	r0, r3
 8010518:	3714      	adds	r7, #20
 801051a:	46bd      	mov	sp, r7
 801051c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010520:	4770      	bx	lr

08010522 <UART_EndRxTransfer>:
 8010522:	b480      	push	{r7}
 8010524:	b095      	sub	sp, #84	; 0x54
 8010526:	af00      	add	r7, sp, #0
 8010528:	6078      	str	r0, [r7, #4]
 801052a:	687b      	ldr	r3, [r7, #4]
 801052c:	681b      	ldr	r3, [r3, #0]
 801052e:	330c      	adds	r3, #12
 8010530:	637b      	str	r3, [r7, #52]	; 0x34
 8010532:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010534:	e853 3f00 	ldrex	r3, [r3]
 8010538:	633b      	str	r3, [r7, #48]	; 0x30
 801053a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801053c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8010540:	64fb      	str	r3, [r7, #76]	; 0x4c
 8010542:	687b      	ldr	r3, [r7, #4]
 8010544:	681b      	ldr	r3, [r3, #0]
 8010546:	330c      	adds	r3, #12
 8010548:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801054a:	643a      	str	r2, [r7, #64]	; 0x40
 801054c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801054e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8010550:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8010552:	e841 2300 	strex	r3, r2, [r1]
 8010556:	63bb      	str	r3, [r7, #56]	; 0x38
 8010558:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801055a:	2b00      	cmp	r3, #0
 801055c:	d1e5      	bne.n	801052a <UART_EndRxTransfer+0x8>
 801055e:	687b      	ldr	r3, [r7, #4]
 8010560:	681b      	ldr	r3, [r3, #0]
 8010562:	3314      	adds	r3, #20
 8010564:	623b      	str	r3, [r7, #32]
 8010566:	6a3b      	ldr	r3, [r7, #32]
 8010568:	e853 3f00 	ldrex	r3, [r3]
 801056c:	61fb      	str	r3, [r7, #28]
 801056e:	69fb      	ldr	r3, [r7, #28]
 8010570:	f023 0301 	bic.w	r3, r3, #1
 8010574:	64bb      	str	r3, [r7, #72]	; 0x48
 8010576:	687b      	ldr	r3, [r7, #4]
 8010578:	681b      	ldr	r3, [r3, #0]
 801057a:	3314      	adds	r3, #20
 801057c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 801057e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8010580:	62bb      	str	r3, [r7, #40]	; 0x28
 8010582:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8010584:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8010586:	e841 2300 	strex	r3, r2, [r1]
 801058a:	627b      	str	r3, [r7, #36]	; 0x24
 801058c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801058e:	2b00      	cmp	r3, #0
 8010590:	d1e5      	bne.n	801055e <UART_EndRxTransfer+0x3c>
 8010592:	687b      	ldr	r3, [r7, #4]
 8010594:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010596:	2b01      	cmp	r3, #1
 8010598:	d119      	bne.n	80105ce <UART_EndRxTransfer+0xac>
 801059a:	687b      	ldr	r3, [r7, #4]
 801059c:	681b      	ldr	r3, [r3, #0]
 801059e:	330c      	adds	r3, #12
 80105a0:	60fb      	str	r3, [r7, #12]
 80105a2:	68fb      	ldr	r3, [r7, #12]
 80105a4:	e853 3f00 	ldrex	r3, [r3]
 80105a8:	60bb      	str	r3, [r7, #8]
 80105aa:	68bb      	ldr	r3, [r7, #8]
 80105ac:	f023 0310 	bic.w	r3, r3, #16
 80105b0:	647b      	str	r3, [r7, #68]	; 0x44
 80105b2:	687b      	ldr	r3, [r7, #4]
 80105b4:	681b      	ldr	r3, [r3, #0]
 80105b6:	330c      	adds	r3, #12
 80105b8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80105ba:	61ba      	str	r2, [r7, #24]
 80105bc:	617b      	str	r3, [r7, #20]
 80105be:	6979      	ldr	r1, [r7, #20]
 80105c0:	69ba      	ldr	r2, [r7, #24]
 80105c2:	e841 2300 	strex	r3, r2, [r1]
 80105c6:	613b      	str	r3, [r7, #16]
 80105c8:	693b      	ldr	r3, [r7, #16]
 80105ca:	2b00      	cmp	r3, #0
 80105cc:	d1e5      	bne.n	801059a <UART_EndRxTransfer+0x78>
 80105ce:	687b      	ldr	r3, [r7, #4]
 80105d0:	2220      	movs	r2, #32
 80105d2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80105d6:	687b      	ldr	r3, [r7, #4]
 80105d8:	2200      	movs	r2, #0
 80105da:	631a      	str	r2, [r3, #48]	; 0x30
 80105dc:	bf00      	nop
 80105de:	3754      	adds	r7, #84	; 0x54
 80105e0:	46bd      	mov	sp, r7
 80105e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80105e6:	4770      	bx	lr

080105e8 <UART_DMAAbortOnError>:
 80105e8:	b580      	push	{r7, lr}
 80105ea:	b084      	sub	sp, #16
 80105ec:	af00      	add	r7, sp, #0
 80105ee:	6078      	str	r0, [r7, #4]
 80105f0:	687b      	ldr	r3, [r7, #4]
 80105f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80105f4:	60fb      	str	r3, [r7, #12]
 80105f6:	68fb      	ldr	r3, [r7, #12]
 80105f8:	2200      	movs	r2, #0
 80105fa:	85da      	strh	r2, [r3, #46]	; 0x2e
 80105fc:	68fb      	ldr	r3, [r7, #12]
 80105fe:	2200      	movs	r2, #0
 8010600:	84da      	strh	r2, [r3, #38]	; 0x26
 8010602:	68f8      	ldr	r0, [r7, #12]
 8010604:	f7ff fee4 	bl	80103d0 <HAL_UART_ErrorCallback>
 8010608:	bf00      	nop
 801060a:	3710      	adds	r7, #16
 801060c:	46bd      	mov	sp, r7
 801060e:	bd80      	pop	{r7, pc}

08010610 <UART_Transmit_IT>:
 8010610:	b480      	push	{r7}
 8010612:	b085      	sub	sp, #20
 8010614:	af00      	add	r7, sp, #0
 8010616:	6078      	str	r0, [r7, #4]
 8010618:	687b      	ldr	r3, [r7, #4]
 801061a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 801061e:	b2db      	uxtb	r3, r3
 8010620:	2b21      	cmp	r3, #33	; 0x21
 8010622:	d13e      	bne.n	80106a2 <UART_Transmit_IT+0x92>
 8010624:	687b      	ldr	r3, [r7, #4]
 8010626:	689b      	ldr	r3, [r3, #8]
 8010628:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801062c:	d114      	bne.n	8010658 <UART_Transmit_IT+0x48>
 801062e:	687b      	ldr	r3, [r7, #4]
 8010630:	691b      	ldr	r3, [r3, #16]
 8010632:	2b00      	cmp	r3, #0
 8010634:	d110      	bne.n	8010658 <UART_Transmit_IT+0x48>
 8010636:	687b      	ldr	r3, [r7, #4]
 8010638:	6a1b      	ldr	r3, [r3, #32]
 801063a:	60fb      	str	r3, [r7, #12]
 801063c:	68fb      	ldr	r3, [r7, #12]
 801063e:	881b      	ldrh	r3, [r3, #0]
 8010640:	461a      	mov	r2, r3
 8010642:	687b      	ldr	r3, [r7, #4]
 8010644:	681b      	ldr	r3, [r3, #0]
 8010646:	f3c2 0208 	ubfx	r2, r2, #0, #9
 801064a:	605a      	str	r2, [r3, #4]
 801064c:	687b      	ldr	r3, [r7, #4]
 801064e:	6a1b      	ldr	r3, [r3, #32]
 8010650:	1c9a      	adds	r2, r3, #2
 8010652:	687b      	ldr	r3, [r7, #4]
 8010654:	621a      	str	r2, [r3, #32]
 8010656:	e008      	b.n	801066a <UART_Transmit_IT+0x5a>
 8010658:	687b      	ldr	r3, [r7, #4]
 801065a:	6a1b      	ldr	r3, [r3, #32]
 801065c:	1c59      	adds	r1, r3, #1
 801065e:	687a      	ldr	r2, [r7, #4]
 8010660:	6211      	str	r1, [r2, #32]
 8010662:	781a      	ldrb	r2, [r3, #0]
 8010664:	687b      	ldr	r3, [r7, #4]
 8010666:	681b      	ldr	r3, [r3, #0]
 8010668:	605a      	str	r2, [r3, #4]
 801066a:	687b      	ldr	r3, [r7, #4]
 801066c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801066e:	b29b      	uxth	r3, r3
 8010670:	3b01      	subs	r3, #1
 8010672:	b29b      	uxth	r3, r3
 8010674:	687a      	ldr	r2, [r7, #4]
 8010676:	4619      	mov	r1, r3
 8010678:	84d1      	strh	r1, [r2, #38]	; 0x26
 801067a:	2b00      	cmp	r3, #0
 801067c:	d10f      	bne.n	801069e <UART_Transmit_IT+0x8e>
 801067e:	687b      	ldr	r3, [r7, #4]
 8010680:	681b      	ldr	r3, [r3, #0]
 8010682:	68da      	ldr	r2, [r3, #12]
 8010684:	687b      	ldr	r3, [r7, #4]
 8010686:	681b      	ldr	r3, [r3, #0]
 8010688:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 801068c:	60da      	str	r2, [r3, #12]
 801068e:	687b      	ldr	r3, [r7, #4]
 8010690:	681b      	ldr	r3, [r3, #0]
 8010692:	68da      	ldr	r2, [r3, #12]
 8010694:	687b      	ldr	r3, [r7, #4]
 8010696:	681b      	ldr	r3, [r3, #0]
 8010698:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 801069c:	60da      	str	r2, [r3, #12]
 801069e:	2300      	movs	r3, #0
 80106a0:	e000      	b.n	80106a4 <UART_Transmit_IT+0x94>
 80106a2:	2302      	movs	r3, #2
 80106a4:	4618      	mov	r0, r3
 80106a6:	3714      	adds	r7, #20
 80106a8:	46bd      	mov	sp, r7
 80106aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106ae:	4770      	bx	lr

080106b0 <UART_EndTransmit_IT>:
 80106b0:	b580      	push	{r7, lr}
 80106b2:	b082      	sub	sp, #8
 80106b4:	af00      	add	r7, sp, #0
 80106b6:	6078      	str	r0, [r7, #4]
 80106b8:	687b      	ldr	r3, [r7, #4]
 80106ba:	681b      	ldr	r3, [r3, #0]
 80106bc:	68da      	ldr	r2, [r3, #12]
 80106be:	687b      	ldr	r3, [r7, #4]
 80106c0:	681b      	ldr	r3, [r3, #0]
 80106c2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80106c6:	60da      	str	r2, [r3, #12]
 80106c8:	687b      	ldr	r3, [r7, #4]
 80106ca:	2220      	movs	r2, #32
 80106cc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80106d0:	6878      	ldr	r0, [r7, #4]
 80106d2:	f7ff fe73 	bl	80103bc <HAL_UART_TxCpltCallback>
 80106d6:	2300      	movs	r3, #0
 80106d8:	4618      	mov	r0, r3
 80106da:	3708      	adds	r7, #8
 80106dc:	46bd      	mov	sp, r7
 80106de:	bd80      	pop	{r7, pc}

080106e0 <UART_Receive_IT>:
 80106e0:	b580      	push	{r7, lr}
 80106e2:	b08c      	sub	sp, #48	; 0x30
 80106e4:	af00      	add	r7, sp, #0
 80106e6:	6078      	str	r0, [r7, #4]
 80106e8:	687b      	ldr	r3, [r7, #4]
 80106ea:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80106ee:	b2db      	uxtb	r3, r3
 80106f0:	2b22      	cmp	r3, #34	; 0x22
 80106f2:	f040 80ae 	bne.w	8010852 <UART_Receive_IT+0x172>
 80106f6:	687b      	ldr	r3, [r7, #4]
 80106f8:	689b      	ldr	r3, [r3, #8]
 80106fa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80106fe:	d117      	bne.n	8010730 <UART_Receive_IT+0x50>
 8010700:	687b      	ldr	r3, [r7, #4]
 8010702:	691b      	ldr	r3, [r3, #16]
 8010704:	2b00      	cmp	r3, #0
 8010706:	d113      	bne.n	8010730 <UART_Receive_IT+0x50>
 8010708:	2300      	movs	r3, #0
 801070a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801070c:	687b      	ldr	r3, [r7, #4]
 801070e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010710:	62bb      	str	r3, [r7, #40]	; 0x28
 8010712:	687b      	ldr	r3, [r7, #4]
 8010714:	681b      	ldr	r3, [r3, #0]
 8010716:	685b      	ldr	r3, [r3, #4]
 8010718:	b29b      	uxth	r3, r3
 801071a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 801071e:	b29a      	uxth	r2, r3
 8010720:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010722:	801a      	strh	r2, [r3, #0]
 8010724:	687b      	ldr	r3, [r7, #4]
 8010726:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010728:	1c9a      	adds	r2, r3, #2
 801072a:	687b      	ldr	r3, [r7, #4]
 801072c:	629a      	str	r2, [r3, #40]	; 0x28
 801072e:	e026      	b.n	801077e <UART_Receive_IT+0x9e>
 8010730:	687b      	ldr	r3, [r7, #4]
 8010732:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010734:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010736:	2300      	movs	r3, #0
 8010738:	62bb      	str	r3, [r7, #40]	; 0x28
 801073a:	687b      	ldr	r3, [r7, #4]
 801073c:	689b      	ldr	r3, [r3, #8]
 801073e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8010742:	d007      	beq.n	8010754 <UART_Receive_IT+0x74>
 8010744:	687b      	ldr	r3, [r7, #4]
 8010746:	689b      	ldr	r3, [r3, #8]
 8010748:	2b00      	cmp	r3, #0
 801074a:	d10a      	bne.n	8010762 <UART_Receive_IT+0x82>
 801074c:	687b      	ldr	r3, [r7, #4]
 801074e:	691b      	ldr	r3, [r3, #16]
 8010750:	2b00      	cmp	r3, #0
 8010752:	d106      	bne.n	8010762 <UART_Receive_IT+0x82>
 8010754:	687b      	ldr	r3, [r7, #4]
 8010756:	681b      	ldr	r3, [r3, #0]
 8010758:	685b      	ldr	r3, [r3, #4]
 801075a:	b2da      	uxtb	r2, r3
 801075c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801075e:	701a      	strb	r2, [r3, #0]
 8010760:	e008      	b.n	8010774 <UART_Receive_IT+0x94>
 8010762:	687b      	ldr	r3, [r7, #4]
 8010764:	681b      	ldr	r3, [r3, #0]
 8010766:	685b      	ldr	r3, [r3, #4]
 8010768:	b2db      	uxtb	r3, r3
 801076a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801076e:	b2da      	uxtb	r2, r3
 8010770:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010772:	701a      	strb	r2, [r3, #0]
 8010774:	687b      	ldr	r3, [r7, #4]
 8010776:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010778:	1c5a      	adds	r2, r3, #1
 801077a:	687b      	ldr	r3, [r7, #4]
 801077c:	629a      	str	r2, [r3, #40]	; 0x28
 801077e:	687b      	ldr	r3, [r7, #4]
 8010780:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8010782:	b29b      	uxth	r3, r3
 8010784:	3b01      	subs	r3, #1
 8010786:	b29b      	uxth	r3, r3
 8010788:	687a      	ldr	r2, [r7, #4]
 801078a:	4619      	mov	r1, r3
 801078c:	85d1      	strh	r1, [r2, #46]	; 0x2e
 801078e:	2b00      	cmp	r3, #0
 8010790:	d15d      	bne.n	801084e <UART_Receive_IT+0x16e>
 8010792:	687b      	ldr	r3, [r7, #4]
 8010794:	681b      	ldr	r3, [r3, #0]
 8010796:	68da      	ldr	r2, [r3, #12]
 8010798:	687b      	ldr	r3, [r7, #4]
 801079a:	681b      	ldr	r3, [r3, #0]
 801079c:	f022 0220 	bic.w	r2, r2, #32
 80107a0:	60da      	str	r2, [r3, #12]
 80107a2:	687b      	ldr	r3, [r7, #4]
 80107a4:	681b      	ldr	r3, [r3, #0]
 80107a6:	68da      	ldr	r2, [r3, #12]
 80107a8:	687b      	ldr	r3, [r7, #4]
 80107aa:	681b      	ldr	r3, [r3, #0]
 80107ac:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80107b0:	60da      	str	r2, [r3, #12]
 80107b2:	687b      	ldr	r3, [r7, #4]
 80107b4:	681b      	ldr	r3, [r3, #0]
 80107b6:	695a      	ldr	r2, [r3, #20]
 80107b8:	687b      	ldr	r3, [r7, #4]
 80107ba:	681b      	ldr	r3, [r3, #0]
 80107bc:	f022 0201 	bic.w	r2, r2, #1
 80107c0:	615a      	str	r2, [r3, #20]
 80107c2:	687b      	ldr	r3, [r7, #4]
 80107c4:	2220      	movs	r2, #32
 80107c6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80107ca:	687b      	ldr	r3, [r7, #4]
 80107cc:	2200      	movs	r2, #0
 80107ce:	635a      	str	r2, [r3, #52]	; 0x34
 80107d0:	687b      	ldr	r3, [r7, #4]
 80107d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80107d4:	2b01      	cmp	r3, #1
 80107d6:	d135      	bne.n	8010844 <UART_Receive_IT+0x164>
 80107d8:	687b      	ldr	r3, [r7, #4]
 80107da:	2200      	movs	r2, #0
 80107dc:	631a      	str	r2, [r3, #48]	; 0x30
 80107de:	687b      	ldr	r3, [r7, #4]
 80107e0:	681b      	ldr	r3, [r3, #0]
 80107e2:	330c      	adds	r3, #12
 80107e4:	617b      	str	r3, [r7, #20]
 80107e6:	697b      	ldr	r3, [r7, #20]
 80107e8:	e853 3f00 	ldrex	r3, [r3]
 80107ec:	613b      	str	r3, [r7, #16]
 80107ee:	693b      	ldr	r3, [r7, #16]
 80107f0:	f023 0310 	bic.w	r3, r3, #16
 80107f4:	627b      	str	r3, [r7, #36]	; 0x24
 80107f6:	687b      	ldr	r3, [r7, #4]
 80107f8:	681b      	ldr	r3, [r3, #0]
 80107fa:	330c      	adds	r3, #12
 80107fc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80107fe:	623a      	str	r2, [r7, #32]
 8010800:	61fb      	str	r3, [r7, #28]
 8010802:	69f9      	ldr	r1, [r7, #28]
 8010804:	6a3a      	ldr	r2, [r7, #32]
 8010806:	e841 2300 	strex	r3, r2, [r1]
 801080a:	61bb      	str	r3, [r7, #24]
 801080c:	69bb      	ldr	r3, [r7, #24]
 801080e:	2b00      	cmp	r3, #0
 8010810:	d1e5      	bne.n	80107de <UART_Receive_IT+0xfe>
 8010812:	687b      	ldr	r3, [r7, #4]
 8010814:	681b      	ldr	r3, [r3, #0]
 8010816:	681b      	ldr	r3, [r3, #0]
 8010818:	f003 0310 	and.w	r3, r3, #16
 801081c:	2b10      	cmp	r3, #16
 801081e:	d10a      	bne.n	8010836 <UART_Receive_IT+0x156>
 8010820:	2300      	movs	r3, #0
 8010822:	60fb      	str	r3, [r7, #12]
 8010824:	687b      	ldr	r3, [r7, #4]
 8010826:	681b      	ldr	r3, [r3, #0]
 8010828:	681b      	ldr	r3, [r3, #0]
 801082a:	60fb      	str	r3, [r7, #12]
 801082c:	687b      	ldr	r3, [r7, #4]
 801082e:	681b      	ldr	r3, [r3, #0]
 8010830:	685b      	ldr	r3, [r3, #4]
 8010832:	60fb      	str	r3, [r7, #12]
 8010834:	68fb      	ldr	r3, [r7, #12]
 8010836:	687b      	ldr	r3, [r7, #4]
 8010838:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 801083a:	4619      	mov	r1, r3
 801083c:	6878      	ldr	r0, [r7, #4]
 801083e:	f7ff fdd1 	bl	80103e4 <HAL_UARTEx_RxEventCallback>
 8010842:	e002      	b.n	801084a <UART_Receive_IT+0x16a>
 8010844:	6878      	ldr	r0, [r7, #4]
 8010846:	f7fa ff17 	bl	800b678 <HAL_UART_RxCpltCallback>
 801084a:	2300      	movs	r3, #0
 801084c:	e002      	b.n	8010854 <UART_Receive_IT+0x174>
 801084e:	2300      	movs	r3, #0
 8010850:	e000      	b.n	8010854 <UART_Receive_IT+0x174>
 8010852:	2302      	movs	r3, #2
 8010854:	4618      	mov	r0, r3
 8010856:	3730      	adds	r7, #48	; 0x30
 8010858:	46bd      	mov	sp, r7
 801085a:	bd80      	pop	{r7, pc}

0801085c <UART_SetConfig>:
 801085c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8010860:	b0c0      	sub	sp, #256	; 0x100
 8010862:	af00      	add	r7, sp, #0
 8010864:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8010868:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801086c:	681b      	ldr	r3, [r3, #0]
 801086e:	691b      	ldr	r3, [r3, #16]
 8010870:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8010874:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010878:	68d9      	ldr	r1, [r3, #12]
 801087a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801087e:	681a      	ldr	r2, [r3, #0]
 8010880:	ea40 0301 	orr.w	r3, r0, r1
 8010884:	6113      	str	r3, [r2, #16]
 8010886:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801088a:	689a      	ldr	r2, [r3, #8]
 801088c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010890:	691b      	ldr	r3, [r3, #16]
 8010892:	431a      	orrs	r2, r3
 8010894:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010898:	695b      	ldr	r3, [r3, #20]
 801089a:	431a      	orrs	r2, r3
 801089c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80108a0:	69db      	ldr	r3, [r3, #28]
 80108a2:	4313      	orrs	r3, r2
 80108a4:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80108a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80108ac:	681b      	ldr	r3, [r3, #0]
 80108ae:	68db      	ldr	r3, [r3, #12]
 80108b0:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 80108b4:	f021 010c 	bic.w	r1, r1, #12
 80108b8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80108bc:	681a      	ldr	r2, [r3, #0]
 80108be:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 80108c2:	430b      	orrs	r3, r1
 80108c4:	60d3      	str	r3, [r2, #12]
 80108c6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80108ca:	681b      	ldr	r3, [r3, #0]
 80108cc:	695b      	ldr	r3, [r3, #20]
 80108ce:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 80108d2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80108d6:	6999      	ldr	r1, [r3, #24]
 80108d8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80108dc:	681a      	ldr	r2, [r3, #0]
 80108de:	ea40 0301 	orr.w	r3, r0, r1
 80108e2:	6153      	str	r3, [r2, #20]
 80108e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80108e8:	681a      	ldr	r2, [r3, #0]
 80108ea:	4b8f      	ldr	r3, [pc, #572]	; (8010b28 <UART_SetConfig+0x2cc>)
 80108ec:	429a      	cmp	r2, r3
 80108ee:	d005      	beq.n	80108fc <UART_SetConfig+0xa0>
 80108f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80108f4:	681a      	ldr	r2, [r3, #0]
 80108f6:	4b8d      	ldr	r3, [pc, #564]	; (8010b2c <UART_SetConfig+0x2d0>)
 80108f8:	429a      	cmp	r2, r3
 80108fa:	d104      	bne.n	8010906 <UART_SetConfig+0xaa>
 80108fc:	f7fd ff50 	bl	800e7a0 <HAL_RCC_GetPCLK2Freq>
 8010900:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8010904:	e003      	b.n	801090e <UART_SetConfig+0xb2>
 8010906:	f7fd ff37 	bl	800e778 <HAL_RCC_GetPCLK1Freq>
 801090a:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 801090e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010912:	69db      	ldr	r3, [r3, #28]
 8010914:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8010918:	f040 810c 	bne.w	8010b34 <UART_SetConfig+0x2d8>
 801091c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8010920:	2200      	movs	r2, #0
 8010922:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8010926:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 801092a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 801092e:	4622      	mov	r2, r4
 8010930:	462b      	mov	r3, r5
 8010932:	1891      	adds	r1, r2, r2
 8010934:	65b9      	str	r1, [r7, #88]	; 0x58
 8010936:	415b      	adcs	r3, r3
 8010938:	65fb      	str	r3, [r7, #92]	; 0x5c
 801093a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 801093e:	4621      	mov	r1, r4
 8010940:	eb12 0801 	adds.w	r8, r2, r1
 8010944:	4629      	mov	r1, r5
 8010946:	eb43 0901 	adc.w	r9, r3, r1
 801094a:	f04f 0200 	mov.w	r2, #0
 801094e:	f04f 0300 	mov.w	r3, #0
 8010952:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8010956:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 801095a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 801095e:	4690      	mov	r8, r2
 8010960:	4699      	mov	r9, r3
 8010962:	4623      	mov	r3, r4
 8010964:	eb18 0303 	adds.w	r3, r8, r3
 8010968:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 801096c:	462b      	mov	r3, r5
 801096e:	eb49 0303 	adc.w	r3, r9, r3
 8010972:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8010976:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801097a:	685b      	ldr	r3, [r3, #4]
 801097c:	2200      	movs	r2, #0
 801097e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8010982:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8010986:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 801098a:	460b      	mov	r3, r1
 801098c:	18db      	adds	r3, r3, r3
 801098e:	653b      	str	r3, [r7, #80]	; 0x50
 8010990:	4613      	mov	r3, r2
 8010992:	eb42 0303 	adc.w	r3, r2, r3
 8010996:	657b      	str	r3, [r7, #84]	; 0x54
 8010998:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 801099c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 80109a0:	f7f0 f932 	bl	8000c08 <__aeabi_uldivmod>
 80109a4:	4602      	mov	r2, r0
 80109a6:	460b      	mov	r3, r1
 80109a8:	4b61      	ldr	r3, [pc, #388]	; (8010b30 <UART_SetConfig+0x2d4>)
 80109aa:	fba3 2302 	umull	r2, r3, r3, r2
 80109ae:	095b      	lsrs	r3, r3, #5
 80109b0:	011c      	lsls	r4, r3, #4
 80109b2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80109b6:	2200      	movs	r2, #0
 80109b8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80109bc:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 80109c0:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 80109c4:	4642      	mov	r2, r8
 80109c6:	464b      	mov	r3, r9
 80109c8:	1891      	adds	r1, r2, r2
 80109ca:	64b9      	str	r1, [r7, #72]	; 0x48
 80109cc:	415b      	adcs	r3, r3
 80109ce:	64fb      	str	r3, [r7, #76]	; 0x4c
 80109d0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80109d4:	4641      	mov	r1, r8
 80109d6:	eb12 0a01 	adds.w	sl, r2, r1
 80109da:	4649      	mov	r1, r9
 80109dc:	eb43 0b01 	adc.w	fp, r3, r1
 80109e0:	f04f 0200 	mov.w	r2, #0
 80109e4:	f04f 0300 	mov.w	r3, #0
 80109e8:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80109ec:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80109f0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80109f4:	4692      	mov	sl, r2
 80109f6:	469b      	mov	fp, r3
 80109f8:	4643      	mov	r3, r8
 80109fa:	eb1a 0303 	adds.w	r3, sl, r3
 80109fe:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8010a02:	464b      	mov	r3, r9
 8010a04:	eb4b 0303 	adc.w	r3, fp, r3
 8010a08:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8010a0c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010a10:	685b      	ldr	r3, [r3, #4]
 8010a12:	2200      	movs	r2, #0
 8010a14:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8010a18:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8010a1c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8010a20:	460b      	mov	r3, r1
 8010a22:	18db      	adds	r3, r3, r3
 8010a24:	643b      	str	r3, [r7, #64]	; 0x40
 8010a26:	4613      	mov	r3, r2
 8010a28:	eb42 0303 	adc.w	r3, r2, r3
 8010a2c:	647b      	str	r3, [r7, #68]	; 0x44
 8010a2e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8010a32:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8010a36:	f7f0 f8e7 	bl	8000c08 <__aeabi_uldivmod>
 8010a3a:	4602      	mov	r2, r0
 8010a3c:	460b      	mov	r3, r1
 8010a3e:	4611      	mov	r1, r2
 8010a40:	4b3b      	ldr	r3, [pc, #236]	; (8010b30 <UART_SetConfig+0x2d4>)
 8010a42:	fba3 2301 	umull	r2, r3, r3, r1
 8010a46:	095b      	lsrs	r3, r3, #5
 8010a48:	2264      	movs	r2, #100	; 0x64
 8010a4a:	fb02 f303 	mul.w	r3, r2, r3
 8010a4e:	1acb      	subs	r3, r1, r3
 8010a50:	00db      	lsls	r3, r3, #3
 8010a52:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8010a56:	4b36      	ldr	r3, [pc, #216]	; (8010b30 <UART_SetConfig+0x2d4>)
 8010a58:	fba3 2302 	umull	r2, r3, r3, r2
 8010a5c:	095b      	lsrs	r3, r3, #5
 8010a5e:	005b      	lsls	r3, r3, #1
 8010a60:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8010a64:	441c      	add	r4, r3
 8010a66:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8010a6a:	2200      	movs	r2, #0
 8010a6c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8010a70:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8010a74:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8010a78:	4642      	mov	r2, r8
 8010a7a:	464b      	mov	r3, r9
 8010a7c:	1891      	adds	r1, r2, r2
 8010a7e:	63b9      	str	r1, [r7, #56]	; 0x38
 8010a80:	415b      	adcs	r3, r3
 8010a82:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010a84:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8010a88:	4641      	mov	r1, r8
 8010a8a:	1851      	adds	r1, r2, r1
 8010a8c:	6339      	str	r1, [r7, #48]	; 0x30
 8010a8e:	4649      	mov	r1, r9
 8010a90:	414b      	adcs	r3, r1
 8010a92:	637b      	str	r3, [r7, #52]	; 0x34
 8010a94:	f04f 0200 	mov.w	r2, #0
 8010a98:	f04f 0300 	mov.w	r3, #0
 8010a9c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8010aa0:	4659      	mov	r1, fp
 8010aa2:	00cb      	lsls	r3, r1, #3
 8010aa4:	4651      	mov	r1, sl
 8010aa6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8010aaa:	4651      	mov	r1, sl
 8010aac:	00ca      	lsls	r2, r1, #3
 8010aae:	4610      	mov	r0, r2
 8010ab0:	4619      	mov	r1, r3
 8010ab2:	4603      	mov	r3, r0
 8010ab4:	4642      	mov	r2, r8
 8010ab6:	189b      	adds	r3, r3, r2
 8010ab8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8010abc:	464b      	mov	r3, r9
 8010abe:	460a      	mov	r2, r1
 8010ac0:	eb42 0303 	adc.w	r3, r2, r3
 8010ac4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8010ac8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010acc:	685b      	ldr	r3, [r3, #4]
 8010ace:	2200      	movs	r2, #0
 8010ad0:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8010ad4:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8010ad8:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8010adc:	460b      	mov	r3, r1
 8010ade:	18db      	adds	r3, r3, r3
 8010ae0:	62bb      	str	r3, [r7, #40]	; 0x28
 8010ae2:	4613      	mov	r3, r2
 8010ae4:	eb42 0303 	adc.w	r3, r2, r3
 8010ae8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010aea:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8010aee:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8010af2:	f7f0 f889 	bl	8000c08 <__aeabi_uldivmod>
 8010af6:	4602      	mov	r2, r0
 8010af8:	460b      	mov	r3, r1
 8010afa:	4b0d      	ldr	r3, [pc, #52]	; (8010b30 <UART_SetConfig+0x2d4>)
 8010afc:	fba3 1302 	umull	r1, r3, r3, r2
 8010b00:	095b      	lsrs	r3, r3, #5
 8010b02:	2164      	movs	r1, #100	; 0x64
 8010b04:	fb01 f303 	mul.w	r3, r1, r3
 8010b08:	1ad3      	subs	r3, r2, r3
 8010b0a:	00db      	lsls	r3, r3, #3
 8010b0c:	3332      	adds	r3, #50	; 0x32
 8010b0e:	4a08      	ldr	r2, [pc, #32]	; (8010b30 <UART_SetConfig+0x2d4>)
 8010b10:	fba2 2303 	umull	r2, r3, r2, r3
 8010b14:	095b      	lsrs	r3, r3, #5
 8010b16:	f003 0207 	and.w	r2, r3, #7
 8010b1a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010b1e:	681b      	ldr	r3, [r3, #0]
 8010b20:	4422      	add	r2, r4
 8010b22:	609a      	str	r2, [r3, #8]
 8010b24:	e106      	b.n	8010d34 <UART_SetConfig+0x4d8>
 8010b26:	bf00      	nop
 8010b28:	40011000 	.word	0x40011000
 8010b2c:	40011400 	.word	0x40011400
 8010b30:	51eb851f 	.word	0x51eb851f
 8010b34:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8010b38:	2200      	movs	r2, #0
 8010b3a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8010b3e:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8010b42:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8010b46:	4642      	mov	r2, r8
 8010b48:	464b      	mov	r3, r9
 8010b4a:	1891      	adds	r1, r2, r2
 8010b4c:	6239      	str	r1, [r7, #32]
 8010b4e:	415b      	adcs	r3, r3
 8010b50:	627b      	str	r3, [r7, #36]	; 0x24
 8010b52:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8010b56:	4641      	mov	r1, r8
 8010b58:	1854      	adds	r4, r2, r1
 8010b5a:	4649      	mov	r1, r9
 8010b5c:	eb43 0501 	adc.w	r5, r3, r1
 8010b60:	f04f 0200 	mov.w	r2, #0
 8010b64:	f04f 0300 	mov.w	r3, #0
 8010b68:	00eb      	lsls	r3, r5, #3
 8010b6a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8010b6e:	00e2      	lsls	r2, r4, #3
 8010b70:	4614      	mov	r4, r2
 8010b72:	461d      	mov	r5, r3
 8010b74:	4643      	mov	r3, r8
 8010b76:	18e3      	adds	r3, r4, r3
 8010b78:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8010b7c:	464b      	mov	r3, r9
 8010b7e:	eb45 0303 	adc.w	r3, r5, r3
 8010b82:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8010b86:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010b8a:	685b      	ldr	r3, [r3, #4]
 8010b8c:	2200      	movs	r2, #0
 8010b8e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8010b92:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8010b96:	f04f 0200 	mov.w	r2, #0
 8010b9a:	f04f 0300 	mov.w	r3, #0
 8010b9e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8010ba2:	4629      	mov	r1, r5
 8010ba4:	008b      	lsls	r3, r1, #2
 8010ba6:	4621      	mov	r1, r4
 8010ba8:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8010bac:	4621      	mov	r1, r4
 8010bae:	008a      	lsls	r2, r1, #2
 8010bb0:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8010bb4:	f7f0 f828 	bl	8000c08 <__aeabi_uldivmod>
 8010bb8:	4602      	mov	r2, r0
 8010bba:	460b      	mov	r3, r1
 8010bbc:	4b60      	ldr	r3, [pc, #384]	; (8010d40 <UART_SetConfig+0x4e4>)
 8010bbe:	fba3 2302 	umull	r2, r3, r3, r2
 8010bc2:	095b      	lsrs	r3, r3, #5
 8010bc4:	011c      	lsls	r4, r3, #4
 8010bc6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8010bca:	2200      	movs	r2, #0
 8010bcc:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8010bd0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8010bd4:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8010bd8:	4642      	mov	r2, r8
 8010bda:	464b      	mov	r3, r9
 8010bdc:	1891      	adds	r1, r2, r2
 8010bde:	61b9      	str	r1, [r7, #24]
 8010be0:	415b      	adcs	r3, r3
 8010be2:	61fb      	str	r3, [r7, #28]
 8010be4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8010be8:	4641      	mov	r1, r8
 8010bea:	1851      	adds	r1, r2, r1
 8010bec:	6139      	str	r1, [r7, #16]
 8010bee:	4649      	mov	r1, r9
 8010bf0:	414b      	adcs	r3, r1
 8010bf2:	617b      	str	r3, [r7, #20]
 8010bf4:	f04f 0200 	mov.w	r2, #0
 8010bf8:	f04f 0300 	mov.w	r3, #0
 8010bfc:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8010c00:	4659      	mov	r1, fp
 8010c02:	00cb      	lsls	r3, r1, #3
 8010c04:	4651      	mov	r1, sl
 8010c06:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8010c0a:	4651      	mov	r1, sl
 8010c0c:	00ca      	lsls	r2, r1, #3
 8010c0e:	4610      	mov	r0, r2
 8010c10:	4619      	mov	r1, r3
 8010c12:	4603      	mov	r3, r0
 8010c14:	4642      	mov	r2, r8
 8010c16:	189b      	adds	r3, r3, r2
 8010c18:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8010c1c:	464b      	mov	r3, r9
 8010c1e:	460a      	mov	r2, r1
 8010c20:	eb42 0303 	adc.w	r3, r2, r3
 8010c24:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8010c28:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010c2c:	685b      	ldr	r3, [r3, #4]
 8010c2e:	2200      	movs	r2, #0
 8010c30:	67bb      	str	r3, [r7, #120]	; 0x78
 8010c32:	67fa      	str	r2, [r7, #124]	; 0x7c
 8010c34:	f04f 0200 	mov.w	r2, #0
 8010c38:	f04f 0300 	mov.w	r3, #0
 8010c3c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8010c40:	4649      	mov	r1, r9
 8010c42:	008b      	lsls	r3, r1, #2
 8010c44:	4641      	mov	r1, r8
 8010c46:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8010c4a:	4641      	mov	r1, r8
 8010c4c:	008a      	lsls	r2, r1, #2
 8010c4e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8010c52:	f7ef ffd9 	bl	8000c08 <__aeabi_uldivmod>
 8010c56:	4602      	mov	r2, r0
 8010c58:	460b      	mov	r3, r1
 8010c5a:	4611      	mov	r1, r2
 8010c5c:	4b38      	ldr	r3, [pc, #224]	; (8010d40 <UART_SetConfig+0x4e4>)
 8010c5e:	fba3 2301 	umull	r2, r3, r3, r1
 8010c62:	095b      	lsrs	r3, r3, #5
 8010c64:	2264      	movs	r2, #100	; 0x64
 8010c66:	fb02 f303 	mul.w	r3, r2, r3
 8010c6a:	1acb      	subs	r3, r1, r3
 8010c6c:	011b      	lsls	r3, r3, #4
 8010c6e:	3332      	adds	r3, #50	; 0x32
 8010c70:	4a33      	ldr	r2, [pc, #204]	; (8010d40 <UART_SetConfig+0x4e4>)
 8010c72:	fba2 2303 	umull	r2, r3, r2, r3
 8010c76:	095b      	lsrs	r3, r3, #5
 8010c78:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8010c7c:	441c      	add	r4, r3
 8010c7e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8010c82:	2200      	movs	r2, #0
 8010c84:	673b      	str	r3, [r7, #112]	; 0x70
 8010c86:	677a      	str	r2, [r7, #116]	; 0x74
 8010c88:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8010c8c:	4642      	mov	r2, r8
 8010c8e:	464b      	mov	r3, r9
 8010c90:	1891      	adds	r1, r2, r2
 8010c92:	60b9      	str	r1, [r7, #8]
 8010c94:	415b      	adcs	r3, r3
 8010c96:	60fb      	str	r3, [r7, #12]
 8010c98:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8010c9c:	4641      	mov	r1, r8
 8010c9e:	1851      	adds	r1, r2, r1
 8010ca0:	6039      	str	r1, [r7, #0]
 8010ca2:	4649      	mov	r1, r9
 8010ca4:	414b      	adcs	r3, r1
 8010ca6:	607b      	str	r3, [r7, #4]
 8010ca8:	f04f 0200 	mov.w	r2, #0
 8010cac:	f04f 0300 	mov.w	r3, #0
 8010cb0:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8010cb4:	4659      	mov	r1, fp
 8010cb6:	00cb      	lsls	r3, r1, #3
 8010cb8:	4651      	mov	r1, sl
 8010cba:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8010cbe:	4651      	mov	r1, sl
 8010cc0:	00ca      	lsls	r2, r1, #3
 8010cc2:	4610      	mov	r0, r2
 8010cc4:	4619      	mov	r1, r3
 8010cc6:	4603      	mov	r3, r0
 8010cc8:	4642      	mov	r2, r8
 8010cca:	189b      	adds	r3, r3, r2
 8010ccc:	66bb      	str	r3, [r7, #104]	; 0x68
 8010cce:	464b      	mov	r3, r9
 8010cd0:	460a      	mov	r2, r1
 8010cd2:	eb42 0303 	adc.w	r3, r2, r3
 8010cd6:	66fb      	str	r3, [r7, #108]	; 0x6c
 8010cd8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010cdc:	685b      	ldr	r3, [r3, #4]
 8010cde:	2200      	movs	r2, #0
 8010ce0:	663b      	str	r3, [r7, #96]	; 0x60
 8010ce2:	667a      	str	r2, [r7, #100]	; 0x64
 8010ce4:	f04f 0200 	mov.w	r2, #0
 8010ce8:	f04f 0300 	mov.w	r3, #0
 8010cec:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8010cf0:	4649      	mov	r1, r9
 8010cf2:	008b      	lsls	r3, r1, #2
 8010cf4:	4641      	mov	r1, r8
 8010cf6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8010cfa:	4641      	mov	r1, r8
 8010cfc:	008a      	lsls	r2, r1, #2
 8010cfe:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8010d02:	f7ef ff81 	bl	8000c08 <__aeabi_uldivmod>
 8010d06:	4602      	mov	r2, r0
 8010d08:	460b      	mov	r3, r1
 8010d0a:	4b0d      	ldr	r3, [pc, #52]	; (8010d40 <UART_SetConfig+0x4e4>)
 8010d0c:	fba3 1302 	umull	r1, r3, r3, r2
 8010d10:	095b      	lsrs	r3, r3, #5
 8010d12:	2164      	movs	r1, #100	; 0x64
 8010d14:	fb01 f303 	mul.w	r3, r1, r3
 8010d18:	1ad3      	subs	r3, r2, r3
 8010d1a:	011b      	lsls	r3, r3, #4
 8010d1c:	3332      	adds	r3, #50	; 0x32
 8010d1e:	4a08      	ldr	r2, [pc, #32]	; (8010d40 <UART_SetConfig+0x4e4>)
 8010d20:	fba2 2303 	umull	r2, r3, r2, r3
 8010d24:	095b      	lsrs	r3, r3, #5
 8010d26:	f003 020f 	and.w	r2, r3, #15
 8010d2a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8010d2e:	681b      	ldr	r3, [r3, #0]
 8010d30:	4422      	add	r2, r4
 8010d32:	609a      	str	r2, [r3, #8]
 8010d34:	bf00      	nop
 8010d36:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8010d3a:	46bd      	mov	sp, r7
 8010d3c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8010d40:	51eb851f 	.word	0x51eb851f

08010d44 <_Znaj>:
 8010d44:	f000 bae1 	b.w	801130a <_Znwj>

08010d48 <_ZNSaIcEC1Ev>:
 8010d48:	4770      	bx	lr

08010d4a <_ZNSaIcEC1ERKS_>:
 8010d4a:	4770      	bx	lr

08010d4c <_ZNSaIcED1Ev>:
 8010d4c:	4770      	bx	lr

08010d4e <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>:
 8010d4e:	b10a      	cbz	r2, 8010d54 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0+0x6>
 8010d50:	f002 b97f 	b.w	8013052 <memcpy>
 8010d54:	4770      	bx	lr

08010d56 <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 8010d56:	b10a      	cbz	r2, 8010d5c <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 8010d58:	f002 b846 	b.w	8012de8 <memcmp>
 8010d5c:	4610      	mov	r0, r2
 8010d5e:	4770      	bx	lr

08010d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 8010d60:	b508      	push	{r3, lr}
 8010d62:	680b      	ldr	r3, [r1, #0]
 8010d64:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8010d68:	d302      	bcc.n	8010d70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 8010d6a:	480d      	ldr	r0, [pc, #52]	; (8010da0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 8010d6c:	f000 fae4 	bl	8011338 <_ZSt20__throw_length_errorPKc>
 8010d70:	4293      	cmp	r3, r2
 8010d72:	d90b      	bls.n	8010d8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 8010d74:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8010d78:	ea4f 0042 	mov.w	r0, r2, lsl #1
 8010d7c:	d206      	bcs.n	8010d8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 8010d7e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8010d82:	bf2a      	itet	cs
 8010d84:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 8010d88:	6008      	strcc	r0, [r1, #0]
 8010d8a:	600b      	strcs	r3, [r1, #0]
 8010d8c:	6808      	ldr	r0, [r1, #0]
 8010d8e:	3001      	adds	r0, #1
 8010d90:	d501      	bpl.n	8010d96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 8010d92:	f000 facb 	bl	801132c <_ZSt17__throw_bad_allocv>
 8010d96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010d9a:	f000 bab6 	b.w	801130a <_Znwj>
 8010d9e:	bf00      	nop
 8010da0:	08016870 	.word	0x08016870

08010da4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 8010da4:	f850 3b08 	ldr.w	r3, [r0], #8
 8010da8:	4283      	cmp	r3, r0
 8010daa:	d002      	beq.n	8010db2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 8010dac:	4618      	mov	r0, r3
 8010dae:	f000 baaa 	b.w	8011306 <_ZdlPv>
 8010db2:	4770      	bx	lr

08010db4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 8010db4:	6840      	ldr	r0, [r0, #4]
 8010db6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8010dba:	3901      	subs	r1, #1
 8010dbc:	1a09      	subs	r1, r1, r0
 8010dbe:	4291      	cmp	r1, r2
 8010dc0:	b508      	push	{r3, lr}
 8010dc2:	d202      	bcs.n	8010dca <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 8010dc4:	4618      	mov	r0, r3
 8010dc6:	f000 fab7 	bl	8011338 <_ZSt20__throw_length_errorPKc>
 8010dca:	bd08      	pop	{r3, pc}

08010dcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
 8010dcc:	6803      	ldr	r3, [r0, #0]
 8010dce:	428b      	cmp	r3, r1
 8010dd0:	d806      	bhi.n	8010de0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x14>
 8010dd2:	6842      	ldr	r2, [r0, #4]
 8010dd4:	4413      	add	r3, r2
 8010dd6:	4299      	cmp	r1, r3
 8010dd8:	bf94      	ite	ls
 8010dda:	2000      	movls	r0, #0
 8010ddc:	2001      	movhi	r0, #1
 8010dde:	4770      	bx	lr
 8010de0:	2001      	movs	r0, #1
 8010de2:	4770      	bx	lr

08010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8010de4:	2a01      	cmp	r2, #1
 8010de6:	b410      	push	{r4}
 8010de8:	d104      	bne.n	8010df4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
 8010dea:	780a      	ldrb	r2, [r1, #0]
 8010dec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010df0:	7002      	strb	r2, [r0, #0]
 8010df2:	4770      	bx	lr
 8010df4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010df8:	f7ff bfa9 	b.w	8010d4e <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>

08010dfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 8010dfc:	2a01      	cmp	r2, #1
 8010dfe:	b430      	push	{r4, r5}
 8010e00:	d103      	bne.n	8010e0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 8010e02:	780b      	ldrb	r3, [r1, #0]
 8010e04:	7003      	strb	r3, [r0, #0]
 8010e06:	bc30      	pop	{r4, r5}
 8010e08:	4770      	bx	lr
 8010e0a:	2a00      	cmp	r2, #0
 8010e0c:	d0fb      	beq.n	8010e06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 8010e0e:	bc30      	pop	{r4, r5}
 8010e10:	f001 bffa 	b.w	8012e08 <memmove>

08010e14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc>:
 8010e14:	460b      	mov	r3, r1
 8010e16:	2b01      	cmp	r3, #1
 8010e18:	b410      	push	{r4}
 8010e1a:	4611      	mov	r1, r2
 8010e1c:	4604      	mov	r4, r0
 8010e1e:	d103      	bne.n	8010e28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0x14>
 8010e20:	7022      	strb	r2, [r4, #0]
 8010e22:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010e26:	4770      	bx	lr
 8010e28:	2b00      	cmp	r3, #0
 8010e2a:	d0fa      	beq.n	8010e22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0xe>
 8010e2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010e30:	461a      	mov	r2, r3
 8010e32:	f002 b803 	b.w	8012e3c <memset>

08010e36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>:
 8010e36:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010e38:	290f      	cmp	r1, #15
 8010e3a:	4604      	mov	r4, r0
 8010e3c:	9101      	str	r1, [sp, #4]
 8010e3e:	4615      	mov	r5, r2
 8010e40:	d906      	bls.n	8010e50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x1a>
 8010e42:	2200      	movs	r2, #0
 8010e44:	a901      	add	r1, sp, #4
 8010e46:	f7ff ff8b 	bl	8010d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8010e4a:	9b01      	ldr	r3, [sp, #4]
 8010e4c:	6020      	str	r0, [r4, #0]
 8010e4e:	60a3      	str	r3, [r4, #8]
 8010e50:	9901      	ldr	r1, [sp, #4]
 8010e52:	b119      	cbz	r1, 8010e5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x26>
 8010e54:	6820      	ldr	r0, [r4, #0]
 8010e56:	462a      	mov	r2, r5
 8010e58:	f7ff ffdc 	bl	8010e14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc>
 8010e5c:	9b01      	ldr	r3, [sp, #4]
 8010e5e:	6822      	ldr	r2, [r4, #0]
 8010e60:	6063      	str	r3, [r4, #4]
 8010e62:	2100      	movs	r1, #0
 8010e64:	54d1      	strb	r1, [r2, r3]
 8010e66:	b003      	add	sp, #12
 8010e68:	bd30      	pop	{r4, r5, pc}

08010e6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 8010e6a:	b508      	push	{r3, lr}
 8010e6c:	1a52      	subs	r2, r2, r1
 8010e6e:	f7ff ffb9 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8010e72:	bd08      	pop	{r3, pc}

08010e74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 8010e74:	b508      	push	{r3, lr}
 8010e76:	1a52      	subs	r2, r2, r1
 8010e78:	f7ff ffb4 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8010e7c:	bd08      	pop	{r3, pc}

08010e7e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
 8010e7e:	4288      	cmp	r0, r1
 8010e80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010e82:	4604      	mov	r4, r0
 8010e84:	460e      	mov	r6, r1
 8010e86:	d01e      	beq.n	8010ec6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x48>
 8010e88:	4603      	mov	r3, r0
 8010e8a:	684d      	ldr	r5, [r1, #4]
 8010e8c:	f853 2b08 	ldr.w	r2, [r3], #8
 8010e90:	429a      	cmp	r2, r3
 8010e92:	bf14      	ite	ne
 8010e94:	6882      	ldrne	r2, [r0, #8]
 8010e96:	220f      	moveq	r2, #15
 8010e98:	42aa      	cmp	r2, r5
 8010e9a:	d20a      	bcs.n	8010eb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
 8010e9c:	a901      	add	r1, sp, #4
 8010e9e:	9501      	str	r5, [sp, #4]
 8010ea0:	f7ff ff5e 	bl	8010d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8010ea4:	4607      	mov	r7, r0
 8010ea6:	4620      	mov	r0, r4
 8010ea8:	f7ff ff7c 	bl	8010da4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8010eac:	9b01      	ldr	r3, [sp, #4]
 8010eae:	6027      	str	r7, [r4, #0]
 8010eb0:	60a3      	str	r3, [r4, #8]
 8010eb2:	b125      	cbz	r5, 8010ebe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x40>
 8010eb4:	6831      	ldr	r1, [r6, #0]
 8010eb6:	6820      	ldr	r0, [r4, #0]
 8010eb8:	462a      	mov	r2, r5
 8010eba:	f7ff ff93 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8010ebe:	6823      	ldr	r3, [r4, #0]
 8010ec0:	6065      	str	r5, [r4, #4]
 8010ec2:	2200      	movs	r2, #0
 8010ec4:	555a      	strb	r2, [r3, r5]
 8010ec6:	b003      	add	sp, #12
 8010ec8:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010eca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 8010eca:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010ece:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8010ed0:	461f      	mov	r7, r3
 8010ed2:	6843      	ldr	r3, [r0, #4]
 8010ed4:	eb01 0802 	add.w	r8, r1, r2
 8010ed8:	1ab2      	subs	r2, r6, r2
 8010eda:	441a      	add	r2, r3
 8010edc:	eba3 0908 	sub.w	r9, r3, r8
 8010ee0:	4603      	mov	r3, r0
 8010ee2:	9201      	str	r2, [sp, #4]
 8010ee4:	f853 2b08 	ldr.w	r2, [r3], #8
 8010ee8:	429a      	cmp	r2, r3
 8010eea:	bf18      	it	ne
 8010eec:	6882      	ldrne	r2, [r0, #8]
 8010eee:	460d      	mov	r5, r1
 8010ef0:	bf08      	it	eq
 8010ef2:	220f      	moveq	r2, #15
 8010ef4:	a901      	add	r1, sp, #4
 8010ef6:	4604      	mov	r4, r0
 8010ef8:	f7ff ff32 	bl	8010d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8010efc:	4682      	mov	sl, r0
 8010efe:	b11d      	cbz	r5, 8010f08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 8010f00:	6821      	ldr	r1, [r4, #0]
 8010f02:	462a      	mov	r2, r5
 8010f04:	f7ff ff6e 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8010f08:	b137      	cbz	r7, 8010f18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8010f0a:	b12e      	cbz	r6, 8010f18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8010f0c:	4632      	mov	r2, r6
 8010f0e:	4639      	mov	r1, r7
 8010f10:	eb0a 0005 	add.w	r0, sl, r5
 8010f14:	f7ff ff66 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8010f18:	f1b9 0f00 	cmp.w	r9, #0
 8010f1c:	d007      	beq.n	8010f2e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 8010f1e:	6821      	ldr	r1, [r4, #0]
 8010f20:	4435      	add	r5, r6
 8010f22:	464a      	mov	r2, r9
 8010f24:	4441      	add	r1, r8
 8010f26:	eb0a 0005 	add.w	r0, sl, r5
 8010f2a:	f7ff ff5b 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8010f2e:	4620      	mov	r0, r4
 8010f30:	f7ff ff38 	bl	8010da4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8010f34:	9b01      	ldr	r3, [sp, #4]
 8010f36:	f8c4 a000 	str.w	sl, [r4]
 8010f3a:	60a3      	str	r3, [r4, #8]
 8010f3c:	b002      	add	sp, #8
 8010f3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08010f42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 8010f42:	f100 0208 	add.w	r2, r0, #8
 8010f46:	6002      	str	r2, [r0, #0]
 8010f48:	2200      	movs	r2, #0
 8010f4a:	6042      	str	r2, [r0, #4]
 8010f4c:	7202      	strb	r2, [r0, #8]
 8010f4e:	4770      	bx	lr

08010f50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_>:
 8010f50:	f100 0208 	add.w	r2, r0, #8
 8010f54:	6002      	str	r2, [r0, #0]
 8010f56:	2200      	movs	r2, #0
 8010f58:	6042      	str	r2, [r0, #4]
 8010f5a:	7202      	strb	r2, [r0, #8]
 8010f5c:	4770      	bx	lr

08010f5e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EjcRKS3_>:
 8010f5e:	b510      	push	{r4, lr}
 8010f60:	f100 0308 	add.w	r3, r0, #8
 8010f64:	4604      	mov	r4, r0
 8010f66:	6003      	str	r3, [r0, #0]
 8010f68:	f7ff ff65 	bl	8010e36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>
 8010f6c:	4620      	mov	r0, r4
 8010f6e:	bd10      	pop	{r4, pc}

08010f70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 8010f70:	b510      	push	{r4, lr}
 8010f72:	4604      	mov	r4, r0
 8010f74:	f7ff ff16 	bl	8010da4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8010f78:	4620      	mov	r0, r4
 8010f7a:	bd10      	pop	{r4, pc}

08010f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
 8010f7c:	b510      	push	{r4, lr}
 8010f7e:	4604      	mov	r4, r0
 8010f80:	f7ff ff7d 	bl	8010e7e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 8010f84:	4620      	mov	r0, r4
 8010f86:	bd10      	pop	{r4, pc}

08010f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 8010f88:	b570      	push	{r4, r5, r6, lr}
 8010f8a:	460c      	mov	r4, r1
 8010f8c:	f851 3b08 	ldr.w	r3, [r1], #8
 8010f90:	4299      	cmp	r1, r3
 8010f92:	4605      	mov	r5, r0
 8010f94:	6800      	ldr	r0, [r0, #0]
 8010f96:	d110      	bne.n	8010fba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x32>
 8010f98:	42a5      	cmp	r5, r4
 8010f9a:	d008      	beq.n	8010fae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x26>
 8010f9c:	6862      	ldr	r2, [r4, #4]
 8010f9e:	b10a      	cbz	r2, 8010fa4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1c>
 8010fa0:	f7ff ff20 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8010fa4:	6863      	ldr	r3, [r4, #4]
 8010fa6:	682a      	ldr	r2, [r5, #0]
 8010fa8:	606b      	str	r3, [r5, #4]
 8010faa:	2100      	movs	r1, #0
 8010fac:	54d1      	strb	r1, [r2, r3]
 8010fae:	6822      	ldr	r2, [r4, #0]
 8010fb0:	2300      	movs	r3, #0
 8010fb2:	6063      	str	r3, [r4, #4]
 8010fb4:	7013      	strb	r3, [r2, #0]
 8010fb6:	4628      	mov	r0, r5
 8010fb8:	bd70      	pop	{r4, r5, r6, pc}
 8010fba:	602b      	str	r3, [r5, #0]
 8010fbc:	f105 0608 	add.w	r6, r5, #8
 8010fc0:	6863      	ldr	r3, [r4, #4]
 8010fc2:	606b      	str	r3, [r5, #4]
 8010fc4:	42b0      	cmp	r0, r6
 8010fc6:	68a3      	ldr	r3, [r4, #8]
 8010fc8:	bf18      	it	ne
 8010fca:	68aa      	ldrne	r2, [r5, #8]
 8010fcc:	60ab      	str	r3, [r5, #8]
 8010fce:	bf08      	it	eq
 8010fd0:	2000      	moveq	r0, #0
 8010fd2:	b110      	cbz	r0, 8010fda <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x52>
 8010fd4:	6020      	str	r0, [r4, #0]
 8010fd6:	60a2      	str	r2, [r4, #8]
 8010fd8:	e7e9      	b.n	8010fae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x26>
 8010fda:	6021      	str	r1, [r4, #0]
 8010fdc:	e7e7      	b.n	8010fae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x26>

08010fde <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
 8010fde:	6840      	ldr	r0, [r0, #4]
 8010fe0:	4770      	bx	lr

08010fe2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
 8010fe2:	6840      	ldr	r0, [r0, #4]
 8010fe4:	4770      	bx	lr

08010fe6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 8010fe6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010fe8:	4603      	mov	r3, r0
 8010fea:	9101      	str	r1, [sp, #4]
 8010fec:	f853 2b08 	ldr.w	r2, [r3], #8
 8010ff0:	429a      	cmp	r2, r3
 8010ff2:	bf18      	it	ne
 8010ff4:	6882      	ldrne	r2, [r0, #8]
 8010ff6:	9b01      	ldr	r3, [sp, #4]
 8010ff8:	bf08      	it	eq
 8010ffa:	220f      	moveq	r2, #15
 8010ffc:	4293      	cmp	r3, r2
 8010ffe:	4604      	mov	r4, r0
 8011000:	d90e      	bls.n	8011020 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x3a>
 8011002:	a901      	add	r1, sp, #4
 8011004:	f7ff feac 	bl	8010d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8011008:	6862      	ldr	r2, [r4, #4]
 801100a:	6821      	ldr	r1, [r4, #0]
 801100c:	3201      	adds	r2, #1
 801100e:	4605      	mov	r5, r0
 8011010:	f7ff fee8 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8011014:	4620      	mov	r0, r4
 8011016:	f7ff fec5 	bl	8010da4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 801101a:	9b01      	ldr	r3, [sp, #4]
 801101c:	6025      	str	r5, [r4, #0]
 801101e:	60a3      	str	r3, [r4, #8]
 8011020:	b003      	add	sp, #12
 8011022:	bd30      	pop	{r4, r5, pc}

08011024 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj>:
 8011024:	6800      	ldr	r0, [r0, #0]
 8011026:	4408      	add	r0, r1
 8011028:	4770      	bx	lr
	...

0801102c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
 801102c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011030:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011032:	4614      	mov	r4, r2
 8011034:	4680      	mov	r8, r0
 8011036:	462a      	mov	r2, r5
 8011038:	4689      	mov	r9, r1
 801103a:	461f      	mov	r7, r3
 801103c:	4621      	mov	r1, r4
 801103e:	4b39      	ldr	r3, [pc, #228]	; (8011124 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xf8>)
 8011040:	f7ff feb8 	bl	8010db4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8011044:	4642      	mov	r2, r8
 8011046:	f8d8 3004 	ldr.w	r3, [r8, #4]
 801104a:	f852 6b08 	ldr.w	r6, [r2], #8
 801104e:	4296      	cmp	r6, r2
 8011050:	bf18      	it	ne
 8011052:	f8d8 2008 	ldrne.w	r2, [r8, #8]
 8011056:	eba5 0b04 	sub.w	fp, r5, r4
 801105a:	eb03 0a0b 	add.w	sl, r3, fp
 801105e:	bf08      	it	eq
 8011060:	220f      	moveq	r2, #15
 8011062:	4552      	cmp	r2, sl
 8011064:	d351      	bcc.n	801110a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xde>
 8011066:	444e      	add	r6, r9
 8011068:	4639      	mov	r1, r7
 801106a:	44a1      	add	r9, r4
 801106c:	4640      	mov	r0, r8
 801106e:	eba3 0909 	sub.w	r9, r3, r9
 8011072:	f7ff feab 	bl	8010dcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
 8011076:	b180      	cbz	r0, 801109a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x6e>
 8011078:	f1b9 0f00 	cmp.w	r9, #0
 801107c:	d006      	beq.n	801108c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 801107e:	42ac      	cmp	r4, r5
 8011080:	d004      	beq.n	801108c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 8011082:	464a      	mov	r2, r9
 8011084:	1931      	adds	r1, r6, r4
 8011086:	1970      	adds	r0, r6, r5
 8011088:	f7ff feb8 	bl	8010dfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 801108c:	b315      	cbz	r5, 80110d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801108e:	462a      	mov	r2, r5
 8011090:	4639      	mov	r1, r7
 8011092:	4630      	mov	r0, r6
 8011094:	f7ff fea6 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8011098:	e01c      	b.n	80110d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801109a:	b135      	cbz	r5, 80110aa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x7e>
 801109c:	42ac      	cmp	r4, r5
 801109e:	d33c      	bcc.n	801111a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xee>
 80110a0:	462a      	mov	r2, r5
 80110a2:	4639      	mov	r1, r7
 80110a4:	4630      	mov	r0, r6
 80110a6:	f7ff fea9 	bl	8010dfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 80110aa:	f1b9 0f00 	cmp.w	r9, #0
 80110ae:	d011      	beq.n	80110d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 80110b0:	42ac      	cmp	r4, r5
 80110b2:	d00f      	beq.n	80110d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 80110b4:	464a      	mov	r2, r9
 80110b6:	1931      	adds	r1, r6, r4
 80110b8:	1970      	adds	r0, r6, r5
 80110ba:	f7ff fe9f 	bl	8010dfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 80110be:	42ac      	cmp	r4, r5
 80110c0:	d208      	bcs.n	80110d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 80110c2:	4434      	add	r4, r6
 80110c4:	197b      	adds	r3, r7, r5
 80110c6:	429c      	cmp	r4, r3
 80110c8:	d30f      	bcc.n	80110ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbe>
 80110ca:	462a      	mov	r2, r5
 80110cc:	4639      	mov	r1, r7
 80110ce:	4630      	mov	r0, r6
 80110d0:	f7ff fe94 	bl	8010dfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 80110d4:	f8d8 3000 	ldr.w	r3, [r8]
 80110d8:	f8c8 a004 	str.w	sl, [r8, #4]
 80110dc:	2200      	movs	r2, #0
 80110de:	4640      	mov	r0, r8
 80110e0:	f803 200a 	strb.w	r2, [r3, sl]
 80110e4:	b003      	add	sp, #12
 80110e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110ea:	42bc      	cmp	r4, r7
 80110ec:	d803      	bhi.n	80110f6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xca>
 80110ee:	462a      	mov	r2, r5
 80110f0:	eb07 010b 	add.w	r1, r7, fp
 80110f4:	e7cd      	b.n	8011092 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x66>
 80110f6:	1be4      	subs	r4, r4, r7
 80110f8:	4622      	mov	r2, r4
 80110fa:	4639      	mov	r1, r7
 80110fc:	4630      	mov	r0, r6
 80110fe:	f7ff fe7d 	bl	8010dfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8011102:	1b2a      	subs	r2, r5, r4
 8011104:	1971      	adds	r1, r6, r5
 8011106:	1930      	adds	r0, r6, r4
 8011108:	e7c4      	b.n	8011094 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x68>
 801110a:	9500      	str	r5, [sp, #0]
 801110c:	463b      	mov	r3, r7
 801110e:	4622      	mov	r2, r4
 8011110:	4649      	mov	r1, r9
 8011112:	4640      	mov	r0, r8
 8011114:	f7ff fed9 	bl	8010eca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8011118:	e7dc      	b.n	80110d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801111a:	f1b9 0f00 	cmp.w	r9, #0
 801111e:	d0d0      	beq.n	80110c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x96>
 8011120:	e7c8      	b.n	80110b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x88>
 8011122:	bf00      	nop
 8011124:	08016888 	.word	0x08016888

08011128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>:
 8011128:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801112a:	4604      	mov	r4, r0
 801112c:	4608      	mov	r0, r1
 801112e:	9103      	str	r1, [sp, #12]
 8011130:	f7ef f8ae 	bl	8000290 <strlen>
 8011134:	9b03      	ldr	r3, [sp, #12]
 8011136:	9000      	str	r0, [sp, #0]
 8011138:	6862      	ldr	r2, [r4, #4]
 801113a:	2100      	movs	r1, #0
 801113c:	4620      	mov	r0, r4
 801113e:	f7ff ff75 	bl	801102c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
 8011142:	b004      	add	sp, #16
 8011144:	bd10      	pop	{r4, pc}

08011146 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>:
 8011146:	b508      	push	{r3, lr}
 8011148:	f7ff ffee 	bl	8011128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
 801114c:	bd08      	pop	{r3, pc}

0801114e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 801114e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011150:	4604      	mov	r4, r0
 8011152:	4623      	mov	r3, r4
 8011154:	6840      	ldr	r0, [r0, #4]
 8011156:	f853 6b08 	ldr.w	r6, [r3], #8
 801115a:	429e      	cmp	r6, r3
 801115c:	bf18      	it	ne
 801115e:	68a3      	ldrne	r3, [r4, #8]
 8011160:	eb00 0502 	add.w	r5, r0, r2
 8011164:	bf08      	it	eq
 8011166:	230f      	moveq	r3, #15
 8011168:	429d      	cmp	r5, r3
 801116a:	d80a      	bhi.n	8011182 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 801116c:	b112      	cbz	r2, 8011174 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 801116e:	4430      	add	r0, r6
 8011170:	f7ff fe38 	bl	8010de4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8011174:	6823      	ldr	r3, [r4, #0]
 8011176:	6065      	str	r5, [r4, #4]
 8011178:	2200      	movs	r2, #0
 801117a:	4620      	mov	r0, r4
 801117c:	555a      	strb	r2, [r3, r5]
 801117e:	b002      	add	sp, #8
 8011180:	bd70      	pop	{r4, r5, r6, pc}
 8011182:	9200      	str	r2, [sp, #0]
 8011184:	460b      	mov	r3, r1
 8011186:	2200      	movs	r2, #0
 8011188:	4601      	mov	r1, r0
 801118a:	4620      	mov	r0, r4
 801118c:	f7ff fe9d 	bl	8010eca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8011190:	e7f0      	b.n	8011174 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

08011192 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
 8011192:	b508      	push	{r3, lr}
 8011194:	e9d1 1200 	ldrd	r1, r2, [r1]
 8011198:	f7ff ffd9 	bl	801114e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 801119c:	bd08      	pop	{r3, pc}

0801119e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
 801119e:	b508      	push	{r3, lr}
 80111a0:	f7ff fff7 	bl	8011192 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 80111a4:	bd08      	pop	{r3, pc}
	...

080111a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 80111a8:	b570      	push	{r4, r5, r6, lr}
 80111aa:	4b06      	ldr	r3, [pc, #24]	; (80111c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 80111ac:	4604      	mov	r4, r0
 80111ae:	460d      	mov	r5, r1
 80111b0:	4616      	mov	r6, r2
 80111b2:	2100      	movs	r1, #0
 80111b4:	f7ff fdfe 	bl	8010db4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 80111b8:	4632      	mov	r2, r6
 80111ba:	4629      	mov	r1, r5
 80111bc:	4620      	mov	r0, r4
 80111be:	f7ff ffc6 	bl	801114e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 80111c2:	bd70      	pop	{r4, r5, r6, pc}
 80111c4:	080168a1 	.word	0x080168a1

080111c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
 80111c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80111ca:	4604      	mov	r4, r0
 80111cc:	4608      	mov	r0, r1
 80111ce:	460d      	mov	r5, r1
 80111d0:	f7ef f85e 	bl	8000290 <strlen>
 80111d4:	4b06      	ldr	r3, [pc, #24]	; (80111f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x28>)
 80111d6:	9001      	str	r0, [sp, #4]
 80111d8:	4602      	mov	r2, r0
 80111da:	2100      	movs	r1, #0
 80111dc:	4620      	mov	r0, r4
 80111de:	f7ff fde9 	bl	8010db4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 80111e2:	9a01      	ldr	r2, [sp, #4]
 80111e4:	4629      	mov	r1, r5
 80111e6:	4620      	mov	r0, r4
 80111e8:	f7ff ffb1 	bl	801114e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 80111ec:	b003      	add	sp, #12
 80111ee:	bd30      	pop	{r4, r5, pc}
 80111f0:	080168a1 	.word	0x080168a1

080111f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>:
 80111f4:	b508      	push	{r3, lr}
 80111f6:	f7ff ffe7 	bl	80111c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 80111fa:	bd08      	pop	{r3, pc}

080111fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 80111fc:	6800      	ldr	r0, [r0, #0]
 80111fe:	4770      	bx	lr

08011200 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>:
 8011200:	4770      	bx	lr

08011202 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 8011202:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011204:	6846      	ldr	r6, [r0, #4]
 8011206:	9101      	str	r1, [sp, #4]
 8011208:	4605      	mov	r5, r0
 801120a:	4608      	mov	r0, r1
 801120c:	f7ef f840 	bl	8000290 <strlen>
 8011210:	4286      	cmp	r6, r0
 8011212:	4604      	mov	r4, r0
 8011214:	4632      	mov	r2, r6
 8011216:	9901      	ldr	r1, [sp, #4]
 8011218:	bf28      	it	cs
 801121a:	4602      	movcs	r2, r0
 801121c:	6828      	ldr	r0, [r5, #0]
 801121e:	f7ff fd9a 	bl	8010d56 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8011222:	b900      	cbnz	r0, 8011226 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 8011224:	1b30      	subs	r0, r6, r4
 8011226:	b002      	add	sp, #8
 8011228:	bd70      	pop	{r4, r5, r6, pc}
	...

0801122c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
 801122c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801122e:	4604      	mov	r4, r0
 8011230:	4616      	mov	r6, r2
 8011232:	460d      	mov	r5, r1
 8011234:	b919      	cbnz	r1, 801123e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 8011236:	b112      	cbz	r2, 801123e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 8011238:	480d      	ldr	r0, [pc, #52]	; (8011270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x44>)
 801123a:	f000 f87a 	bl	8011332 <_ZSt19__throw_logic_errorPKc>
 801123e:	1b73      	subs	r3, r6, r5
 8011240:	2b0f      	cmp	r3, #15
 8011242:	9301      	str	r3, [sp, #4]
 8011244:	d907      	bls.n	8011256 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x2a>
 8011246:	2200      	movs	r2, #0
 8011248:	a901      	add	r1, sp, #4
 801124a:	4620      	mov	r0, r4
 801124c:	f7ff fd88 	bl	8010d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8011250:	9b01      	ldr	r3, [sp, #4]
 8011252:	6020      	str	r0, [r4, #0]
 8011254:	60a3      	str	r3, [r4, #8]
 8011256:	4632      	mov	r2, r6
 8011258:	4629      	mov	r1, r5
 801125a:	6820      	ldr	r0, [r4, #0]
 801125c:	f7ff fe05 	bl	8010e6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
 8011260:	9b01      	ldr	r3, [sp, #4]
 8011262:	6822      	ldr	r2, [r4, #0]
 8011264:	6063      	str	r3, [r4, #4]
 8011266:	2100      	movs	r1, #0
 8011268:	54d1      	strb	r1, [r2, r3]
 801126a:	b002      	add	sp, #8
 801126c:	bd70      	pop	{r4, r5, r6, pc}
 801126e:	bf00      	nop
 8011270:	080168b6 	.word	0x080168b6

08011274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 8011274:	b538      	push	{r3, r4, r5, lr}
 8011276:	f100 0308 	add.w	r3, r0, #8
 801127a:	6003      	str	r3, [r0, #0]
 801127c:	e9d1 5200 	ldrd	r5, r2, [r1]
 8011280:	4604      	mov	r4, r0
 8011282:	f04f 0300 	mov.w	r3, #0
 8011286:	442a      	add	r2, r5
 8011288:	4629      	mov	r1, r5
 801128a:	f7ff ffcf 	bl	801122c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 801128e:	4620      	mov	r0, r4
 8011290:	bd38      	pop	{r3, r4, r5, pc}
	...

08011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
 8011294:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011296:	4604      	mov	r4, r0
 8011298:	4616      	mov	r6, r2
 801129a:	460d      	mov	r5, r1
 801129c:	b919      	cbnz	r1, 80112a6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x12>
 801129e:	b112      	cbz	r2, 80112a6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x12>
 80112a0:	480d      	ldr	r0, [pc, #52]	; (80112d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x44>)
 80112a2:	f000 f846 	bl	8011332 <_ZSt19__throw_logic_errorPKc>
 80112a6:	1b73      	subs	r3, r6, r5
 80112a8:	2b0f      	cmp	r3, #15
 80112aa:	9301      	str	r3, [sp, #4]
 80112ac:	d907      	bls.n	80112be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x2a>
 80112ae:	2200      	movs	r2, #0
 80112b0:	a901      	add	r1, sp, #4
 80112b2:	4620      	mov	r0, r4
 80112b4:	f7ff fd54 	bl	8010d60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 80112b8:	9b01      	ldr	r3, [sp, #4]
 80112ba:	6020      	str	r0, [r4, #0]
 80112bc:	60a3      	str	r3, [r4, #8]
 80112be:	4632      	mov	r2, r6
 80112c0:	4629      	mov	r1, r5
 80112c2:	6820      	ldr	r0, [r4, #0]
 80112c4:	f7ff fdd6 	bl	8010e74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
 80112c8:	9b01      	ldr	r3, [sp, #4]
 80112ca:	6822      	ldr	r2, [r4, #0]
 80112cc:	6063      	str	r3, [r4, #4]
 80112ce:	2100      	movs	r1, #0
 80112d0:	54d1      	strb	r1, [r2, r3]
 80112d2:	b002      	add	sp, #8
 80112d4:	bd70      	pop	{r4, r5, r6, pc}
 80112d6:	bf00      	nop
 80112d8:	080168b6 	.word	0x080168b6

080112dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>:
 80112dc:	b538      	push	{r3, r4, r5, lr}
 80112de:	f100 0308 	add.w	r3, r0, #8
 80112e2:	4604      	mov	r4, r0
 80112e4:	6003      	str	r3, [r0, #0]
 80112e6:	460d      	mov	r5, r1
 80112e8:	b159      	cbz	r1, 8011302 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x26>
 80112ea:	4608      	mov	r0, r1
 80112ec:	f7ee ffd0 	bl	8000290 <strlen>
 80112f0:	182a      	adds	r2, r5, r0
 80112f2:	4620      	mov	r0, r4
 80112f4:	f04f 0300 	mov.w	r3, #0
 80112f8:	4629      	mov	r1, r5
 80112fa:	f7ff ffcb 	bl	8011294 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
 80112fe:	4620      	mov	r0, r4
 8011300:	bd38      	pop	{r3, r4, r5, pc}
 8011302:	2201      	movs	r2, #1
 8011304:	e7f5      	b.n	80112f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x16>

08011306 <_ZdlPv>:
 8011306:	f000 b833 	b.w	8011370 <free>

0801130a <_Znwj>:
 801130a:	2801      	cmp	r0, #1
 801130c:	bf38      	it	cc
 801130e:	2001      	movcc	r0, #1
 8011310:	b510      	push	{r4, lr}
 8011312:	4604      	mov	r4, r0
 8011314:	4620      	mov	r0, r4
 8011316:	f000 f823 	bl	8011360 <malloc>
 801131a:	b100      	cbz	r0, 801131e <_Znwj+0x14>
 801131c:	bd10      	pop	{r4, pc}
 801131e:	f000 f80f 	bl	8011340 <_ZSt15get_new_handlerv>
 8011322:	b908      	cbnz	r0, 8011328 <_Znwj+0x1e>
 8011324:	f000 f814 	bl	8011350 <abort>
 8011328:	4780      	blx	r0
 801132a:	e7f3      	b.n	8011314 <_Znwj+0xa>

0801132c <_ZSt17__throw_bad_allocv>:
 801132c:	b508      	push	{r3, lr}
 801132e:	f000 f80f 	bl	8011350 <abort>

08011332 <_ZSt19__throw_logic_errorPKc>:
 8011332:	b508      	push	{r3, lr}
 8011334:	f000 f80c 	bl	8011350 <abort>

08011338 <_ZSt20__throw_length_errorPKc>:
 8011338:	b508      	push	{r3, lr}
 801133a:	f000 f809 	bl	8011350 <abort>
	...

08011340 <_ZSt15get_new_handlerv>:
 8011340:	4b02      	ldr	r3, [pc, #8]	; (801134c <_ZSt15get_new_handlerv+0xc>)
 8011342:	6818      	ldr	r0, [r3, #0]
 8011344:	f3bf 8f5b 	dmb	ish
 8011348:	4770      	bx	lr
 801134a:	bf00      	nop
 801134c:	20002fcc 	.word	0x20002fcc

08011350 <abort>:
 8011350:	b508      	push	{r3, lr}
 8011352:	2006      	movs	r0, #6
 8011354:	f001 fdd2 	bl	8012efc <raise>
 8011358:	2001      	movs	r0, #1
 801135a:	f7fa fe85 	bl	800c068 <_exit>
	...

08011360 <malloc>:
 8011360:	4b02      	ldr	r3, [pc, #8]	; (801136c <malloc+0xc>)
 8011362:	4601      	mov	r1, r0
 8011364:	6818      	ldr	r0, [r3, #0]
 8011366:	f000 b82b 	b.w	80113c0 <_malloc_r>
 801136a:	bf00      	nop
 801136c:	20000228 	.word	0x20000228

08011370 <free>:
 8011370:	4b02      	ldr	r3, [pc, #8]	; (801137c <free+0xc>)
 8011372:	4601      	mov	r1, r0
 8011374:	6818      	ldr	r0, [r3, #0]
 8011376:	f002 bcfd 	b.w	8013d74 <_free_r>
 801137a:	bf00      	nop
 801137c:	20000228 	.word	0x20000228

08011380 <sbrk_aligned>:
 8011380:	b570      	push	{r4, r5, r6, lr}
 8011382:	4e0e      	ldr	r6, [pc, #56]	; (80113bc <sbrk_aligned+0x3c>)
 8011384:	460c      	mov	r4, r1
 8011386:	6831      	ldr	r1, [r6, #0]
 8011388:	4605      	mov	r5, r0
 801138a:	b911      	cbnz	r1, 8011392 <sbrk_aligned+0x12>
 801138c:	f001 fe0a 	bl	8012fa4 <_sbrk_r>
 8011390:	6030      	str	r0, [r6, #0]
 8011392:	4621      	mov	r1, r4
 8011394:	4628      	mov	r0, r5
 8011396:	f001 fe05 	bl	8012fa4 <_sbrk_r>
 801139a:	1c43      	adds	r3, r0, #1
 801139c:	d00a      	beq.n	80113b4 <sbrk_aligned+0x34>
 801139e:	1cc4      	adds	r4, r0, #3
 80113a0:	f024 0403 	bic.w	r4, r4, #3
 80113a4:	42a0      	cmp	r0, r4
 80113a6:	d007      	beq.n	80113b8 <sbrk_aligned+0x38>
 80113a8:	1a21      	subs	r1, r4, r0
 80113aa:	4628      	mov	r0, r5
 80113ac:	f001 fdfa 	bl	8012fa4 <_sbrk_r>
 80113b0:	3001      	adds	r0, #1
 80113b2:	d101      	bne.n	80113b8 <sbrk_aligned+0x38>
 80113b4:	f04f 34ff 	mov.w	r4, #4294967295
 80113b8:	4620      	mov	r0, r4
 80113ba:	bd70      	pop	{r4, r5, r6, pc}
 80113bc:	20002fd4 	.word	0x20002fd4

080113c0 <_malloc_r>:
 80113c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80113c4:	1ccd      	adds	r5, r1, #3
 80113c6:	f025 0503 	bic.w	r5, r5, #3
 80113ca:	3508      	adds	r5, #8
 80113cc:	2d0c      	cmp	r5, #12
 80113ce:	bf38      	it	cc
 80113d0:	250c      	movcc	r5, #12
 80113d2:	2d00      	cmp	r5, #0
 80113d4:	4607      	mov	r7, r0
 80113d6:	db01      	blt.n	80113dc <_malloc_r+0x1c>
 80113d8:	42a9      	cmp	r1, r5
 80113da:	d905      	bls.n	80113e8 <_malloc_r+0x28>
 80113dc:	230c      	movs	r3, #12
 80113de:	603b      	str	r3, [r7, #0]
 80113e0:	2600      	movs	r6, #0
 80113e2:	4630      	mov	r0, r6
 80113e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80113e8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80114bc <_malloc_r+0xfc>
 80113ec:	f000 f868 	bl	80114c0 <__malloc_lock>
 80113f0:	f8d8 3000 	ldr.w	r3, [r8]
 80113f4:	461c      	mov	r4, r3
 80113f6:	bb5c      	cbnz	r4, 8011450 <_malloc_r+0x90>
 80113f8:	4629      	mov	r1, r5
 80113fa:	4638      	mov	r0, r7
 80113fc:	f7ff ffc0 	bl	8011380 <sbrk_aligned>
 8011400:	1c43      	adds	r3, r0, #1
 8011402:	4604      	mov	r4, r0
 8011404:	d155      	bne.n	80114b2 <_malloc_r+0xf2>
 8011406:	f8d8 4000 	ldr.w	r4, [r8]
 801140a:	4626      	mov	r6, r4
 801140c:	2e00      	cmp	r6, #0
 801140e:	d145      	bne.n	801149c <_malloc_r+0xdc>
 8011410:	2c00      	cmp	r4, #0
 8011412:	d048      	beq.n	80114a6 <_malloc_r+0xe6>
 8011414:	6823      	ldr	r3, [r4, #0]
 8011416:	4631      	mov	r1, r6
 8011418:	4638      	mov	r0, r7
 801141a:	eb04 0903 	add.w	r9, r4, r3
 801141e:	f001 fdc1 	bl	8012fa4 <_sbrk_r>
 8011422:	4581      	cmp	r9, r0
 8011424:	d13f      	bne.n	80114a6 <_malloc_r+0xe6>
 8011426:	6821      	ldr	r1, [r4, #0]
 8011428:	1a6d      	subs	r5, r5, r1
 801142a:	4629      	mov	r1, r5
 801142c:	4638      	mov	r0, r7
 801142e:	f7ff ffa7 	bl	8011380 <sbrk_aligned>
 8011432:	3001      	adds	r0, #1
 8011434:	d037      	beq.n	80114a6 <_malloc_r+0xe6>
 8011436:	6823      	ldr	r3, [r4, #0]
 8011438:	442b      	add	r3, r5
 801143a:	6023      	str	r3, [r4, #0]
 801143c:	f8d8 3000 	ldr.w	r3, [r8]
 8011440:	2b00      	cmp	r3, #0
 8011442:	d038      	beq.n	80114b6 <_malloc_r+0xf6>
 8011444:	685a      	ldr	r2, [r3, #4]
 8011446:	42a2      	cmp	r2, r4
 8011448:	d12b      	bne.n	80114a2 <_malloc_r+0xe2>
 801144a:	2200      	movs	r2, #0
 801144c:	605a      	str	r2, [r3, #4]
 801144e:	e00f      	b.n	8011470 <_malloc_r+0xb0>
 8011450:	6822      	ldr	r2, [r4, #0]
 8011452:	1b52      	subs	r2, r2, r5
 8011454:	d41f      	bmi.n	8011496 <_malloc_r+0xd6>
 8011456:	2a0b      	cmp	r2, #11
 8011458:	d917      	bls.n	801148a <_malloc_r+0xca>
 801145a:	1961      	adds	r1, r4, r5
 801145c:	42a3      	cmp	r3, r4
 801145e:	6025      	str	r5, [r4, #0]
 8011460:	bf18      	it	ne
 8011462:	6059      	strne	r1, [r3, #4]
 8011464:	6863      	ldr	r3, [r4, #4]
 8011466:	bf08      	it	eq
 8011468:	f8c8 1000 	streq.w	r1, [r8]
 801146c:	5162      	str	r2, [r4, r5]
 801146e:	604b      	str	r3, [r1, #4]
 8011470:	4638      	mov	r0, r7
 8011472:	f104 060b 	add.w	r6, r4, #11
 8011476:	f000 f829 	bl	80114cc <__malloc_unlock>
 801147a:	f026 0607 	bic.w	r6, r6, #7
 801147e:	1d23      	adds	r3, r4, #4
 8011480:	1af2      	subs	r2, r6, r3
 8011482:	d0ae      	beq.n	80113e2 <_malloc_r+0x22>
 8011484:	1b9b      	subs	r3, r3, r6
 8011486:	50a3      	str	r3, [r4, r2]
 8011488:	e7ab      	b.n	80113e2 <_malloc_r+0x22>
 801148a:	42a3      	cmp	r3, r4
 801148c:	6862      	ldr	r2, [r4, #4]
 801148e:	d1dd      	bne.n	801144c <_malloc_r+0x8c>
 8011490:	f8c8 2000 	str.w	r2, [r8]
 8011494:	e7ec      	b.n	8011470 <_malloc_r+0xb0>
 8011496:	4623      	mov	r3, r4
 8011498:	6864      	ldr	r4, [r4, #4]
 801149a:	e7ac      	b.n	80113f6 <_malloc_r+0x36>
 801149c:	4634      	mov	r4, r6
 801149e:	6876      	ldr	r6, [r6, #4]
 80114a0:	e7b4      	b.n	801140c <_malloc_r+0x4c>
 80114a2:	4613      	mov	r3, r2
 80114a4:	e7cc      	b.n	8011440 <_malloc_r+0x80>
 80114a6:	230c      	movs	r3, #12
 80114a8:	603b      	str	r3, [r7, #0]
 80114aa:	4638      	mov	r0, r7
 80114ac:	f000 f80e 	bl	80114cc <__malloc_unlock>
 80114b0:	e797      	b.n	80113e2 <_malloc_r+0x22>
 80114b2:	6025      	str	r5, [r4, #0]
 80114b4:	e7dc      	b.n	8011470 <_malloc_r+0xb0>
 80114b6:	605b      	str	r3, [r3, #4]
 80114b8:	deff      	udf	#255	; 0xff
 80114ba:	bf00      	nop
 80114bc:	20002fd0 	.word	0x20002fd0

080114c0 <__malloc_lock>:
 80114c0:	4801      	ldr	r0, [pc, #4]	; (80114c8 <__malloc_lock+0x8>)
 80114c2:	f001 bdbc 	b.w	801303e <__retarget_lock_acquire_recursive>
 80114c6:	bf00      	nop
 80114c8:	20003118 	.word	0x20003118

080114cc <__malloc_unlock>:
 80114cc:	4801      	ldr	r0, [pc, #4]	; (80114d4 <__malloc_unlock+0x8>)
 80114ce:	f001 bdb7 	b.w	8013040 <__retarget_lock_release_recursive>
 80114d2:	bf00      	nop
 80114d4:	20003118 	.word	0x20003118

080114d8 <realloc>:
 80114d8:	4b02      	ldr	r3, [pc, #8]	; (80114e4 <realloc+0xc>)
 80114da:	460a      	mov	r2, r1
 80114dc:	4601      	mov	r1, r0
 80114de:	6818      	ldr	r0, [r3, #0]
 80114e0:	f000 b802 	b.w	80114e8 <_realloc_r>
 80114e4:	20000228 	.word	0x20000228

080114e8 <_realloc_r>:
 80114e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114ec:	4680      	mov	r8, r0
 80114ee:	4614      	mov	r4, r2
 80114f0:	460e      	mov	r6, r1
 80114f2:	b921      	cbnz	r1, 80114fe <_realloc_r+0x16>
 80114f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80114f8:	4611      	mov	r1, r2
 80114fa:	f7ff bf61 	b.w	80113c0 <_malloc_r>
 80114fe:	b92a      	cbnz	r2, 801150c <_realloc_r+0x24>
 8011500:	f002 fc38 	bl	8013d74 <_free_r>
 8011504:	4625      	mov	r5, r4
 8011506:	4628      	mov	r0, r5
 8011508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801150c:	f003 fc95 	bl	8014e3a <_malloc_usable_size_r>
 8011510:	4284      	cmp	r4, r0
 8011512:	4607      	mov	r7, r0
 8011514:	d802      	bhi.n	801151c <_realloc_r+0x34>
 8011516:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 801151a:	d812      	bhi.n	8011542 <_realloc_r+0x5a>
 801151c:	4621      	mov	r1, r4
 801151e:	4640      	mov	r0, r8
 8011520:	f7ff ff4e 	bl	80113c0 <_malloc_r>
 8011524:	4605      	mov	r5, r0
 8011526:	2800      	cmp	r0, #0
 8011528:	d0ed      	beq.n	8011506 <_realloc_r+0x1e>
 801152a:	42bc      	cmp	r4, r7
 801152c:	4622      	mov	r2, r4
 801152e:	4631      	mov	r1, r6
 8011530:	bf28      	it	cs
 8011532:	463a      	movcs	r2, r7
 8011534:	f001 fd8d 	bl	8013052 <memcpy>
 8011538:	4631      	mov	r1, r6
 801153a:	4640      	mov	r0, r8
 801153c:	f002 fc1a 	bl	8013d74 <_free_r>
 8011540:	e7e1      	b.n	8011506 <_realloc_r+0x1e>
 8011542:	4635      	mov	r5, r6
 8011544:	e7df      	b.n	8011506 <_realloc_r+0x1e>

08011546 <sulp>:
 8011546:	b570      	push	{r4, r5, r6, lr}
 8011548:	4604      	mov	r4, r0
 801154a:	460d      	mov	r5, r1
 801154c:	ec45 4b10 	vmov	d0, r4, r5
 8011550:	4616      	mov	r6, r2
 8011552:	f003 fb31 	bl	8014bb8 <__ulp>
 8011556:	ec51 0b10 	vmov	r0, r1, d0
 801155a:	b17e      	cbz	r6, 801157c <sulp+0x36>
 801155c:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8011560:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8011564:	2b00      	cmp	r3, #0
 8011566:	dd09      	ble.n	801157c <sulp+0x36>
 8011568:	051b      	lsls	r3, r3, #20
 801156a:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 801156e:	2400      	movs	r4, #0
 8011570:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8011574:	4622      	mov	r2, r4
 8011576:	462b      	mov	r3, r5
 8011578:	f7ef f84e 	bl	8000618 <__aeabi_dmul>
 801157c:	bd70      	pop	{r4, r5, r6, pc}
	...

08011580 <_strtod_l>:
 8011580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011584:	ed2d 8b02 	vpush	{d8}
 8011588:	b09b      	sub	sp, #108	; 0x6c
 801158a:	4604      	mov	r4, r0
 801158c:	9213      	str	r2, [sp, #76]	; 0x4c
 801158e:	2200      	movs	r2, #0
 8011590:	9216      	str	r2, [sp, #88]	; 0x58
 8011592:	460d      	mov	r5, r1
 8011594:	f04f 0800 	mov.w	r8, #0
 8011598:	f04f 0900 	mov.w	r9, #0
 801159c:	460a      	mov	r2, r1
 801159e:	9215      	str	r2, [sp, #84]	; 0x54
 80115a0:	7811      	ldrb	r1, [r2, #0]
 80115a2:	292b      	cmp	r1, #43	; 0x2b
 80115a4:	d04c      	beq.n	8011640 <_strtod_l+0xc0>
 80115a6:	d83a      	bhi.n	801161e <_strtod_l+0x9e>
 80115a8:	290d      	cmp	r1, #13
 80115aa:	d834      	bhi.n	8011616 <_strtod_l+0x96>
 80115ac:	2908      	cmp	r1, #8
 80115ae:	d834      	bhi.n	801161a <_strtod_l+0x9a>
 80115b0:	2900      	cmp	r1, #0
 80115b2:	d03d      	beq.n	8011630 <_strtod_l+0xb0>
 80115b4:	2200      	movs	r2, #0
 80115b6:	920a      	str	r2, [sp, #40]	; 0x28
 80115b8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80115ba:	7832      	ldrb	r2, [r6, #0]
 80115bc:	2a30      	cmp	r2, #48	; 0x30
 80115be:	f040 80b4 	bne.w	801172a <_strtod_l+0x1aa>
 80115c2:	7872      	ldrb	r2, [r6, #1]
 80115c4:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 80115c8:	2a58      	cmp	r2, #88	; 0x58
 80115ca:	d170      	bne.n	80116ae <_strtod_l+0x12e>
 80115cc:	9302      	str	r3, [sp, #8]
 80115ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80115d0:	9301      	str	r3, [sp, #4]
 80115d2:	ab16      	add	r3, sp, #88	; 0x58
 80115d4:	9300      	str	r3, [sp, #0]
 80115d6:	4a8e      	ldr	r2, [pc, #568]	; (8011810 <_strtod_l+0x290>)
 80115d8:	ab17      	add	r3, sp, #92	; 0x5c
 80115da:	a915      	add	r1, sp, #84	; 0x54
 80115dc:	4620      	mov	r0, r4
 80115de:	f002 fc7d 	bl	8013edc <__gethex>
 80115e2:	f010 070f 	ands.w	r7, r0, #15
 80115e6:	4605      	mov	r5, r0
 80115e8:	d005      	beq.n	80115f6 <_strtod_l+0x76>
 80115ea:	2f06      	cmp	r7, #6
 80115ec:	d12a      	bne.n	8011644 <_strtod_l+0xc4>
 80115ee:	3601      	adds	r6, #1
 80115f0:	2300      	movs	r3, #0
 80115f2:	9615      	str	r6, [sp, #84]	; 0x54
 80115f4:	930a      	str	r3, [sp, #40]	; 0x28
 80115f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80115f8:	2b00      	cmp	r3, #0
 80115fa:	f040 857f 	bne.w	80120fc <_strtod_l+0xb7c>
 80115fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011600:	b1db      	cbz	r3, 801163a <_strtod_l+0xba>
 8011602:	4642      	mov	r2, r8
 8011604:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8011608:	ec43 2b10 	vmov	d0, r2, r3
 801160c:	b01b      	add	sp, #108	; 0x6c
 801160e:	ecbd 8b02 	vpop	{d8}
 8011612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011616:	2920      	cmp	r1, #32
 8011618:	d1cc      	bne.n	80115b4 <_strtod_l+0x34>
 801161a:	3201      	adds	r2, #1
 801161c:	e7bf      	b.n	801159e <_strtod_l+0x1e>
 801161e:	292d      	cmp	r1, #45	; 0x2d
 8011620:	d1c8      	bne.n	80115b4 <_strtod_l+0x34>
 8011622:	2101      	movs	r1, #1
 8011624:	910a      	str	r1, [sp, #40]	; 0x28
 8011626:	1c51      	adds	r1, r2, #1
 8011628:	9115      	str	r1, [sp, #84]	; 0x54
 801162a:	7852      	ldrb	r2, [r2, #1]
 801162c:	2a00      	cmp	r2, #0
 801162e:	d1c3      	bne.n	80115b8 <_strtod_l+0x38>
 8011630:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011632:	9515      	str	r5, [sp, #84]	; 0x54
 8011634:	2b00      	cmp	r3, #0
 8011636:	f040 855f 	bne.w	80120f8 <_strtod_l+0xb78>
 801163a:	4642      	mov	r2, r8
 801163c:	464b      	mov	r3, r9
 801163e:	e7e3      	b.n	8011608 <_strtod_l+0x88>
 8011640:	2100      	movs	r1, #0
 8011642:	e7ef      	b.n	8011624 <_strtod_l+0xa4>
 8011644:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011646:	b13a      	cbz	r2, 8011658 <_strtod_l+0xd8>
 8011648:	2135      	movs	r1, #53	; 0x35
 801164a:	a818      	add	r0, sp, #96	; 0x60
 801164c:	f003 fbb1 	bl	8014db2 <__copybits>
 8011650:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011652:	4620      	mov	r0, r4
 8011654:	f002 ff84 	bl	8014560 <_Bfree>
 8011658:	3f01      	subs	r7, #1
 801165a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 801165c:	2f04      	cmp	r7, #4
 801165e:	d806      	bhi.n	801166e <_strtod_l+0xee>
 8011660:	e8df f007 	tbb	[pc, r7]
 8011664:	201d0314 	.word	0x201d0314
 8011668:	14          	.byte	0x14
 8011669:	00          	.byte	0x00
 801166a:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
 801166e:	05e9      	lsls	r1, r5, #23
 8011670:	bf48      	it	mi
 8011672:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 8011676:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 801167a:	0d1b      	lsrs	r3, r3, #20
 801167c:	051b      	lsls	r3, r3, #20
 801167e:	2b00      	cmp	r3, #0
 8011680:	d1b9      	bne.n	80115f6 <_strtod_l+0x76>
 8011682:	f001 fcb1 	bl	8012fe8 <__errno>
 8011686:	2322      	movs	r3, #34	; 0x22
 8011688:	6003      	str	r3, [r0, #0]
 801168a:	e7b4      	b.n	80115f6 <_strtod_l+0x76>
 801168c:	e9dd 8318 	ldrd	r8, r3, [sp, #96]	; 0x60
 8011690:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8011694:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8011698:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 801169c:	e7e7      	b.n	801166e <_strtod_l+0xee>
 801169e:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8011818 <_strtod_l+0x298>
 80116a2:	e7e4      	b.n	801166e <_strtod_l+0xee>
 80116a4:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 80116a8:	f04f 38ff 	mov.w	r8, #4294967295
 80116ac:	e7df      	b.n	801166e <_strtod_l+0xee>
 80116ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80116b0:	1c5a      	adds	r2, r3, #1
 80116b2:	9215      	str	r2, [sp, #84]	; 0x54
 80116b4:	785b      	ldrb	r3, [r3, #1]
 80116b6:	2b30      	cmp	r3, #48	; 0x30
 80116b8:	d0f9      	beq.n	80116ae <_strtod_l+0x12e>
 80116ba:	2b00      	cmp	r3, #0
 80116bc:	d09b      	beq.n	80115f6 <_strtod_l+0x76>
 80116be:	2301      	movs	r3, #1
 80116c0:	f04f 0a00 	mov.w	sl, #0
 80116c4:	9304      	str	r3, [sp, #16]
 80116c6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80116c8:	930b      	str	r3, [sp, #44]	; 0x2c
 80116ca:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80116ce:	46d3      	mov	fp, sl
 80116d0:	220a      	movs	r2, #10
 80116d2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80116d4:	7806      	ldrb	r6, [r0, #0]
 80116d6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80116da:	b2d9      	uxtb	r1, r3
 80116dc:	2909      	cmp	r1, #9
 80116de:	d926      	bls.n	801172e <_strtod_l+0x1ae>
 80116e0:	494c      	ldr	r1, [pc, #304]	; (8011814 <_strtod_l+0x294>)
 80116e2:	2201      	movs	r2, #1
 80116e4:	f001 fbcf 	bl	8012e86 <strncmp>
 80116e8:	2800      	cmp	r0, #0
 80116ea:	d030      	beq.n	801174e <_strtod_l+0x1ce>
 80116ec:	2000      	movs	r0, #0
 80116ee:	4632      	mov	r2, r6
 80116f0:	9005      	str	r0, [sp, #20]
 80116f2:	465e      	mov	r6, fp
 80116f4:	4603      	mov	r3, r0
 80116f6:	2a65      	cmp	r2, #101	; 0x65
 80116f8:	d001      	beq.n	80116fe <_strtod_l+0x17e>
 80116fa:	2a45      	cmp	r2, #69	; 0x45
 80116fc:	d113      	bne.n	8011726 <_strtod_l+0x1a6>
 80116fe:	b91e      	cbnz	r6, 8011708 <_strtod_l+0x188>
 8011700:	9a04      	ldr	r2, [sp, #16]
 8011702:	4302      	orrs	r2, r0
 8011704:	d094      	beq.n	8011630 <_strtod_l+0xb0>
 8011706:	2600      	movs	r6, #0
 8011708:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801170a:	1c6a      	adds	r2, r5, #1
 801170c:	9215      	str	r2, [sp, #84]	; 0x54
 801170e:	786a      	ldrb	r2, [r5, #1]
 8011710:	2a2b      	cmp	r2, #43	; 0x2b
 8011712:	d074      	beq.n	80117fe <_strtod_l+0x27e>
 8011714:	2a2d      	cmp	r2, #45	; 0x2d
 8011716:	d078      	beq.n	801180a <_strtod_l+0x28a>
 8011718:	f04f 0c00 	mov.w	ip, #0
 801171c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8011720:	2909      	cmp	r1, #9
 8011722:	d97f      	bls.n	8011824 <_strtod_l+0x2a4>
 8011724:	9515      	str	r5, [sp, #84]	; 0x54
 8011726:	2700      	movs	r7, #0
 8011728:	e09e      	b.n	8011868 <_strtod_l+0x2e8>
 801172a:	2300      	movs	r3, #0
 801172c:	e7c8      	b.n	80116c0 <_strtod_l+0x140>
 801172e:	f1bb 0f08 	cmp.w	fp, #8
 8011732:	bfd8      	it	le
 8011734:	9909      	ldrle	r1, [sp, #36]	; 0x24
 8011736:	f100 0001 	add.w	r0, r0, #1
 801173a:	bfda      	itte	le
 801173c:	fb02 3301 	mlale	r3, r2, r1, r3
 8011740:	9309      	strle	r3, [sp, #36]	; 0x24
 8011742:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 8011746:	f10b 0b01 	add.w	fp, fp, #1
 801174a:	9015      	str	r0, [sp, #84]	; 0x54
 801174c:	e7c1      	b.n	80116d2 <_strtod_l+0x152>
 801174e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011750:	1c5a      	adds	r2, r3, #1
 8011752:	9215      	str	r2, [sp, #84]	; 0x54
 8011754:	785a      	ldrb	r2, [r3, #1]
 8011756:	f1bb 0f00 	cmp.w	fp, #0
 801175a:	d037      	beq.n	80117cc <_strtod_l+0x24c>
 801175c:	9005      	str	r0, [sp, #20]
 801175e:	465e      	mov	r6, fp
 8011760:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8011764:	2b09      	cmp	r3, #9
 8011766:	d912      	bls.n	801178e <_strtod_l+0x20e>
 8011768:	2301      	movs	r3, #1
 801176a:	e7c4      	b.n	80116f6 <_strtod_l+0x176>
 801176c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801176e:	1c5a      	adds	r2, r3, #1
 8011770:	9215      	str	r2, [sp, #84]	; 0x54
 8011772:	785a      	ldrb	r2, [r3, #1]
 8011774:	3001      	adds	r0, #1
 8011776:	2a30      	cmp	r2, #48	; 0x30
 8011778:	d0f8      	beq.n	801176c <_strtod_l+0x1ec>
 801177a:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 801177e:	2b08      	cmp	r3, #8
 8011780:	f200 84c1 	bhi.w	8012106 <_strtod_l+0xb86>
 8011784:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011786:	9005      	str	r0, [sp, #20]
 8011788:	2000      	movs	r0, #0
 801178a:	930b      	str	r3, [sp, #44]	; 0x2c
 801178c:	4606      	mov	r6, r0
 801178e:	3a30      	subs	r2, #48	; 0x30
 8011790:	f100 0301 	add.w	r3, r0, #1
 8011794:	d014      	beq.n	80117c0 <_strtod_l+0x240>
 8011796:	9905      	ldr	r1, [sp, #20]
 8011798:	4419      	add	r1, r3
 801179a:	9105      	str	r1, [sp, #20]
 801179c:	4633      	mov	r3, r6
 801179e:	eb00 0c06 	add.w	ip, r0, r6
 80117a2:	210a      	movs	r1, #10
 80117a4:	4563      	cmp	r3, ip
 80117a6:	d113      	bne.n	80117d0 <_strtod_l+0x250>
 80117a8:	1833      	adds	r3, r6, r0
 80117aa:	2b08      	cmp	r3, #8
 80117ac:	f106 0601 	add.w	r6, r6, #1
 80117b0:	4406      	add	r6, r0
 80117b2:	dc1a      	bgt.n	80117ea <_strtod_l+0x26a>
 80117b4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80117b6:	230a      	movs	r3, #10
 80117b8:	fb03 2301 	mla	r3, r3, r1, r2
 80117bc:	9309      	str	r3, [sp, #36]	; 0x24
 80117be:	2300      	movs	r3, #0
 80117c0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80117c2:	1c51      	adds	r1, r2, #1
 80117c4:	9115      	str	r1, [sp, #84]	; 0x54
 80117c6:	7852      	ldrb	r2, [r2, #1]
 80117c8:	4618      	mov	r0, r3
 80117ca:	e7c9      	b.n	8011760 <_strtod_l+0x1e0>
 80117cc:	4658      	mov	r0, fp
 80117ce:	e7d2      	b.n	8011776 <_strtod_l+0x1f6>
 80117d0:	2b08      	cmp	r3, #8
 80117d2:	f103 0301 	add.w	r3, r3, #1
 80117d6:	dc03      	bgt.n	80117e0 <_strtod_l+0x260>
 80117d8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80117da:	434f      	muls	r7, r1
 80117dc:	9709      	str	r7, [sp, #36]	; 0x24
 80117de:	e7e1      	b.n	80117a4 <_strtod_l+0x224>
 80117e0:	2b10      	cmp	r3, #16
 80117e2:	bfd8      	it	le
 80117e4:	fb01 fa0a 	mulle.w	sl, r1, sl
 80117e8:	e7dc      	b.n	80117a4 <_strtod_l+0x224>
 80117ea:	2e10      	cmp	r6, #16
 80117ec:	bfdc      	itt	le
 80117ee:	230a      	movle	r3, #10
 80117f0:	fb03 2a0a 	mlale	sl, r3, sl, r2
 80117f4:	e7e3      	b.n	80117be <_strtod_l+0x23e>
 80117f6:	2300      	movs	r3, #0
 80117f8:	9305      	str	r3, [sp, #20]
 80117fa:	2301      	movs	r3, #1
 80117fc:	e780      	b.n	8011700 <_strtod_l+0x180>
 80117fe:	f04f 0c00 	mov.w	ip, #0
 8011802:	1caa      	adds	r2, r5, #2
 8011804:	9215      	str	r2, [sp, #84]	; 0x54
 8011806:	78aa      	ldrb	r2, [r5, #2]
 8011808:	e788      	b.n	801171c <_strtod_l+0x19c>
 801180a:	f04f 0c01 	mov.w	ip, #1
 801180e:	e7f8      	b.n	8011802 <_strtod_l+0x282>
 8011810:	080168e4 	.word	0x080168e4
 8011814:	080168e0 	.word	0x080168e0
 8011818:	7ff00000 	.word	0x7ff00000
 801181c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801181e:	1c51      	adds	r1, r2, #1
 8011820:	9115      	str	r1, [sp, #84]	; 0x54
 8011822:	7852      	ldrb	r2, [r2, #1]
 8011824:	2a30      	cmp	r2, #48	; 0x30
 8011826:	d0f9      	beq.n	801181c <_strtod_l+0x29c>
 8011828:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 801182c:	2908      	cmp	r1, #8
 801182e:	f63f af7a 	bhi.w	8011726 <_strtod_l+0x1a6>
 8011832:	3a30      	subs	r2, #48	; 0x30
 8011834:	9208      	str	r2, [sp, #32]
 8011836:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011838:	920c      	str	r2, [sp, #48]	; 0x30
 801183a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801183c:	1c57      	adds	r7, r2, #1
 801183e:	9715      	str	r7, [sp, #84]	; 0x54
 8011840:	7852      	ldrb	r2, [r2, #1]
 8011842:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8011846:	f1be 0f09 	cmp.w	lr, #9
 801184a:	d938      	bls.n	80118be <_strtod_l+0x33e>
 801184c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801184e:	1a7f      	subs	r7, r7, r1
 8011850:	2f08      	cmp	r7, #8
 8011852:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8011856:	dc03      	bgt.n	8011860 <_strtod_l+0x2e0>
 8011858:	9908      	ldr	r1, [sp, #32]
 801185a:	428f      	cmp	r7, r1
 801185c:	bfa8      	it	ge
 801185e:	460f      	movge	r7, r1
 8011860:	f1bc 0f00 	cmp.w	ip, #0
 8011864:	d000      	beq.n	8011868 <_strtod_l+0x2e8>
 8011866:	427f      	negs	r7, r7
 8011868:	2e00      	cmp	r6, #0
 801186a:	d14f      	bne.n	801190c <_strtod_l+0x38c>
 801186c:	9904      	ldr	r1, [sp, #16]
 801186e:	4301      	orrs	r1, r0
 8011870:	f47f aec1 	bne.w	80115f6 <_strtod_l+0x76>
 8011874:	2b00      	cmp	r3, #0
 8011876:	f47f aedb 	bne.w	8011630 <_strtod_l+0xb0>
 801187a:	2a69      	cmp	r2, #105	; 0x69
 801187c:	d029      	beq.n	80118d2 <_strtod_l+0x352>
 801187e:	dc26      	bgt.n	80118ce <_strtod_l+0x34e>
 8011880:	2a49      	cmp	r2, #73	; 0x49
 8011882:	d026      	beq.n	80118d2 <_strtod_l+0x352>
 8011884:	2a4e      	cmp	r2, #78	; 0x4e
 8011886:	f47f aed3 	bne.w	8011630 <_strtod_l+0xb0>
 801188a:	499b      	ldr	r1, [pc, #620]	; (8011af8 <_strtod_l+0x578>)
 801188c:	a815      	add	r0, sp, #84	; 0x54
 801188e:	f002 fd65 	bl	801435c <__match>
 8011892:	2800      	cmp	r0, #0
 8011894:	f43f aecc 	beq.w	8011630 <_strtod_l+0xb0>
 8011898:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801189a:	781b      	ldrb	r3, [r3, #0]
 801189c:	2b28      	cmp	r3, #40	; 0x28
 801189e:	d12f      	bne.n	8011900 <_strtod_l+0x380>
 80118a0:	4996      	ldr	r1, [pc, #600]	; (8011afc <_strtod_l+0x57c>)
 80118a2:	aa18      	add	r2, sp, #96	; 0x60
 80118a4:	a815      	add	r0, sp, #84	; 0x54
 80118a6:	f002 fd6d 	bl	8014384 <__hexnan>
 80118aa:	2805      	cmp	r0, #5
 80118ac:	d128      	bne.n	8011900 <_strtod_l+0x380>
 80118ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80118b0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80118b4:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 80118b8:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 80118bc:	e69b      	b.n	80115f6 <_strtod_l+0x76>
 80118be:	9f08      	ldr	r7, [sp, #32]
 80118c0:	210a      	movs	r1, #10
 80118c2:	fb01 2107 	mla	r1, r1, r7, r2
 80118c6:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 80118ca:	9208      	str	r2, [sp, #32]
 80118cc:	e7b5      	b.n	801183a <_strtod_l+0x2ba>
 80118ce:	2a6e      	cmp	r2, #110	; 0x6e
 80118d0:	e7d9      	b.n	8011886 <_strtod_l+0x306>
 80118d2:	498b      	ldr	r1, [pc, #556]	; (8011b00 <_strtod_l+0x580>)
 80118d4:	a815      	add	r0, sp, #84	; 0x54
 80118d6:	f002 fd41 	bl	801435c <__match>
 80118da:	2800      	cmp	r0, #0
 80118dc:	f43f aea8 	beq.w	8011630 <_strtod_l+0xb0>
 80118e0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80118e2:	4988      	ldr	r1, [pc, #544]	; (8011b04 <_strtod_l+0x584>)
 80118e4:	3b01      	subs	r3, #1
 80118e6:	a815      	add	r0, sp, #84	; 0x54
 80118e8:	9315      	str	r3, [sp, #84]	; 0x54
 80118ea:	f002 fd37 	bl	801435c <__match>
 80118ee:	b910      	cbnz	r0, 80118f6 <_strtod_l+0x376>
 80118f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80118f2:	3301      	adds	r3, #1
 80118f4:	9315      	str	r3, [sp, #84]	; 0x54
 80118f6:	f8df 921c 	ldr.w	r9, [pc, #540]	; 8011b14 <_strtod_l+0x594>
 80118fa:	f04f 0800 	mov.w	r8, #0
 80118fe:	e67a      	b.n	80115f6 <_strtod_l+0x76>
 8011900:	4881      	ldr	r0, [pc, #516]	; (8011b08 <_strtod_l+0x588>)
 8011902:	f001 fbb5 	bl	8013070 <nan>
 8011906:	ec59 8b10 	vmov	r8, r9, d0
 801190a:	e674      	b.n	80115f6 <_strtod_l+0x76>
 801190c:	9b05      	ldr	r3, [sp, #20]
 801190e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011910:	1afb      	subs	r3, r7, r3
 8011912:	f1bb 0f00 	cmp.w	fp, #0
 8011916:	bf08      	it	eq
 8011918:	46b3      	moveq	fp, r6
 801191a:	2e10      	cmp	r6, #16
 801191c:	9308      	str	r3, [sp, #32]
 801191e:	4635      	mov	r5, r6
 8011920:	bfa8      	it	ge
 8011922:	2510      	movge	r5, #16
 8011924:	f7ee fdfe 	bl	8000524 <__aeabi_ui2d>
 8011928:	2e09      	cmp	r6, #9
 801192a:	4680      	mov	r8, r0
 801192c:	4689      	mov	r9, r1
 801192e:	dd13      	ble.n	8011958 <_strtod_l+0x3d8>
 8011930:	4b76      	ldr	r3, [pc, #472]	; (8011b0c <_strtod_l+0x58c>)
 8011932:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011936:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 801193a:	f7ee fe6d 	bl	8000618 <__aeabi_dmul>
 801193e:	4680      	mov	r8, r0
 8011940:	4650      	mov	r0, sl
 8011942:	4689      	mov	r9, r1
 8011944:	f7ee fdee 	bl	8000524 <__aeabi_ui2d>
 8011948:	4602      	mov	r2, r0
 801194a:	460b      	mov	r3, r1
 801194c:	4640      	mov	r0, r8
 801194e:	4649      	mov	r1, r9
 8011950:	f7ee fcac 	bl	80002ac <__adddf3>
 8011954:	4680      	mov	r8, r0
 8011956:	4689      	mov	r9, r1
 8011958:	2e0f      	cmp	r6, #15
 801195a:	dc38      	bgt.n	80119ce <_strtod_l+0x44e>
 801195c:	9b08      	ldr	r3, [sp, #32]
 801195e:	2b00      	cmp	r3, #0
 8011960:	f43f ae49 	beq.w	80115f6 <_strtod_l+0x76>
 8011964:	dd24      	ble.n	80119b0 <_strtod_l+0x430>
 8011966:	2b16      	cmp	r3, #22
 8011968:	dc0b      	bgt.n	8011982 <_strtod_l+0x402>
 801196a:	4968      	ldr	r1, [pc, #416]	; (8011b0c <_strtod_l+0x58c>)
 801196c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8011970:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011974:	4642      	mov	r2, r8
 8011976:	464b      	mov	r3, r9
 8011978:	f7ee fe4e 	bl	8000618 <__aeabi_dmul>
 801197c:	4680      	mov	r8, r0
 801197e:	4689      	mov	r9, r1
 8011980:	e639      	b.n	80115f6 <_strtod_l+0x76>
 8011982:	9a08      	ldr	r2, [sp, #32]
 8011984:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 8011988:	4293      	cmp	r3, r2
 801198a:	db20      	blt.n	80119ce <_strtod_l+0x44e>
 801198c:	4c5f      	ldr	r4, [pc, #380]	; (8011b0c <_strtod_l+0x58c>)
 801198e:	f1c6 060f 	rsb	r6, r6, #15
 8011992:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 8011996:	4642      	mov	r2, r8
 8011998:	464b      	mov	r3, r9
 801199a:	e9d1 0100 	ldrd	r0, r1, [r1]
 801199e:	f7ee fe3b 	bl	8000618 <__aeabi_dmul>
 80119a2:	9b08      	ldr	r3, [sp, #32]
 80119a4:	1b9e      	subs	r6, r3, r6
 80119a6:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 80119aa:	e9d4 2300 	ldrd	r2, r3, [r4]
 80119ae:	e7e3      	b.n	8011978 <_strtod_l+0x3f8>
 80119b0:	9b08      	ldr	r3, [sp, #32]
 80119b2:	3316      	adds	r3, #22
 80119b4:	db0b      	blt.n	80119ce <_strtod_l+0x44e>
 80119b6:	9b05      	ldr	r3, [sp, #20]
 80119b8:	1bdf      	subs	r7, r3, r7
 80119ba:	4b54      	ldr	r3, [pc, #336]	; (8011b0c <_strtod_l+0x58c>)
 80119bc:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80119c0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80119c4:	4640      	mov	r0, r8
 80119c6:	4649      	mov	r1, r9
 80119c8:	f7ee ff50 	bl	800086c <__aeabi_ddiv>
 80119cc:	e7d6      	b.n	801197c <_strtod_l+0x3fc>
 80119ce:	9b08      	ldr	r3, [sp, #32]
 80119d0:	1b75      	subs	r5, r6, r5
 80119d2:	441d      	add	r5, r3
 80119d4:	2d00      	cmp	r5, #0
 80119d6:	dd70      	ble.n	8011aba <_strtod_l+0x53a>
 80119d8:	f015 030f 	ands.w	r3, r5, #15
 80119dc:	d00a      	beq.n	80119f4 <_strtod_l+0x474>
 80119de:	494b      	ldr	r1, [pc, #300]	; (8011b0c <_strtod_l+0x58c>)
 80119e0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80119e4:	4642      	mov	r2, r8
 80119e6:	464b      	mov	r3, r9
 80119e8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80119ec:	f7ee fe14 	bl	8000618 <__aeabi_dmul>
 80119f0:	4680      	mov	r8, r0
 80119f2:	4689      	mov	r9, r1
 80119f4:	f035 050f 	bics.w	r5, r5, #15
 80119f8:	d04d      	beq.n	8011a96 <_strtod_l+0x516>
 80119fa:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 80119fe:	dd22      	ble.n	8011a46 <_strtod_l+0x4c6>
 8011a00:	2500      	movs	r5, #0
 8011a02:	46ab      	mov	fp, r5
 8011a04:	9509      	str	r5, [sp, #36]	; 0x24
 8011a06:	9505      	str	r5, [sp, #20]
 8011a08:	2322      	movs	r3, #34	; 0x22
 8011a0a:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8011b14 <_strtod_l+0x594>
 8011a0e:	6023      	str	r3, [r4, #0]
 8011a10:	f04f 0800 	mov.w	r8, #0
 8011a14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011a16:	2b00      	cmp	r3, #0
 8011a18:	f43f aded 	beq.w	80115f6 <_strtod_l+0x76>
 8011a1c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011a1e:	4620      	mov	r0, r4
 8011a20:	f002 fd9e 	bl	8014560 <_Bfree>
 8011a24:	9905      	ldr	r1, [sp, #20]
 8011a26:	4620      	mov	r0, r4
 8011a28:	f002 fd9a 	bl	8014560 <_Bfree>
 8011a2c:	4659      	mov	r1, fp
 8011a2e:	4620      	mov	r0, r4
 8011a30:	f002 fd96 	bl	8014560 <_Bfree>
 8011a34:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011a36:	4620      	mov	r0, r4
 8011a38:	f002 fd92 	bl	8014560 <_Bfree>
 8011a3c:	4629      	mov	r1, r5
 8011a3e:	4620      	mov	r0, r4
 8011a40:	f002 fd8e 	bl	8014560 <_Bfree>
 8011a44:	e5d7      	b.n	80115f6 <_strtod_l+0x76>
 8011a46:	4b32      	ldr	r3, [pc, #200]	; (8011b10 <_strtod_l+0x590>)
 8011a48:	9304      	str	r3, [sp, #16]
 8011a4a:	2300      	movs	r3, #0
 8011a4c:	112d      	asrs	r5, r5, #4
 8011a4e:	4640      	mov	r0, r8
 8011a50:	4649      	mov	r1, r9
 8011a52:	469a      	mov	sl, r3
 8011a54:	2d01      	cmp	r5, #1
 8011a56:	dc21      	bgt.n	8011a9c <_strtod_l+0x51c>
 8011a58:	b10b      	cbz	r3, 8011a5e <_strtod_l+0x4de>
 8011a5a:	4680      	mov	r8, r0
 8011a5c:	4689      	mov	r9, r1
 8011a5e:	492c      	ldr	r1, [pc, #176]	; (8011b10 <_strtod_l+0x590>)
 8011a60:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8011a64:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8011a68:	4642      	mov	r2, r8
 8011a6a:	464b      	mov	r3, r9
 8011a6c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011a70:	f7ee fdd2 	bl	8000618 <__aeabi_dmul>
 8011a74:	4b27      	ldr	r3, [pc, #156]	; (8011b14 <_strtod_l+0x594>)
 8011a76:	460a      	mov	r2, r1
 8011a78:	400b      	ands	r3, r1
 8011a7a:	4927      	ldr	r1, [pc, #156]	; (8011b18 <_strtod_l+0x598>)
 8011a7c:	428b      	cmp	r3, r1
 8011a7e:	4680      	mov	r8, r0
 8011a80:	d8be      	bhi.n	8011a00 <_strtod_l+0x480>
 8011a82:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8011a86:	428b      	cmp	r3, r1
 8011a88:	bf86      	itte	hi
 8011a8a:	f8df 9090 	ldrhi.w	r9, [pc, #144]	; 8011b1c <_strtod_l+0x59c>
 8011a8e:	f04f 38ff 	movhi.w	r8, #4294967295
 8011a92:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8011a96:	2300      	movs	r3, #0
 8011a98:	9304      	str	r3, [sp, #16]
 8011a9a:	e07b      	b.n	8011b94 <_strtod_l+0x614>
 8011a9c:	07ea      	lsls	r2, r5, #31
 8011a9e:	d505      	bpl.n	8011aac <_strtod_l+0x52c>
 8011aa0:	9b04      	ldr	r3, [sp, #16]
 8011aa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011aa6:	f7ee fdb7 	bl	8000618 <__aeabi_dmul>
 8011aaa:	2301      	movs	r3, #1
 8011aac:	9a04      	ldr	r2, [sp, #16]
 8011aae:	3208      	adds	r2, #8
 8011ab0:	f10a 0a01 	add.w	sl, sl, #1
 8011ab4:	106d      	asrs	r5, r5, #1
 8011ab6:	9204      	str	r2, [sp, #16]
 8011ab8:	e7cc      	b.n	8011a54 <_strtod_l+0x4d4>
 8011aba:	d0ec      	beq.n	8011a96 <_strtod_l+0x516>
 8011abc:	426d      	negs	r5, r5
 8011abe:	f015 020f 	ands.w	r2, r5, #15
 8011ac2:	d00a      	beq.n	8011ada <_strtod_l+0x55a>
 8011ac4:	4b11      	ldr	r3, [pc, #68]	; (8011b0c <_strtod_l+0x58c>)
 8011ac6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011aca:	4640      	mov	r0, r8
 8011acc:	4649      	mov	r1, r9
 8011ace:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011ad2:	f7ee fecb 	bl	800086c <__aeabi_ddiv>
 8011ad6:	4680      	mov	r8, r0
 8011ad8:	4689      	mov	r9, r1
 8011ada:	112d      	asrs	r5, r5, #4
 8011adc:	d0db      	beq.n	8011a96 <_strtod_l+0x516>
 8011ade:	2d1f      	cmp	r5, #31
 8011ae0:	dd1e      	ble.n	8011b20 <_strtod_l+0x5a0>
 8011ae2:	2500      	movs	r5, #0
 8011ae4:	46ab      	mov	fp, r5
 8011ae6:	9509      	str	r5, [sp, #36]	; 0x24
 8011ae8:	9505      	str	r5, [sp, #20]
 8011aea:	2322      	movs	r3, #34	; 0x22
 8011aec:	f04f 0800 	mov.w	r8, #0
 8011af0:	f04f 0900 	mov.w	r9, #0
 8011af4:	6023      	str	r3, [r4, #0]
 8011af6:	e78d      	b.n	8011a14 <_strtod_l+0x494>
 8011af8:	08016a46 	.word	0x08016a46
 8011afc:	080168f8 	.word	0x080168f8
 8011b00:	08016a3e 	.word	0x08016a3e
 8011b04:	08016a76 	.word	0x08016a76
 8011b08:	08016d23 	.word	0x08016d23
 8011b0c:	08016be8 	.word	0x08016be8
 8011b10:	08016bc0 	.word	0x08016bc0
 8011b14:	7ff00000 	.word	0x7ff00000
 8011b18:	7ca00000 	.word	0x7ca00000
 8011b1c:	7fefffff 	.word	0x7fefffff
 8011b20:	f015 0310 	ands.w	r3, r5, #16
 8011b24:	bf18      	it	ne
 8011b26:	236a      	movne	r3, #106	; 0x6a
 8011b28:	f8df a3a0 	ldr.w	sl, [pc, #928]	; 8011ecc <_strtod_l+0x94c>
 8011b2c:	9304      	str	r3, [sp, #16]
 8011b2e:	4640      	mov	r0, r8
 8011b30:	4649      	mov	r1, r9
 8011b32:	2300      	movs	r3, #0
 8011b34:	07ea      	lsls	r2, r5, #31
 8011b36:	d504      	bpl.n	8011b42 <_strtod_l+0x5c2>
 8011b38:	e9da 2300 	ldrd	r2, r3, [sl]
 8011b3c:	f7ee fd6c 	bl	8000618 <__aeabi_dmul>
 8011b40:	2301      	movs	r3, #1
 8011b42:	106d      	asrs	r5, r5, #1
 8011b44:	f10a 0a08 	add.w	sl, sl, #8
 8011b48:	d1f4      	bne.n	8011b34 <_strtod_l+0x5b4>
 8011b4a:	b10b      	cbz	r3, 8011b50 <_strtod_l+0x5d0>
 8011b4c:	4680      	mov	r8, r0
 8011b4e:	4689      	mov	r9, r1
 8011b50:	9b04      	ldr	r3, [sp, #16]
 8011b52:	b1bb      	cbz	r3, 8011b84 <_strtod_l+0x604>
 8011b54:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8011b58:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8011b5c:	2b00      	cmp	r3, #0
 8011b5e:	4649      	mov	r1, r9
 8011b60:	dd10      	ble.n	8011b84 <_strtod_l+0x604>
 8011b62:	2b1f      	cmp	r3, #31
 8011b64:	f340 811e 	ble.w	8011da4 <_strtod_l+0x824>
 8011b68:	2b34      	cmp	r3, #52	; 0x34
 8011b6a:	bfde      	ittt	le
 8011b6c:	f04f 33ff 	movle.w	r3, #4294967295
 8011b70:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8011b74:	4093      	lslle	r3, r2
 8011b76:	f04f 0800 	mov.w	r8, #0
 8011b7a:	bfcc      	ite	gt
 8011b7c:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8011b80:	ea03 0901 	andle.w	r9, r3, r1
 8011b84:	2200      	movs	r2, #0
 8011b86:	2300      	movs	r3, #0
 8011b88:	4640      	mov	r0, r8
 8011b8a:	4649      	mov	r1, r9
 8011b8c:	f7ee ffac 	bl	8000ae8 <__aeabi_dcmpeq>
 8011b90:	2800      	cmp	r0, #0
 8011b92:	d1a6      	bne.n	8011ae2 <_strtod_l+0x562>
 8011b94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011b96:	9300      	str	r3, [sp, #0]
 8011b98:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011b9a:	4633      	mov	r3, r6
 8011b9c:	465a      	mov	r2, fp
 8011b9e:	4620      	mov	r0, r4
 8011ba0:	f002 fd46 	bl	8014630 <__s2b>
 8011ba4:	9009      	str	r0, [sp, #36]	; 0x24
 8011ba6:	2800      	cmp	r0, #0
 8011ba8:	f43f af2a 	beq.w	8011a00 <_strtod_l+0x480>
 8011bac:	9a08      	ldr	r2, [sp, #32]
 8011bae:	9b05      	ldr	r3, [sp, #20]
 8011bb0:	2a00      	cmp	r2, #0
 8011bb2:	eba3 0307 	sub.w	r3, r3, r7
 8011bb6:	bfa8      	it	ge
 8011bb8:	2300      	movge	r3, #0
 8011bba:	930c      	str	r3, [sp, #48]	; 0x30
 8011bbc:	2500      	movs	r5, #0
 8011bbe:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8011bc2:	9312      	str	r3, [sp, #72]	; 0x48
 8011bc4:	46ab      	mov	fp, r5
 8011bc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011bc8:	4620      	mov	r0, r4
 8011bca:	6859      	ldr	r1, [r3, #4]
 8011bcc:	f002 fc88 	bl	80144e0 <_Balloc>
 8011bd0:	9005      	str	r0, [sp, #20]
 8011bd2:	2800      	cmp	r0, #0
 8011bd4:	f43f af18 	beq.w	8011a08 <_strtod_l+0x488>
 8011bd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011bda:	691a      	ldr	r2, [r3, #16]
 8011bdc:	3202      	adds	r2, #2
 8011bde:	f103 010c 	add.w	r1, r3, #12
 8011be2:	0092      	lsls	r2, r2, #2
 8011be4:	300c      	adds	r0, #12
 8011be6:	f001 fa34 	bl	8013052 <memcpy>
 8011bea:	ec49 8b10 	vmov	d0, r8, r9
 8011bee:	aa18      	add	r2, sp, #96	; 0x60
 8011bf0:	a917      	add	r1, sp, #92	; 0x5c
 8011bf2:	4620      	mov	r0, r4
 8011bf4:	f003 f850 	bl	8014c98 <__d2b>
 8011bf8:	ec49 8b18 	vmov	d8, r8, r9
 8011bfc:	9016      	str	r0, [sp, #88]	; 0x58
 8011bfe:	2800      	cmp	r0, #0
 8011c00:	f43f af02 	beq.w	8011a08 <_strtod_l+0x488>
 8011c04:	2101      	movs	r1, #1
 8011c06:	4620      	mov	r0, r4
 8011c08:	f002 fdaa 	bl	8014760 <__i2b>
 8011c0c:	4683      	mov	fp, r0
 8011c0e:	2800      	cmp	r0, #0
 8011c10:	f43f aefa 	beq.w	8011a08 <_strtod_l+0x488>
 8011c14:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8011c16:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8011c18:	2e00      	cmp	r6, #0
 8011c1a:	bfab      	itete	ge
 8011c1c:	9b0c      	ldrge	r3, [sp, #48]	; 0x30
 8011c1e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 8011c20:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8011c22:	f8dd a030 	ldrlt.w	sl, [sp, #48]	; 0x30
 8011c26:	bfac      	ite	ge
 8011c28:	eb06 0a03 	addge.w	sl, r6, r3
 8011c2c:	1b9f      	sublt	r7, r3, r6
 8011c2e:	9b04      	ldr	r3, [sp, #16]
 8011c30:	1af6      	subs	r6, r6, r3
 8011c32:	4416      	add	r6, r2
 8011c34:	4ba0      	ldr	r3, [pc, #640]	; (8011eb8 <_strtod_l+0x938>)
 8011c36:	3e01      	subs	r6, #1
 8011c38:	429e      	cmp	r6, r3
 8011c3a:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8011c3e:	f280 80c4 	bge.w	8011dca <_strtod_l+0x84a>
 8011c42:	1b9b      	subs	r3, r3, r6
 8011c44:	2b1f      	cmp	r3, #31
 8011c46:	eba2 0203 	sub.w	r2, r2, r3
 8011c4a:	f04f 0101 	mov.w	r1, #1
 8011c4e:	f300 80b0 	bgt.w	8011db2 <_strtod_l+0x832>
 8011c52:	fa01 f303 	lsl.w	r3, r1, r3
 8011c56:	930e      	str	r3, [sp, #56]	; 0x38
 8011c58:	2300      	movs	r3, #0
 8011c5a:	930d      	str	r3, [sp, #52]	; 0x34
 8011c5c:	eb0a 0602 	add.w	r6, sl, r2
 8011c60:	9b04      	ldr	r3, [sp, #16]
 8011c62:	45b2      	cmp	sl, r6
 8011c64:	4417      	add	r7, r2
 8011c66:	441f      	add	r7, r3
 8011c68:	4653      	mov	r3, sl
 8011c6a:	bfa8      	it	ge
 8011c6c:	4633      	movge	r3, r6
 8011c6e:	42bb      	cmp	r3, r7
 8011c70:	bfa8      	it	ge
 8011c72:	463b      	movge	r3, r7
 8011c74:	2b00      	cmp	r3, #0
 8011c76:	bfc2      	ittt	gt
 8011c78:	1af6      	subgt	r6, r6, r3
 8011c7a:	1aff      	subgt	r7, r7, r3
 8011c7c:	ebaa 0a03 	subgt.w	sl, sl, r3
 8011c80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011c82:	2b00      	cmp	r3, #0
 8011c84:	dd17      	ble.n	8011cb6 <_strtod_l+0x736>
 8011c86:	4659      	mov	r1, fp
 8011c88:	461a      	mov	r2, r3
 8011c8a:	4620      	mov	r0, r4
 8011c8c:	f002 fe28 	bl	80148e0 <__pow5mult>
 8011c90:	4683      	mov	fp, r0
 8011c92:	2800      	cmp	r0, #0
 8011c94:	f43f aeb8 	beq.w	8011a08 <_strtod_l+0x488>
 8011c98:	4601      	mov	r1, r0
 8011c9a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011c9c:	4620      	mov	r0, r4
 8011c9e:	f002 fd75 	bl	801478c <__multiply>
 8011ca2:	900b      	str	r0, [sp, #44]	; 0x2c
 8011ca4:	2800      	cmp	r0, #0
 8011ca6:	f43f aeaf 	beq.w	8011a08 <_strtod_l+0x488>
 8011caa:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011cac:	4620      	mov	r0, r4
 8011cae:	f002 fc57 	bl	8014560 <_Bfree>
 8011cb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011cb4:	9316      	str	r3, [sp, #88]	; 0x58
 8011cb6:	2e00      	cmp	r6, #0
 8011cb8:	f300 808c 	bgt.w	8011dd4 <_strtod_l+0x854>
 8011cbc:	9b08      	ldr	r3, [sp, #32]
 8011cbe:	2b00      	cmp	r3, #0
 8011cc0:	dd08      	ble.n	8011cd4 <_strtod_l+0x754>
 8011cc2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011cc4:	9905      	ldr	r1, [sp, #20]
 8011cc6:	4620      	mov	r0, r4
 8011cc8:	f002 fe0a 	bl	80148e0 <__pow5mult>
 8011ccc:	9005      	str	r0, [sp, #20]
 8011cce:	2800      	cmp	r0, #0
 8011cd0:	f43f ae9a 	beq.w	8011a08 <_strtod_l+0x488>
 8011cd4:	2f00      	cmp	r7, #0
 8011cd6:	dd08      	ble.n	8011cea <_strtod_l+0x76a>
 8011cd8:	9905      	ldr	r1, [sp, #20]
 8011cda:	463a      	mov	r2, r7
 8011cdc:	4620      	mov	r0, r4
 8011cde:	f002 fe59 	bl	8014994 <__lshift>
 8011ce2:	9005      	str	r0, [sp, #20]
 8011ce4:	2800      	cmp	r0, #0
 8011ce6:	f43f ae8f 	beq.w	8011a08 <_strtod_l+0x488>
 8011cea:	f1ba 0f00 	cmp.w	sl, #0
 8011cee:	dd08      	ble.n	8011d02 <_strtod_l+0x782>
 8011cf0:	4659      	mov	r1, fp
 8011cf2:	4652      	mov	r2, sl
 8011cf4:	4620      	mov	r0, r4
 8011cf6:	f002 fe4d 	bl	8014994 <__lshift>
 8011cfa:	4683      	mov	fp, r0
 8011cfc:	2800      	cmp	r0, #0
 8011cfe:	f43f ae83 	beq.w	8011a08 <_strtod_l+0x488>
 8011d02:	9a05      	ldr	r2, [sp, #20]
 8011d04:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011d06:	4620      	mov	r0, r4
 8011d08:	f002 fecc 	bl	8014aa4 <__mdiff>
 8011d0c:	4605      	mov	r5, r0
 8011d0e:	2800      	cmp	r0, #0
 8011d10:	f43f ae7a 	beq.w	8011a08 <_strtod_l+0x488>
 8011d14:	68c3      	ldr	r3, [r0, #12]
 8011d16:	930b      	str	r3, [sp, #44]	; 0x2c
 8011d18:	2300      	movs	r3, #0
 8011d1a:	60c3      	str	r3, [r0, #12]
 8011d1c:	4659      	mov	r1, fp
 8011d1e:	f002 fea5 	bl	8014a6c <__mcmp>
 8011d22:	2800      	cmp	r0, #0
 8011d24:	da60      	bge.n	8011de8 <_strtod_l+0x868>
 8011d26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011d28:	ea53 0308 	orrs.w	r3, r3, r8
 8011d2c:	f040 8084 	bne.w	8011e38 <_strtod_l+0x8b8>
 8011d30:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8011d34:	2b00      	cmp	r3, #0
 8011d36:	d17f      	bne.n	8011e38 <_strtod_l+0x8b8>
 8011d38:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8011d3c:	0d1b      	lsrs	r3, r3, #20
 8011d3e:	051b      	lsls	r3, r3, #20
 8011d40:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8011d44:	d978      	bls.n	8011e38 <_strtod_l+0x8b8>
 8011d46:	696b      	ldr	r3, [r5, #20]
 8011d48:	b913      	cbnz	r3, 8011d50 <_strtod_l+0x7d0>
 8011d4a:	692b      	ldr	r3, [r5, #16]
 8011d4c:	2b01      	cmp	r3, #1
 8011d4e:	dd73      	ble.n	8011e38 <_strtod_l+0x8b8>
 8011d50:	4629      	mov	r1, r5
 8011d52:	2201      	movs	r2, #1
 8011d54:	4620      	mov	r0, r4
 8011d56:	f002 fe1d 	bl	8014994 <__lshift>
 8011d5a:	4659      	mov	r1, fp
 8011d5c:	4605      	mov	r5, r0
 8011d5e:	f002 fe85 	bl	8014a6c <__mcmp>
 8011d62:	2800      	cmp	r0, #0
 8011d64:	dd68      	ble.n	8011e38 <_strtod_l+0x8b8>
 8011d66:	9904      	ldr	r1, [sp, #16]
 8011d68:	4a54      	ldr	r2, [pc, #336]	; (8011ebc <_strtod_l+0x93c>)
 8011d6a:	464b      	mov	r3, r9
 8011d6c:	2900      	cmp	r1, #0
 8011d6e:	f000 8084 	beq.w	8011e7a <_strtod_l+0x8fa>
 8011d72:	ea02 0109 	and.w	r1, r2, r9
 8011d76:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8011d7a:	dc7e      	bgt.n	8011e7a <_strtod_l+0x8fa>
 8011d7c:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8011d80:	f77f aeb3 	ble.w	8011aea <_strtod_l+0x56a>
 8011d84:	4b4e      	ldr	r3, [pc, #312]	; (8011ec0 <_strtod_l+0x940>)
 8011d86:	4640      	mov	r0, r8
 8011d88:	4649      	mov	r1, r9
 8011d8a:	2200      	movs	r2, #0
 8011d8c:	f7ee fc44 	bl	8000618 <__aeabi_dmul>
 8011d90:	4b4a      	ldr	r3, [pc, #296]	; (8011ebc <_strtod_l+0x93c>)
 8011d92:	400b      	ands	r3, r1
 8011d94:	4680      	mov	r8, r0
 8011d96:	4689      	mov	r9, r1
 8011d98:	2b00      	cmp	r3, #0
 8011d9a:	f47f ae3f 	bne.w	8011a1c <_strtod_l+0x49c>
 8011d9e:	2322      	movs	r3, #34	; 0x22
 8011da0:	6023      	str	r3, [r4, #0]
 8011da2:	e63b      	b.n	8011a1c <_strtod_l+0x49c>
 8011da4:	f04f 32ff 	mov.w	r2, #4294967295
 8011da8:	fa02 f303 	lsl.w	r3, r2, r3
 8011dac:	ea03 0808 	and.w	r8, r3, r8
 8011db0:	e6e8      	b.n	8011b84 <_strtod_l+0x604>
 8011db2:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 8011db6:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 8011dba:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 8011dbe:	36e2      	adds	r6, #226	; 0xe2
 8011dc0:	fa01 f306 	lsl.w	r3, r1, r6
 8011dc4:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 8011dc8:	e748      	b.n	8011c5c <_strtod_l+0x6dc>
 8011dca:	2100      	movs	r1, #0
 8011dcc:	2301      	movs	r3, #1
 8011dce:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
 8011dd2:	e743      	b.n	8011c5c <_strtod_l+0x6dc>
 8011dd4:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011dd6:	4632      	mov	r2, r6
 8011dd8:	4620      	mov	r0, r4
 8011dda:	f002 fddb 	bl	8014994 <__lshift>
 8011dde:	9016      	str	r0, [sp, #88]	; 0x58
 8011de0:	2800      	cmp	r0, #0
 8011de2:	f47f af6b 	bne.w	8011cbc <_strtod_l+0x73c>
 8011de6:	e60f      	b.n	8011a08 <_strtod_l+0x488>
 8011de8:	46ca      	mov	sl, r9
 8011dea:	d171      	bne.n	8011ed0 <_strtod_l+0x950>
 8011dec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011dee:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8011df2:	b352      	cbz	r2, 8011e4a <_strtod_l+0x8ca>
 8011df4:	4a33      	ldr	r2, [pc, #204]	; (8011ec4 <_strtod_l+0x944>)
 8011df6:	4293      	cmp	r3, r2
 8011df8:	d12a      	bne.n	8011e50 <_strtod_l+0x8d0>
 8011dfa:	9b04      	ldr	r3, [sp, #16]
 8011dfc:	4641      	mov	r1, r8
 8011dfe:	b1fb      	cbz	r3, 8011e40 <_strtod_l+0x8c0>
 8011e00:	4b2e      	ldr	r3, [pc, #184]	; (8011ebc <_strtod_l+0x93c>)
 8011e02:	ea09 0303 	and.w	r3, r9, r3
 8011e06:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8011e0a:	f04f 32ff 	mov.w	r2, #4294967295
 8011e0e:	d81a      	bhi.n	8011e46 <_strtod_l+0x8c6>
 8011e10:	0d1b      	lsrs	r3, r3, #20
 8011e12:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8011e16:	fa02 f303 	lsl.w	r3, r2, r3
 8011e1a:	4299      	cmp	r1, r3
 8011e1c:	d118      	bne.n	8011e50 <_strtod_l+0x8d0>
 8011e1e:	4b2a      	ldr	r3, [pc, #168]	; (8011ec8 <_strtod_l+0x948>)
 8011e20:	459a      	cmp	sl, r3
 8011e22:	d102      	bne.n	8011e2a <_strtod_l+0x8aa>
 8011e24:	3101      	adds	r1, #1
 8011e26:	f43f adef 	beq.w	8011a08 <_strtod_l+0x488>
 8011e2a:	4b24      	ldr	r3, [pc, #144]	; (8011ebc <_strtod_l+0x93c>)
 8011e2c:	ea0a 0303 	and.w	r3, sl, r3
 8011e30:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 8011e34:	f04f 0800 	mov.w	r8, #0
 8011e38:	9b04      	ldr	r3, [sp, #16]
 8011e3a:	2b00      	cmp	r3, #0
 8011e3c:	d1a2      	bne.n	8011d84 <_strtod_l+0x804>
 8011e3e:	e5ed      	b.n	8011a1c <_strtod_l+0x49c>
 8011e40:	f04f 33ff 	mov.w	r3, #4294967295
 8011e44:	e7e9      	b.n	8011e1a <_strtod_l+0x89a>
 8011e46:	4613      	mov	r3, r2
 8011e48:	e7e7      	b.n	8011e1a <_strtod_l+0x89a>
 8011e4a:	ea53 0308 	orrs.w	r3, r3, r8
 8011e4e:	d08a      	beq.n	8011d66 <_strtod_l+0x7e6>
 8011e50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011e52:	b1e3      	cbz	r3, 8011e8e <_strtod_l+0x90e>
 8011e54:	ea13 0f0a 	tst.w	r3, sl
 8011e58:	d0ee      	beq.n	8011e38 <_strtod_l+0x8b8>
 8011e5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011e5c:	9a04      	ldr	r2, [sp, #16]
 8011e5e:	4640      	mov	r0, r8
 8011e60:	4649      	mov	r1, r9
 8011e62:	b1c3      	cbz	r3, 8011e96 <_strtod_l+0x916>
 8011e64:	f7ff fb6f 	bl	8011546 <sulp>
 8011e68:	4602      	mov	r2, r0
 8011e6a:	460b      	mov	r3, r1
 8011e6c:	ec51 0b18 	vmov	r0, r1, d8
 8011e70:	f7ee fa1c 	bl	80002ac <__adddf3>
 8011e74:	4680      	mov	r8, r0
 8011e76:	4689      	mov	r9, r1
 8011e78:	e7de      	b.n	8011e38 <_strtod_l+0x8b8>
 8011e7a:	4013      	ands	r3, r2
 8011e7c:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8011e80:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8011e84:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8011e88:	f04f 38ff 	mov.w	r8, #4294967295
 8011e8c:	e7d4      	b.n	8011e38 <_strtod_l+0x8b8>
 8011e8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011e90:	ea13 0f08 	tst.w	r3, r8
 8011e94:	e7e0      	b.n	8011e58 <_strtod_l+0x8d8>
 8011e96:	f7ff fb56 	bl	8011546 <sulp>
 8011e9a:	4602      	mov	r2, r0
 8011e9c:	460b      	mov	r3, r1
 8011e9e:	ec51 0b18 	vmov	r0, r1, d8
 8011ea2:	f7ee fa01 	bl	80002a8 <__aeabi_dsub>
 8011ea6:	2200      	movs	r2, #0
 8011ea8:	2300      	movs	r3, #0
 8011eaa:	4680      	mov	r8, r0
 8011eac:	4689      	mov	r9, r1
 8011eae:	f7ee fe1b 	bl	8000ae8 <__aeabi_dcmpeq>
 8011eb2:	2800      	cmp	r0, #0
 8011eb4:	d0c0      	beq.n	8011e38 <_strtod_l+0x8b8>
 8011eb6:	e618      	b.n	8011aea <_strtod_l+0x56a>
 8011eb8:	fffffc02 	.word	0xfffffc02
 8011ebc:	7ff00000 	.word	0x7ff00000
 8011ec0:	39500000 	.word	0x39500000
 8011ec4:	000fffff 	.word	0x000fffff
 8011ec8:	7fefffff 	.word	0x7fefffff
 8011ecc:	08016910 	.word	0x08016910
 8011ed0:	4659      	mov	r1, fp
 8011ed2:	4628      	mov	r0, r5
 8011ed4:	f002 ff3a 	bl	8014d4c <__ratio>
 8011ed8:	ec57 6b10 	vmov	r6, r7, d0
 8011edc:	ee10 0a10 	vmov	r0, s0
 8011ee0:	2200      	movs	r2, #0
 8011ee2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8011ee6:	4639      	mov	r1, r7
 8011ee8:	f7ee fe12 	bl	8000b10 <__aeabi_dcmple>
 8011eec:	2800      	cmp	r0, #0
 8011eee:	d071      	beq.n	8011fd4 <_strtod_l+0xa54>
 8011ef0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011ef2:	2b00      	cmp	r3, #0
 8011ef4:	d17c      	bne.n	8011ff0 <_strtod_l+0xa70>
 8011ef6:	f1b8 0f00 	cmp.w	r8, #0
 8011efa:	d15a      	bne.n	8011fb2 <_strtod_l+0xa32>
 8011efc:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8011f00:	2b00      	cmp	r3, #0
 8011f02:	d15d      	bne.n	8011fc0 <_strtod_l+0xa40>
 8011f04:	4b90      	ldr	r3, [pc, #576]	; (8012148 <_strtod_l+0xbc8>)
 8011f06:	2200      	movs	r2, #0
 8011f08:	4630      	mov	r0, r6
 8011f0a:	4639      	mov	r1, r7
 8011f0c:	f7ee fdf6 	bl	8000afc <__aeabi_dcmplt>
 8011f10:	2800      	cmp	r0, #0
 8011f12:	d15c      	bne.n	8011fce <_strtod_l+0xa4e>
 8011f14:	4630      	mov	r0, r6
 8011f16:	4639      	mov	r1, r7
 8011f18:	4b8c      	ldr	r3, [pc, #560]	; (801214c <_strtod_l+0xbcc>)
 8011f1a:	2200      	movs	r2, #0
 8011f1c:	f7ee fb7c 	bl	8000618 <__aeabi_dmul>
 8011f20:	4606      	mov	r6, r0
 8011f22:	460f      	mov	r7, r1
 8011f24:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8011f28:	9606      	str	r6, [sp, #24]
 8011f2a:	9307      	str	r3, [sp, #28]
 8011f2c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8011f30:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8011f34:	4b86      	ldr	r3, [pc, #536]	; (8012150 <_strtod_l+0xbd0>)
 8011f36:	ea0a 0303 	and.w	r3, sl, r3
 8011f3a:	930d      	str	r3, [sp, #52]	; 0x34
 8011f3c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011f3e:	4b85      	ldr	r3, [pc, #532]	; (8012154 <_strtod_l+0xbd4>)
 8011f40:	429a      	cmp	r2, r3
 8011f42:	f040 8090 	bne.w	8012066 <_strtod_l+0xae6>
 8011f46:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 8011f4a:	ec49 8b10 	vmov	d0, r8, r9
 8011f4e:	f002 fe33 	bl	8014bb8 <__ulp>
 8011f52:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8011f56:	ec51 0b10 	vmov	r0, r1, d0
 8011f5a:	f7ee fb5d 	bl	8000618 <__aeabi_dmul>
 8011f5e:	4642      	mov	r2, r8
 8011f60:	464b      	mov	r3, r9
 8011f62:	f7ee f9a3 	bl	80002ac <__adddf3>
 8011f66:	460b      	mov	r3, r1
 8011f68:	4979      	ldr	r1, [pc, #484]	; (8012150 <_strtod_l+0xbd0>)
 8011f6a:	4a7b      	ldr	r2, [pc, #492]	; (8012158 <_strtod_l+0xbd8>)
 8011f6c:	4019      	ands	r1, r3
 8011f6e:	4291      	cmp	r1, r2
 8011f70:	4680      	mov	r8, r0
 8011f72:	d944      	bls.n	8011ffe <_strtod_l+0xa7e>
 8011f74:	ee18 2a90 	vmov	r2, s17
 8011f78:	4b78      	ldr	r3, [pc, #480]	; (801215c <_strtod_l+0xbdc>)
 8011f7a:	429a      	cmp	r2, r3
 8011f7c:	d104      	bne.n	8011f88 <_strtod_l+0xa08>
 8011f7e:	ee18 3a10 	vmov	r3, s16
 8011f82:	3301      	adds	r3, #1
 8011f84:	f43f ad40 	beq.w	8011a08 <_strtod_l+0x488>
 8011f88:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 801215c <_strtod_l+0xbdc>
 8011f8c:	f04f 38ff 	mov.w	r8, #4294967295
 8011f90:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011f92:	4620      	mov	r0, r4
 8011f94:	f002 fae4 	bl	8014560 <_Bfree>
 8011f98:	9905      	ldr	r1, [sp, #20]
 8011f9a:	4620      	mov	r0, r4
 8011f9c:	f002 fae0 	bl	8014560 <_Bfree>
 8011fa0:	4659      	mov	r1, fp
 8011fa2:	4620      	mov	r0, r4
 8011fa4:	f002 fadc 	bl	8014560 <_Bfree>
 8011fa8:	4629      	mov	r1, r5
 8011faa:	4620      	mov	r0, r4
 8011fac:	f002 fad8 	bl	8014560 <_Bfree>
 8011fb0:	e609      	b.n	8011bc6 <_strtod_l+0x646>
 8011fb2:	f1b8 0f01 	cmp.w	r8, #1
 8011fb6:	d103      	bne.n	8011fc0 <_strtod_l+0xa40>
 8011fb8:	f1b9 0f00 	cmp.w	r9, #0
 8011fbc:	f43f ad95 	beq.w	8011aea <_strtod_l+0x56a>
 8011fc0:	ed9f 7b55 	vldr	d7, [pc, #340]	; 8012118 <_strtod_l+0xb98>
 8011fc4:	4f60      	ldr	r7, [pc, #384]	; (8012148 <_strtod_l+0xbc8>)
 8011fc6:	ed8d 7b06 	vstr	d7, [sp, #24]
 8011fca:	2600      	movs	r6, #0
 8011fcc:	e7ae      	b.n	8011f2c <_strtod_l+0x9ac>
 8011fce:	4f5f      	ldr	r7, [pc, #380]	; (801214c <_strtod_l+0xbcc>)
 8011fd0:	2600      	movs	r6, #0
 8011fd2:	e7a7      	b.n	8011f24 <_strtod_l+0x9a4>
 8011fd4:	4b5d      	ldr	r3, [pc, #372]	; (801214c <_strtod_l+0xbcc>)
 8011fd6:	4630      	mov	r0, r6
 8011fd8:	4639      	mov	r1, r7
 8011fda:	2200      	movs	r2, #0
 8011fdc:	f7ee fb1c 	bl	8000618 <__aeabi_dmul>
 8011fe0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011fe2:	4606      	mov	r6, r0
 8011fe4:	460f      	mov	r7, r1
 8011fe6:	2b00      	cmp	r3, #0
 8011fe8:	d09c      	beq.n	8011f24 <_strtod_l+0x9a4>
 8011fea:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8011fee:	e79d      	b.n	8011f2c <_strtod_l+0x9ac>
 8011ff0:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 8012120 <_strtod_l+0xba0>
 8011ff4:	ed8d 7b06 	vstr	d7, [sp, #24]
 8011ff8:	ec57 6b17 	vmov	r6, r7, d7
 8011ffc:	e796      	b.n	8011f2c <_strtod_l+0x9ac>
 8011ffe:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8012002:	9b04      	ldr	r3, [sp, #16]
 8012004:	46ca      	mov	sl, r9
 8012006:	2b00      	cmp	r3, #0
 8012008:	d1c2      	bne.n	8011f90 <_strtod_l+0xa10>
 801200a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 801200e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012010:	0d1b      	lsrs	r3, r3, #20
 8012012:	051b      	lsls	r3, r3, #20
 8012014:	429a      	cmp	r2, r3
 8012016:	d1bb      	bne.n	8011f90 <_strtod_l+0xa10>
 8012018:	4630      	mov	r0, r6
 801201a:	4639      	mov	r1, r7
 801201c:	f7ee fe0c 	bl	8000c38 <__aeabi_d2lz>
 8012020:	f7ee facc 	bl	80005bc <__aeabi_l2d>
 8012024:	4602      	mov	r2, r0
 8012026:	460b      	mov	r3, r1
 8012028:	4630      	mov	r0, r6
 801202a:	4639      	mov	r1, r7
 801202c:	f7ee f93c 	bl	80002a8 <__aeabi_dsub>
 8012030:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012032:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8012036:	ea43 0308 	orr.w	r3, r3, r8
 801203a:	4313      	orrs	r3, r2
 801203c:	4606      	mov	r6, r0
 801203e:	460f      	mov	r7, r1
 8012040:	d054      	beq.n	80120ec <_strtod_l+0xb6c>
 8012042:	a339      	add	r3, pc, #228	; (adr r3, 8012128 <_strtod_l+0xba8>)
 8012044:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012048:	f7ee fd58 	bl	8000afc <__aeabi_dcmplt>
 801204c:	2800      	cmp	r0, #0
 801204e:	f47f ace5 	bne.w	8011a1c <_strtod_l+0x49c>
 8012052:	a337      	add	r3, pc, #220	; (adr r3, 8012130 <_strtod_l+0xbb0>)
 8012054:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012058:	4630      	mov	r0, r6
 801205a:	4639      	mov	r1, r7
 801205c:	f7ee fd6c 	bl	8000b38 <__aeabi_dcmpgt>
 8012060:	2800      	cmp	r0, #0
 8012062:	d095      	beq.n	8011f90 <_strtod_l+0xa10>
 8012064:	e4da      	b.n	8011a1c <_strtod_l+0x49c>
 8012066:	9b04      	ldr	r3, [sp, #16]
 8012068:	b333      	cbz	r3, 80120b8 <_strtod_l+0xb38>
 801206a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801206c:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8012070:	d822      	bhi.n	80120b8 <_strtod_l+0xb38>
 8012072:	a331      	add	r3, pc, #196	; (adr r3, 8012138 <_strtod_l+0xbb8>)
 8012074:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012078:	4630      	mov	r0, r6
 801207a:	4639      	mov	r1, r7
 801207c:	f7ee fd48 	bl	8000b10 <__aeabi_dcmple>
 8012080:	b1a0      	cbz	r0, 80120ac <_strtod_l+0xb2c>
 8012082:	4639      	mov	r1, r7
 8012084:	4630      	mov	r0, r6
 8012086:	f7ee fd9f 	bl	8000bc8 <__aeabi_d2uiz>
 801208a:	2801      	cmp	r0, #1
 801208c:	bf38      	it	cc
 801208e:	2001      	movcc	r0, #1
 8012090:	f7ee fa48 	bl	8000524 <__aeabi_ui2d>
 8012094:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012096:	4606      	mov	r6, r0
 8012098:	460f      	mov	r7, r1
 801209a:	bb23      	cbnz	r3, 80120e6 <_strtod_l+0xb66>
 801209c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80120a0:	9010      	str	r0, [sp, #64]	; 0x40
 80120a2:	9311      	str	r3, [sp, #68]	; 0x44
 80120a4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80120a8:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 80120ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80120ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80120b0:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 80120b4:	1a9b      	subs	r3, r3, r2
 80120b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80120b8:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80120bc:	eeb0 0a48 	vmov.f32	s0, s16
 80120c0:	eef0 0a68 	vmov.f32	s1, s17
 80120c4:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 80120c8:	f002 fd76 	bl	8014bb8 <__ulp>
 80120cc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80120d0:	ec53 2b10 	vmov	r2, r3, d0
 80120d4:	f7ee faa0 	bl	8000618 <__aeabi_dmul>
 80120d8:	ec53 2b18 	vmov	r2, r3, d8
 80120dc:	f7ee f8e6 	bl	80002ac <__adddf3>
 80120e0:	4680      	mov	r8, r0
 80120e2:	4689      	mov	r9, r1
 80120e4:	e78d      	b.n	8012002 <_strtod_l+0xa82>
 80120e6:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 80120ea:	e7db      	b.n	80120a4 <_strtod_l+0xb24>
 80120ec:	a314      	add	r3, pc, #80	; (adr r3, 8012140 <_strtod_l+0xbc0>)
 80120ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80120f2:	f7ee fd03 	bl	8000afc <__aeabi_dcmplt>
 80120f6:	e7b3      	b.n	8012060 <_strtod_l+0xae0>
 80120f8:	2300      	movs	r3, #0
 80120fa:	930a      	str	r3, [sp, #40]	; 0x28
 80120fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80120fe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012100:	6013      	str	r3, [r2, #0]
 8012102:	f7ff ba7c 	b.w	80115fe <_strtod_l+0x7e>
 8012106:	2a65      	cmp	r2, #101	; 0x65
 8012108:	f43f ab75 	beq.w	80117f6 <_strtod_l+0x276>
 801210c:	2a45      	cmp	r2, #69	; 0x45
 801210e:	f43f ab72 	beq.w	80117f6 <_strtod_l+0x276>
 8012112:	2301      	movs	r3, #1
 8012114:	f7ff bbaa 	b.w	801186c <_strtod_l+0x2ec>
 8012118:	00000000 	.word	0x00000000
 801211c:	bff00000 	.word	0xbff00000
 8012120:	00000000 	.word	0x00000000
 8012124:	3ff00000 	.word	0x3ff00000
 8012128:	94a03595 	.word	0x94a03595
 801212c:	3fdfffff 	.word	0x3fdfffff
 8012130:	35afe535 	.word	0x35afe535
 8012134:	3fe00000 	.word	0x3fe00000
 8012138:	ffc00000 	.word	0xffc00000
 801213c:	41dfffff 	.word	0x41dfffff
 8012140:	94a03595 	.word	0x94a03595
 8012144:	3fcfffff 	.word	0x3fcfffff
 8012148:	3ff00000 	.word	0x3ff00000
 801214c:	3fe00000 	.word	0x3fe00000
 8012150:	7ff00000 	.word	0x7ff00000
 8012154:	7fe00000 	.word	0x7fe00000
 8012158:	7c9fffff 	.word	0x7c9fffff
 801215c:	7fefffff 	.word	0x7fefffff

08012160 <strtod>:
 8012160:	460a      	mov	r2, r1
 8012162:	4601      	mov	r1, r0
 8012164:	4802      	ldr	r0, [pc, #8]	; (8012170 <strtod+0x10>)
 8012166:	4b03      	ldr	r3, [pc, #12]	; (8012174 <strtod+0x14>)
 8012168:	6800      	ldr	r0, [r0, #0]
 801216a:	f7ff ba09 	b.w	8011580 <_strtod_l>
 801216e:	bf00      	nop
 8012170:	20000228 	.word	0x20000228
 8012174:	20000070 	.word	0x20000070

08012178 <__cvt>:
 8012178:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801217c:	ec55 4b10 	vmov	r4, r5, d0
 8012180:	2d00      	cmp	r5, #0
 8012182:	460e      	mov	r6, r1
 8012184:	4619      	mov	r1, r3
 8012186:	462b      	mov	r3, r5
 8012188:	bfbb      	ittet	lt
 801218a:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 801218e:	461d      	movlt	r5, r3
 8012190:	2300      	movge	r3, #0
 8012192:	232d      	movlt	r3, #45	; 0x2d
 8012194:	700b      	strb	r3, [r1, #0]
 8012196:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012198:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801219c:	4691      	mov	r9, r2
 801219e:	f023 0820 	bic.w	r8, r3, #32
 80121a2:	bfbc      	itt	lt
 80121a4:	4622      	movlt	r2, r4
 80121a6:	4614      	movlt	r4, r2
 80121a8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80121ac:	d005      	beq.n	80121ba <__cvt+0x42>
 80121ae:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80121b2:	d100      	bne.n	80121b6 <__cvt+0x3e>
 80121b4:	3601      	adds	r6, #1
 80121b6:	2102      	movs	r1, #2
 80121b8:	e000      	b.n	80121bc <__cvt+0x44>
 80121ba:	2103      	movs	r1, #3
 80121bc:	ab03      	add	r3, sp, #12
 80121be:	9301      	str	r3, [sp, #4]
 80121c0:	ab02      	add	r3, sp, #8
 80121c2:	9300      	str	r3, [sp, #0]
 80121c4:	ec45 4b10 	vmov	d0, r4, r5
 80121c8:	4653      	mov	r3, sl
 80121ca:	4632      	mov	r2, r6
 80121cc:	f000 ffe0 	bl	8013190 <_dtoa_r>
 80121d0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80121d4:	4607      	mov	r7, r0
 80121d6:	d102      	bne.n	80121de <__cvt+0x66>
 80121d8:	f019 0f01 	tst.w	r9, #1
 80121dc:	d022      	beq.n	8012224 <__cvt+0xac>
 80121de:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80121e2:	eb07 0906 	add.w	r9, r7, r6
 80121e6:	d110      	bne.n	801220a <__cvt+0x92>
 80121e8:	783b      	ldrb	r3, [r7, #0]
 80121ea:	2b30      	cmp	r3, #48	; 0x30
 80121ec:	d10a      	bne.n	8012204 <__cvt+0x8c>
 80121ee:	2200      	movs	r2, #0
 80121f0:	2300      	movs	r3, #0
 80121f2:	4620      	mov	r0, r4
 80121f4:	4629      	mov	r1, r5
 80121f6:	f7ee fc77 	bl	8000ae8 <__aeabi_dcmpeq>
 80121fa:	b918      	cbnz	r0, 8012204 <__cvt+0x8c>
 80121fc:	f1c6 0601 	rsb	r6, r6, #1
 8012200:	f8ca 6000 	str.w	r6, [sl]
 8012204:	f8da 3000 	ldr.w	r3, [sl]
 8012208:	4499      	add	r9, r3
 801220a:	2200      	movs	r2, #0
 801220c:	2300      	movs	r3, #0
 801220e:	4620      	mov	r0, r4
 8012210:	4629      	mov	r1, r5
 8012212:	f7ee fc69 	bl	8000ae8 <__aeabi_dcmpeq>
 8012216:	b108      	cbz	r0, 801221c <__cvt+0xa4>
 8012218:	f8cd 900c 	str.w	r9, [sp, #12]
 801221c:	2230      	movs	r2, #48	; 0x30
 801221e:	9b03      	ldr	r3, [sp, #12]
 8012220:	454b      	cmp	r3, r9
 8012222:	d307      	bcc.n	8012234 <__cvt+0xbc>
 8012224:	9b03      	ldr	r3, [sp, #12]
 8012226:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012228:	1bdb      	subs	r3, r3, r7
 801222a:	4638      	mov	r0, r7
 801222c:	6013      	str	r3, [r2, #0]
 801222e:	b004      	add	sp, #16
 8012230:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012234:	1c59      	adds	r1, r3, #1
 8012236:	9103      	str	r1, [sp, #12]
 8012238:	701a      	strb	r2, [r3, #0]
 801223a:	e7f0      	b.n	801221e <__cvt+0xa6>

0801223c <__exponent>:
 801223c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801223e:	4603      	mov	r3, r0
 8012240:	2900      	cmp	r1, #0
 8012242:	bfb8      	it	lt
 8012244:	4249      	neglt	r1, r1
 8012246:	f803 2b02 	strb.w	r2, [r3], #2
 801224a:	bfb4      	ite	lt
 801224c:	222d      	movlt	r2, #45	; 0x2d
 801224e:	222b      	movge	r2, #43	; 0x2b
 8012250:	2909      	cmp	r1, #9
 8012252:	7042      	strb	r2, [r0, #1]
 8012254:	dd2a      	ble.n	80122ac <__exponent+0x70>
 8012256:	f10d 0207 	add.w	r2, sp, #7
 801225a:	4617      	mov	r7, r2
 801225c:	260a      	movs	r6, #10
 801225e:	4694      	mov	ip, r2
 8012260:	fb91 f5f6 	sdiv	r5, r1, r6
 8012264:	fb06 1415 	mls	r4, r6, r5, r1
 8012268:	3430      	adds	r4, #48	; 0x30
 801226a:	f80c 4c01 	strb.w	r4, [ip, #-1]
 801226e:	460c      	mov	r4, r1
 8012270:	2c63      	cmp	r4, #99	; 0x63
 8012272:	f102 32ff 	add.w	r2, r2, #4294967295
 8012276:	4629      	mov	r1, r5
 8012278:	dcf1      	bgt.n	801225e <__exponent+0x22>
 801227a:	3130      	adds	r1, #48	; 0x30
 801227c:	f1ac 0402 	sub.w	r4, ip, #2
 8012280:	f802 1c01 	strb.w	r1, [r2, #-1]
 8012284:	1c41      	adds	r1, r0, #1
 8012286:	4622      	mov	r2, r4
 8012288:	42ba      	cmp	r2, r7
 801228a:	d30a      	bcc.n	80122a2 <__exponent+0x66>
 801228c:	f10d 0209 	add.w	r2, sp, #9
 8012290:	eba2 020c 	sub.w	r2, r2, ip
 8012294:	42bc      	cmp	r4, r7
 8012296:	bf88      	it	hi
 8012298:	2200      	movhi	r2, #0
 801229a:	4413      	add	r3, r2
 801229c:	1a18      	subs	r0, r3, r0
 801229e:	b003      	add	sp, #12
 80122a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122a2:	f812 5b01 	ldrb.w	r5, [r2], #1
 80122a6:	f801 5f01 	strb.w	r5, [r1, #1]!
 80122aa:	e7ed      	b.n	8012288 <__exponent+0x4c>
 80122ac:	2330      	movs	r3, #48	; 0x30
 80122ae:	3130      	adds	r1, #48	; 0x30
 80122b0:	7083      	strb	r3, [r0, #2]
 80122b2:	70c1      	strb	r1, [r0, #3]
 80122b4:	1d03      	adds	r3, r0, #4
 80122b6:	e7f1      	b.n	801229c <__exponent+0x60>

080122b8 <_printf_float>:
 80122b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122bc:	ed2d 8b02 	vpush	{d8}
 80122c0:	b08d      	sub	sp, #52	; 0x34
 80122c2:	460c      	mov	r4, r1
 80122c4:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80122c8:	4616      	mov	r6, r2
 80122ca:	461f      	mov	r7, r3
 80122cc:	4605      	mov	r5, r0
 80122ce:	f000 fe1d 	bl	8012f0c <_localeconv_r>
 80122d2:	f8d0 a000 	ldr.w	sl, [r0]
 80122d6:	4650      	mov	r0, sl
 80122d8:	f7ed ffda 	bl	8000290 <strlen>
 80122dc:	2300      	movs	r3, #0
 80122de:	930a      	str	r3, [sp, #40]	; 0x28
 80122e0:	6823      	ldr	r3, [r4, #0]
 80122e2:	9305      	str	r3, [sp, #20]
 80122e4:	f8d8 3000 	ldr.w	r3, [r8]
 80122e8:	f894 b018 	ldrb.w	fp, [r4, #24]
 80122ec:	3307      	adds	r3, #7
 80122ee:	f023 0307 	bic.w	r3, r3, #7
 80122f2:	f103 0208 	add.w	r2, r3, #8
 80122f6:	f8c8 2000 	str.w	r2, [r8]
 80122fa:	e9d3 8900 	ldrd	r8, r9, [r3]
 80122fe:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8012302:	9307      	str	r3, [sp, #28]
 8012304:	f8cd 8018 	str.w	r8, [sp, #24]
 8012308:	ee08 0a10 	vmov	s16, r0
 801230c:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8012310:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8012314:	4b9e      	ldr	r3, [pc, #632]	; (8012590 <_printf_float+0x2d8>)
 8012316:	f04f 32ff 	mov.w	r2, #4294967295
 801231a:	f7ee fc17 	bl	8000b4c <__aeabi_dcmpun>
 801231e:	bb88      	cbnz	r0, 8012384 <_printf_float+0xcc>
 8012320:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8012324:	4b9a      	ldr	r3, [pc, #616]	; (8012590 <_printf_float+0x2d8>)
 8012326:	f04f 32ff 	mov.w	r2, #4294967295
 801232a:	f7ee fbf1 	bl	8000b10 <__aeabi_dcmple>
 801232e:	bb48      	cbnz	r0, 8012384 <_printf_float+0xcc>
 8012330:	2200      	movs	r2, #0
 8012332:	2300      	movs	r3, #0
 8012334:	4640      	mov	r0, r8
 8012336:	4649      	mov	r1, r9
 8012338:	f7ee fbe0 	bl	8000afc <__aeabi_dcmplt>
 801233c:	b110      	cbz	r0, 8012344 <_printf_float+0x8c>
 801233e:	232d      	movs	r3, #45	; 0x2d
 8012340:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8012344:	4a93      	ldr	r2, [pc, #588]	; (8012594 <_printf_float+0x2dc>)
 8012346:	4b94      	ldr	r3, [pc, #592]	; (8012598 <_printf_float+0x2e0>)
 8012348:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 801234c:	bf94      	ite	ls
 801234e:	4690      	movls	r8, r2
 8012350:	4698      	movhi	r8, r3
 8012352:	2303      	movs	r3, #3
 8012354:	6123      	str	r3, [r4, #16]
 8012356:	9b05      	ldr	r3, [sp, #20]
 8012358:	f023 0304 	bic.w	r3, r3, #4
 801235c:	6023      	str	r3, [r4, #0]
 801235e:	f04f 0900 	mov.w	r9, #0
 8012362:	9700      	str	r7, [sp, #0]
 8012364:	4633      	mov	r3, r6
 8012366:	aa0b      	add	r2, sp, #44	; 0x2c
 8012368:	4621      	mov	r1, r4
 801236a:	4628      	mov	r0, r5
 801236c:	f000 f9da 	bl	8012724 <_printf_common>
 8012370:	3001      	adds	r0, #1
 8012372:	f040 8090 	bne.w	8012496 <_printf_float+0x1de>
 8012376:	f04f 30ff 	mov.w	r0, #4294967295
 801237a:	b00d      	add	sp, #52	; 0x34
 801237c:	ecbd 8b02 	vpop	{d8}
 8012380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012384:	4642      	mov	r2, r8
 8012386:	464b      	mov	r3, r9
 8012388:	4640      	mov	r0, r8
 801238a:	4649      	mov	r1, r9
 801238c:	f7ee fbde 	bl	8000b4c <__aeabi_dcmpun>
 8012390:	b140      	cbz	r0, 80123a4 <_printf_float+0xec>
 8012392:	464b      	mov	r3, r9
 8012394:	2b00      	cmp	r3, #0
 8012396:	bfbc      	itt	lt
 8012398:	232d      	movlt	r3, #45	; 0x2d
 801239a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 801239e:	4a7f      	ldr	r2, [pc, #508]	; (801259c <_printf_float+0x2e4>)
 80123a0:	4b7f      	ldr	r3, [pc, #508]	; (80125a0 <_printf_float+0x2e8>)
 80123a2:	e7d1      	b.n	8012348 <_printf_float+0x90>
 80123a4:	6863      	ldr	r3, [r4, #4]
 80123a6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80123aa:	9206      	str	r2, [sp, #24]
 80123ac:	1c5a      	adds	r2, r3, #1
 80123ae:	d13f      	bne.n	8012430 <_printf_float+0x178>
 80123b0:	2306      	movs	r3, #6
 80123b2:	6063      	str	r3, [r4, #4]
 80123b4:	9b05      	ldr	r3, [sp, #20]
 80123b6:	6861      	ldr	r1, [r4, #4]
 80123b8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80123bc:	2300      	movs	r3, #0
 80123be:	9303      	str	r3, [sp, #12]
 80123c0:	ab0a      	add	r3, sp, #40	; 0x28
 80123c2:	e9cd b301 	strd	fp, r3, [sp, #4]
 80123c6:	ab09      	add	r3, sp, #36	; 0x24
 80123c8:	ec49 8b10 	vmov	d0, r8, r9
 80123cc:	9300      	str	r3, [sp, #0]
 80123ce:	6022      	str	r2, [r4, #0]
 80123d0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80123d4:	4628      	mov	r0, r5
 80123d6:	f7ff fecf 	bl	8012178 <__cvt>
 80123da:	9b06      	ldr	r3, [sp, #24]
 80123dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80123de:	2b47      	cmp	r3, #71	; 0x47
 80123e0:	4680      	mov	r8, r0
 80123e2:	d108      	bne.n	80123f6 <_printf_float+0x13e>
 80123e4:	1cc8      	adds	r0, r1, #3
 80123e6:	db02      	blt.n	80123ee <_printf_float+0x136>
 80123e8:	6863      	ldr	r3, [r4, #4]
 80123ea:	4299      	cmp	r1, r3
 80123ec:	dd41      	ble.n	8012472 <_printf_float+0x1ba>
 80123ee:	f1ab 0302 	sub.w	r3, fp, #2
 80123f2:	fa5f fb83 	uxtb.w	fp, r3
 80123f6:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80123fa:	d820      	bhi.n	801243e <_printf_float+0x186>
 80123fc:	3901      	subs	r1, #1
 80123fe:	465a      	mov	r2, fp
 8012400:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8012404:	9109      	str	r1, [sp, #36]	; 0x24
 8012406:	f7ff ff19 	bl	801223c <__exponent>
 801240a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801240c:	1813      	adds	r3, r2, r0
 801240e:	2a01      	cmp	r2, #1
 8012410:	4681      	mov	r9, r0
 8012412:	6123      	str	r3, [r4, #16]
 8012414:	dc02      	bgt.n	801241c <_printf_float+0x164>
 8012416:	6822      	ldr	r2, [r4, #0]
 8012418:	07d2      	lsls	r2, r2, #31
 801241a:	d501      	bpl.n	8012420 <_printf_float+0x168>
 801241c:	3301      	adds	r3, #1
 801241e:	6123      	str	r3, [r4, #16]
 8012420:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8012424:	2b00      	cmp	r3, #0
 8012426:	d09c      	beq.n	8012362 <_printf_float+0xaa>
 8012428:	232d      	movs	r3, #45	; 0x2d
 801242a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801242e:	e798      	b.n	8012362 <_printf_float+0xaa>
 8012430:	9a06      	ldr	r2, [sp, #24]
 8012432:	2a47      	cmp	r2, #71	; 0x47
 8012434:	d1be      	bne.n	80123b4 <_printf_float+0xfc>
 8012436:	2b00      	cmp	r3, #0
 8012438:	d1bc      	bne.n	80123b4 <_printf_float+0xfc>
 801243a:	2301      	movs	r3, #1
 801243c:	e7b9      	b.n	80123b2 <_printf_float+0xfa>
 801243e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8012442:	d118      	bne.n	8012476 <_printf_float+0x1be>
 8012444:	2900      	cmp	r1, #0
 8012446:	6863      	ldr	r3, [r4, #4]
 8012448:	dd0b      	ble.n	8012462 <_printf_float+0x1aa>
 801244a:	6121      	str	r1, [r4, #16]
 801244c:	b913      	cbnz	r3, 8012454 <_printf_float+0x19c>
 801244e:	6822      	ldr	r2, [r4, #0]
 8012450:	07d0      	lsls	r0, r2, #31
 8012452:	d502      	bpl.n	801245a <_printf_float+0x1a2>
 8012454:	3301      	adds	r3, #1
 8012456:	440b      	add	r3, r1
 8012458:	6123      	str	r3, [r4, #16]
 801245a:	65a1      	str	r1, [r4, #88]	; 0x58
 801245c:	f04f 0900 	mov.w	r9, #0
 8012460:	e7de      	b.n	8012420 <_printf_float+0x168>
 8012462:	b913      	cbnz	r3, 801246a <_printf_float+0x1b2>
 8012464:	6822      	ldr	r2, [r4, #0]
 8012466:	07d2      	lsls	r2, r2, #31
 8012468:	d501      	bpl.n	801246e <_printf_float+0x1b6>
 801246a:	3302      	adds	r3, #2
 801246c:	e7f4      	b.n	8012458 <_printf_float+0x1a0>
 801246e:	2301      	movs	r3, #1
 8012470:	e7f2      	b.n	8012458 <_printf_float+0x1a0>
 8012472:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8012476:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012478:	4299      	cmp	r1, r3
 801247a:	db05      	blt.n	8012488 <_printf_float+0x1d0>
 801247c:	6823      	ldr	r3, [r4, #0]
 801247e:	6121      	str	r1, [r4, #16]
 8012480:	07d8      	lsls	r0, r3, #31
 8012482:	d5ea      	bpl.n	801245a <_printf_float+0x1a2>
 8012484:	1c4b      	adds	r3, r1, #1
 8012486:	e7e7      	b.n	8012458 <_printf_float+0x1a0>
 8012488:	2900      	cmp	r1, #0
 801248a:	bfd4      	ite	le
 801248c:	f1c1 0202 	rsble	r2, r1, #2
 8012490:	2201      	movgt	r2, #1
 8012492:	4413      	add	r3, r2
 8012494:	e7e0      	b.n	8012458 <_printf_float+0x1a0>
 8012496:	6823      	ldr	r3, [r4, #0]
 8012498:	055a      	lsls	r2, r3, #21
 801249a:	d407      	bmi.n	80124ac <_printf_float+0x1f4>
 801249c:	6923      	ldr	r3, [r4, #16]
 801249e:	4642      	mov	r2, r8
 80124a0:	4631      	mov	r1, r6
 80124a2:	4628      	mov	r0, r5
 80124a4:	47b8      	blx	r7
 80124a6:	3001      	adds	r0, #1
 80124a8:	d12c      	bne.n	8012504 <_printf_float+0x24c>
 80124aa:	e764      	b.n	8012376 <_printf_float+0xbe>
 80124ac:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80124b0:	f240 80e0 	bls.w	8012674 <_printf_float+0x3bc>
 80124b4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80124b8:	2200      	movs	r2, #0
 80124ba:	2300      	movs	r3, #0
 80124bc:	f7ee fb14 	bl	8000ae8 <__aeabi_dcmpeq>
 80124c0:	2800      	cmp	r0, #0
 80124c2:	d034      	beq.n	801252e <_printf_float+0x276>
 80124c4:	4a37      	ldr	r2, [pc, #220]	; (80125a4 <_printf_float+0x2ec>)
 80124c6:	2301      	movs	r3, #1
 80124c8:	4631      	mov	r1, r6
 80124ca:	4628      	mov	r0, r5
 80124cc:	47b8      	blx	r7
 80124ce:	3001      	adds	r0, #1
 80124d0:	f43f af51 	beq.w	8012376 <_printf_float+0xbe>
 80124d4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80124d8:	429a      	cmp	r2, r3
 80124da:	db02      	blt.n	80124e2 <_printf_float+0x22a>
 80124dc:	6823      	ldr	r3, [r4, #0]
 80124de:	07d8      	lsls	r0, r3, #31
 80124e0:	d510      	bpl.n	8012504 <_printf_float+0x24c>
 80124e2:	ee18 3a10 	vmov	r3, s16
 80124e6:	4652      	mov	r2, sl
 80124e8:	4631      	mov	r1, r6
 80124ea:	4628      	mov	r0, r5
 80124ec:	47b8      	blx	r7
 80124ee:	3001      	adds	r0, #1
 80124f0:	f43f af41 	beq.w	8012376 <_printf_float+0xbe>
 80124f4:	f04f 0800 	mov.w	r8, #0
 80124f8:	f104 091a 	add.w	r9, r4, #26
 80124fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80124fe:	3b01      	subs	r3, #1
 8012500:	4543      	cmp	r3, r8
 8012502:	dc09      	bgt.n	8012518 <_printf_float+0x260>
 8012504:	6823      	ldr	r3, [r4, #0]
 8012506:	079b      	lsls	r3, r3, #30
 8012508:	f100 8107 	bmi.w	801271a <_printf_float+0x462>
 801250c:	68e0      	ldr	r0, [r4, #12]
 801250e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012510:	4298      	cmp	r0, r3
 8012512:	bfb8      	it	lt
 8012514:	4618      	movlt	r0, r3
 8012516:	e730      	b.n	801237a <_printf_float+0xc2>
 8012518:	2301      	movs	r3, #1
 801251a:	464a      	mov	r2, r9
 801251c:	4631      	mov	r1, r6
 801251e:	4628      	mov	r0, r5
 8012520:	47b8      	blx	r7
 8012522:	3001      	adds	r0, #1
 8012524:	f43f af27 	beq.w	8012376 <_printf_float+0xbe>
 8012528:	f108 0801 	add.w	r8, r8, #1
 801252c:	e7e6      	b.n	80124fc <_printf_float+0x244>
 801252e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012530:	2b00      	cmp	r3, #0
 8012532:	dc39      	bgt.n	80125a8 <_printf_float+0x2f0>
 8012534:	4a1b      	ldr	r2, [pc, #108]	; (80125a4 <_printf_float+0x2ec>)
 8012536:	2301      	movs	r3, #1
 8012538:	4631      	mov	r1, r6
 801253a:	4628      	mov	r0, r5
 801253c:	47b8      	blx	r7
 801253e:	3001      	adds	r0, #1
 8012540:	f43f af19 	beq.w	8012376 <_printf_float+0xbe>
 8012544:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8012548:	4313      	orrs	r3, r2
 801254a:	d102      	bne.n	8012552 <_printf_float+0x29a>
 801254c:	6823      	ldr	r3, [r4, #0]
 801254e:	07d9      	lsls	r1, r3, #31
 8012550:	d5d8      	bpl.n	8012504 <_printf_float+0x24c>
 8012552:	ee18 3a10 	vmov	r3, s16
 8012556:	4652      	mov	r2, sl
 8012558:	4631      	mov	r1, r6
 801255a:	4628      	mov	r0, r5
 801255c:	47b8      	blx	r7
 801255e:	3001      	adds	r0, #1
 8012560:	f43f af09 	beq.w	8012376 <_printf_float+0xbe>
 8012564:	f04f 0900 	mov.w	r9, #0
 8012568:	f104 0a1a 	add.w	sl, r4, #26
 801256c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801256e:	425b      	negs	r3, r3
 8012570:	454b      	cmp	r3, r9
 8012572:	dc01      	bgt.n	8012578 <_printf_float+0x2c0>
 8012574:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012576:	e792      	b.n	801249e <_printf_float+0x1e6>
 8012578:	2301      	movs	r3, #1
 801257a:	4652      	mov	r2, sl
 801257c:	4631      	mov	r1, r6
 801257e:	4628      	mov	r0, r5
 8012580:	47b8      	blx	r7
 8012582:	3001      	adds	r0, #1
 8012584:	f43f aef7 	beq.w	8012376 <_printf_float+0xbe>
 8012588:	f109 0901 	add.w	r9, r9, #1
 801258c:	e7ee      	b.n	801256c <_printf_float+0x2b4>
 801258e:	bf00      	nop
 8012590:	7fefffff 	.word	0x7fefffff
 8012594:	08016a39 	.word	0x08016a39
 8012598:	08016a3d 	.word	0x08016a3d
 801259c:	08016a41 	.word	0x08016a41
 80125a0:	08016a45 	.word	0x08016a45
 80125a4:	08016ce3 	.word	0x08016ce3
 80125a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80125aa:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80125ac:	429a      	cmp	r2, r3
 80125ae:	bfa8      	it	ge
 80125b0:	461a      	movge	r2, r3
 80125b2:	2a00      	cmp	r2, #0
 80125b4:	4691      	mov	r9, r2
 80125b6:	dc37      	bgt.n	8012628 <_printf_float+0x370>
 80125b8:	f04f 0b00 	mov.w	fp, #0
 80125bc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80125c0:	f104 021a 	add.w	r2, r4, #26
 80125c4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80125c6:	9305      	str	r3, [sp, #20]
 80125c8:	eba3 0309 	sub.w	r3, r3, r9
 80125cc:	455b      	cmp	r3, fp
 80125ce:	dc33      	bgt.n	8012638 <_printf_float+0x380>
 80125d0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80125d4:	429a      	cmp	r2, r3
 80125d6:	db3b      	blt.n	8012650 <_printf_float+0x398>
 80125d8:	6823      	ldr	r3, [r4, #0]
 80125da:	07da      	lsls	r2, r3, #31
 80125dc:	d438      	bmi.n	8012650 <_printf_float+0x398>
 80125de:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80125e2:	eba2 0903 	sub.w	r9, r2, r3
 80125e6:	9b05      	ldr	r3, [sp, #20]
 80125e8:	1ad2      	subs	r2, r2, r3
 80125ea:	4591      	cmp	r9, r2
 80125ec:	bfa8      	it	ge
 80125ee:	4691      	movge	r9, r2
 80125f0:	f1b9 0f00 	cmp.w	r9, #0
 80125f4:	dc35      	bgt.n	8012662 <_printf_float+0x3aa>
 80125f6:	f04f 0800 	mov.w	r8, #0
 80125fa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80125fe:	f104 0a1a 	add.w	sl, r4, #26
 8012602:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8012606:	1a9b      	subs	r3, r3, r2
 8012608:	eba3 0309 	sub.w	r3, r3, r9
 801260c:	4543      	cmp	r3, r8
 801260e:	f77f af79 	ble.w	8012504 <_printf_float+0x24c>
 8012612:	2301      	movs	r3, #1
 8012614:	4652      	mov	r2, sl
 8012616:	4631      	mov	r1, r6
 8012618:	4628      	mov	r0, r5
 801261a:	47b8      	blx	r7
 801261c:	3001      	adds	r0, #1
 801261e:	f43f aeaa 	beq.w	8012376 <_printf_float+0xbe>
 8012622:	f108 0801 	add.w	r8, r8, #1
 8012626:	e7ec      	b.n	8012602 <_printf_float+0x34a>
 8012628:	4613      	mov	r3, r2
 801262a:	4631      	mov	r1, r6
 801262c:	4642      	mov	r2, r8
 801262e:	4628      	mov	r0, r5
 8012630:	47b8      	blx	r7
 8012632:	3001      	adds	r0, #1
 8012634:	d1c0      	bne.n	80125b8 <_printf_float+0x300>
 8012636:	e69e      	b.n	8012376 <_printf_float+0xbe>
 8012638:	2301      	movs	r3, #1
 801263a:	4631      	mov	r1, r6
 801263c:	4628      	mov	r0, r5
 801263e:	9205      	str	r2, [sp, #20]
 8012640:	47b8      	blx	r7
 8012642:	3001      	adds	r0, #1
 8012644:	f43f ae97 	beq.w	8012376 <_printf_float+0xbe>
 8012648:	9a05      	ldr	r2, [sp, #20]
 801264a:	f10b 0b01 	add.w	fp, fp, #1
 801264e:	e7b9      	b.n	80125c4 <_printf_float+0x30c>
 8012650:	ee18 3a10 	vmov	r3, s16
 8012654:	4652      	mov	r2, sl
 8012656:	4631      	mov	r1, r6
 8012658:	4628      	mov	r0, r5
 801265a:	47b8      	blx	r7
 801265c:	3001      	adds	r0, #1
 801265e:	d1be      	bne.n	80125de <_printf_float+0x326>
 8012660:	e689      	b.n	8012376 <_printf_float+0xbe>
 8012662:	9a05      	ldr	r2, [sp, #20]
 8012664:	464b      	mov	r3, r9
 8012666:	4442      	add	r2, r8
 8012668:	4631      	mov	r1, r6
 801266a:	4628      	mov	r0, r5
 801266c:	47b8      	blx	r7
 801266e:	3001      	adds	r0, #1
 8012670:	d1c1      	bne.n	80125f6 <_printf_float+0x33e>
 8012672:	e680      	b.n	8012376 <_printf_float+0xbe>
 8012674:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012676:	2a01      	cmp	r2, #1
 8012678:	dc01      	bgt.n	801267e <_printf_float+0x3c6>
 801267a:	07db      	lsls	r3, r3, #31
 801267c:	d53a      	bpl.n	80126f4 <_printf_float+0x43c>
 801267e:	2301      	movs	r3, #1
 8012680:	4642      	mov	r2, r8
 8012682:	4631      	mov	r1, r6
 8012684:	4628      	mov	r0, r5
 8012686:	47b8      	blx	r7
 8012688:	3001      	adds	r0, #1
 801268a:	f43f ae74 	beq.w	8012376 <_printf_float+0xbe>
 801268e:	ee18 3a10 	vmov	r3, s16
 8012692:	4652      	mov	r2, sl
 8012694:	4631      	mov	r1, r6
 8012696:	4628      	mov	r0, r5
 8012698:	47b8      	blx	r7
 801269a:	3001      	adds	r0, #1
 801269c:	f43f ae6b 	beq.w	8012376 <_printf_float+0xbe>
 80126a0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80126a4:	2200      	movs	r2, #0
 80126a6:	2300      	movs	r3, #0
 80126a8:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80126ac:	f7ee fa1c 	bl	8000ae8 <__aeabi_dcmpeq>
 80126b0:	b9d8      	cbnz	r0, 80126ea <_printf_float+0x432>
 80126b2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80126b6:	f108 0201 	add.w	r2, r8, #1
 80126ba:	4631      	mov	r1, r6
 80126bc:	4628      	mov	r0, r5
 80126be:	47b8      	blx	r7
 80126c0:	3001      	adds	r0, #1
 80126c2:	d10e      	bne.n	80126e2 <_printf_float+0x42a>
 80126c4:	e657      	b.n	8012376 <_printf_float+0xbe>
 80126c6:	2301      	movs	r3, #1
 80126c8:	4652      	mov	r2, sl
 80126ca:	4631      	mov	r1, r6
 80126cc:	4628      	mov	r0, r5
 80126ce:	47b8      	blx	r7
 80126d0:	3001      	adds	r0, #1
 80126d2:	f43f ae50 	beq.w	8012376 <_printf_float+0xbe>
 80126d6:	f108 0801 	add.w	r8, r8, #1
 80126da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80126dc:	3b01      	subs	r3, #1
 80126de:	4543      	cmp	r3, r8
 80126e0:	dcf1      	bgt.n	80126c6 <_printf_float+0x40e>
 80126e2:	464b      	mov	r3, r9
 80126e4:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80126e8:	e6da      	b.n	80124a0 <_printf_float+0x1e8>
 80126ea:	f04f 0800 	mov.w	r8, #0
 80126ee:	f104 0a1a 	add.w	sl, r4, #26
 80126f2:	e7f2      	b.n	80126da <_printf_float+0x422>
 80126f4:	2301      	movs	r3, #1
 80126f6:	4642      	mov	r2, r8
 80126f8:	e7df      	b.n	80126ba <_printf_float+0x402>
 80126fa:	2301      	movs	r3, #1
 80126fc:	464a      	mov	r2, r9
 80126fe:	4631      	mov	r1, r6
 8012700:	4628      	mov	r0, r5
 8012702:	47b8      	blx	r7
 8012704:	3001      	adds	r0, #1
 8012706:	f43f ae36 	beq.w	8012376 <_printf_float+0xbe>
 801270a:	f108 0801 	add.w	r8, r8, #1
 801270e:	68e3      	ldr	r3, [r4, #12]
 8012710:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012712:	1a5b      	subs	r3, r3, r1
 8012714:	4543      	cmp	r3, r8
 8012716:	dcf0      	bgt.n	80126fa <_printf_float+0x442>
 8012718:	e6f8      	b.n	801250c <_printf_float+0x254>
 801271a:	f04f 0800 	mov.w	r8, #0
 801271e:	f104 0919 	add.w	r9, r4, #25
 8012722:	e7f4      	b.n	801270e <_printf_float+0x456>

08012724 <_printf_common>:
 8012724:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012728:	4616      	mov	r6, r2
 801272a:	4699      	mov	r9, r3
 801272c:	688a      	ldr	r2, [r1, #8]
 801272e:	690b      	ldr	r3, [r1, #16]
 8012730:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8012734:	4293      	cmp	r3, r2
 8012736:	bfb8      	it	lt
 8012738:	4613      	movlt	r3, r2
 801273a:	6033      	str	r3, [r6, #0]
 801273c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8012740:	4607      	mov	r7, r0
 8012742:	460c      	mov	r4, r1
 8012744:	b10a      	cbz	r2, 801274a <_printf_common+0x26>
 8012746:	3301      	adds	r3, #1
 8012748:	6033      	str	r3, [r6, #0]
 801274a:	6823      	ldr	r3, [r4, #0]
 801274c:	0699      	lsls	r1, r3, #26
 801274e:	bf42      	ittt	mi
 8012750:	6833      	ldrmi	r3, [r6, #0]
 8012752:	3302      	addmi	r3, #2
 8012754:	6033      	strmi	r3, [r6, #0]
 8012756:	6825      	ldr	r5, [r4, #0]
 8012758:	f015 0506 	ands.w	r5, r5, #6
 801275c:	d106      	bne.n	801276c <_printf_common+0x48>
 801275e:	f104 0a19 	add.w	sl, r4, #25
 8012762:	68e3      	ldr	r3, [r4, #12]
 8012764:	6832      	ldr	r2, [r6, #0]
 8012766:	1a9b      	subs	r3, r3, r2
 8012768:	42ab      	cmp	r3, r5
 801276a:	dc26      	bgt.n	80127ba <_printf_common+0x96>
 801276c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8012770:	1e13      	subs	r3, r2, #0
 8012772:	6822      	ldr	r2, [r4, #0]
 8012774:	bf18      	it	ne
 8012776:	2301      	movne	r3, #1
 8012778:	0692      	lsls	r2, r2, #26
 801277a:	d42b      	bmi.n	80127d4 <_printf_common+0xb0>
 801277c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8012780:	4649      	mov	r1, r9
 8012782:	4638      	mov	r0, r7
 8012784:	47c0      	blx	r8
 8012786:	3001      	adds	r0, #1
 8012788:	d01e      	beq.n	80127c8 <_printf_common+0xa4>
 801278a:	6823      	ldr	r3, [r4, #0]
 801278c:	6922      	ldr	r2, [r4, #16]
 801278e:	f003 0306 	and.w	r3, r3, #6
 8012792:	2b04      	cmp	r3, #4
 8012794:	bf02      	ittt	eq
 8012796:	68e5      	ldreq	r5, [r4, #12]
 8012798:	6833      	ldreq	r3, [r6, #0]
 801279a:	1aed      	subeq	r5, r5, r3
 801279c:	68a3      	ldr	r3, [r4, #8]
 801279e:	bf0c      	ite	eq
 80127a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80127a4:	2500      	movne	r5, #0
 80127a6:	4293      	cmp	r3, r2
 80127a8:	bfc4      	itt	gt
 80127aa:	1a9b      	subgt	r3, r3, r2
 80127ac:	18ed      	addgt	r5, r5, r3
 80127ae:	2600      	movs	r6, #0
 80127b0:	341a      	adds	r4, #26
 80127b2:	42b5      	cmp	r5, r6
 80127b4:	d11a      	bne.n	80127ec <_printf_common+0xc8>
 80127b6:	2000      	movs	r0, #0
 80127b8:	e008      	b.n	80127cc <_printf_common+0xa8>
 80127ba:	2301      	movs	r3, #1
 80127bc:	4652      	mov	r2, sl
 80127be:	4649      	mov	r1, r9
 80127c0:	4638      	mov	r0, r7
 80127c2:	47c0      	blx	r8
 80127c4:	3001      	adds	r0, #1
 80127c6:	d103      	bne.n	80127d0 <_printf_common+0xac>
 80127c8:	f04f 30ff 	mov.w	r0, #4294967295
 80127cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80127d0:	3501      	adds	r5, #1
 80127d2:	e7c6      	b.n	8012762 <_printf_common+0x3e>
 80127d4:	18e1      	adds	r1, r4, r3
 80127d6:	1c5a      	adds	r2, r3, #1
 80127d8:	2030      	movs	r0, #48	; 0x30
 80127da:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80127de:	4422      	add	r2, r4
 80127e0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80127e4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80127e8:	3302      	adds	r3, #2
 80127ea:	e7c7      	b.n	801277c <_printf_common+0x58>
 80127ec:	2301      	movs	r3, #1
 80127ee:	4622      	mov	r2, r4
 80127f0:	4649      	mov	r1, r9
 80127f2:	4638      	mov	r0, r7
 80127f4:	47c0      	blx	r8
 80127f6:	3001      	adds	r0, #1
 80127f8:	d0e6      	beq.n	80127c8 <_printf_common+0xa4>
 80127fa:	3601      	adds	r6, #1
 80127fc:	e7d9      	b.n	80127b2 <_printf_common+0x8e>
	...

08012800 <_printf_i>:
 8012800:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8012804:	7e0f      	ldrb	r7, [r1, #24]
 8012806:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8012808:	2f78      	cmp	r7, #120	; 0x78
 801280a:	4691      	mov	r9, r2
 801280c:	4680      	mov	r8, r0
 801280e:	460c      	mov	r4, r1
 8012810:	469a      	mov	sl, r3
 8012812:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8012816:	d807      	bhi.n	8012828 <_printf_i+0x28>
 8012818:	2f62      	cmp	r7, #98	; 0x62
 801281a:	d80a      	bhi.n	8012832 <_printf_i+0x32>
 801281c:	2f00      	cmp	r7, #0
 801281e:	f000 80d4 	beq.w	80129ca <_printf_i+0x1ca>
 8012822:	2f58      	cmp	r7, #88	; 0x58
 8012824:	f000 80c0 	beq.w	80129a8 <_printf_i+0x1a8>
 8012828:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801282c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8012830:	e03a      	b.n	80128a8 <_printf_i+0xa8>
 8012832:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8012836:	2b15      	cmp	r3, #21
 8012838:	d8f6      	bhi.n	8012828 <_printf_i+0x28>
 801283a:	a101      	add	r1, pc, #4	; (adr r1, 8012840 <_printf_i+0x40>)
 801283c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8012840:	08012899 	.word	0x08012899
 8012844:	080128ad 	.word	0x080128ad
 8012848:	08012829 	.word	0x08012829
 801284c:	08012829 	.word	0x08012829
 8012850:	08012829 	.word	0x08012829
 8012854:	08012829 	.word	0x08012829
 8012858:	080128ad 	.word	0x080128ad
 801285c:	08012829 	.word	0x08012829
 8012860:	08012829 	.word	0x08012829
 8012864:	08012829 	.word	0x08012829
 8012868:	08012829 	.word	0x08012829
 801286c:	080129b1 	.word	0x080129b1
 8012870:	080128d9 	.word	0x080128d9
 8012874:	0801296b 	.word	0x0801296b
 8012878:	08012829 	.word	0x08012829
 801287c:	08012829 	.word	0x08012829
 8012880:	080129d3 	.word	0x080129d3
 8012884:	08012829 	.word	0x08012829
 8012888:	080128d9 	.word	0x080128d9
 801288c:	08012829 	.word	0x08012829
 8012890:	08012829 	.word	0x08012829
 8012894:	08012973 	.word	0x08012973
 8012898:	682b      	ldr	r3, [r5, #0]
 801289a:	1d1a      	adds	r2, r3, #4
 801289c:	681b      	ldr	r3, [r3, #0]
 801289e:	602a      	str	r2, [r5, #0]
 80128a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80128a4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80128a8:	2301      	movs	r3, #1
 80128aa:	e09f      	b.n	80129ec <_printf_i+0x1ec>
 80128ac:	6820      	ldr	r0, [r4, #0]
 80128ae:	682b      	ldr	r3, [r5, #0]
 80128b0:	0607      	lsls	r7, r0, #24
 80128b2:	f103 0104 	add.w	r1, r3, #4
 80128b6:	6029      	str	r1, [r5, #0]
 80128b8:	d501      	bpl.n	80128be <_printf_i+0xbe>
 80128ba:	681e      	ldr	r6, [r3, #0]
 80128bc:	e003      	b.n	80128c6 <_printf_i+0xc6>
 80128be:	0646      	lsls	r6, r0, #25
 80128c0:	d5fb      	bpl.n	80128ba <_printf_i+0xba>
 80128c2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80128c6:	2e00      	cmp	r6, #0
 80128c8:	da03      	bge.n	80128d2 <_printf_i+0xd2>
 80128ca:	232d      	movs	r3, #45	; 0x2d
 80128cc:	4276      	negs	r6, r6
 80128ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80128d2:	485a      	ldr	r0, [pc, #360]	; (8012a3c <_printf_i+0x23c>)
 80128d4:	230a      	movs	r3, #10
 80128d6:	e012      	b.n	80128fe <_printf_i+0xfe>
 80128d8:	682b      	ldr	r3, [r5, #0]
 80128da:	6820      	ldr	r0, [r4, #0]
 80128dc:	1d19      	adds	r1, r3, #4
 80128de:	6029      	str	r1, [r5, #0]
 80128e0:	0605      	lsls	r5, r0, #24
 80128e2:	d501      	bpl.n	80128e8 <_printf_i+0xe8>
 80128e4:	681e      	ldr	r6, [r3, #0]
 80128e6:	e002      	b.n	80128ee <_printf_i+0xee>
 80128e8:	0641      	lsls	r1, r0, #25
 80128ea:	d5fb      	bpl.n	80128e4 <_printf_i+0xe4>
 80128ec:	881e      	ldrh	r6, [r3, #0]
 80128ee:	4853      	ldr	r0, [pc, #332]	; (8012a3c <_printf_i+0x23c>)
 80128f0:	2f6f      	cmp	r7, #111	; 0x6f
 80128f2:	bf0c      	ite	eq
 80128f4:	2308      	moveq	r3, #8
 80128f6:	230a      	movne	r3, #10
 80128f8:	2100      	movs	r1, #0
 80128fa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80128fe:	6865      	ldr	r5, [r4, #4]
 8012900:	60a5      	str	r5, [r4, #8]
 8012902:	2d00      	cmp	r5, #0
 8012904:	bfa2      	ittt	ge
 8012906:	6821      	ldrge	r1, [r4, #0]
 8012908:	f021 0104 	bicge.w	r1, r1, #4
 801290c:	6021      	strge	r1, [r4, #0]
 801290e:	b90e      	cbnz	r6, 8012914 <_printf_i+0x114>
 8012910:	2d00      	cmp	r5, #0
 8012912:	d04b      	beq.n	80129ac <_printf_i+0x1ac>
 8012914:	4615      	mov	r5, r2
 8012916:	fbb6 f1f3 	udiv	r1, r6, r3
 801291a:	fb03 6711 	mls	r7, r3, r1, r6
 801291e:	5dc7      	ldrb	r7, [r0, r7]
 8012920:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8012924:	4637      	mov	r7, r6
 8012926:	42bb      	cmp	r3, r7
 8012928:	460e      	mov	r6, r1
 801292a:	d9f4      	bls.n	8012916 <_printf_i+0x116>
 801292c:	2b08      	cmp	r3, #8
 801292e:	d10b      	bne.n	8012948 <_printf_i+0x148>
 8012930:	6823      	ldr	r3, [r4, #0]
 8012932:	07de      	lsls	r6, r3, #31
 8012934:	d508      	bpl.n	8012948 <_printf_i+0x148>
 8012936:	6923      	ldr	r3, [r4, #16]
 8012938:	6861      	ldr	r1, [r4, #4]
 801293a:	4299      	cmp	r1, r3
 801293c:	bfde      	ittt	le
 801293e:	2330      	movle	r3, #48	; 0x30
 8012940:	f805 3c01 	strble.w	r3, [r5, #-1]
 8012944:	f105 35ff 	addle.w	r5, r5, #4294967295
 8012948:	1b52      	subs	r2, r2, r5
 801294a:	6122      	str	r2, [r4, #16]
 801294c:	f8cd a000 	str.w	sl, [sp]
 8012950:	464b      	mov	r3, r9
 8012952:	aa03      	add	r2, sp, #12
 8012954:	4621      	mov	r1, r4
 8012956:	4640      	mov	r0, r8
 8012958:	f7ff fee4 	bl	8012724 <_printf_common>
 801295c:	3001      	adds	r0, #1
 801295e:	d14a      	bne.n	80129f6 <_printf_i+0x1f6>
 8012960:	f04f 30ff 	mov.w	r0, #4294967295
 8012964:	b004      	add	sp, #16
 8012966:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801296a:	6823      	ldr	r3, [r4, #0]
 801296c:	f043 0320 	orr.w	r3, r3, #32
 8012970:	6023      	str	r3, [r4, #0]
 8012972:	4833      	ldr	r0, [pc, #204]	; (8012a40 <_printf_i+0x240>)
 8012974:	2778      	movs	r7, #120	; 0x78
 8012976:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801297a:	6823      	ldr	r3, [r4, #0]
 801297c:	6829      	ldr	r1, [r5, #0]
 801297e:	061f      	lsls	r7, r3, #24
 8012980:	f851 6b04 	ldr.w	r6, [r1], #4
 8012984:	d402      	bmi.n	801298c <_printf_i+0x18c>
 8012986:	065f      	lsls	r7, r3, #25
 8012988:	bf48      	it	mi
 801298a:	b2b6      	uxthmi	r6, r6
 801298c:	07df      	lsls	r7, r3, #31
 801298e:	bf48      	it	mi
 8012990:	f043 0320 	orrmi.w	r3, r3, #32
 8012994:	6029      	str	r1, [r5, #0]
 8012996:	bf48      	it	mi
 8012998:	6023      	strmi	r3, [r4, #0]
 801299a:	b91e      	cbnz	r6, 80129a4 <_printf_i+0x1a4>
 801299c:	6823      	ldr	r3, [r4, #0]
 801299e:	f023 0320 	bic.w	r3, r3, #32
 80129a2:	6023      	str	r3, [r4, #0]
 80129a4:	2310      	movs	r3, #16
 80129a6:	e7a7      	b.n	80128f8 <_printf_i+0xf8>
 80129a8:	4824      	ldr	r0, [pc, #144]	; (8012a3c <_printf_i+0x23c>)
 80129aa:	e7e4      	b.n	8012976 <_printf_i+0x176>
 80129ac:	4615      	mov	r5, r2
 80129ae:	e7bd      	b.n	801292c <_printf_i+0x12c>
 80129b0:	682b      	ldr	r3, [r5, #0]
 80129b2:	6826      	ldr	r6, [r4, #0]
 80129b4:	6961      	ldr	r1, [r4, #20]
 80129b6:	1d18      	adds	r0, r3, #4
 80129b8:	6028      	str	r0, [r5, #0]
 80129ba:	0635      	lsls	r5, r6, #24
 80129bc:	681b      	ldr	r3, [r3, #0]
 80129be:	d501      	bpl.n	80129c4 <_printf_i+0x1c4>
 80129c0:	6019      	str	r1, [r3, #0]
 80129c2:	e002      	b.n	80129ca <_printf_i+0x1ca>
 80129c4:	0670      	lsls	r0, r6, #25
 80129c6:	d5fb      	bpl.n	80129c0 <_printf_i+0x1c0>
 80129c8:	8019      	strh	r1, [r3, #0]
 80129ca:	2300      	movs	r3, #0
 80129cc:	6123      	str	r3, [r4, #16]
 80129ce:	4615      	mov	r5, r2
 80129d0:	e7bc      	b.n	801294c <_printf_i+0x14c>
 80129d2:	682b      	ldr	r3, [r5, #0]
 80129d4:	1d1a      	adds	r2, r3, #4
 80129d6:	602a      	str	r2, [r5, #0]
 80129d8:	681d      	ldr	r5, [r3, #0]
 80129da:	6862      	ldr	r2, [r4, #4]
 80129dc:	2100      	movs	r1, #0
 80129de:	4628      	mov	r0, r5
 80129e0:	f7ed fc06 	bl	80001f0 <memchr>
 80129e4:	b108      	cbz	r0, 80129ea <_printf_i+0x1ea>
 80129e6:	1b40      	subs	r0, r0, r5
 80129e8:	6060      	str	r0, [r4, #4]
 80129ea:	6863      	ldr	r3, [r4, #4]
 80129ec:	6123      	str	r3, [r4, #16]
 80129ee:	2300      	movs	r3, #0
 80129f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80129f4:	e7aa      	b.n	801294c <_printf_i+0x14c>
 80129f6:	6923      	ldr	r3, [r4, #16]
 80129f8:	462a      	mov	r2, r5
 80129fa:	4649      	mov	r1, r9
 80129fc:	4640      	mov	r0, r8
 80129fe:	47d0      	blx	sl
 8012a00:	3001      	adds	r0, #1
 8012a02:	d0ad      	beq.n	8012960 <_printf_i+0x160>
 8012a04:	6823      	ldr	r3, [r4, #0]
 8012a06:	079b      	lsls	r3, r3, #30
 8012a08:	d413      	bmi.n	8012a32 <_printf_i+0x232>
 8012a0a:	68e0      	ldr	r0, [r4, #12]
 8012a0c:	9b03      	ldr	r3, [sp, #12]
 8012a0e:	4298      	cmp	r0, r3
 8012a10:	bfb8      	it	lt
 8012a12:	4618      	movlt	r0, r3
 8012a14:	e7a6      	b.n	8012964 <_printf_i+0x164>
 8012a16:	2301      	movs	r3, #1
 8012a18:	4632      	mov	r2, r6
 8012a1a:	4649      	mov	r1, r9
 8012a1c:	4640      	mov	r0, r8
 8012a1e:	47d0      	blx	sl
 8012a20:	3001      	adds	r0, #1
 8012a22:	d09d      	beq.n	8012960 <_printf_i+0x160>
 8012a24:	3501      	adds	r5, #1
 8012a26:	68e3      	ldr	r3, [r4, #12]
 8012a28:	9903      	ldr	r1, [sp, #12]
 8012a2a:	1a5b      	subs	r3, r3, r1
 8012a2c:	42ab      	cmp	r3, r5
 8012a2e:	dcf2      	bgt.n	8012a16 <_printf_i+0x216>
 8012a30:	e7eb      	b.n	8012a0a <_printf_i+0x20a>
 8012a32:	2500      	movs	r5, #0
 8012a34:	f104 0619 	add.w	r6, r4, #25
 8012a38:	e7f5      	b.n	8012a26 <_printf_i+0x226>
 8012a3a:	bf00      	nop
 8012a3c:	08016a49 	.word	0x08016a49
 8012a40:	08016a5a 	.word	0x08016a5a

08012a44 <std>:
 8012a44:	2300      	movs	r3, #0
 8012a46:	b510      	push	{r4, lr}
 8012a48:	4604      	mov	r4, r0
 8012a4a:	e9c0 3300 	strd	r3, r3, [r0]
 8012a4e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8012a52:	6083      	str	r3, [r0, #8]
 8012a54:	8181      	strh	r1, [r0, #12]
 8012a56:	6643      	str	r3, [r0, #100]	; 0x64
 8012a58:	81c2      	strh	r2, [r0, #14]
 8012a5a:	6183      	str	r3, [r0, #24]
 8012a5c:	4619      	mov	r1, r3
 8012a5e:	2208      	movs	r2, #8
 8012a60:	305c      	adds	r0, #92	; 0x5c
 8012a62:	f000 f9eb 	bl	8012e3c <memset>
 8012a66:	4b0d      	ldr	r3, [pc, #52]	; (8012a9c <std+0x58>)
 8012a68:	6263      	str	r3, [r4, #36]	; 0x24
 8012a6a:	4b0d      	ldr	r3, [pc, #52]	; (8012aa0 <std+0x5c>)
 8012a6c:	62a3      	str	r3, [r4, #40]	; 0x28
 8012a6e:	4b0d      	ldr	r3, [pc, #52]	; (8012aa4 <std+0x60>)
 8012a70:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012a72:	4b0d      	ldr	r3, [pc, #52]	; (8012aa8 <std+0x64>)
 8012a74:	6323      	str	r3, [r4, #48]	; 0x30
 8012a76:	4b0d      	ldr	r3, [pc, #52]	; (8012aac <std+0x68>)
 8012a78:	6224      	str	r4, [r4, #32]
 8012a7a:	429c      	cmp	r4, r3
 8012a7c:	d006      	beq.n	8012a8c <std+0x48>
 8012a7e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8012a82:	4294      	cmp	r4, r2
 8012a84:	d002      	beq.n	8012a8c <std+0x48>
 8012a86:	33d0      	adds	r3, #208	; 0xd0
 8012a88:	429c      	cmp	r4, r3
 8012a8a:	d105      	bne.n	8012a98 <std+0x54>
 8012a8c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8012a90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a94:	f000 bad2 	b.w	801303c <__retarget_lock_init_recursive>
 8012a98:	bd10      	pop	{r4, pc}
 8012a9a:	bf00      	nop
 8012a9c:	08012ced 	.word	0x08012ced
 8012aa0:	08012d13 	.word	0x08012d13
 8012aa4:	08012d4b 	.word	0x08012d4b
 8012aa8:	08012d6f 	.word	0x08012d6f
 8012aac:	20002fd8 	.word	0x20002fd8

08012ab0 <stdio_exit_handler>:
 8012ab0:	4a02      	ldr	r2, [pc, #8]	; (8012abc <stdio_exit_handler+0xc>)
 8012ab2:	4903      	ldr	r1, [pc, #12]	; (8012ac0 <stdio_exit_handler+0x10>)
 8012ab4:	4803      	ldr	r0, [pc, #12]	; (8012ac4 <stdio_exit_handler+0x14>)
 8012ab6:	f000 b87b 	b.w	8012bb0 <_fwalk_sglue>
 8012aba:	bf00      	nop
 8012abc:	20000064 	.word	0x20000064
 8012ac0:	08015ae9 	.word	0x08015ae9
 8012ac4:	200001dc 	.word	0x200001dc

08012ac8 <cleanup_stdio>:
 8012ac8:	6841      	ldr	r1, [r0, #4]
 8012aca:	4b0c      	ldr	r3, [pc, #48]	; (8012afc <cleanup_stdio+0x34>)
 8012acc:	4299      	cmp	r1, r3
 8012ace:	b510      	push	{r4, lr}
 8012ad0:	4604      	mov	r4, r0
 8012ad2:	d001      	beq.n	8012ad8 <cleanup_stdio+0x10>
 8012ad4:	f003 f808 	bl	8015ae8 <_fflush_r>
 8012ad8:	68a1      	ldr	r1, [r4, #8]
 8012ada:	4b09      	ldr	r3, [pc, #36]	; (8012b00 <cleanup_stdio+0x38>)
 8012adc:	4299      	cmp	r1, r3
 8012ade:	d002      	beq.n	8012ae6 <cleanup_stdio+0x1e>
 8012ae0:	4620      	mov	r0, r4
 8012ae2:	f003 f801 	bl	8015ae8 <_fflush_r>
 8012ae6:	68e1      	ldr	r1, [r4, #12]
 8012ae8:	4b06      	ldr	r3, [pc, #24]	; (8012b04 <cleanup_stdio+0x3c>)
 8012aea:	4299      	cmp	r1, r3
 8012aec:	d004      	beq.n	8012af8 <cleanup_stdio+0x30>
 8012aee:	4620      	mov	r0, r4
 8012af0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012af4:	f002 bff8 	b.w	8015ae8 <_fflush_r>
 8012af8:	bd10      	pop	{r4, pc}
 8012afa:	bf00      	nop
 8012afc:	20002fd8 	.word	0x20002fd8
 8012b00:	20003040 	.word	0x20003040
 8012b04:	200030a8 	.word	0x200030a8

08012b08 <global_stdio_init.part.0>:
 8012b08:	b510      	push	{r4, lr}
 8012b0a:	4b0b      	ldr	r3, [pc, #44]	; (8012b38 <global_stdio_init.part.0+0x30>)
 8012b0c:	4c0b      	ldr	r4, [pc, #44]	; (8012b3c <global_stdio_init.part.0+0x34>)
 8012b0e:	4a0c      	ldr	r2, [pc, #48]	; (8012b40 <global_stdio_init.part.0+0x38>)
 8012b10:	601a      	str	r2, [r3, #0]
 8012b12:	4620      	mov	r0, r4
 8012b14:	2200      	movs	r2, #0
 8012b16:	2104      	movs	r1, #4
 8012b18:	f7ff ff94 	bl	8012a44 <std>
 8012b1c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8012b20:	2201      	movs	r2, #1
 8012b22:	2109      	movs	r1, #9
 8012b24:	f7ff ff8e 	bl	8012a44 <std>
 8012b28:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8012b2c:	2202      	movs	r2, #2
 8012b2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b32:	2112      	movs	r1, #18
 8012b34:	f7ff bf86 	b.w	8012a44 <std>
 8012b38:	20003110 	.word	0x20003110
 8012b3c:	20002fd8 	.word	0x20002fd8
 8012b40:	08012ab1 	.word	0x08012ab1

08012b44 <__sfp_lock_acquire>:
 8012b44:	4801      	ldr	r0, [pc, #4]	; (8012b4c <__sfp_lock_acquire+0x8>)
 8012b46:	f000 ba7a 	b.w	801303e <__retarget_lock_acquire_recursive>
 8012b4a:	bf00      	nop
 8012b4c:	20003119 	.word	0x20003119

08012b50 <__sfp_lock_release>:
 8012b50:	4801      	ldr	r0, [pc, #4]	; (8012b58 <__sfp_lock_release+0x8>)
 8012b52:	f000 ba75 	b.w	8013040 <__retarget_lock_release_recursive>
 8012b56:	bf00      	nop
 8012b58:	20003119 	.word	0x20003119

08012b5c <__sinit>:
 8012b5c:	b510      	push	{r4, lr}
 8012b5e:	4604      	mov	r4, r0
 8012b60:	f7ff fff0 	bl	8012b44 <__sfp_lock_acquire>
 8012b64:	6a23      	ldr	r3, [r4, #32]
 8012b66:	b11b      	cbz	r3, 8012b70 <__sinit+0x14>
 8012b68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b6c:	f7ff bff0 	b.w	8012b50 <__sfp_lock_release>
 8012b70:	4b04      	ldr	r3, [pc, #16]	; (8012b84 <__sinit+0x28>)
 8012b72:	6223      	str	r3, [r4, #32]
 8012b74:	4b04      	ldr	r3, [pc, #16]	; (8012b88 <__sinit+0x2c>)
 8012b76:	681b      	ldr	r3, [r3, #0]
 8012b78:	2b00      	cmp	r3, #0
 8012b7a:	d1f5      	bne.n	8012b68 <__sinit+0xc>
 8012b7c:	f7ff ffc4 	bl	8012b08 <global_stdio_init.part.0>
 8012b80:	e7f2      	b.n	8012b68 <__sinit+0xc>
 8012b82:	bf00      	nop
 8012b84:	08012ac9 	.word	0x08012ac9
 8012b88:	20003110 	.word	0x20003110

08012b8c <fiprintf>:
 8012b8c:	b40e      	push	{r1, r2, r3}
 8012b8e:	b503      	push	{r0, r1, lr}
 8012b90:	4601      	mov	r1, r0
 8012b92:	ab03      	add	r3, sp, #12
 8012b94:	4805      	ldr	r0, [pc, #20]	; (8012bac <fiprintf+0x20>)
 8012b96:	f853 2b04 	ldr.w	r2, [r3], #4
 8012b9a:	6800      	ldr	r0, [r0, #0]
 8012b9c:	9301      	str	r3, [sp, #4]
 8012b9e:	f002 fcb5 	bl	801550c <_vfiprintf_r>
 8012ba2:	b002      	add	sp, #8
 8012ba4:	f85d eb04 	ldr.w	lr, [sp], #4
 8012ba8:	b003      	add	sp, #12
 8012baa:	4770      	bx	lr
 8012bac:	20000228 	.word	0x20000228

08012bb0 <_fwalk_sglue>:
 8012bb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012bb4:	4607      	mov	r7, r0
 8012bb6:	4688      	mov	r8, r1
 8012bb8:	4614      	mov	r4, r2
 8012bba:	2600      	movs	r6, #0
 8012bbc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8012bc0:	f1b9 0901 	subs.w	r9, r9, #1
 8012bc4:	d505      	bpl.n	8012bd2 <_fwalk_sglue+0x22>
 8012bc6:	6824      	ldr	r4, [r4, #0]
 8012bc8:	2c00      	cmp	r4, #0
 8012bca:	d1f7      	bne.n	8012bbc <_fwalk_sglue+0xc>
 8012bcc:	4630      	mov	r0, r6
 8012bce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012bd2:	89ab      	ldrh	r3, [r5, #12]
 8012bd4:	2b01      	cmp	r3, #1
 8012bd6:	d907      	bls.n	8012be8 <_fwalk_sglue+0x38>
 8012bd8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8012bdc:	3301      	adds	r3, #1
 8012bde:	d003      	beq.n	8012be8 <_fwalk_sglue+0x38>
 8012be0:	4629      	mov	r1, r5
 8012be2:	4638      	mov	r0, r7
 8012be4:	47c0      	blx	r8
 8012be6:	4306      	orrs	r6, r0
 8012be8:	3568      	adds	r5, #104	; 0x68
 8012bea:	e7e9      	b.n	8012bc0 <_fwalk_sglue+0x10>

08012bec <sniprintf>:
 8012bec:	b40c      	push	{r2, r3}
 8012bee:	b530      	push	{r4, r5, lr}
 8012bf0:	4b17      	ldr	r3, [pc, #92]	; (8012c50 <sniprintf+0x64>)
 8012bf2:	1e0c      	subs	r4, r1, #0
 8012bf4:	681d      	ldr	r5, [r3, #0]
 8012bf6:	b09d      	sub	sp, #116	; 0x74
 8012bf8:	da08      	bge.n	8012c0c <sniprintf+0x20>
 8012bfa:	238b      	movs	r3, #139	; 0x8b
 8012bfc:	602b      	str	r3, [r5, #0]
 8012bfe:	f04f 30ff 	mov.w	r0, #4294967295
 8012c02:	b01d      	add	sp, #116	; 0x74
 8012c04:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8012c08:	b002      	add	sp, #8
 8012c0a:	4770      	bx	lr
 8012c0c:	f44f 7302 	mov.w	r3, #520	; 0x208
 8012c10:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012c14:	bf14      	ite	ne
 8012c16:	f104 33ff 	addne.w	r3, r4, #4294967295
 8012c1a:	4623      	moveq	r3, r4
 8012c1c:	9304      	str	r3, [sp, #16]
 8012c1e:	9307      	str	r3, [sp, #28]
 8012c20:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012c24:	9002      	str	r0, [sp, #8]
 8012c26:	9006      	str	r0, [sp, #24]
 8012c28:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012c2c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8012c2e:	ab21      	add	r3, sp, #132	; 0x84
 8012c30:	a902      	add	r1, sp, #8
 8012c32:	4628      	mov	r0, r5
 8012c34:	9301      	str	r3, [sp, #4]
 8012c36:	f002 f96f 	bl	8014f18 <_svfiprintf_r>
 8012c3a:	1c43      	adds	r3, r0, #1
 8012c3c:	bfbc      	itt	lt
 8012c3e:	238b      	movlt	r3, #139	; 0x8b
 8012c40:	602b      	strlt	r3, [r5, #0]
 8012c42:	2c00      	cmp	r4, #0
 8012c44:	d0dd      	beq.n	8012c02 <sniprintf+0x16>
 8012c46:	9b02      	ldr	r3, [sp, #8]
 8012c48:	2200      	movs	r2, #0
 8012c4a:	701a      	strb	r2, [r3, #0]
 8012c4c:	e7d9      	b.n	8012c02 <sniprintf+0x16>
 8012c4e:	bf00      	nop
 8012c50:	20000228 	.word	0x20000228

08012c54 <siprintf>:
 8012c54:	b40e      	push	{r1, r2, r3}
 8012c56:	b500      	push	{lr}
 8012c58:	b09c      	sub	sp, #112	; 0x70
 8012c5a:	ab1d      	add	r3, sp, #116	; 0x74
 8012c5c:	9002      	str	r0, [sp, #8]
 8012c5e:	9006      	str	r0, [sp, #24]
 8012c60:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8012c64:	4809      	ldr	r0, [pc, #36]	; (8012c8c <siprintf+0x38>)
 8012c66:	9107      	str	r1, [sp, #28]
 8012c68:	9104      	str	r1, [sp, #16]
 8012c6a:	4909      	ldr	r1, [pc, #36]	; (8012c90 <siprintf+0x3c>)
 8012c6c:	f853 2b04 	ldr.w	r2, [r3], #4
 8012c70:	9105      	str	r1, [sp, #20]
 8012c72:	6800      	ldr	r0, [r0, #0]
 8012c74:	9301      	str	r3, [sp, #4]
 8012c76:	a902      	add	r1, sp, #8
 8012c78:	f002 f94e 	bl	8014f18 <_svfiprintf_r>
 8012c7c:	9b02      	ldr	r3, [sp, #8]
 8012c7e:	2200      	movs	r2, #0
 8012c80:	701a      	strb	r2, [r3, #0]
 8012c82:	b01c      	add	sp, #112	; 0x70
 8012c84:	f85d eb04 	ldr.w	lr, [sp], #4
 8012c88:	b003      	add	sp, #12
 8012c8a:	4770      	bx	lr
 8012c8c:	20000228 	.word	0x20000228
 8012c90:	ffff0208 	.word	0xffff0208

08012c94 <siscanf>:
 8012c94:	b40e      	push	{r1, r2, r3}
 8012c96:	b510      	push	{r4, lr}
 8012c98:	b09f      	sub	sp, #124	; 0x7c
 8012c9a:	ac21      	add	r4, sp, #132	; 0x84
 8012c9c:	f44f 7101 	mov.w	r1, #516	; 0x204
 8012ca0:	f854 2b04 	ldr.w	r2, [r4], #4
 8012ca4:	9201      	str	r2, [sp, #4]
 8012ca6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012caa:	9004      	str	r0, [sp, #16]
 8012cac:	9008      	str	r0, [sp, #32]
 8012cae:	f7ed faef 	bl	8000290 <strlen>
 8012cb2:	4b0c      	ldr	r3, [pc, #48]	; (8012ce4 <siscanf+0x50>)
 8012cb4:	9005      	str	r0, [sp, #20]
 8012cb6:	9009      	str	r0, [sp, #36]	; 0x24
 8012cb8:	930d      	str	r3, [sp, #52]	; 0x34
 8012cba:	480b      	ldr	r0, [pc, #44]	; (8012ce8 <siscanf+0x54>)
 8012cbc:	9a01      	ldr	r2, [sp, #4]
 8012cbe:	6800      	ldr	r0, [r0, #0]
 8012cc0:	9403      	str	r4, [sp, #12]
 8012cc2:	2300      	movs	r3, #0
 8012cc4:	9311      	str	r3, [sp, #68]	; 0x44
 8012cc6:	9316      	str	r3, [sp, #88]	; 0x58
 8012cc8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012ccc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012cd0:	a904      	add	r1, sp, #16
 8012cd2:	4623      	mov	r3, r4
 8012cd4:	f002 fa78 	bl	80151c8 <__ssvfiscanf_r>
 8012cd8:	b01f      	add	sp, #124	; 0x7c
 8012cda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012cde:	b003      	add	sp, #12
 8012ce0:	4770      	bx	lr
 8012ce2:	bf00      	nop
 8012ce4:	08012d0f 	.word	0x08012d0f
 8012ce8:	20000228 	.word	0x20000228

08012cec <__sread>:
 8012cec:	b510      	push	{r4, lr}
 8012cee:	460c      	mov	r4, r1
 8012cf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012cf4:	f000 f930 	bl	8012f58 <_read_r>
 8012cf8:	2800      	cmp	r0, #0
 8012cfa:	bfab      	itete	ge
 8012cfc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8012cfe:	89a3      	ldrhlt	r3, [r4, #12]
 8012d00:	181b      	addge	r3, r3, r0
 8012d02:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8012d06:	bfac      	ite	ge
 8012d08:	6563      	strge	r3, [r4, #84]	; 0x54
 8012d0a:	81a3      	strhlt	r3, [r4, #12]
 8012d0c:	bd10      	pop	{r4, pc}

08012d0e <__seofread>:
 8012d0e:	2000      	movs	r0, #0
 8012d10:	4770      	bx	lr

08012d12 <__swrite>:
 8012d12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d16:	461f      	mov	r7, r3
 8012d18:	898b      	ldrh	r3, [r1, #12]
 8012d1a:	05db      	lsls	r3, r3, #23
 8012d1c:	4605      	mov	r5, r0
 8012d1e:	460c      	mov	r4, r1
 8012d20:	4616      	mov	r6, r2
 8012d22:	d505      	bpl.n	8012d30 <__swrite+0x1e>
 8012d24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012d28:	2302      	movs	r3, #2
 8012d2a:	2200      	movs	r2, #0
 8012d2c:	f000 f902 	bl	8012f34 <_lseek_r>
 8012d30:	89a3      	ldrh	r3, [r4, #12]
 8012d32:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8012d36:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8012d3a:	81a3      	strh	r3, [r4, #12]
 8012d3c:	4632      	mov	r2, r6
 8012d3e:	463b      	mov	r3, r7
 8012d40:	4628      	mov	r0, r5
 8012d42:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012d46:	f000 b93d 	b.w	8012fc4 <_write_r>

08012d4a <__sseek>:
 8012d4a:	b510      	push	{r4, lr}
 8012d4c:	460c      	mov	r4, r1
 8012d4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012d52:	f000 f8ef 	bl	8012f34 <_lseek_r>
 8012d56:	1c43      	adds	r3, r0, #1
 8012d58:	89a3      	ldrh	r3, [r4, #12]
 8012d5a:	bf15      	itete	ne
 8012d5c:	6560      	strne	r0, [r4, #84]	; 0x54
 8012d5e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8012d62:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8012d66:	81a3      	strheq	r3, [r4, #12]
 8012d68:	bf18      	it	ne
 8012d6a:	81a3      	strhne	r3, [r4, #12]
 8012d6c:	bd10      	pop	{r4, pc}

08012d6e <__sclose>:
 8012d6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012d72:	f000 b8cf 	b.w	8012f14 <_close_r>

08012d76 <_vsniprintf_r>:
 8012d76:	b530      	push	{r4, r5, lr}
 8012d78:	4614      	mov	r4, r2
 8012d7a:	2c00      	cmp	r4, #0
 8012d7c:	b09b      	sub	sp, #108	; 0x6c
 8012d7e:	4605      	mov	r5, r0
 8012d80:	461a      	mov	r2, r3
 8012d82:	da05      	bge.n	8012d90 <_vsniprintf_r+0x1a>
 8012d84:	238b      	movs	r3, #139	; 0x8b
 8012d86:	6003      	str	r3, [r0, #0]
 8012d88:	f04f 30ff 	mov.w	r0, #4294967295
 8012d8c:	b01b      	add	sp, #108	; 0x6c
 8012d8e:	bd30      	pop	{r4, r5, pc}
 8012d90:	f44f 7302 	mov.w	r3, #520	; 0x208
 8012d94:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012d98:	bf14      	ite	ne
 8012d9a:	f104 33ff 	addne.w	r3, r4, #4294967295
 8012d9e:	4623      	moveq	r3, r4
 8012da0:	9302      	str	r3, [sp, #8]
 8012da2:	9305      	str	r3, [sp, #20]
 8012da4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012da8:	9100      	str	r1, [sp, #0]
 8012daa:	9104      	str	r1, [sp, #16]
 8012dac:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012db0:	4669      	mov	r1, sp
 8012db2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8012db4:	f002 f8b0 	bl	8014f18 <_svfiprintf_r>
 8012db8:	1c43      	adds	r3, r0, #1
 8012dba:	bfbc      	itt	lt
 8012dbc:	238b      	movlt	r3, #139	; 0x8b
 8012dbe:	602b      	strlt	r3, [r5, #0]
 8012dc0:	2c00      	cmp	r4, #0
 8012dc2:	d0e3      	beq.n	8012d8c <_vsniprintf_r+0x16>
 8012dc4:	9b00      	ldr	r3, [sp, #0]
 8012dc6:	2200      	movs	r2, #0
 8012dc8:	701a      	strb	r2, [r3, #0]
 8012dca:	e7df      	b.n	8012d8c <_vsniprintf_r+0x16>

08012dcc <vsniprintf>:
 8012dcc:	b507      	push	{r0, r1, r2, lr}
 8012dce:	9300      	str	r3, [sp, #0]
 8012dd0:	4613      	mov	r3, r2
 8012dd2:	460a      	mov	r2, r1
 8012dd4:	4601      	mov	r1, r0
 8012dd6:	4803      	ldr	r0, [pc, #12]	; (8012de4 <vsniprintf+0x18>)
 8012dd8:	6800      	ldr	r0, [r0, #0]
 8012dda:	f7ff ffcc 	bl	8012d76 <_vsniprintf_r>
 8012dde:	b003      	add	sp, #12
 8012de0:	f85d fb04 	ldr.w	pc, [sp], #4
 8012de4:	20000228 	.word	0x20000228

08012de8 <memcmp>:
 8012de8:	b510      	push	{r4, lr}
 8012dea:	3901      	subs	r1, #1
 8012dec:	4402      	add	r2, r0
 8012dee:	4290      	cmp	r0, r2
 8012df0:	d101      	bne.n	8012df6 <memcmp+0xe>
 8012df2:	2000      	movs	r0, #0
 8012df4:	e005      	b.n	8012e02 <memcmp+0x1a>
 8012df6:	7803      	ldrb	r3, [r0, #0]
 8012df8:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8012dfc:	42a3      	cmp	r3, r4
 8012dfe:	d001      	beq.n	8012e04 <memcmp+0x1c>
 8012e00:	1b18      	subs	r0, r3, r4
 8012e02:	bd10      	pop	{r4, pc}
 8012e04:	3001      	adds	r0, #1
 8012e06:	e7f2      	b.n	8012dee <memcmp+0x6>

08012e08 <memmove>:
 8012e08:	4288      	cmp	r0, r1
 8012e0a:	b510      	push	{r4, lr}
 8012e0c:	eb01 0402 	add.w	r4, r1, r2
 8012e10:	d902      	bls.n	8012e18 <memmove+0x10>
 8012e12:	4284      	cmp	r4, r0
 8012e14:	4623      	mov	r3, r4
 8012e16:	d807      	bhi.n	8012e28 <memmove+0x20>
 8012e18:	1e43      	subs	r3, r0, #1
 8012e1a:	42a1      	cmp	r1, r4
 8012e1c:	d008      	beq.n	8012e30 <memmove+0x28>
 8012e1e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012e22:	f803 2f01 	strb.w	r2, [r3, #1]!
 8012e26:	e7f8      	b.n	8012e1a <memmove+0x12>
 8012e28:	4402      	add	r2, r0
 8012e2a:	4601      	mov	r1, r0
 8012e2c:	428a      	cmp	r2, r1
 8012e2e:	d100      	bne.n	8012e32 <memmove+0x2a>
 8012e30:	bd10      	pop	{r4, pc}
 8012e32:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012e36:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012e3a:	e7f7      	b.n	8012e2c <memmove+0x24>

08012e3c <memset>:
 8012e3c:	4402      	add	r2, r0
 8012e3e:	4603      	mov	r3, r0
 8012e40:	4293      	cmp	r3, r2
 8012e42:	d100      	bne.n	8012e46 <memset+0xa>
 8012e44:	4770      	bx	lr
 8012e46:	f803 1b01 	strb.w	r1, [r3], #1
 8012e4a:	e7f9      	b.n	8012e40 <memset+0x4>

08012e4c <strdup>:
 8012e4c:	4b02      	ldr	r3, [pc, #8]	; (8012e58 <strdup+0xc>)
 8012e4e:	4601      	mov	r1, r0
 8012e50:	6818      	ldr	r0, [r3, #0]
 8012e52:	f000 b803 	b.w	8012e5c <_strdup_r>
 8012e56:	bf00      	nop
 8012e58:	20000228 	.word	0x20000228

08012e5c <_strdup_r>:
 8012e5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012e5e:	4604      	mov	r4, r0
 8012e60:	4608      	mov	r0, r1
 8012e62:	460d      	mov	r5, r1
 8012e64:	f7ed fa14 	bl	8000290 <strlen>
 8012e68:	1c42      	adds	r2, r0, #1
 8012e6a:	4611      	mov	r1, r2
 8012e6c:	4620      	mov	r0, r4
 8012e6e:	9201      	str	r2, [sp, #4]
 8012e70:	f7fe faa6 	bl	80113c0 <_malloc_r>
 8012e74:	4604      	mov	r4, r0
 8012e76:	b118      	cbz	r0, 8012e80 <_strdup_r+0x24>
 8012e78:	9a01      	ldr	r2, [sp, #4]
 8012e7a:	4629      	mov	r1, r5
 8012e7c:	f000 f8e9 	bl	8013052 <memcpy>
 8012e80:	4620      	mov	r0, r4
 8012e82:	b003      	add	sp, #12
 8012e84:	bd30      	pop	{r4, r5, pc}

08012e86 <strncmp>:
 8012e86:	b510      	push	{r4, lr}
 8012e88:	b16a      	cbz	r2, 8012ea6 <strncmp+0x20>
 8012e8a:	3901      	subs	r1, #1
 8012e8c:	1884      	adds	r4, r0, r2
 8012e8e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012e92:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8012e96:	429a      	cmp	r2, r3
 8012e98:	d103      	bne.n	8012ea2 <strncmp+0x1c>
 8012e9a:	42a0      	cmp	r0, r4
 8012e9c:	d001      	beq.n	8012ea2 <strncmp+0x1c>
 8012e9e:	2a00      	cmp	r2, #0
 8012ea0:	d1f5      	bne.n	8012e8e <strncmp+0x8>
 8012ea2:	1ad0      	subs	r0, r2, r3
 8012ea4:	bd10      	pop	{r4, pc}
 8012ea6:	4610      	mov	r0, r2
 8012ea8:	e7fc      	b.n	8012ea4 <strncmp+0x1e>

08012eaa <_raise_r>:
 8012eaa:	291f      	cmp	r1, #31
 8012eac:	b538      	push	{r3, r4, r5, lr}
 8012eae:	4604      	mov	r4, r0
 8012eb0:	460d      	mov	r5, r1
 8012eb2:	d904      	bls.n	8012ebe <_raise_r+0x14>
 8012eb4:	2316      	movs	r3, #22
 8012eb6:	6003      	str	r3, [r0, #0]
 8012eb8:	f04f 30ff 	mov.w	r0, #4294967295
 8012ebc:	bd38      	pop	{r3, r4, r5, pc}
 8012ebe:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8012ec0:	b112      	cbz	r2, 8012ec8 <_raise_r+0x1e>
 8012ec2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8012ec6:	b94b      	cbnz	r3, 8012edc <_raise_r+0x32>
 8012ec8:	4620      	mov	r0, r4
 8012eca:	f000 f869 	bl	8012fa0 <_getpid_r>
 8012ece:	462a      	mov	r2, r5
 8012ed0:	4601      	mov	r1, r0
 8012ed2:	4620      	mov	r0, r4
 8012ed4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012ed8:	f000 b850 	b.w	8012f7c <_kill_r>
 8012edc:	2b01      	cmp	r3, #1
 8012ede:	d00a      	beq.n	8012ef6 <_raise_r+0x4c>
 8012ee0:	1c59      	adds	r1, r3, #1
 8012ee2:	d103      	bne.n	8012eec <_raise_r+0x42>
 8012ee4:	2316      	movs	r3, #22
 8012ee6:	6003      	str	r3, [r0, #0]
 8012ee8:	2001      	movs	r0, #1
 8012eea:	e7e7      	b.n	8012ebc <_raise_r+0x12>
 8012eec:	2400      	movs	r4, #0
 8012eee:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8012ef2:	4628      	mov	r0, r5
 8012ef4:	4798      	blx	r3
 8012ef6:	2000      	movs	r0, #0
 8012ef8:	e7e0      	b.n	8012ebc <_raise_r+0x12>
	...

08012efc <raise>:
 8012efc:	4b02      	ldr	r3, [pc, #8]	; (8012f08 <raise+0xc>)
 8012efe:	4601      	mov	r1, r0
 8012f00:	6818      	ldr	r0, [r3, #0]
 8012f02:	f7ff bfd2 	b.w	8012eaa <_raise_r>
 8012f06:	bf00      	nop
 8012f08:	20000228 	.word	0x20000228

08012f0c <_localeconv_r>:
 8012f0c:	4800      	ldr	r0, [pc, #0]	; (8012f10 <_localeconv_r+0x4>)
 8012f0e:	4770      	bx	lr
 8012f10:	20000160 	.word	0x20000160

08012f14 <_close_r>:
 8012f14:	b538      	push	{r3, r4, r5, lr}
 8012f16:	4d06      	ldr	r5, [pc, #24]	; (8012f30 <_close_r+0x1c>)
 8012f18:	2300      	movs	r3, #0
 8012f1a:	4604      	mov	r4, r0
 8012f1c:	4608      	mov	r0, r1
 8012f1e:	602b      	str	r3, [r5, #0]
 8012f20:	f7f9 f8e5 	bl	800c0ee <_close>
 8012f24:	1c43      	adds	r3, r0, #1
 8012f26:	d102      	bne.n	8012f2e <_close_r+0x1a>
 8012f28:	682b      	ldr	r3, [r5, #0]
 8012f2a:	b103      	cbz	r3, 8012f2e <_close_r+0x1a>
 8012f2c:	6023      	str	r3, [r4, #0]
 8012f2e:	bd38      	pop	{r3, r4, r5, pc}
 8012f30:	20003114 	.word	0x20003114

08012f34 <_lseek_r>:
 8012f34:	b538      	push	{r3, r4, r5, lr}
 8012f36:	4d07      	ldr	r5, [pc, #28]	; (8012f54 <_lseek_r+0x20>)
 8012f38:	4604      	mov	r4, r0
 8012f3a:	4608      	mov	r0, r1
 8012f3c:	4611      	mov	r1, r2
 8012f3e:	2200      	movs	r2, #0
 8012f40:	602a      	str	r2, [r5, #0]
 8012f42:	461a      	mov	r2, r3
 8012f44:	f7f9 f8fa 	bl	800c13c <_lseek>
 8012f48:	1c43      	adds	r3, r0, #1
 8012f4a:	d102      	bne.n	8012f52 <_lseek_r+0x1e>
 8012f4c:	682b      	ldr	r3, [r5, #0]
 8012f4e:	b103      	cbz	r3, 8012f52 <_lseek_r+0x1e>
 8012f50:	6023      	str	r3, [r4, #0]
 8012f52:	bd38      	pop	{r3, r4, r5, pc}
 8012f54:	20003114 	.word	0x20003114

08012f58 <_read_r>:
 8012f58:	b538      	push	{r3, r4, r5, lr}
 8012f5a:	4d07      	ldr	r5, [pc, #28]	; (8012f78 <_read_r+0x20>)
 8012f5c:	4604      	mov	r4, r0
 8012f5e:	4608      	mov	r0, r1
 8012f60:	4611      	mov	r1, r2
 8012f62:	2200      	movs	r2, #0
 8012f64:	602a      	str	r2, [r5, #0]
 8012f66:	461a      	mov	r2, r3
 8012f68:	f7f9 f888 	bl	800c07c <_read>
 8012f6c:	1c43      	adds	r3, r0, #1
 8012f6e:	d102      	bne.n	8012f76 <_read_r+0x1e>
 8012f70:	682b      	ldr	r3, [r5, #0]
 8012f72:	b103      	cbz	r3, 8012f76 <_read_r+0x1e>
 8012f74:	6023      	str	r3, [r4, #0]
 8012f76:	bd38      	pop	{r3, r4, r5, pc}
 8012f78:	20003114 	.word	0x20003114

08012f7c <_kill_r>:
 8012f7c:	b538      	push	{r3, r4, r5, lr}
 8012f7e:	4d07      	ldr	r5, [pc, #28]	; (8012f9c <_kill_r+0x20>)
 8012f80:	2300      	movs	r3, #0
 8012f82:	4604      	mov	r4, r0
 8012f84:	4608      	mov	r0, r1
 8012f86:	4611      	mov	r1, r2
 8012f88:	602b      	str	r3, [r5, #0]
 8012f8a:	f7f9 f85d 	bl	800c048 <_kill>
 8012f8e:	1c43      	adds	r3, r0, #1
 8012f90:	d102      	bne.n	8012f98 <_kill_r+0x1c>
 8012f92:	682b      	ldr	r3, [r5, #0]
 8012f94:	b103      	cbz	r3, 8012f98 <_kill_r+0x1c>
 8012f96:	6023      	str	r3, [r4, #0]
 8012f98:	bd38      	pop	{r3, r4, r5, pc}
 8012f9a:	bf00      	nop
 8012f9c:	20003114 	.word	0x20003114

08012fa0 <_getpid_r>:
 8012fa0:	f7f9 b84a 	b.w	800c038 <_getpid>

08012fa4 <_sbrk_r>:
 8012fa4:	b538      	push	{r3, r4, r5, lr}
 8012fa6:	4d06      	ldr	r5, [pc, #24]	; (8012fc0 <_sbrk_r+0x1c>)
 8012fa8:	2300      	movs	r3, #0
 8012faa:	4604      	mov	r4, r0
 8012fac:	4608      	mov	r0, r1
 8012fae:	602b      	str	r3, [r5, #0]
 8012fb0:	f7f9 f8d2 	bl	800c158 <_sbrk>
 8012fb4:	1c43      	adds	r3, r0, #1
 8012fb6:	d102      	bne.n	8012fbe <_sbrk_r+0x1a>
 8012fb8:	682b      	ldr	r3, [r5, #0]
 8012fba:	b103      	cbz	r3, 8012fbe <_sbrk_r+0x1a>
 8012fbc:	6023      	str	r3, [r4, #0]
 8012fbe:	bd38      	pop	{r3, r4, r5, pc}
 8012fc0:	20003114 	.word	0x20003114

08012fc4 <_write_r>:
 8012fc4:	b538      	push	{r3, r4, r5, lr}
 8012fc6:	4d07      	ldr	r5, [pc, #28]	; (8012fe4 <_write_r+0x20>)
 8012fc8:	4604      	mov	r4, r0
 8012fca:	4608      	mov	r0, r1
 8012fcc:	4611      	mov	r1, r2
 8012fce:	2200      	movs	r2, #0
 8012fd0:	602a      	str	r2, [r5, #0]
 8012fd2:	461a      	mov	r2, r3
 8012fd4:	f7f9 f86f 	bl	800c0b6 <_write>
 8012fd8:	1c43      	adds	r3, r0, #1
 8012fda:	d102      	bne.n	8012fe2 <_write_r+0x1e>
 8012fdc:	682b      	ldr	r3, [r5, #0]
 8012fde:	b103      	cbz	r3, 8012fe2 <_write_r+0x1e>
 8012fe0:	6023      	str	r3, [r4, #0]
 8012fe2:	bd38      	pop	{r3, r4, r5, pc}
 8012fe4:	20003114 	.word	0x20003114

08012fe8 <__errno>:
 8012fe8:	4b01      	ldr	r3, [pc, #4]	; (8012ff0 <__errno+0x8>)
 8012fea:	6818      	ldr	r0, [r3, #0]
 8012fec:	4770      	bx	lr
 8012fee:	bf00      	nop
 8012ff0:	20000228 	.word	0x20000228

08012ff4 <__libc_init_array>:
 8012ff4:	b570      	push	{r4, r5, r6, lr}
 8012ff6:	4d0d      	ldr	r5, [pc, #52]	; (801302c <__libc_init_array+0x38>)
 8012ff8:	4c0d      	ldr	r4, [pc, #52]	; (8013030 <__libc_init_array+0x3c>)
 8012ffa:	1b64      	subs	r4, r4, r5
 8012ffc:	10a4      	asrs	r4, r4, #2
 8012ffe:	2600      	movs	r6, #0
 8013000:	42a6      	cmp	r6, r4
 8013002:	d109      	bne.n	8013018 <__libc_init_array+0x24>
 8013004:	4d0b      	ldr	r5, [pc, #44]	; (8013034 <__libc_init_array+0x40>)
 8013006:	4c0c      	ldr	r4, [pc, #48]	; (8013038 <__libc_init_array+0x44>)
 8013008:	f003 f84e 	bl	80160a8 <_init>
 801300c:	1b64      	subs	r4, r4, r5
 801300e:	10a4      	asrs	r4, r4, #2
 8013010:	2600      	movs	r6, #0
 8013012:	42a6      	cmp	r6, r4
 8013014:	d105      	bne.n	8013022 <__libc_init_array+0x2e>
 8013016:	bd70      	pop	{r4, r5, r6, pc}
 8013018:	f855 3b04 	ldr.w	r3, [r5], #4
 801301c:	4798      	blx	r3
 801301e:	3601      	adds	r6, #1
 8013020:	e7ee      	b.n	8013000 <__libc_init_array+0xc>
 8013022:	f855 3b04 	ldr.w	r3, [r5], #4
 8013026:	4798      	blx	r3
 8013028:	3601      	adds	r6, #1
 801302a:	e7f2      	b.n	8013012 <__libc_init_array+0x1e>
 801302c:	08016d2c 	.word	0x08016d2c
 8013030:	08016d2c 	.word	0x08016d2c
 8013034:	08016d2c 	.word	0x08016d2c
 8013038:	08016d34 	.word	0x08016d34

0801303c <__retarget_lock_init_recursive>:
 801303c:	4770      	bx	lr

0801303e <__retarget_lock_acquire_recursive>:
 801303e:	4770      	bx	lr

08013040 <__retarget_lock_release_recursive>:
 8013040:	4770      	bx	lr

08013042 <strcpy>:
 8013042:	4603      	mov	r3, r0
 8013044:	f811 2b01 	ldrb.w	r2, [r1], #1
 8013048:	f803 2b01 	strb.w	r2, [r3], #1
 801304c:	2a00      	cmp	r2, #0
 801304e:	d1f9      	bne.n	8013044 <strcpy+0x2>
 8013050:	4770      	bx	lr

08013052 <memcpy>:
 8013052:	440a      	add	r2, r1
 8013054:	4291      	cmp	r1, r2
 8013056:	f100 33ff 	add.w	r3, r0, #4294967295
 801305a:	d100      	bne.n	801305e <memcpy+0xc>
 801305c:	4770      	bx	lr
 801305e:	b510      	push	{r4, lr}
 8013060:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013064:	f803 4f01 	strb.w	r4, [r3, #1]!
 8013068:	4291      	cmp	r1, r2
 801306a:	d1f9      	bne.n	8013060 <memcpy+0xe>
 801306c:	bd10      	pop	{r4, pc}
	...

08013070 <nan>:
 8013070:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8013078 <nan+0x8>
 8013074:	4770      	bx	lr
 8013076:	bf00      	nop
 8013078:	00000000 	.word	0x00000000
 801307c:	7ff80000 	.word	0x7ff80000

08013080 <quorem>:
 8013080:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013084:	6903      	ldr	r3, [r0, #16]
 8013086:	690c      	ldr	r4, [r1, #16]
 8013088:	42a3      	cmp	r3, r4
 801308a:	4607      	mov	r7, r0
 801308c:	db7e      	blt.n	801318c <quorem+0x10c>
 801308e:	3c01      	subs	r4, #1
 8013090:	f101 0814 	add.w	r8, r1, #20
 8013094:	f100 0514 	add.w	r5, r0, #20
 8013098:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801309c:	9301      	str	r3, [sp, #4]
 801309e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80130a2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80130a6:	3301      	adds	r3, #1
 80130a8:	429a      	cmp	r2, r3
 80130aa:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80130ae:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80130b2:	fbb2 f6f3 	udiv	r6, r2, r3
 80130b6:	d331      	bcc.n	801311c <quorem+0x9c>
 80130b8:	f04f 0e00 	mov.w	lr, #0
 80130bc:	4640      	mov	r0, r8
 80130be:	46ac      	mov	ip, r5
 80130c0:	46f2      	mov	sl, lr
 80130c2:	f850 2b04 	ldr.w	r2, [r0], #4
 80130c6:	b293      	uxth	r3, r2
 80130c8:	fb06 e303 	mla	r3, r6, r3, lr
 80130cc:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80130d0:	0c1a      	lsrs	r2, r3, #16
 80130d2:	b29b      	uxth	r3, r3
 80130d4:	ebaa 0303 	sub.w	r3, sl, r3
 80130d8:	f8dc a000 	ldr.w	sl, [ip]
 80130dc:	fa13 f38a 	uxtah	r3, r3, sl
 80130e0:	fb06 220e 	mla	r2, r6, lr, r2
 80130e4:	9300      	str	r3, [sp, #0]
 80130e6:	9b00      	ldr	r3, [sp, #0]
 80130e8:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80130ec:	b292      	uxth	r2, r2
 80130ee:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80130f2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80130f6:	f8bd 3000 	ldrh.w	r3, [sp]
 80130fa:	4581      	cmp	r9, r0
 80130fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8013100:	f84c 3b04 	str.w	r3, [ip], #4
 8013104:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8013108:	d2db      	bcs.n	80130c2 <quorem+0x42>
 801310a:	f855 300b 	ldr.w	r3, [r5, fp]
 801310e:	b92b      	cbnz	r3, 801311c <quorem+0x9c>
 8013110:	9b01      	ldr	r3, [sp, #4]
 8013112:	3b04      	subs	r3, #4
 8013114:	429d      	cmp	r5, r3
 8013116:	461a      	mov	r2, r3
 8013118:	d32c      	bcc.n	8013174 <quorem+0xf4>
 801311a:	613c      	str	r4, [r7, #16]
 801311c:	4638      	mov	r0, r7
 801311e:	f001 fca5 	bl	8014a6c <__mcmp>
 8013122:	2800      	cmp	r0, #0
 8013124:	db22      	blt.n	801316c <quorem+0xec>
 8013126:	3601      	adds	r6, #1
 8013128:	4629      	mov	r1, r5
 801312a:	2000      	movs	r0, #0
 801312c:	f858 2b04 	ldr.w	r2, [r8], #4
 8013130:	f8d1 c000 	ldr.w	ip, [r1]
 8013134:	b293      	uxth	r3, r2
 8013136:	1ac3      	subs	r3, r0, r3
 8013138:	0c12      	lsrs	r2, r2, #16
 801313a:	fa13 f38c 	uxtah	r3, r3, ip
 801313e:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8013142:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8013146:	b29b      	uxth	r3, r3
 8013148:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801314c:	45c1      	cmp	r9, r8
 801314e:	f841 3b04 	str.w	r3, [r1], #4
 8013152:	ea4f 4022 	mov.w	r0, r2, asr #16
 8013156:	d2e9      	bcs.n	801312c <quorem+0xac>
 8013158:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801315c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8013160:	b922      	cbnz	r2, 801316c <quorem+0xec>
 8013162:	3b04      	subs	r3, #4
 8013164:	429d      	cmp	r5, r3
 8013166:	461a      	mov	r2, r3
 8013168:	d30a      	bcc.n	8013180 <quorem+0x100>
 801316a:	613c      	str	r4, [r7, #16]
 801316c:	4630      	mov	r0, r6
 801316e:	b003      	add	sp, #12
 8013170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013174:	6812      	ldr	r2, [r2, #0]
 8013176:	3b04      	subs	r3, #4
 8013178:	2a00      	cmp	r2, #0
 801317a:	d1ce      	bne.n	801311a <quorem+0x9a>
 801317c:	3c01      	subs	r4, #1
 801317e:	e7c9      	b.n	8013114 <quorem+0x94>
 8013180:	6812      	ldr	r2, [r2, #0]
 8013182:	3b04      	subs	r3, #4
 8013184:	2a00      	cmp	r2, #0
 8013186:	d1f0      	bne.n	801316a <quorem+0xea>
 8013188:	3c01      	subs	r4, #1
 801318a:	e7eb      	b.n	8013164 <quorem+0xe4>
 801318c:	2000      	movs	r0, #0
 801318e:	e7ee      	b.n	801316e <quorem+0xee>

08013190 <_dtoa_r>:
 8013190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013194:	ed2d 8b04 	vpush	{d8-d9}
 8013198:	69c5      	ldr	r5, [r0, #28]
 801319a:	b093      	sub	sp, #76	; 0x4c
 801319c:	ed8d 0b02 	vstr	d0, [sp, #8]
 80131a0:	ec57 6b10 	vmov	r6, r7, d0
 80131a4:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80131a8:	9107      	str	r1, [sp, #28]
 80131aa:	4604      	mov	r4, r0
 80131ac:	920a      	str	r2, [sp, #40]	; 0x28
 80131ae:	930d      	str	r3, [sp, #52]	; 0x34
 80131b0:	b975      	cbnz	r5, 80131d0 <_dtoa_r+0x40>
 80131b2:	2010      	movs	r0, #16
 80131b4:	f7fe f8d4 	bl	8011360 <malloc>
 80131b8:	4602      	mov	r2, r0
 80131ba:	61e0      	str	r0, [r4, #28]
 80131bc:	b920      	cbnz	r0, 80131c8 <_dtoa_r+0x38>
 80131be:	4bae      	ldr	r3, [pc, #696]	; (8013478 <_dtoa_r+0x2e8>)
 80131c0:	21ef      	movs	r1, #239	; 0xef
 80131c2:	48ae      	ldr	r0, [pc, #696]	; (801347c <_dtoa_r+0x2ec>)
 80131c4:	f002 fdc0 	bl	8015d48 <__assert_func>
 80131c8:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80131cc:	6005      	str	r5, [r0, #0]
 80131ce:	60c5      	str	r5, [r0, #12]
 80131d0:	69e3      	ldr	r3, [r4, #28]
 80131d2:	6819      	ldr	r1, [r3, #0]
 80131d4:	b151      	cbz	r1, 80131ec <_dtoa_r+0x5c>
 80131d6:	685a      	ldr	r2, [r3, #4]
 80131d8:	604a      	str	r2, [r1, #4]
 80131da:	2301      	movs	r3, #1
 80131dc:	4093      	lsls	r3, r2
 80131de:	608b      	str	r3, [r1, #8]
 80131e0:	4620      	mov	r0, r4
 80131e2:	f001 f9bd 	bl	8014560 <_Bfree>
 80131e6:	69e3      	ldr	r3, [r4, #28]
 80131e8:	2200      	movs	r2, #0
 80131ea:	601a      	str	r2, [r3, #0]
 80131ec:	1e3b      	subs	r3, r7, #0
 80131ee:	bfbb      	ittet	lt
 80131f0:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80131f4:	9303      	strlt	r3, [sp, #12]
 80131f6:	2300      	movge	r3, #0
 80131f8:	2201      	movlt	r2, #1
 80131fa:	bfac      	ite	ge
 80131fc:	f8c8 3000 	strge.w	r3, [r8]
 8013200:	f8c8 2000 	strlt.w	r2, [r8]
 8013204:	4b9e      	ldr	r3, [pc, #632]	; (8013480 <_dtoa_r+0x2f0>)
 8013206:	f8dd 800c 	ldr.w	r8, [sp, #12]
 801320a:	ea33 0308 	bics.w	r3, r3, r8
 801320e:	d11b      	bne.n	8013248 <_dtoa_r+0xb8>
 8013210:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013212:	f242 730f 	movw	r3, #9999	; 0x270f
 8013216:	6013      	str	r3, [r2, #0]
 8013218:	f3c8 0313 	ubfx	r3, r8, #0, #20
 801321c:	4333      	orrs	r3, r6
 801321e:	f000 8593 	beq.w	8013d48 <_dtoa_r+0xbb8>
 8013222:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8013224:	b963      	cbnz	r3, 8013240 <_dtoa_r+0xb0>
 8013226:	4b97      	ldr	r3, [pc, #604]	; (8013484 <_dtoa_r+0x2f4>)
 8013228:	e027      	b.n	801327a <_dtoa_r+0xea>
 801322a:	4b97      	ldr	r3, [pc, #604]	; (8013488 <_dtoa_r+0x2f8>)
 801322c:	9300      	str	r3, [sp, #0]
 801322e:	3308      	adds	r3, #8
 8013230:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013232:	6013      	str	r3, [r2, #0]
 8013234:	9800      	ldr	r0, [sp, #0]
 8013236:	b013      	add	sp, #76	; 0x4c
 8013238:	ecbd 8b04 	vpop	{d8-d9}
 801323c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013240:	4b90      	ldr	r3, [pc, #576]	; (8013484 <_dtoa_r+0x2f4>)
 8013242:	9300      	str	r3, [sp, #0]
 8013244:	3303      	adds	r3, #3
 8013246:	e7f3      	b.n	8013230 <_dtoa_r+0xa0>
 8013248:	ed9d 7b02 	vldr	d7, [sp, #8]
 801324c:	2200      	movs	r2, #0
 801324e:	ec51 0b17 	vmov	r0, r1, d7
 8013252:	eeb0 8a47 	vmov.f32	s16, s14
 8013256:	eef0 8a67 	vmov.f32	s17, s15
 801325a:	2300      	movs	r3, #0
 801325c:	f7ed fc44 	bl	8000ae8 <__aeabi_dcmpeq>
 8013260:	4681      	mov	r9, r0
 8013262:	b160      	cbz	r0, 801327e <_dtoa_r+0xee>
 8013264:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013266:	2301      	movs	r3, #1
 8013268:	6013      	str	r3, [r2, #0]
 801326a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801326c:	2b00      	cmp	r3, #0
 801326e:	f000 8568 	beq.w	8013d42 <_dtoa_r+0xbb2>
 8013272:	4b86      	ldr	r3, [pc, #536]	; (801348c <_dtoa_r+0x2fc>)
 8013274:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013276:	6013      	str	r3, [r2, #0]
 8013278:	3b01      	subs	r3, #1
 801327a:	9300      	str	r3, [sp, #0]
 801327c:	e7da      	b.n	8013234 <_dtoa_r+0xa4>
 801327e:	aa10      	add	r2, sp, #64	; 0x40
 8013280:	a911      	add	r1, sp, #68	; 0x44
 8013282:	4620      	mov	r0, r4
 8013284:	eeb0 0a48 	vmov.f32	s0, s16
 8013288:	eef0 0a68 	vmov.f32	s1, s17
 801328c:	f001 fd04 	bl	8014c98 <__d2b>
 8013290:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8013294:	4682      	mov	sl, r0
 8013296:	2d00      	cmp	r5, #0
 8013298:	d07f      	beq.n	801339a <_dtoa_r+0x20a>
 801329a:	ee18 3a90 	vmov	r3, s17
 801329e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80132a2:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80132a6:	ec51 0b18 	vmov	r0, r1, d8
 80132aa:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80132ae:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80132b2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80132b6:	4619      	mov	r1, r3
 80132b8:	2200      	movs	r2, #0
 80132ba:	4b75      	ldr	r3, [pc, #468]	; (8013490 <_dtoa_r+0x300>)
 80132bc:	f7ec fff4 	bl	80002a8 <__aeabi_dsub>
 80132c0:	a367      	add	r3, pc, #412	; (adr r3, 8013460 <_dtoa_r+0x2d0>)
 80132c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80132c6:	f7ed f9a7 	bl	8000618 <__aeabi_dmul>
 80132ca:	a367      	add	r3, pc, #412	; (adr r3, 8013468 <_dtoa_r+0x2d8>)
 80132cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80132d0:	f7ec ffec 	bl	80002ac <__adddf3>
 80132d4:	4606      	mov	r6, r0
 80132d6:	4628      	mov	r0, r5
 80132d8:	460f      	mov	r7, r1
 80132da:	f7ed f933 	bl	8000544 <__aeabi_i2d>
 80132de:	a364      	add	r3, pc, #400	; (adr r3, 8013470 <_dtoa_r+0x2e0>)
 80132e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80132e4:	f7ed f998 	bl	8000618 <__aeabi_dmul>
 80132e8:	4602      	mov	r2, r0
 80132ea:	460b      	mov	r3, r1
 80132ec:	4630      	mov	r0, r6
 80132ee:	4639      	mov	r1, r7
 80132f0:	f7ec ffdc 	bl	80002ac <__adddf3>
 80132f4:	4606      	mov	r6, r0
 80132f6:	460f      	mov	r7, r1
 80132f8:	f7ed fc3e 	bl	8000b78 <__aeabi_d2iz>
 80132fc:	2200      	movs	r2, #0
 80132fe:	4683      	mov	fp, r0
 8013300:	2300      	movs	r3, #0
 8013302:	4630      	mov	r0, r6
 8013304:	4639      	mov	r1, r7
 8013306:	f7ed fbf9 	bl	8000afc <__aeabi_dcmplt>
 801330a:	b148      	cbz	r0, 8013320 <_dtoa_r+0x190>
 801330c:	4658      	mov	r0, fp
 801330e:	f7ed f919 	bl	8000544 <__aeabi_i2d>
 8013312:	4632      	mov	r2, r6
 8013314:	463b      	mov	r3, r7
 8013316:	f7ed fbe7 	bl	8000ae8 <__aeabi_dcmpeq>
 801331a:	b908      	cbnz	r0, 8013320 <_dtoa_r+0x190>
 801331c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013320:	f1bb 0f16 	cmp.w	fp, #22
 8013324:	d857      	bhi.n	80133d6 <_dtoa_r+0x246>
 8013326:	4b5b      	ldr	r3, [pc, #364]	; (8013494 <_dtoa_r+0x304>)
 8013328:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 801332c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013330:	ec51 0b18 	vmov	r0, r1, d8
 8013334:	f7ed fbe2 	bl	8000afc <__aeabi_dcmplt>
 8013338:	2800      	cmp	r0, #0
 801333a:	d04e      	beq.n	80133da <_dtoa_r+0x24a>
 801333c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013340:	2300      	movs	r3, #0
 8013342:	930c      	str	r3, [sp, #48]	; 0x30
 8013344:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013346:	1b5b      	subs	r3, r3, r5
 8013348:	1e5a      	subs	r2, r3, #1
 801334a:	bf45      	ittet	mi
 801334c:	f1c3 0301 	rsbmi	r3, r3, #1
 8013350:	9305      	strmi	r3, [sp, #20]
 8013352:	2300      	movpl	r3, #0
 8013354:	2300      	movmi	r3, #0
 8013356:	9206      	str	r2, [sp, #24]
 8013358:	bf54      	ite	pl
 801335a:	9305      	strpl	r3, [sp, #20]
 801335c:	9306      	strmi	r3, [sp, #24]
 801335e:	f1bb 0f00 	cmp.w	fp, #0
 8013362:	db3c      	blt.n	80133de <_dtoa_r+0x24e>
 8013364:	9b06      	ldr	r3, [sp, #24]
 8013366:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 801336a:	445b      	add	r3, fp
 801336c:	9306      	str	r3, [sp, #24]
 801336e:	2300      	movs	r3, #0
 8013370:	9308      	str	r3, [sp, #32]
 8013372:	9b07      	ldr	r3, [sp, #28]
 8013374:	2b09      	cmp	r3, #9
 8013376:	d868      	bhi.n	801344a <_dtoa_r+0x2ba>
 8013378:	2b05      	cmp	r3, #5
 801337a:	bfc4      	itt	gt
 801337c:	3b04      	subgt	r3, #4
 801337e:	9307      	strgt	r3, [sp, #28]
 8013380:	9b07      	ldr	r3, [sp, #28]
 8013382:	f1a3 0302 	sub.w	r3, r3, #2
 8013386:	bfcc      	ite	gt
 8013388:	2500      	movgt	r5, #0
 801338a:	2501      	movle	r5, #1
 801338c:	2b03      	cmp	r3, #3
 801338e:	f200 8085 	bhi.w	801349c <_dtoa_r+0x30c>
 8013392:	e8df f003 	tbb	[pc, r3]
 8013396:	3b2e      	.short	0x3b2e
 8013398:	5839      	.short	0x5839
 801339a:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 801339e:	441d      	add	r5, r3
 80133a0:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80133a4:	2b20      	cmp	r3, #32
 80133a6:	bfc1      	itttt	gt
 80133a8:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80133ac:	fa08 f803 	lslgt.w	r8, r8, r3
 80133b0:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 80133b4:	fa26 f303 	lsrgt.w	r3, r6, r3
 80133b8:	bfd6      	itet	le
 80133ba:	f1c3 0320 	rsble	r3, r3, #32
 80133be:	ea48 0003 	orrgt.w	r0, r8, r3
 80133c2:	fa06 f003 	lslle.w	r0, r6, r3
 80133c6:	f7ed f8ad 	bl	8000524 <__aeabi_ui2d>
 80133ca:	2201      	movs	r2, #1
 80133cc:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80133d0:	3d01      	subs	r5, #1
 80133d2:	920e      	str	r2, [sp, #56]	; 0x38
 80133d4:	e76f      	b.n	80132b6 <_dtoa_r+0x126>
 80133d6:	2301      	movs	r3, #1
 80133d8:	e7b3      	b.n	8013342 <_dtoa_r+0x1b2>
 80133da:	900c      	str	r0, [sp, #48]	; 0x30
 80133dc:	e7b2      	b.n	8013344 <_dtoa_r+0x1b4>
 80133de:	9b05      	ldr	r3, [sp, #20]
 80133e0:	eba3 030b 	sub.w	r3, r3, fp
 80133e4:	9305      	str	r3, [sp, #20]
 80133e6:	f1cb 0300 	rsb	r3, fp, #0
 80133ea:	9308      	str	r3, [sp, #32]
 80133ec:	2300      	movs	r3, #0
 80133ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80133f0:	e7bf      	b.n	8013372 <_dtoa_r+0x1e2>
 80133f2:	2300      	movs	r3, #0
 80133f4:	9309      	str	r3, [sp, #36]	; 0x24
 80133f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80133f8:	2b00      	cmp	r3, #0
 80133fa:	dc52      	bgt.n	80134a2 <_dtoa_r+0x312>
 80133fc:	2301      	movs	r3, #1
 80133fe:	9301      	str	r3, [sp, #4]
 8013400:	9304      	str	r3, [sp, #16]
 8013402:	461a      	mov	r2, r3
 8013404:	920a      	str	r2, [sp, #40]	; 0x28
 8013406:	e00b      	b.n	8013420 <_dtoa_r+0x290>
 8013408:	2301      	movs	r3, #1
 801340a:	e7f3      	b.n	80133f4 <_dtoa_r+0x264>
 801340c:	2300      	movs	r3, #0
 801340e:	9309      	str	r3, [sp, #36]	; 0x24
 8013410:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013412:	445b      	add	r3, fp
 8013414:	9301      	str	r3, [sp, #4]
 8013416:	3301      	adds	r3, #1
 8013418:	2b01      	cmp	r3, #1
 801341a:	9304      	str	r3, [sp, #16]
 801341c:	bfb8      	it	lt
 801341e:	2301      	movlt	r3, #1
 8013420:	69e0      	ldr	r0, [r4, #28]
 8013422:	2100      	movs	r1, #0
 8013424:	2204      	movs	r2, #4
 8013426:	f102 0614 	add.w	r6, r2, #20
 801342a:	429e      	cmp	r6, r3
 801342c:	d93d      	bls.n	80134aa <_dtoa_r+0x31a>
 801342e:	6041      	str	r1, [r0, #4]
 8013430:	4620      	mov	r0, r4
 8013432:	f001 f855 	bl	80144e0 <_Balloc>
 8013436:	9000      	str	r0, [sp, #0]
 8013438:	2800      	cmp	r0, #0
 801343a:	d139      	bne.n	80134b0 <_dtoa_r+0x320>
 801343c:	4b16      	ldr	r3, [pc, #88]	; (8013498 <_dtoa_r+0x308>)
 801343e:	4602      	mov	r2, r0
 8013440:	f240 11af 	movw	r1, #431	; 0x1af
 8013444:	e6bd      	b.n	80131c2 <_dtoa_r+0x32>
 8013446:	2301      	movs	r3, #1
 8013448:	e7e1      	b.n	801340e <_dtoa_r+0x27e>
 801344a:	2501      	movs	r5, #1
 801344c:	2300      	movs	r3, #0
 801344e:	9307      	str	r3, [sp, #28]
 8013450:	9509      	str	r5, [sp, #36]	; 0x24
 8013452:	f04f 33ff 	mov.w	r3, #4294967295
 8013456:	9301      	str	r3, [sp, #4]
 8013458:	9304      	str	r3, [sp, #16]
 801345a:	2200      	movs	r2, #0
 801345c:	2312      	movs	r3, #18
 801345e:	e7d1      	b.n	8013404 <_dtoa_r+0x274>
 8013460:	636f4361 	.word	0x636f4361
 8013464:	3fd287a7 	.word	0x3fd287a7
 8013468:	8b60c8b3 	.word	0x8b60c8b3
 801346c:	3fc68a28 	.word	0x3fc68a28
 8013470:	509f79fb 	.word	0x509f79fb
 8013474:	3fd34413 	.word	0x3fd34413
 8013478:	08016a80 	.word	0x08016a80
 801347c:	08016a97 	.word	0x08016a97
 8013480:	7ff00000 	.word	0x7ff00000
 8013484:	08016a7c 	.word	0x08016a7c
 8013488:	08016a73 	.word	0x08016a73
 801348c:	08016ce4 	.word	0x08016ce4
 8013490:	3ff80000 	.word	0x3ff80000
 8013494:	08016be8 	.word	0x08016be8
 8013498:	08016aef 	.word	0x08016aef
 801349c:	2301      	movs	r3, #1
 801349e:	9309      	str	r3, [sp, #36]	; 0x24
 80134a0:	e7d7      	b.n	8013452 <_dtoa_r+0x2c2>
 80134a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80134a4:	9301      	str	r3, [sp, #4]
 80134a6:	9304      	str	r3, [sp, #16]
 80134a8:	e7ba      	b.n	8013420 <_dtoa_r+0x290>
 80134aa:	3101      	adds	r1, #1
 80134ac:	0052      	lsls	r2, r2, #1
 80134ae:	e7ba      	b.n	8013426 <_dtoa_r+0x296>
 80134b0:	69e3      	ldr	r3, [r4, #28]
 80134b2:	9a00      	ldr	r2, [sp, #0]
 80134b4:	601a      	str	r2, [r3, #0]
 80134b6:	9b04      	ldr	r3, [sp, #16]
 80134b8:	2b0e      	cmp	r3, #14
 80134ba:	f200 80a8 	bhi.w	801360e <_dtoa_r+0x47e>
 80134be:	2d00      	cmp	r5, #0
 80134c0:	f000 80a5 	beq.w	801360e <_dtoa_r+0x47e>
 80134c4:	f1bb 0f00 	cmp.w	fp, #0
 80134c8:	dd38      	ble.n	801353c <_dtoa_r+0x3ac>
 80134ca:	4bc0      	ldr	r3, [pc, #768]	; (80137cc <_dtoa_r+0x63c>)
 80134cc:	f00b 020f 	and.w	r2, fp, #15
 80134d0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80134d4:	f41b 7f80 	tst.w	fp, #256	; 0x100
 80134d8:	e9d3 6700 	ldrd	r6, r7, [r3]
 80134dc:	ea4f 182b 	mov.w	r8, fp, asr #4
 80134e0:	d019      	beq.n	8013516 <_dtoa_r+0x386>
 80134e2:	4bbb      	ldr	r3, [pc, #748]	; (80137d0 <_dtoa_r+0x640>)
 80134e4:	ec51 0b18 	vmov	r0, r1, d8
 80134e8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80134ec:	f7ed f9be 	bl	800086c <__aeabi_ddiv>
 80134f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80134f4:	f008 080f 	and.w	r8, r8, #15
 80134f8:	2503      	movs	r5, #3
 80134fa:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 80137d0 <_dtoa_r+0x640>
 80134fe:	f1b8 0f00 	cmp.w	r8, #0
 8013502:	d10a      	bne.n	801351a <_dtoa_r+0x38a>
 8013504:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013508:	4632      	mov	r2, r6
 801350a:	463b      	mov	r3, r7
 801350c:	f7ed f9ae 	bl	800086c <__aeabi_ddiv>
 8013510:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8013514:	e02b      	b.n	801356e <_dtoa_r+0x3de>
 8013516:	2502      	movs	r5, #2
 8013518:	e7ef      	b.n	80134fa <_dtoa_r+0x36a>
 801351a:	f018 0f01 	tst.w	r8, #1
 801351e:	d008      	beq.n	8013532 <_dtoa_r+0x3a2>
 8013520:	4630      	mov	r0, r6
 8013522:	4639      	mov	r1, r7
 8013524:	e9d9 2300 	ldrd	r2, r3, [r9]
 8013528:	f7ed f876 	bl	8000618 <__aeabi_dmul>
 801352c:	3501      	adds	r5, #1
 801352e:	4606      	mov	r6, r0
 8013530:	460f      	mov	r7, r1
 8013532:	ea4f 0868 	mov.w	r8, r8, asr #1
 8013536:	f109 0908 	add.w	r9, r9, #8
 801353a:	e7e0      	b.n	80134fe <_dtoa_r+0x36e>
 801353c:	f000 809f 	beq.w	801367e <_dtoa_r+0x4ee>
 8013540:	f1cb 0600 	rsb	r6, fp, #0
 8013544:	4ba1      	ldr	r3, [pc, #644]	; (80137cc <_dtoa_r+0x63c>)
 8013546:	4fa2      	ldr	r7, [pc, #648]	; (80137d0 <_dtoa_r+0x640>)
 8013548:	f006 020f 	and.w	r2, r6, #15
 801354c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8013550:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013554:	ec51 0b18 	vmov	r0, r1, d8
 8013558:	f7ed f85e 	bl	8000618 <__aeabi_dmul>
 801355c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8013560:	1136      	asrs	r6, r6, #4
 8013562:	2300      	movs	r3, #0
 8013564:	2502      	movs	r5, #2
 8013566:	2e00      	cmp	r6, #0
 8013568:	d17e      	bne.n	8013668 <_dtoa_r+0x4d8>
 801356a:	2b00      	cmp	r3, #0
 801356c:	d1d0      	bne.n	8013510 <_dtoa_r+0x380>
 801356e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013570:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8013574:	2b00      	cmp	r3, #0
 8013576:	f000 8084 	beq.w	8013682 <_dtoa_r+0x4f2>
 801357a:	4b96      	ldr	r3, [pc, #600]	; (80137d4 <_dtoa_r+0x644>)
 801357c:	2200      	movs	r2, #0
 801357e:	4640      	mov	r0, r8
 8013580:	4649      	mov	r1, r9
 8013582:	f7ed fabb 	bl	8000afc <__aeabi_dcmplt>
 8013586:	2800      	cmp	r0, #0
 8013588:	d07b      	beq.n	8013682 <_dtoa_r+0x4f2>
 801358a:	9b04      	ldr	r3, [sp, #16]
 801358c:	2b00      	cmp	r3, #0
 801358e:	d078      	beq.n	8013682 <_dtoa_r+0x4f2>
 8013590:	9b01      	ldr	r3, [sp, #4]
 8013592:	2b00      	cmp	r3, #0
 8013594:	dd39      	ble.n	801360a <_dtoa_r+0x47a>
 8013596:	4b90      	ldr	r3, [pc, #576]	; (80137d8 <_dtoa_r+0x648>)
 8013598:	2200      	movs	r2, #0
 801359a:	4640      	mov	r0, r8
 801359c:	4649      	mov	r1, r9
 801359e:	f7ed f83b 	bl	8000618 <__aeabi_dmul>
 80135a2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80135a6:	9e01      	ldr	r6, [sp, #4]
 80135a8:	f10b 37ff 	add.w	r7, fp, #4294967295
 80135ac:	3501      	adds	r5, #1
 80135ae:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80135b2:	4628      	mov	r0, r5
 80135b4:	f7ec ffc6 	bl	8000544 <__aeabi_i2d>
 80135b8:	4642      	mov	r2, r8
 80135ba:	464b      	mov	r3, r9
 80135bc:	f7ed f82c 	bl	8000618 <__aeabi_dmul>
 80135c0:	4b86      	ldr	r3, [pc, #536]	; (80137dc <_dtoa_r+0x64c>)
 80135c2:	2200      	movs	r2, #0
 80135c4:	f7ec fe72 	bl	80002ac <__adddf3>
 80135c8:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 80135cc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80135d0:	9303      	str	r3, [sp, #12]
 80135d2:	2e00      	cmp	r6, #0
 80135d4:	d158      	bne.n	8013688 <_dtoa_r+0x4f8>
 80135d6:	4b82      	ldr	r3, [pc, #520]	; (80137e0 <_dtoa_r+0x650>)
 80135d8:	2200      	movs	r2, #0
 80135da:	4640      	mov	r0, r8
 80135dc:	4649      	mov	r1, r9
 80135de:	f7ec fe63 	bl	80002a8 <__aeabi_dsub>
 80135e2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80135e6:	4680      	mov	r8, r0
 80135e8:	4689      	mov	r9, r1
 80135ea:	f7ed faa5 	bl	8000b38 <__aeabi_dcmpgt>
 80135ee:	2800      	cmp	r0, #0
 80135f0:	f040 8296 	bne.w	8013b20 <_dtoa_r+0x990>
 80135f4:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80135f8:	4640      	mov	r0, r8
 80135fa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80135fe:	4649      	mov	r1, r9
 8013600:	f7ed fa7c 	bl	8000afc <__aeabi_dcmplt>
 8013604:	2800      	cmp	r0, #0
 8013606:	f040 8289 	bne.w	8013b1c <_dtoa_r+0x98c>
 801360a:	ed8d 8b02 	vstr	d8, [sp, #8]
 801360e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013610:	2b00      	cmp	r3, #0
 8013612:	f2c0 814e 	blt.w	80138b2 <_dtoa_r+0x722>
 8013616:	f1bb 0f0e 	cmp.w	fp, #14
 801361a:	f300 814a 	bgt.w	80138b2 <_dtoa_r+0x722>
 801361e:	4b6b      	ldr	r3, [pc, #428]	; (80137cc <_dtoa_r+0x63c>)
 8013620:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8013624:	e9d3 8900 	ldrd	r8, r9, [r3]
 8013628:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801362a:	2b00      	cmp	r3, #0
 801362c:	f280 80dc 	bge.w	80137e8 <_dtoa_r+0x658>
 8013630:	9b04      	ldr	r3, [sp, #16]
 8013632:	2b00      	cmp	r3, #0
 8013634:	f300 80d8 	bgt.w	80137e8 <_dtoa_r+0x658>
 8013638:	f040 826f 	bne.w	8013b1a <_dtoa_r+0x98a>
 801363c:	4b68      	ldr	r3, [pc, #416]	; (80137e0 <_dtoa_r+0x650>)
 801363e:	2200      	movs	r2, #0
 8013640:	4640      	mov	r0, r8
 8013642:	4649      	mov	r1, r9
 8013644:	f7ec ffe8 	bl	8000618 <__aeabi_dmul>
 8013648:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801364c:	f7ed fa6a 	bl	8000b24 <__aeabi_dcmpge>
 8013650:	9e04      	ldr	r6, [sp, #16]
 8013652:	4637      	mov	r7, r6
 8013654:	2800      	cmp	r0, #0
 8013656:	f040 8245 	bne.w	8013ae4 <_dtoa_r+0x954>
 801365a:	9d00      	ldr	r5, [sp, #0]
 801365c:	2331      	movs	r3, #49	; 0x31
 801365e:	f805 3b01 	strb.w	r3, [r5], #1
 8013662:	f10b 0b01 	add.w	fp, fp, #1
 8013666:	e241      	b.n	8013aec <_dtoa_r+0x95c>
 8013668:	07f2      	lsls	r2, r6, #31
 801366a:	d505      	bpl.n	8013678 <_dtoa_r+0x4e8>
 801366c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8013670:	f7ec ffd2 	bl	8000618 <__aeabi_dmul>
 8013674:	3501      	adds	r5, #1
 8013676:	2301      	movs	r3, #1
 8013678:	1076      	asrs	r6, r6, #1
 801367a:	3708      	adds	r7, #8
 801367c:	e773      	b.n	8013566 <_dtoa_r+0x3d6>
 801367e:	2502      	movs	r5, #2
 8013680:	e775      	b.n	801356e <_dtoa_r+0x3de>
 8013682:	9e04      	ldr	r6, [sp, #16]
 8013684:	465f      	mov	r7, fp
 8013686:	e792      	b.n	80135ae <_dtoa_r+0x41e>
 8013688:	9900      	ldr	r1, [sp, #0]
 801368a:	4b50      	ldr	r3, [pc, #320]	; (80137cc <_dtoa_r+0x63c>)
 801368c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8013690:	4431      	add	r1, r6
 8013692:	9102      	str	r1, [sp, #8]
 8013694:	9909      	ldr	r1, [sp, #36]	; 0x24
 8013696:	eeb0 9a47 	vmov.f32	s18, s14
 801369a:	eef0 9a67 	vmov.f32	s19, s15
 801369e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80136a2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80136a6:	2900      	cmp	r1, #0
 80136a8:	d044      	beq.n	8013734 <_dtoa_r+0x5a4>
 80136aa:	494e      	ldr	r1, [pc, #312]	; (80137e4 <_dtoa_r+0x654>)
 80136ac:	2000      	movs	r0, #0
 80136ae:	f7ed f8dd 	bl	800086c <__aeabi_ddiv>
 80136b2:	ec53 2b19 	vmov	r2, r3, d9
 80136b6:	f7ec fdf7 	bl	80002a8 <__aeabi_dsub>
 80136ba:	9d00      	ldr	r5, [sp, #0]
 80136bc:	ec41 0b19 	vmov	d9, r0, r1
 80136c0:	4649      	mov	r1, r9
 80136c2:	4640      	mov	r0, r8
 80136c4:	f7ed fa58 	bl	8000b78 <__aeabi_d2iz>
 80136c8:	4606      	mov	r6, r0
 80136ca:	f7ec ff3b 	bl	8000544 <__aeabi_i2d>
 80136ce:	4602      	mov	r2, r0
 80136d0:	460b      	mov	r3, r1
 80136d2:	4640      	mov	r0, r8
 80136d4:	4649      	mov	r1, r9
 80136d6:	f7ec fde7 	bl	80002a8 <__aeabi_dsub>
 80136da:	3630      	adds	r6, #48	; 0x30
 80136dc:	f805 6b01 	strb.w	r6, [r5], #1
 80136e0:	ec53 2b19 	vmov	r2, r3, d9
 80136e4:	4680      	mov	r8, r0
 80136e6:	4689      	mov	r9, r1
 80136e8:	f7ed fa08 	bl	8000afc <__aeabi_dcmplt>
 80136ec:	2800      	cmp	r0, #0
 80136ee:	d164      	bne.n	80137ba <_dtoa_r+0x62a>
 80136f0:	4642      	mov	r2, r8
 80136f2:	464b      	mov	r3, r9
 80136f4:	4937      	ldr	r1, [pc, #220]	; (80137d4 <_dtoa_r+0x644>)
 80136f6:	2000      	movs	r0, #0
 80136f8:	f7ec fdd6 	bl	80002a8 <__aeabi_dsub>
 80136fc:	ec53 2b19 	vmov	r2, r3, d9
 8013700:	f7ed f9fc 	bl	8000afc <__aeabi_dcmplt>
 8013704:	2800      	cmp	r0, #0
 8013706:	f040 80b6 	bne.w	8013876 <_dtoa_r+0x6e6>
 801370a:	9b02      	ldr	r3, [sp, #8]
 801370c:	429d      	cmp	r5, r3
 801370e:	f43f af7c 	beq.w	801360a <_dtoa_r+0x47a>
 8013712:	4b31      	ldr	r3, [pc, #196]	; (80137d8 <_dtoa_r+0x648>)
 8013714:	ec51 0b19 	vmov	r0, r1, d9
 8013718:	2200      	movs	r2, #0
 801371a:	f7ec ff7d 	bl	8000618 <__aeabi_dmul>
 801371e:	4b2e      	ldr	r3, [pc, #184]	; (80137d8 <_dtoa_r+0x648>)
 8013720:	ec41 0b19 	vmov	d9, r0, r1
 8013724:	2200      	movs	r2, #0
 8013726:	4640      	mov	r0, r8
 8013728:	4649      	mov	r1, r9
 801372a:	f7ec ff75 	bl	8000618 <__aeabi_dmul>
 801372e:	4680      	mov	r8, r0
 8013730:	4689      	mov	r9, r1
 8013732:	e7c5      	b.n	80136c0 <_dtoa_r+0x530>
 8013734:	ec51 0b17 	vmov	r0, r1, d7
 8013738:	f7ec ff6e 	bl	8000618 <__aeabi_dmul>
 801373c:	9b02      	ldr	r3, [sp, #8]
 801373e:	9d00      	ldr	r5, [sp, #0]
 8013740:	930f      	str	r3, [sp, #60]	; 0x3c
 8013742:	ec41 0b19 	vmov	d9, r0, r1
 8013746:	4649      	mov	r1, r9
 8013748:	4640      	mov	r0, r8
 801374a:	f7ed fa15 	bl	8000b78 <__aeabi_d2iz>
 801374e:	4606      	mov	r6, r0
 8013750:	f7ec fef8 	bl	8000544 <__aeabi_i2d>
 8013754:	3630      	adds	r6, #48	; 0x30
 8013756:	4602      	mov	r2, r0
 8013758:	460b      	mov	r3, r1
 801375a:	4640      	mov	r0, r8
 801375c:	4649      	mov	r1, r9
 801375e:	f7ec fda3 	bl	80002a8 <__aeabi_dsub>
 8013762:	f805 6b01 	strb.w	r6, [r5], #1
 8013766:	9b02      	ldr	r3, [sp, #8]
 8013768:	429d      	cmp	r5, r3
 801376a:	4680      	mov	r8, r0
 801376c:	4689      	mov	r9, r1
 801376e:	f04f 0200 	mov.w	r2, #0
 8013772:	d124      	bne.n	80137be <_dtoa_r+0x62e>
 8013774:	4b1b      	ldr	r3, [pc, #108]	; (80137e4 <_dtoa_r+0x654>)
 8013776:	ec51 0b19 	vmov	r0, r1, d9
 801377a:	f7ec fd97 	bl	80002ac <__adddf3>
 801377e:	4602      	mov	r2, r0
 8013780:	460b      	mov	r3, r1
 8013782:	4640      	mov	r0, r8
 8013784:	4649      	mov	r1, r9
 8013786:	f7ed f9d7 	bl	8000b38 <__aeabi_dcmpgt>
 801378a:	2800      	cmp	r0, #0
 801378c:	d173      	bne.n	8013876 <_dtoa_r+0x6e6>
 801378e:	ec53 2b19 	vmov	r2, r3, d9
 8013792:	4914      	ldr	r1, [pc, #80]	; (80137e4 <_dtoa_r+0x654>)
 8013794:	2000      	movs	r0, #0
 8013796:	f7ec fd87 	bl	80002a8 <__aeabi_dsub>
 801379a:	4602      	mov	r2, r0
 801379c:	460b      	mov	r3, r1
 801379e:	4640      	mov	r0, r8
 80137a0:	4649      	mov	r1, r9
 80137a2:	f7ed f9ab 	bl	8000afc <__aeabi_dcmplt>
 80137a6:	2800      	cmp	r0, #0
 80137a8:	f43f af2f 	beq.w	801360a <_dtoa_r+0x47a>
 80137ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80137ae:	1e6b      	subs	r3, r5, #1
 80137b0:	930f      	str	r3, [sp, #60]	; 0x3c
 80137b2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80137b6:	2b30      	cmp	r3, #48	; 0x30
 80137b8:	d0f8      	beq.n	80137ac <_dtoa_r+0x61c>
 80137ba:	46bb      	mov	fp, r7
 80137bc:	e04a      	b.n	8013854 <_dtoa_r+0x6c4>
 80137be:	4b06      	ldr	r3, [pc, #24]	; (80137d8 <_dtoa_r+0x648>)
 80137c0:	f7ec ff2a 	bl	8000618 <__aeabi_dmul>
 80137c4:	4680      	mov	r8, r0
 80137c6:	4689      	mov	r9, r1
 80137c8:	e7bd      	b.n	8013746 <_dtoa_r+0x5b6>
 80137ca:	bf00      	nop
 80137cc:	08016be8 	.word	0x08016be8
 80137d0:	08016bc0 	.word	0x08016bc0
 80137d4:	3ff00000 	.word	0x3ff00000
 80137d8:	40240000 	.word	0x40240000
 80137dc:	401c0000 	.word	0x401c0000
 80137e0:	40140000 	.word	0x40140000
 80137e4:	3fe00000 	.word	0x3fe00000
 80137e8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80137ec:	9d00      	ldr	r5, [sp, #0]
 80137ee:	4642      	mov	r2, r8
 80137f0:	464b      	mov	r3, r9
 80137f2:	4630      	mov	r0, r6
 80137f4:	4639      	mov	r1, r7
 80137f6:	f7ed f839 	bl	800086c <__aeabi_ddiv>
 80137fa:	f7ed f9bd 	bl	8000b78 <__aeabi_d2iz>
 80137fe:	9001      	str	r0, [sp, #4]
 8013800:	f7ec fea0 	bl	8000544 <__aeabi_i2d>
 8013804:	4642      	mov	r2, r8
 8013806:	464b      	mov	r3, r9
 8013808:	f7ec ff06 	bl	8000618 <__aeabi_dmul>
 801380c:	4602      	mov	r2, r0
 801380e:	460b      	mov	r3, r1
 8013810:	4630      	mov	r0, r6
 8013812:	4639      	mov	r1, r7
 8013814:	f7ec fd48 	bl	80002a8 <__aeabi_dsub>
 8013818:	9e01      	ldr	r6, [sp, #4]
 801381a:	9f04      	ldr	r7, [sp, #16]
 801381c:	3630      	adds	r6, #48	; 0x30
 801381e:	f805 6b01 	strb.w	r6, [r5], #1
 8013822:	9e00      	ldr	r6, [sp, #0]
 8013824:	1bae      	subs	r6, r5, r6
 8013826:	42b7      	cmp	r7, r6
 8013828:	4602      	mov	r2, r0
 801382a:	460b      	mov	r3, r1
 801382c:	d134      	bne.n	8013898 <_dtoa_r+0x708>
 801382e:	f7ec fd3d 	bl	80002ac <__adddf3>
 8013832:	4642      	mov	r2, r8
 8013834:	464b      	mov	r3, r9
 8013836:	4606      	mov	r6, r0
 8013838:	460f      	mov	r7, r1
 801383a:	f7ed f97d 	bl	8000b38 <__aeabi_dcmpgt>
 801383e:	b9c8      	cbnz	r0, 8013874 <_dtoa_r+0x6e4>
 8013840:	4642      	mov	r2, r8
 8013842:	464b      	mov	r3, r9
 8013844:	4630      	mov	r0, r6
 8013846:	4639      	mov	r1, r7
 8013848:	f7ed f94e 	bl	8000ae8 <__aeabi_dcmpeq>
 801384c:	b110      	cbz	r0, 8013854 <_dtoa_r+0x6c4>
 801384e:	9b01      	ldr	r3, [sp, #4]
 8013850:	07db      	lsls	r3, r3, #31
 8013852:	d40f      	bmi.n	8013874 <_dtoa_r+0x6e4>
 8013854:	4651      	mov	r1, sl
 8013856:	4620      	mov	r0, r4
 8013858:	f000 fe82 	bl	8014560 <_Bfree>
 801385c:	2300      	movs	r3, #0
 801385e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013860:	702b      	strb	r3, [r5, #0]
 8013862:	f10b 0301 	add.w	r3, fp, #1
 8013866:	6013      	str	r3, [r2, #0]
 8013868:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801386a:	2b00      	cmp	r3, #0
 801386c:	f43f ace2 	beq.w	8013234 <_dtoa_r+0xa4>
 8013870:	601d      	str	r5, [r3, #0]
 8013872:	e4df      	b.n	8013234 <_dtoa_r+0xa4>
 8013874:	465f      	mov	r7, fp
 8013876:	462b      	mov	r3, r5
 8013878:	461d      	mov	r5, r3
 801387a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801387e:	2a39      	cmp	r2, #57	; 0x39
 8013880:	d106      	bne.n	8013890 <_dtoa_r+0x700>
 8013882:	9a00      	ldr	r2, [sp, #0]
 8013884:	429a      	cmp	r2, r3
 8013886:	d1f7      	bne.n	8013878 <_dtoa_r+0x6e8>
 8013888:	9900      	ldr	r1, [sp, #0]
 801388a:	2230      	movs	r2, #48	; 0x30
 801388c:	3701      	adds	r7, #1
 801388e:	700a      	strb	r2, [r1, #0]
 8013890:	781a      	ldrb	r2, [r3, #0]
 8013892:	3201      	adds	r2, #1
 8013894:	701a      	strb	r2, [r3, #0]
 8013896:	e790      	b.n	80137ba <_dtoa_r+0x62a>
 8013898:	4ba3      	ldr	r3, [pc, #652]	; (8013b28 <_dtoa_r+0x998>)
 801389a:	2200      	movs	r2, #0
 801389c:	f7ec febc 	bl	8000618 <__aeabi_dmul>
 80138a0:	2200      	movs	r2, #0
 80138a2:	2300      	movs	r3, #0
 80138a4:	4606      	mov	r6, r0
 80138a6:	460f      	mov	r7, r1
 80138a8:	f7ed f91e 	bl	8000ae8 <__aeabi_dcmpeq>
 80138ac:	2800      	cmp	r0, #0
 80138ae:	d09e      	beq.n	80137ee <_dtoa_r+0x65e>
 80138b0:	e7d0      	b.n	8013854 <_dtoa_r+0x6c4>
 80138b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80138b4:	2a00      	cmp	r2, #0
 80138b6:	f000 80ca 	beq.w	8013a4e <_dtoa_r+0x8be>
 80138ba:	9a07      	ldr	r2, [sp, #28]
 80138bc:	2a01      	cmp	r2, #1
 80138be:	f300 80ad 	bgt.w	8013a1c <_dtoa_r+0x88c>
 80138c2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80138c4:	2a00      	cmp	r2, #0
 80138c6:	f000 80a5 	beq.w	8013a14 <_dtoa_r+0x884>
 80138ca:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80138ce:	9e08      	ldr	r6, [sp, #32]
 80138d0:	9d05      	ldr	r5, [sp, #20]
 80138d2:	9a05      	ldr	r2, [sp, #20]
 80138d4:	441a      	add	r2, r3
 80138d6:	9205      	str	r2, [sp, #20]
 80138d8:	9a06      	ldr	r2, [sp, #24]
 80138da:	2101      	movs	r1, #1
 80138dc:	441a      	add	r2, r3
 80138de:	4620      	mov	r0, r4
 80138e0:	9206      	str	r2, [sp, #24]
 80138e2:	f000 ff3d 	bl	8014760 <__i2b>
 80138e6:	4607      	mov	r7, r0
 80138e8:	b165      	cbz	r5, 8013904 <_dtoa_r+0x774>
 80138ea:	9b06      	ldr	r3, [sp, #24]
 80138ec:	2b00      	cmp	r3, #0
 80138ee:	dd09      	ble.n	8013904 <_dtoa_r+0x774>
 80138f0:	42ab      	cmp	r3, r5
 80138f2:	9a05      	ldr	r2, [sp, #20]
 80138f4:	bfa8      	it	ge
 80138f6:	462b      	movge	r3, r5
 80138f8:	1ad2      	subs	r2, r2, r3
 80138fa:	9205      	str	r2, [sp, #20]
 80138fc:	9a06      	ldr	r2, [sp, #24]
 80138fe:	1aed      	subs	r5, r5, r3
 8013900:	1ad3      	subs	r3, r2, r3
 8013902:	9306      	str	r3, [sp, #24]
 8013904:	9b08      	ldr	r3, [sp, #32]
 8013906:	b1f3      	cbz	r3, 8013946 <_dtoa_r+0x7b6>
 8013908:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801390a:	2b00      	cmp	r3, #0
 801390c:	f000 80a3 	beq.w	8013a56 <_dtoa_r+0x8c6>
 8013910:	2e00      	cmp	r6, #0
 8013912:	dd10      	ble.n	8013936 <_dtoa_r+0x7a6>
 8013914:	4639      	mov	r1, r7
 8013916:	4632      	mov	r2, r6
 8013918:	4620      	mov	r0, r4
 801391a:	f000 ffe1 	bl	80148e0 <__pow5mult>
 801391e:	4652      	mov	r2, sl
 8013920:	4601      	mov	r1, r0
 8013922:	4607      	mov	r7, r0
 8013924:	4620      	mov	r0, r4
 8013926:	f000 ff31 	bl	801478c <__multiply>
 801392a:	4651      	mov	r1, sl
 801392c:	4680      	mov	r8, r0
 801392e:	4620      	mov	r0, r4
 8013930:	f000 fe16 	bl	8014560 <_Bfree>
 8013934:	46c2      	mov	sl, r8
 8013936:	9b08      	ldr	r3, [sp, #32]
 8013938:	1b9a      	subs	r2, r3, r6
 801393a:	d004      	beq.n	8013946 <_dtoa_r+0x7b6>
 801393c:	4651      	mov	r1, sl
 801393e:	4620      	mov	r0, r4
 8013940:	f000 ffce 	bl	80148e0 <__pow5mult>
 8013944:	4682      	mov	sl, r0
 8013946:	2101      	movs	r1, #1
 8013948:	4620      	mov	r0, r4
 801394a:	f000 ff09 	bl	8014760 <__i2b>
 801394e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013950:	2b00      	cmp	r3, #0
 8013952:	4606      	mov	r6, r0
 8013954:	f340 8081 	ble.w	8013a5a <_dtoa_r+0x8ca>
 8013958:	461a      	mov	r2, r3
 801395a:	4601      	mov	r1, r0
 801395c:	4620      	mov	r0, r4
 801395e:	f000 ffbf 	bl	80148e0 <__pow5mult>
 8013962:	9b07      	ldr	r3, [sp, #28]
 8013964:	2b01      	cmp	r3, #1
 8013966:	4606      	mov	r6, r0
 8013968:	dd7a      	ble.n	8013a60 <_dtoa_r+0x8d0>
 801396a:	f04f 0800 	mov.w	r8, #0
 801396e:	6933      	ldr	r3, [r6, #16]
 8013970:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8013974:	6918      	ldr	r0, [r3, #16]
 8013976:	f000 fea5 	bl	80146c4 <__hi0bits>
 801397a:	f1c0 0020 	rsb	r0, r0, #32
 801397e:	9b06      	ldr	r3, [sp, #24]
 8013980:	4418      	add	r0, r3
 8013982:	f010 001f 	ands.w	r0, r0, #31
 8013986:	f000 8094 	beq.w	8013ab2 <_dtoa_r+0x922>
 801398a:	f1c0 0320 	rsb	r3, r0, #32
 801398e:	2b04      	cmp	r3, #4
 8013990:	f340 8085 	ble.w	8013a9e <_dtoa_r+0x90e>
 8013994:	9b05      	ldr	r3, [sp, #20]
 8013996:	f1c0 001c 	rsb	r0, r0, #28
 801399a:	4403      	add	r3, r0
 801399c:	9305      	str	r3, [sp, #20]
 801399e:	9b06      	ldr	r3, [sp, #24]
 80139a0:	4403      	add	r3, r0
 80139a2:	4405      	add	r5, r0
 80139a4:	9306      	str	r3, [sp, #24]
 80139a6:	9b05      	ldr	r3, [sp, #20]
 80139a8:	2b00      	cmp	r3, #0
 80139aa:	dd05      	ble.n	80139b8 <_dtoa_r+0x828>
 80139ac:	4651      	mov	r1, sl
 80139ae:	461a      	mov	r2, r3
 80139b0:	4620      	mov	r0, r4
 80139b2:	f000 ffef 	bl	8014994 <__lshift>
 80139b6:	4682      	mov	sl, r0
 80139b8:	9b06      	ldr	r3, [sp, #24]
 80139ba:	2b00      	cmp	r3, #0
 80139bc:	dd05      	ble.n	80139ca <_dtoa_r+0x83a>
 80139be:	4631      	mov	r1, r6
 80139c0:	461a      	mov	r2, r3
 80139c2:	4620      	mov	r0, r4
 80139c4:	f000 ffe6 	bl	8014994 <__lshift>
 80139c8:	4606      	mov	r6, r0
 80139ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80139cc:	2b00      	cmp	r3, #0
 80139ce:	d072      	beq.n	8013ab6 <_dtoa_r+0x926>
 80139d0:	4631      	mov	r1, r6
 80139d2:	4650      	mov	r0, sl
 80139d4:	f001 f84a 	bl	8014a6c <__mcmp>
 80139d8:	2800      	cmp	r0, #0
 80139da:	da6c      	bge.n	8013ab6 <_dtoa_r+0x926>
 80139dc:	2300      	movs	r3, #0
 80139de:	4651      	mov	r1, sl
 80139e0:	220a      	movs	r2, #10
 80139e2:	4620      	mov	r0, r4
 80139e4:	f000 fdde 	bl	80145a4 <__multadd>
 80139e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80139ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 80139ee:	4682      	mov	sl, r0
 80139f0:	2b00      	cmp	r3, #0
 80139f2:	f000 81b0 	beq.w	8013d56 <_dtoa_r+0xbc6>
 80139f6:	2300      	movs	r3, #0
 80139f8:	4639      	mov	r1, r7
 80139fa:	220a      	movs	r2, #10
 80139fc:	4620      	mov	r0, r4
 80139fe:	f000 fdd1 	bl	80145a4 <__multadd>
 8013a02:	9b01      	ldr	r3, [sp, #4]
 8013a04:	2b00      	cmp	r3, #0
 8013a06:	4607      	mov	r7, r0
 8013a08:	f300 8096 	bgt.w	8013b38 <_dtoa_r+0x9a8>
 8013a0c:	9b07      	ldr	r3, [sp, #28]
 8013a0e:	2b02      	cmp	r3, #2
 8013a10:	dc59      	bgt.n	8013ac6 <_dtoa_r+0x936>
 8013a12:	e091      	b.n	8013b38 <_dtoa_r+0x9a8>
 8013a14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013a16:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8013a1a:	e758      	b.n	80138ce <_dtoa_r+0x73e>
 8013a1c:	9b04      	ldr	r3, [sp, #16]
 8013a1e:	1e5e      	subs	r6, r3, #1
 8013a20:	9b08      	ldr	r3, [sp, #32]
 8013a22:	42b3      	cmp	r3, r6
 8013a24:	bfbf      	itttt	lt
 8013a26:	9b08      	ldrlt	r3, [sp, #32]
 8013a28:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8013a2a:	9608      	strlt	r6, [sp, #32]
 8013a2c:	1af3      	sublt	r3, r6, r3
 8013a2e:	bfb4      	ite	lt
 8013a30:	18d2      	addlt	r2, r2, r3
 8013a32:	1b9e      	subge	r6, r3, r6
 8013a34:	9b04      	ldr	r3, [sp, #16]
 8013a36:	bfbc      	itt	lt
 8013a38:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8013a3a:	2600      	movlt	r6, #0
 8013a3c:	2b00      	cmp	r3, #0
 8013a3e:	bfb7      	itett	lt
 8013a40:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8013a44:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8013a48:	1a9d      	sublt	r5, r3, r2
 8013a4a:	2300      	movlt	r3, #0
 8013a4c:	e741      	b.n	80138d2 <_dtoa_r+0x742>
 8013a4e:	9e08      	ldr	r6, [sp, #32]
 8013a50:	9d05      	ldr	r5, [sp, #20]
 8013a52:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013a54:	e748      	b.n	80138e8 <_dtoa_r+0x758>
 8013a56:	9a08      	ldr	r2, [sp, #32]
 8013a58:	e770      	b.n	801393c <_dtoa_r+0x7ac>
 8013a5a:	9b07      	ldr	r3, [sp, #28]
 8013a5c:	2b01      	cmp	r3, #1
 8013a5e:	dc19      	bgt.n	8013a94 <_dtoa_r+0x904>
 8013a60:	9b02      	ldr	r3, [sp, #8]
 8013a62:	b9bb      	cbnz	r3, 8013a94 <_dtoa_r+0x904>
 8013a64:	9b03      	ldr	r3, [sp, #12]
 8013a66:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8013a6a:	b99b      	cbnz	r3, 8013a94 <_dtoa_r+0x904>
 8013a6c:	9b03      	ldr	r3, [sp, #12]
 8013a6e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8013a72:	0d1b      	lsrs	r3, r3, #20
 8013a74:	051b      	lsls	r3, r3, #20
 8013a76:	b183      	cbz	r3, 8013a9a <_dtoa_r+0x90a>
 8013a78:	9b05      	ldr	r3, [sp, #20]
 8013a7a:	3301      	adds	r3, #1
 8013a7c:	9305      	str	r3, [sp, #20]
 8013a7e:	9b06      	ldr	r3, [sp, #24]
 8013a80:	3301      	adds	r3, #1
 8013a82:	9306      	str	r3, [sp, #24]
 8013a84:	f04f 0801 	mov.w	r8, #1
 8013a88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a8a:	2b00      	cmp	r3, #0
 8013a8c:	f47f af6f 	bne.w	801396e <_dtoa_r+0x7de>
 8013a90:	2001      	movs	r0, #1
 8013a92:	e774      	b.n	801397e <_dtoa_r+0x7ee>
 8013a94:	f04f 0800 	mov.w	r8, #0
 8013a98:	e7f6      	b.n	8013a88 <_dtoa_r+0x8f8>
 8013a9a:	4698      	mov	r8, r3
 8013a9c:	e7f4      	b.n	8013a88 <_dtoa_r+0x8f8>
 8013a9e:	d082      	beq.n	80139a6 <_dtoa_r+0x816>
 8013aa0:	9a05      	ldr	r2, [sp, #20]
 8013aa2:	331c      	adds	r3, #28
 8013aa4:	441a      	add	r2, r3
 8013aa6:	9205      	str	r2, [sp, #20]
 8013aa8:	9a06      	ldr	r2, [sp, #24]
 8013aaa:	441a      	add	r2, r3
 8013aac:	441d      	add	r5, r3
 8013aae:	9206      	str	r2, [sp, #24]
 8013ab0:	e779      	b.n	80139a6 <_dtoa_r+0x816>
 8013ab2:	4603      	mov	r3, r0
 8013ab4:	e7f4      	b.n	8013aa0 <_dtoa_r+0x910>
 8013ab6:	9b04      	ldr	r3, [sp, #16]
 8013ab8:	2b00      	cmp	r3, #0
 8013aba:	dc37      	bgt.n	8013b2c <_dtoa_r+0x99c>
 8013abc:	9b07      	ldr	r3, [sp, #28]
 8013abe:	2b02      	cmp	r3, #2
 8013ac0:	dd34      	ble.n	8013b2c <_dtoa_r+0x99c>
 8013ac2:	9b04      	ldr	r3, [sp, #16]
 8013ac4:	9301      	str	r3, [sp, #4]
 8013ac6:	9b01      	ldr	r3, [sp, #4]
 8013ac8:	b963      	cbnz	r3, 8013ae4 <_dtoa_r+0x954>
 8013aca:	4631      	mov	r1, r6
 8013acc:	2205      	movs	r2, #5
 8013ace:	4620      	mov	r0, r4
 8013ad0:	f000 fd68 	bl	80145a4 <__multadd>
 8013ad4:	4601      	mov	r1, r0
 8013ad6:	4606      	mov	r6, r0
 8013ad8:	4650      	mov	r0, sl
 8013ada:	f000 ffc7 	bl	8014a6c <__mcmp>
 8013ade:	2800      	cmp	r0, #0
 8013ae0:	f73f adbb 	bgt.w	801365a <_dtoa_r+0x4ca>
 8013ae4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013ae6:	9d00      	ldr	r5, [sp, #0]
 8013ae8:	ea6f 0b03 	mvn.w	fp, r3
 8013aec:	f04f 0800 	mov.w	r8, #0
 8013af0:	4631      	mov	r1, r6
 8013af2:	4620      	mov	r0, r4
 8013af4:	f000 fd34 	bl	8014560 <_Bfree>
 8013af8:	2f00      	cmp	r7, #0
 8013afa:	f43f aeab 	beq.w	8013854 <_dtoa_r+0x6c4>
 8013afe:	f1b8 0f00 	cmp.w	r8, #0
 8013b02:	d005      	beq.n	8013b10 <_dtoa_r+0x980>
 8013b04:	45b8      	cmp	r8, r7
 8013b06:	d003      	beq.n	8013b10 <_dtoa_r+0x980>
 8013b08:	4641      	mov	r1, r8
 8013b0a:	4620      	mov	r0, r4
 8013b0c:	f000 fd28 	bl	8014560 <_Bfree>
 8013b10:	4639      	mov	r1, r7
 8013b12:	4620      	mov	r0, r4
 8013b14:	f000 fd24 	bl	8014560 <_Bfree>
 8013b18:	e69c      	b.n	8013854 <_dtoa_r+0x6c4>
 8013b1a:	2600      	movs	r6, #0
 8013b1c:	4637      	mov	r7, r6
 8013b1e:	e7e1      	b.n	8013ae4 <_dtoa_r+0x954>
 8013b20:	46bb      	mov	fp, r7
 8013b22:	4637      	mov	r7, r6
 8013b24:	e599      	b.n	801365a <_dtoa_r+0x4ca>
 8013b26:	bf00      	nop
 8013b28:	40240000 	.word	0x40240000
 8013b2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b2e:	2b00      	cmp	r3, #0
 8013b30:	f000 80c8 	beq.w	8013cc4 <_dtoa_r+0xb34>
 8013b34:	9b04      	ldr	r3, [sp, #16]
 8013b36:	9301      	str	r3, [sp, #4]
 8013b38:	2d00      	cmp	r5, #0
 8013b3a:	dd05      	ble.n	8013b48 <_dtoa_r+0x9b8>
 8013b3c:	4639      	mov	r1, r7
 8013b3e:	462a      	mov	r2, r5
 8013b40:	4620      	mov	r0, r4
 8013b42:	f000 ff27 	bl	8014994 <__lshift>
 8013b46:	4607      	mov	r7, r0
 8013b48:	f1b8 0f00 	cmp.w	r8, #0
 8013b4c:	d05b      	beq.n	8013c06 <_dtoa_r+0xa76>
 8013b4e:	6879      	ldr	r1, [r7, #4]
 8013b50:	4620      	mov	r0, r4
 8013b52:	f000 fcc5 	bl	80144e0 <_Balloc>
 8013b56:	4605      	mov	r5, r0
 8013b58:	b928      	cbnz	r0, 8013b66 <_dtoa_r+0x9d6>
 8013b5a:	4b83      	ldr	r3, [pc, #524]	; (8013d68 <_dtoa_r+0xbd8>)
 8013b5c:	4602      	mov	r2, r0
 8013b5e:	f240 21ef 	movw	r1, #751	; 0x2ef
 8013b62:	f7ff bb2e 	b.w	80131c2 <_dtoa_r+0x32>
 8013b66:	693a      	ldr	r2, [r7, #16]
 8013b68:	3202      	adds	r2, #2
 8013b6a:	0092      	lsls	r2, r2, #2
 8013b6c:	f107 010c 	add.w	r1, r7, #12
 8013b70:	300c      	adds	r0, #12
 8013b72:	f7ff fa6e 	bl	8013052 <memcpy>
 8013b76:	2201      	movs	r2, #1
 8013b78:	4629      	mov	r1, r5
 8013b7a:	4620      	mov	r0, r4
 8013b7c:	f000 ff0a 	bl	8014994 <__lshift>
 8013b80:	9b00      	ldr	r3, [sp, #0]
 8013b82:	3301      	adds	r3, #1
 8013b84:	9304      	str	r3, [sp, #16]
 8013b86:	e9dd 2300 	ldrd	r2, r3, [sp]
 8013b8a:	4413      	add	r3, r2
 8013b8c:	9308      	str	r3, [sp, #32]
 8013b8e:	9b02      	ldr	r3, [sp, #8]
 8013b90:	f003 0301 	and.w	r3, r3, #1
 8013b94:	46b8      	mov	r8, r7
 8013b96:	9306      	str	r3, [sp, #24]
 8013b98:	4607      	mov	r7, r0
 8013b9a:	9b04      	ldr	r3, [sp, #16]
 8013b9c:	4631      	mov	r1, r6
 8013b9e:	3b01      	subs	r3, #1
 8013ba0:	4650      	mov	r0, sl
 8013ba2:	9301      	str	r3, [sp, #4]
 8013ba4:	f7ff fa6c 	bl	8013080 <quorem>
 8013ba8:	4641      	mov	r1, r8
 8013baa:	9002      	str	r0, [sp, #8]
 8013bac:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8013bb0:	4650      	mov	r0, sl
 8013bb2:	f000 ff5b 	bl	8014a6c <__mcmp>
 8013bb6:	463a      	mov	r2, r7
 8013bb8:	9005      	str	r0, [sp, #20]
 8013bba:	4631      	mov	r1, r6
 8013bbc:	4620      	mov	r0, r4
 8013bbe:	f000 ff71 	bl	8014aa4 <__mdiff>
 8013bc2:	68c2      	ldr	r2, [r0, #12]
 8013bc4:	4605      	mov	r5, r0
 8013bc6:	bb02      	cbnz	r2, 8013c0a <_dtoa_r+0xa7a>
 8013bc8:	4601      	mov	r1, r0
 8013bca:	4650      	mov	r0, sl
 8013bcc:	f000 ff4e 	bl	8014a6c <__mcmp>
 8013bd0:	4602      	mov	r2, r0
 8013bd2:	4629      	mov	r1, r5
 8013bd4:	4620      	mov	r0, r4
 8013bd6:	9209      	str	r2, [sp, #36]	; 0x24
 8013bd8:	f000 fcc2 	bl	8014560 <_Bfree>
 8013bdc:	9b07      	ldr	r3, [sp, #28]
 8013bde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013be0:	9d04      	ldr	r5, [sp, #16]
 8013be2:	ea43 0102 	orr.w	r1, r3, r2
 8013be6:	9b06      	ldr	r3, [sp, #24]
 8013be8:	4319      	orrs	r1, r3
 8013bea:	d110      	bne.n	8013c0e <_dtoa_r+0xa7e>
 8013bec:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8013bf0:	d029      	beq.n	8013c46 <_dtoa_r+0xab6>
 8013bf2:	9b05      	ldr	r3, [sp, #20]
 8013bf4:	2b00      	cmp	r3, #0
 8013bf6:	dd02      	ble.n	8013bfe <_dtoa_r+0xa6e>
 8013bf8:	9b02      	ldr	r3, [sp, #8]
 8013bfa:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8013bfe:	9b01      	ldr	r3, [sp, #4]
 8013c00:	f883 9000 	strb.w	r9, [r3]
 8013c04:	e774      	b.n	8013af0 <_dtoa_r+0x960>
 8013c06:	4638      	mov	r0, r7
 8013c08:	e7ba      	b.n	8013b80 <_dtoa_r+0x9f0>
 8013c0a:	2201      	movs	r2, #1
 8013c0c:	e7e1      	b.n	8013bd2 <_dtoa_r+0xa42>
 8013c0e:	9b05      	ldr	r3, [sp, #20]
 8013c10:	2b00      	cmp	r3, #0
 8013c12:	db04      	blt.n	8013c1e <_dtoa_r+0xa8e>
 8013c14:	9907      	ldr	r1, [sp, #28]
 8013c16:	430b      	orrs	r3, r1
 8013c18:	9906      	ldr	r1, [sp, #24]
 8013c1a:	430b      	orrs	r3, r1
 8013c1c:	d120      	bne.n	8013c60 <_dtoa_r+0xad0>
 8013c1e:	2a00      	cmp	r2, #0
 8013c20:	dded      	ble.n	8013bfe <_dtoa_r+0xa6e>
 8013c22:	4651      	mov	r1, sl
 8013c24:	2201      	movs	r2, #1
 8013c26:	4620      	mov	r0, r4
 8013c28:	f000 feb4 	bl	8014994 <__lshift>
 8013c2c:	4631      	mov	r1, r6
 8013c2e:	4682      	mov	sl, r0
 8013c30:	f000 ff1c 	bl	8014a6c <__mcmp>
 8013c34:	2800      	cmp	r0, #0
 8013c36:	dc03      	bgt.n	8013c40 <_dtoa_r+0xab0>
 8013c38:	d1e1      	bne.n	8013bfe <_dtoa_r+0xa6e>
 8013c3a:	f019 0f01 	tst.w	r9, #1
 8013c3e:	d0de      	beq.n	8013bfe <_dtoa_r+0xa6e>
 8013c40:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8013c44:	d1d8      	bne.n	8013bf8 <_dtoa_r+0xa68>
 8013c46:	9a01      	ldr	r2, [sp, #4]
 8013c48:	2339      	movs	r3, #57	; 0x39
 8013c4a:	7013      	strb	r3, [r2, #0]
 8013c4c:	462b      	mov	r3, r5
 8013c4e:	461d      	mov	r5, r3
 8013c50:	3b01      	subs	r3, #1
 8013c52:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8013c56:	2a39      	cmp	r2, #57	; 0x39
 8013c58:	d06c      	beq.n	8013d34 <_dtoa_r+0xba4>
 8013c5a:	3201      	adds	r2, #1
 8013c5c:	701a      	strb	r2, [r3, #0]
 8013c5e:	e747      	b.n	8013af0 <_dtoa_r+0x960>
 8013c60:	2a00      	cmp	r2, #0
 8013c62:	dd07      	ble.n	8013c74 <_dtoa_r+0xae4>
 8013c64:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8013c68:	d0ed      	beq.n	8013c46 <_dtoa_r+0xab6>
 8013c6a:	9a01      	ldr	r2, [sp, #4]
 8013c6c:	f109 0301 	add.w	r3, r9, #1
 8013c70:	7013      	strb	r3, [r2, #0]
 8013c72:	e73d      	b.n	8013af0 <_dtoa_r+0x960>
 8013c74:	9b04      	ldr	r3, [sp, #16]
 8013c76:	9a08      	ldr	r2, [sp, #32]
 8013c78:	f803 9c01 	strb.w	r9, [r3, #-1]
 8013c7c:	4293      	cmp	r3, r2
 8013c7e:	d043      	beq.n	8013d08 <_dtoa_r+0xb78>
 8013c80:	4651      	mov	r1, sl
 8013c82:	2300      	movs	r3, #0
 8013c84:	220a      	movs	r2, #10
 8013c86:	4620      	mov	r0, r4
 8013c88:	f000 fc8c 	bl	80145a4 <__multadd>
 8013c8c:	45b8      	cmp	r8, r7
 8013c8e:	4682      	mov	sl, r0
 8013c90:	f04f 0300 	mov.w	r3, #0
 8013c94:	f04f 020a 	mov.w	r2, #10
 8013c98:	4641      	mov	r1, r8
 8013c9a:	4620      	mov	r0, r4
 8013c9c:	d107      	bne.n	8013cae <_dtoa_r+0xb1e>
 8013c9e:	f000 fc81 	bl	80145a4 <__multadd>
 8013ca2:	4680      	mov	r8, r0
 8013ca4:	4607      	mov	r7, r0
 8013ca6:	9b04      	ldr	r3, [sp, #16]
 8013ca8:	3301      	adds	r3, #1
 8013caa:	9304      	str	r3, [sp, #16]
 8013cac:	e775      	b.n	8013b9a <_dtoa_r+0xa0a>
 8013cae:	f000 fc79 	bl	80145a4 <__multadd>
 8013cb2:	4639      	mov	r1, r7
 8013cb4:	4680      	mov	r8, r0
 8013cb6:	2300      	movs	r3, #0
 8013cb8:	220a      	movs	r2, #10
 8013cba:	4620      	mov	r0, r4
 8013cbc:	f000 fc72 	bl	80145a4 <__multadd>
 8013cc0:	4607      	mov	r7, r0
 8013cc2:	e7f0      	b.n	8013ca6 <_dtoa_r+0xb16>
 8013cc4:	9b04      	ldr	r3, [sp, #16]
 8013cc6:	9301      	str	r3, [sp, #4]
 8013cc8:	9d00      	ldr	r5, [sp, #0]
 8013cca:	4631      	mov	r1, r6
 8013ccc:	4650      	mov	r0, sl
 8013cce:	f7ff f9d7 	bl	8013080 <quorem>
 8013cd2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8013cd6:	9b00      	ldr	r3, [sp, #0]
 8013cd8:	f805 9b01 	strb.w	r9, [r5], #1
 8013cdc:	1aea      	subs	r2, r5, r3
 8013cde:	9b01      	ldr	r3, [sp, #4]
 8013ce0:	4293      	cmp	r3, r2
 8013ce2:	dd07      	ble.n	8013cf4 <_dtoa_r+0xb64>
 8013ce4:	4651      	mov	r1, sl
 8013ce6:	2300      	movs	r3, #0
 8013ce8:	220a      	movs	r2, #10
 8013cea:	4620      	mov	r0, r4
 8013cec:	f000 fc5a 	bl	80145a4 <__multadd>
 8013cf0:	4682      	mov	sl, r0
 8013cf2:	e7ea      	b.n	8013cca <_dtoa_r+0xb3a>
 8013cf4:	9b01      	ldr	r3, [sp, #4]
 8013cf6:	2b00      	cmp	r3, #0
 8013cf8:	bfc8      	it	gt
 8013cfa:	461d      	movgt	r5, r3
 8013cfc:	9b00      	ldr	r3, [sp, #0]
 8013cfe:	bfd8      	it	le
 8013d00:	2501      	movle	r5, #1
 8013d02:	441d      	add	r5, r3
 8013d04:	f04f 0800 	mov.w	r8, #0
 8013d08:	4651      	mov	r1, sl
 8013d0a:	2201      	movs	r2, #1
 8013d0c:	4620      	mov	r0, r4
 8013d0e:	f000 fe41 	bl	8014994 <__lshift>
 8013d12:	4631      	mov	r1, r6
 8013d14:	4682      	mov	sl, r0
 8013d16:	f000 fea9 	bl	8014a6c <__mcmp>
 8013d1a:	2800      	cmp	r0, #0
 8013d1c:	dc96      	bgt.n	8013c4c <_dtoa_r+0xabc>
 8013d1e:	d102      	bne.n	8013d26 <_dtoa_r+0xb96>
 8013d20:	f019 0f01 	tst.w	r9, #1
 8013d24:	d192      	bne.n	8013c4c <_dtoa_r+0xabc>
 8013d26:	462b      	mov	r3, r5
 8013d28:	461d      	mov	r5, r3
 8013d2a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8013d2e:	2a30      	cmp	r2, #48	; 0x30
 8013d30:	d0fa      	beq.n	8013d28 <_dtoa_r+0xb98>
 8013d32:	e6dd      	b.n	8013af0 <_dtoa_r+0x960>
 8013d34:	9a00      	ldr	r2, [sp, #0]
 8013d36:	429a      	cmp	r2, r3
 8013d38:	d189      	bne.n	8013c4e <_dtoa_r+0xabe>
 8013d3a:	f10b 0b01 	add.w	fp, fp, #1
 8013d3e:	2331      	movs	r3, #49	; 0x31
 8013d40:	e796      	b.n	8013c70 <_dtoa_r+0xae0>
 8013d42:	4b0a      	ldr	r3, [pc, #40]	; (8013d6c <_dtoa_r+0xbdc>)
 8013d44:	f7ff ba99 	b.w	801327a <_dtoa_r+0xea>
 8013d48:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8013d4a:	2b00      	cmp	r3, #0
 8013d4c:	f47f aa6d 	bne.w	801322a <_dtoa_r+0x9a>
 8013d50:	4b07      	ldr	r3, [pc, #28]	; (8013d70 <_dtoa_r+0xbe0>)
 8013d52:	f7ff ba92 	b.w	801327a <_dtoa_r+0xea>
 8013d56:	9b01      	ldr	r3, [sp, #4]
 8013d58:	2b00      	cmp	r3, #0
 8013d5a:	dcb5      	bgt.n	8013cc8 <_dtoa_r+0xb38>
 8013d5c:	9b07      	ldr	r3, [sp, #28]
 8013d5e:	2b02      	cmp	r3, #2
 8013d60:	f73f aeb1 	bgt.w	8013ac6 <_dtoa_r+0x936>
 8013d64:	e7b0      	b.n	8013cc8 <_dtoa_r+0xb38>
 8013d66:	bf00      	nop
 8013d68:	08016aef 	.word	0x08016aef
 8013d6c:	08016ce3 	.word	0x08016ce3
 8013d70:	08016a73 	.word	0x08016a73

08013d74 <_free_r>:
 8013d74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013d76:	2900      	cmp	r1, #0
 8013d78:	d044      	beq.n	8013e04 <_free_r+0x90>
 8013d7a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8013d7e:	9001      	str	r0, [sp, #4]
 8013d80:	2b00      	cmp	r3, #0
 8013d82:	f1a1 0404 	sub.w	r4, r1, #4
 8013d86:	bfb8      	it	lt
 8013d88:	18e4      	addlt	r4, r4, r3
 8013d8a:	f7fd fb99 	bl	80114c0 <__malloc_lock>
 8013d8e:	4a1e      	ldr	r2, [pc, #120]	; (8013e08 <_free_r+0x94>)
 8013d90:	9801      	ldr	r0, [sp, #4]
 8013d92:	6813      	ldr	r3, [r2, #0]
 8013d94:	b933      	cbnz	r3, 8013da4 <_free_r+0x30>
 8013d96:	6063      	str	r3, [r4, #4]
 8013d98:	6014      	str	r4, [r2, #0]
 8013d9a:	b003      	add	sp, #12
 8013d9c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013da0:	f7fd bb94 	b.w	80114cc <__malloc_unlock>
 8013da4:	42a3      	cmp	r3, r4
 8013da6:	d908      	bls.n	8013dba <_free_r+0x46>
 8013da8:	6825      	ldr	r5, [r4, #0]
 8013daa:	1961      	adds	r1, r4, r5
 8013dac:	428b      	cmp	r3, r1
 8013dae:	bf01      	itttt	eq
 8013db0:	6819      	ldreq	r1, [r3, #0]
 8013db2:	685b      	ldreq	r3, [r3, #4]
 8013db4:	1949      	addeq	r1, r1, r5
 8013db6:	6021      	streq	r1, [r4, #0]
 8013db8:	e7ed      	b.n	8013d96 <_free_r+0x22>
 8013dba:	461a      	mov	r2, r3
 8013dbc:	685b      	ldr	r3, [r3, #4]
 8013dbe:	b10b      	cbz	r3, 8013dc4 <_free_r+0x50>
 8013dc0:	42a3      	cmp	r3, r4
 8013dc2:	d9fa      	bls.n	8013dba <_free_r+0x46>
 8013dc4:	6811      	ldr	r1, [r2, #0]
 8013dc6:	1855      	adds	r5, r2, r1
 8013dc8:	42a5      	cmp	r5, r4
 8013dca:	d10b      	bne.n	8013de4 <_free_r+0x70>
 8013dcc:	6824      	ldr	r4, [r4, #0]
 8013dce:	4421      	add	r1, r4
 8013dd0:	1854      	adds	r4, r2, r1
 8013dd2:	42a3      	cmp	r3, r4
 8013dd4:	6011      	str	r1, [r2, #0]
 8013dd6:	d1e0      	bne.n	8013d9a <_free_r+0x26>
 8013dd8:	681c      	ldr	r4, [r3, #0]
 8013dda:	685b      	ldr	r3, [r3, #4]
 8013ddc:	6053      	str	r3, [r2, #4]
 8013dde:	440c      	add	r4, r1
 8013de0:	6014      	str	r4, [r2, #0]
 8013de2:	e7da      	b.n	8013d9a <_free_r+0x26>
 8013de4:	d902      	bls.n	8013dec <_free_r+0x78>
 8013de6:	230c      	movs	r3, #12
 8013de8:	6003      	str	r3, [r0, #0]
 8013dea:	e7d6      	b.n	8013d9a <_free_r+0x26>
 8013dec:	6825      	ldr	r5, [r4, #0]
 8013dee:	1961      	adds	r1, r4, r5
 8013df0:	428b      	cmp	r3, r1
 8013df2:	bf04      	itt	eq
 8013df4:	6819      	ldreq	r1, [r3, #0]
 8013df6:	685b      	ldreq	r3, [r3, #4]
 8013df8:	6063      	str	r3, [r4, #4]
 8013dfa:	bf04      	itt	eq
 8013dfc:	1949      	addeq	r1, r1, r5
 8013dfe:	6021      	streq	r1, [r4, #0]
 8013e00:	6054      	str	r4, [r2, #4]
 8013e02:	e7ca      	b.n	8013d9a <_free_r+0x26>
 8013e04:	b003      	add	sp, #12
 8013e06:	bd30      	pop	{r4, r5, pc}
 8013e08:	20002fd0 	.word	0x20002fd0

08013e0c <rshift>:
 8013e0c:	6903      	ldr	r3, [r0, #16]
 8013e0e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8013e12:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013e16:	ea4f 1261 	mov.w	r2, r1, asr #5
 8013e1a:	f100 0414 	add.w	r4, r0, #20
 8013e1e:	dd45      	ble.n	8013eac <rshift+0xa0>
 8013e20:	f011 011f 	ands.w	r1, r1, #31
 8013e24:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8013e28:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8013e2c:	d10c      	bne.n	8013e48 <rshift+0x3c>
 8013e2e:	f100 0710 	add.w	r7, r0, #16
 8013e32:	4629      	mov	r1, r5
 8013e34:	42b1      	cmp	r1, r6
 8013e36:	d334      	bcc.n	8013ea2 <rshift+0x96>
 8013e38:	1a9b      	subs	r3, r3, r2
 8013e3a:	009b      	lsls	r3, r3, #2
 8013e3c:	1eea      	subs	r2, r5, #3
 8013e3e:	4296      	cmp	r6, r2
 8013e40:	bf38      	it	cc
 8013e42:	2300      	movcc	r3, #0
 8013e44:	4423      	add	r3, r4
 8013e46:	e015      	b.n	8013e74 <rshift+0x68>
 8013e48:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8013e4c:	f1c1 0820 	rsb	r8, r1, #32
 8013e50:	40cf      	lsrs	r7, r1
 8013e52:	f105 0e04 	add.w	lr, r5, #4
 8013e56:	46a1      	mov	r9, r4
 8013e58:	4576      	cmp	r6, lr
 8013e5a:	46f4      	mov	ip, lr
 8013e5c:	d815      	bhi.n	8013e8a <rshift+0x7e>
 8013e5e:	1a9a      	subs	r2, r3, r2
 8013e60:	0092      	lsls	r2, r2, #2
 8013e62:	3a04      	subs	r2, #4
 8013e64:	3501      	adds	r5, #1
 8013e66:	42ae      	cmp	r6, r5
 8013e68:	bf38      	it	cc
 8013e6a:	2200      	movcc	r2, #0
 8013e6c:	18a3      	adds	r3, r4, r2
 8013e6e:	50a7      	str	r7, [r4, r2]
 8013e70:	b107      	cbz	r7, 8013e74 <rshift+0x68>
 8013e72:	3304      	adds	r3, #4
 8013e74:	1b1a      	subs	r2, r3, r4
 8013e76:	42a3      	cmp	r3, r4
 8013e78:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8013e7c:	bf08      	it	eq
 8013e7e:	2300      	moveq	r3, #0
 8013e80:	6102      	str	r2, [r0, #16]
 8013e82:	bf08      	it	eq
 8013e84:	6143      	streq	r3, [r0, #20]
 8013e86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013e8a:	f8dc c000 	ldr.w	ip, [ip]
 8013e8e:	fa0c fc08 	lsl.w	ip, ip, r8
 8013e92:	ea4c 0707 	orr.w	r7, ip, r7
 8013e96:	f849 7b04 	str.w	r7, [r9], #4
 8013e9a:	f85e 7b04 	ldr.w	r7, [lr], #4
 8013e9e:	40cf      	lsrs	r7, r1
 8013ea0:	e7da      	b.n	8013e58 <rshift+0x4c>
 8013ea2:	f851 cb04 	ldr.w	ip, [r1], #4
 8013ea6:	f847 cf04 	str.w	ip, [r7, #4]!
 8013eaa:	e7c3      	b.n	8013e34 <rshift+0x28>
 8013eac:	4623      	mov	r3, r4
 8013eae:	e7e1      	b.n	8013e74 <rshift+0x68>

08013eb0 <__hexdig_fun>:
 8013eb0:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8013eb4:	2b09      	cmp	r3, #9
 8013eb6:	d802      	bhi.n	8013ebe <__hexdig_fun+0xe>
 8013eb8:	3820      	subs	r0, #32
 8013eba:	b2c0      	uxtb	r0, r0
 8013ebc:	4770      	bx	lr
 8013ebe:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8013ec2:	2b05      	cmp	r3, #5
 8013ec4:	d801      	bhi.n	8013eca <__hexdig_fun+0x1a>
 8013ec6:	3847      	subs	r0, #71	; 0x47
 8013ec8:	e7f7      	b.n	8013eba <__hexdig_fun+0xa>
 8013eca:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8013ece:	2b05      	cmp	r3, #5
 8013ed0:	d801      	bhi.n	8013ed6 <__hexdig_fun+0x26>
 8013ed2:	3827      	subs	r0, #39	; 0x27
 8013ed4:	e7f1      	b.n	8013eba <__hexdig_fun+0xa>
 8013ed6:	2000      	movs	r0, #0
 8013ed8:	4770      	bx	lr
	...

08013edc <__gethex>:
 8013edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ee0:	4617      	mov	r7, r2
 8013ee2:	680a      	ldr	r2, [r1, #0]
 8013ee4:	b085      	sub	sp, #20
 8013ee6:	f102 0b02 	add.w	fp, r2, #2
 8013eea:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8013eee:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8013ef2:	4681      	mov	r9, r0
 8013ef4:	468a      	mov	sl, r1
 8013ef6:	9302      	str	r3, [sp, #8]
 8013ef8:	32fe      	adds	r2, #254	; 0xfe
 8013efa:	eb02 030b 	add.w	r3, r2, fp
 8013efe:	46d8      	mov	r8, fp
 8013f00:	f81b 0b01 	ldrb.w	r0, [fp], #1
 8013f04:	9301      	str	r3, [sp, #4]
 8013f06:	2830      	cmp	r0, #48	; 0x30
 8013f08:	d0f7      	beq.n	8013efa <__gethex+0x1e>
 8013f0a:	f7ff ffd1 	bl	8013eb0 <__hexdig_fun>
 8013f0e:	4604      	mov	r4, r0
 8013f10:	2800      	cmp	r0, #0
 8013f12:	d138      	bne.n	8013f86 <__gethex+0xaa>
 8013f14:	49a7      	ldr	r1, [pc, #668]	; (80141b4 <__gethex+0x2d8>)
 8013f16:	2201      	movs	r2, #1
 8013f18:	4640      	mov	r0, r8
 8013f1a:	f7fe ffb4 	bl	8012e86 <strncmp>
 8013f1e:	4606      	mov	r6, r0
 8013f20:	2800      	cmp	r0, #0
 8013f22:	d169      	bne.n	8013ff8 <__gethex+0x11c>
 8013f24:	f898 0001 	ldrb.w	r0, [r8, #1]
 8013f28:	465d      	mov	r5, fp
 8013f2a:	f7ff ffc1 	bl	8013eb0 <__hexdig_fun>
 8013f2e:	2800      	cmp	r0, #0
 8013f30:	d064      	beq.n	8013ffc <__gethex+0x120>
 8013f32:	465a      	mov	r2, fp
 8013f34:	7810      	ldrb	r0, [r2, #0]
 8013f36:	2830      	cmp	r0, #48	; 0x30
 8013f38:	4690      	mov	r8, r2
 8013f3a:	f102 0201 	add.w	r2, r2, #1
 8013f3e:	d0f9      	beq.n	8013f34 <__gethex+0x58>
 8013f40:	f7ff ffb6 	bl	8013eb0 <__hexdig_fun>
 8013f44:	2301      	movs	r3, #1
 8013f46:	fab0 f480 	clz	r4, r0
 8013f4a:	0964      	lsrs	r4, r4, #5
 8013f4c:	465e      	mov	r6, fp
 8013f4e:	9301      	str	r3, [sp, #4]
 8013f50:	4642      	mov	r2, r8
 8013f52:	4615      	mov	r5, r2
 8013f54:	3201      	adds	r2, #1
 8013f56:	7828      	ldrb	r0, [r5, #0]
 8013f58:	f7ff ffaa 	bl	8013eb0 <__hexdig_fun>
 8013f5c:	2800      	cmp	r0, #0
 8013f5e:	d1f8      	bne.n	8013f52 <__gethex+0x76>
 8013f60:	4994      	ldr	r1, [pc, #592]	; (80141b4 <__gethex+0x2d8>)
 8013f62:	2201      	movs	r2, #1
 8013f64:	4628      	mov	r0, r5
 8013f66:	f7fe ff8e 	bl	8012e86 <strncmp>
 8013f6a:	b978      	cbnz	r0, 8013f8c <__gethex+0xb0>
 8013f6c:	b946      	cbnz	r6, 8013f80 <__gethex+0xa4>
 8013f6e:	1c6e      	adds	r6, r5, #1
 8013f70:	4632      	mov	r2, r6
 8013f72:	4615      	mov	r5, r2
 8013f74:	3201      	adds	r2, #1
 8013f76:	7828      	ldrb	r0, [r5, #0]
 8013f78:	f7ff ff9a 	bl	8013eb0 <__hexdig_fun>
 8013f7c:	2800      	cmp	r0, #0
 8013f7e:	d1f8      	bne.n	8013f72 <__gethex+0x96>
 8013f80:	1b73      	subs	r3, r6, r5
 8013f82:	009e      	lsls	r6, r3, #2
 8013f84:	e004      	b.n	8013f90 <__gethex+0xb4>
 8013f86:	2400      	movs	r4, #0
 8013f88:	4626      	mov	r6, r4
 8013f8a:	e7e1      	b.n	8013f50 <__gethex+0x74>
 8013f8c:	2e00      	cmp	r6, #0
 8013f8e:	d1f7      	bne.n	8013f80 <__gethex+0xa4>
 8013f90:	782b      	ldrb	r3, [r5, #0]
 8013f92:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8013f96:	2b50      	cmp	r3, #80	; 0x50
 8013f98:	d13d      	bne.n	8014016 <__gethex+0x13a>
 8013f9a:	786b      	ldrb	r3, [r5, #1]
 8013f9c:	2b2b      	cmp	r3, #43	; 0x2b
 8013f9e:	d02f      	beq.n	8014000 <__gethex+0x124>
 8013fa0:	2b2d      	cmp	r3, #45	; 0x2d
 8013fa2:	d031      	beq.n	8014008 <__gethex+0x12c>
 8013fa4:	1c69      	adds	r1, r5, #1
 8013fa6:	f04f 0b00 	mov.w	fp, #0
 8013faa:	7808      	ldrb	r0, [r1, #0]
 8013fac:	f7ff ff80 	bl	8013eb0 <__hexdig_fun>
 8013fb0:	1e42      	subs	r2, r0, #1
 8013fb2:	b2d2      	uxtb	r2, r2
 8013fb4:	2a18      	cmp	r2, #24
 8013fb6:	d82e      	bhi.n	8014016 <__gethex+0x13a>
 8013fb8:	f1a0 0210 	sub.w	r2, r0, #16
 8013fbc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8013fc0:	f7ff ff76 	bl	8013eb0 <__hexdig_fun>
 8013fc4:	f100 3cff 	add.w	ip, r0, #4294967295
 8013fc8:	fa5f fc8c 	uxtb.w	ip, ip
 8013fcc:	f1bc 0f18 	cmp.w	ip, #24
 8013fd0:	d91d      	bls.n	801400e <__gethex+0x132>
 8013fd2:	f1bb 0f00 	cmp.w	fp, #0
 8013fd6:	d000      	beq.n	8013fda <__gethex+0xfe>
 8013fd8:	4252      	negs	r2, r2
 8013fda:	4416      	add	r6, r2
 8013fdc:	f8ca 1000 	str.w	r1, [sl]
 8013fe0:	b1dc      	cbz	r4, 801401a <__gethex+0x13e>
 8013fe2:	9b01      	ldr	r3, [sp, #4]
 8013fe4:	2b00      	cmp	r3, #0
 8013fe6:	bf14      	ite	ne
 8013fe8:	f04f 0800 	movne.w	r8, #0
 8013fec:	f04f 0806 	moveq.w	r8, #6
 8013ff0:	4640      	mov	r0, r8
 8013ff2:	b005      	add	sp, #20
 8013ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ff8:	4645      	mov	r5, r8
 8013ffa:	4626      	mov	r6, r4
 8013ffc:	2401      	movs	r4, #1
 8013ffe:	e7c7      	b.n	8013f90 <__gethex+0xb4>
 8014000:	f04f 0b00 	mov.w	fp, #0
 8014004:	1ca9      	adds	r1, r5, #2
 8014006:	e7d0      	b.n	8013faa <__gethex+0xce>
 8014008:	f04f 0b01 	mov.w	fp, #1
 801400c:	e7fa      	b.n	8014004 <__gethex+0x128>
 801400e:	230a      	movs	r3, #10
 8014010:	fb03 0002 	mla	r0, r3, r2, r0
 8014014:	e7d0      	b.n	8013fb8 <__gethex+0xdc>
 8014016:	4629      	mov	r1, r5
 8014018:	e7e0      	b.n	8013fdc <__gethex+0x100>
 801401a:	eba5 0308 	sub.w	r3, r5, r8
 801401e:	3b01      	subs	r3, #1
 8014020:	4621      	mov	r1, r4
 8014022:	2b07      	cmp	r3, #7
 8014024:	dc0a      	bgt.n	801403c <__gethex+0x160>
 8014026:	4648      	mov	r0, r9
 8014028:	f000 fa5a 	bl	80144e0 <_Balloc>
 801402c:	4604      	mov	r4, r0
 801402e:	b940      	cbnz	r0, 8014042 <__gethex+0x166>
 8014030:	4b61      	ldr	r3, [pc, #388]	; (80141b8 <__gethex+0x2dc>)
 8014032:	4602      	mov	r2, r0
 8014034:	21e4      	movs	r1, #228	; 0xe4
 8014036:	4861      	ldr	r0, [pc, #388]	; (80141bc <__gethex+0x2e0>)
 8014038:	f001 fe86 	bl	8015d48 <__assert_func>
 801403c:	3101      	adds	r1, #1
 801403e:	105b      	asrs	r3, r3, #1
 8014040:	e7ef      	b.n	8014022 <__gethex+0x146>
 8014042:	f100 0a14 	add.w	sl, r0, #20
 8014046:	2300      	movs	r3, #0
 8014048:	495a      	ldr	r1, [pc, #360]	; (80141b4 <__gethex+0x2d8>)
 801404a:	f8cd a004 	str.w	sl, [sp, #4]
 801404e:	469b      	mov	fp, r3
 8014050:	45a8      	cmp	r8, r5
 8014052:	d342      	bcc.n	80140da <__gethex+0x1fe>
 8014054:	9801      	ldr	r0, [sp, #4]
 8014056:	f840 bb04 	str.w	fp, [r0], #4
 801405a:	eba0 000a 	sub.w	r0, r0, sl
 801405e:	1080      	asrs	r0, r0, #2
 8014060:	6120      	str	r0, [r4, #16]
 8014062:	ea4f 1840 	mov.w	r8, r0, lsl #5
 8014066:	4658      	mov	r0, fp
 8014068:	f000 fb2c 	bl	80146c4 <__hi0bits>
 801406c:	683d      	ldr	r5, [r7, #0]
 801406e:	eba8 0000 	sub.w	r0, r8, r0
 8014072:	42a8      	cmp	r0, r5
 8014074:	dd59      	ble.n	801412a <__gethex+0x24e>
 8014076:	eba0 0805 	sub.w	r8, r0, r5
 801407a:	4641      	mov	r1, r8
 801407c:	4620      	mov	r0, r4
 801407e:	f000 febb 	bl	8014df8 <__any_on>
 8014082:	4683      	mov	fp, r0
 8014084:	b1b8      	cbz	r0, 80140b6 <__gethex+0x1da>
 8014086:	f108 33ff 	add.w	r3, r8, #4294967295
 801408a:	1159      	asrs	r1, r3, #5
 801408c:	f003 021f 	and.w	r2, r3, #31
 8014090:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8014094:	f04f 0b01 	mov.w	fp, #1
 8014098:	fa0b f202 	lsl.w	r2, fp, r2
 801409c:	420a      	tst	r2, r1
 801409e:	d00a      	beq.n	80140b6 <__gethex+0x1da>
 80140a0:	455b      	cmp	r3, fp
 80140a2:	dd06      	ble.n	80140b2 <__gethex+0x1d6>
 80140a4:	f1a8 0102 	sub.w	r1, r8, #2
 80140a8:	4620      	mov	r0, r4
 80140aa:	f000 fea5 	bl	8014df8 <__any_on>
 80140ae:	2800      	cmp	r0, #0
 80140b0:	d138      	bne.n	8014124 <__gethex+0x248>
 80140b2:	f04f 0b02 	mov.w	fp, #2
 80140b6:	4641      	mov	r1, r8
 80140b8:	4620      	mov	r0, r4
 80140ba:	f7ff fea7 	bl	8013e0c <rshift>
 80140be:	4446      	add	r6, r8
 80140c0:	68bb      	ldr	r3, [r7, #8]
 80140c2:	42b3      	cmp	r3, r6
 80140c4:	da41      	bge.n	801414a <__gethex+0x26e>
 80140c6:	4621      	mov	r1, r4
 80140c8:	4648      	mov	r0, r9
 80140ca:	f000 fa49 	bl	8014560 <_Bfree>
 80140ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80140d0:	2300      	movs	r3, #0
 80140d2:	6013      	str	r3, [r2, #0]
 80140d4:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 80140d8:	e78a      	b.n	8013ff0 <__gethex+0x114>
 80140da:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 80140de:	2a2e      	cmp	r2, #46	; 0x2e
 80140e0:	d014      	beq.n	801410c <__gethex+0x230>
 80140e2:	2b20      	cmp	r3, #32
 80140e4:	d106      	bne.n	80140f4 <__gethex+0x218>
 80140e6:	9b01      	ldr	r3, [sp, #4]
 80140e8:	f843 bb04 	str.w	fp, [r3], #4
 80140ec:	f04f 0b00 	mov.w	fp, #0
 80140f0:	9301      	str	r3, [sp, #4]
 80140f2:	465b      	mov	r3, fp
 80140f4:	7828      	ldrb	r0, [r5, #0]
 80140f6:	9303      	str	r3, [sp, #12]
 80140f8:	f7ff feda 	bl	8013eb0 <__hexdig_fun>
 80140fc:	9b03      	ldr	r3, [sp, #12]
 80140fe:	f000 000f 	and.w	r0, r0, #15
 8014102:	4098      	lsls	r0, r3
 8014104:	ea4b 0b00 	orr.w	fp, fp, r0
 8014108:	3304      	adds	r3, #4
 801410a:	e7a1      	b.n	8014050 <__gethex+0x174>
 801410c:	45a8      	cmp	r8, r5
 801410e:	d8e8      	bhi.n	80140e2 <__gethex+0x206>
 8014110:	2201      	movs	r2, #1
 8014112:	4628      	mov	r0, r5
 8014114:	9303      	str	r3, [sp, #12]
 8014116:	f7fe feb6 	bl	8012e86 <strncmp>
 801411a:	4926      	ldr	r1, [pc, #152]	; (80141b4 <__gethex+0x2d8>)
 801411c:	9b03      	ldr	r3, [sp, #12]
 801411e:	2800      	cmp	r0, #0
 8014120:	d1df      	bne.n	80140e2 <__gethex+0x206>
 8014122:	e795      	b.n	8014050 <__gethex+0x174>
 8014124:	f04f 0b03 	mov.w	fp, #3
 8014128:	e7c5      	b.n	80140b6 <__gethex+0x1da>
 801412a:	da0b      	bge.n	8014144 <__gethex+0x268>
 801412c:	eba5 0800 	sub.w	r8, r5, r0
 8014130:	4621      	mov	r1, r4
 8014132:	4642      	mov	r2, r8
 8014134:	4648      	mov	r0, r9
 8014136:	f000 fc2d 	bl	8014994 <__lshift>
 801413a:	eba6 0608 	sub.w	r6, r6, r8
 801413e:	4604      	mov	r4, r0
 8014140:	f100 0a14 	add.w	sl, r0, #20
 8014144:	f04f 0b00 	mov.w	fp, #0
 8014148:	e7ba      	b.n	80140c0 <__gethex+0x1e4>
 801414a:	687b      	ldr	r3, [r7, #4]
 801414c:	42b3      	cmp	r3, r6
 801414e:	dd73      	ble.n	8014238 <__gethex+0x35c>
 8014150:	1b9e      	subs	r6, r3, r6
 8014152:	42b5      	cmp	r5, r6
 8014154:	dc34      	bgt.n	80141c0 <__gethex+0x2e4>
 8014156:	68fb      	ldr	r3, [r7, #12]
 8014158:	2b02      	cmp	r3, #2
 801415a:	d023      	beq.n	80141a4 <__gethex+0x2c8>
 801415c:	2b03      	cmp	r3, #3
 801415e:	d025      	beq.n	80141ac <__gethex+0x2d0>
 8014160:	2b01      	cmp	r3, #1
 8014162:	d115      	bne.n	8014190 <__gethex+0x2b4>
 8014164:	42b5      	cmp	r5, r6
 8014166:	d113      	bne.n	8014190 <__gethex+0x2b4>
 8014168:	2d01      	cmp	r5, #1
 801416a:	d10b      	bne.n	8014184 <__gethex+0x2a8>
 801416c:	9a02      	ldr	r2, [sp, #8]
 801416e:	687b      	ldr	r3, [r7, #4]
 8014170:	6013      	str	r3, [r2, #0]
 8014172:	2301      	movs	r3, #1
 8014174:	6123      	str	r3, [r4, #16]
 8014176:	f8ca 3000 	str.w	r3, [sl]
 801417a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801417c:	f04f 0862 	mov.w	r8, #98	; 0x62
 8014180:	601c      	str	r4, [r3, #0]
 8014182:	e735      	b.n	8013ff0 <__gethex+0x114>
 8014184:	1e69      	subs	r1, r5, #1
 8014186:	4620      	mov	r0, r4
 8014188:	f000 fe36 	bl	8014df8 <__any_on>
 801418c:	2800      	cmp	r0, #0
 801418e:	d1ed      	bne.n	801416c <__gethex+0x290>
 8014190:	4621      	mov	r1, r4
 8014192:	4648      	mov	r0, r9
 8014194:	f000 f9e4 	bl	8014560 <_Bfree>
 8014198:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801419a:	2300      	movs	r3, #0
 801419c:	6013      	str	r3, [r2, #0]
 801419e:	f04f 0850 	mov.w	r8, #80	; 0x50
 80141a2:	e725      	b.n	8013ff0 <__gethex+0x114>
 80141a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80141a6:	2b00      	cmp	r3, #0
 80141a8:	d1f2      	bne.n	8014190 <__gethex+0x2b4>
 80141aa:	e7df      	b.n	801416c <__gethex+0x290>
 80141ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80141ae:	2b00      	cmp	r3, #0
 80141b0:	d1dc      	bne.n	801416c <__gethex+0x290>
 80141b2:	e7ed      	b.n	8014190 <__gethex+0x2b4>
 80141b4:	080168e0 	.word	0x080168e0
 80141b8:	08016aef 	.word	0x08016aef
 80141bc:	08016b00 	.word	0x08016b00
 80141c0:	f106 38ff 	add.w	r8, r6, #4294967295
 80141c4:	f1bb 0f00 	cmp.w	fp, #0
 80141c8:	d133      	bne.n	8014232 <__gethex+0x356>
 80141ca:	f1b8 0f00 	cmp.w	r8, #0
 80141ce:	d004      	beq.n	80141da <__gethex+0x2fe>
 80141d0:	4641      	mov	r1, r8
 80141d2:	4620      	mov	r0, r4
 80141d4:	f000 fe10 	bl	8014df8 <__any_on>
 80141d8:	4683      	mov	fp, r0
 80141da:	ea4f 1268 	mov.w	r2, r8, asr #5
 80141de:	2301      	movs	r3, #1
 80141e0:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 80141e4:	f008 081f 	and.w	r8, r8, #31
 80141e8:	fa03 f308 	lsl.w	r3, r3, r8
 80141ec:	4213      	tst	r3, r2
 80141ee:	4631      	mov	r1, r6
 80141f0:	4620      	mov	r0, r4
 80141f2:	bf18      	it	ne
 80141f4:	f04b 0b02 	orrne.w	fp, fp, #2
 80141f8:	1bad      	subs	r5, r5, r6
 80141fa:	f7ff fe07 	bl	8013e0c <rshift>
 80141fe:	687e      	ldr	r6, [r7, #4]
 8014200:	f04f 0802 	mov.w	r8, #2
 8014204:	f1bb 0f00 	cmp.w	fp, #0
 8014208:	d04a      	beq.n	80142a0 <__gethex+0x3c4>
 801420a:	68fb      	ldr	r3, [r7, #12]
 801420c:	2b02      	cmp	r3, #2
 801420e:	d016      	beq.n	801423e <__gethex+0x362>
 8014210:	2b03      	cmp	r3, #3
 8014212:	d018      	beq.n	8014246 <__gethex+0x36a>
 8014214:	2b01      	cmp	r3, #1
 8014216:	d109      	bne.n	801422c <__gethex+0x350>
 8014218:	f01b 0f02 	tst.w	fp, #2
 801421c:	d006      	beq.n	801422c <__gethex+0x350>
 801421e:	f8da 3000 	ldr.w	r3, [sl]
 8014222:	ea4b 0b03 	orr.w	fp, fp, r3
 8014226:	f01b 0f01 	tst.w	fp, #1
 801422a:	d10f      	bne.n	801424c <__gethex+0x370>
 801422c:	f048 0810 	orr.w	r8, r8, #16
 8014230:	e036      	b.n	80142a0 <__gethex+0x3c4>
 8014232:	f04f 0b01 	mov.w	fp, #1
 8014236:	e7d0      	b.n	80141da <__gethex+0x2fe>
 8014238:	f04f 0801 	mov.w	r8, #1
 801423c:	e7e2      	b.n	8014204 <__gethex+0x328>
 801423e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014240:	f1c3 0301 	rsb	r3, r3, #1
 8014244:	930f      	str	r3, [sp, #60]	; 0x3c
 8014246:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014248:	2b00      	cmp	r3, #0
 801424a:	d0ef      	beq.n	801422c <__gethex+0x350>
 801424c:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8014250:	f104 0214 	add.w	r2, r4, #20
 8014254:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8014258:	9301      	str	r3, [sp, #4]
 801425a:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 801425e:	2300      	movs	r3, #0
 8014260:	4694      	mov	ip, r2
 8014262:	f852 1b04 	ldr.w	r1, [r2], #4
 8014266:	f1b1 3fff 	cmp.w	r1, #4294967295
 801426a:	d01e      	beq.n	80142aa <__gethex+0x3ce>
 801426c:	3101      	adds	r1, #1
 801426e:	f8cc 1000 	str.w	r1, [ip]
 8014272:	f1b8 0f02 	cmp.w	r8, #2
 8014276:	f104 0214 	add.w	r2, r4, #20
 801427a:	d13d      	bne.n	80142f8 <__gethex+0x41c>
 801427c:	683b      	ldr	r3, [r7, #0]
 801427e:	3b01      	subs	r3, #1
 8014280:	42ab      	cmp	r3, r5
 8014282:	d10b      	bne.n	801429c <__gethex+0x3c0>
 8014284:	1169      	asrs	r1, r5, #5
 8014286:	2301      	movs	r3, #1
 8014288:	f005 051f 	and.w	r5, r5, #31
 801428c:	fa03 f505 	lsl.w	r5, r3, r5
 8014290:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8014294:	421d      	tst	r5, r3
 8014296:	bf18      	it	ne
 8014298:	f04f 0801 	movne.w	r8, #1
 801429c:	f048 0820 	orr.w	r8, r8, #32
 80142a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80142a2:	601c      	str	r4, [r3, #0]
 80142a4:	9b02      	ldr	r3, [sp, #8]
 80142a6:	601e      	str	r6, [r3, #0]
 80142a8:	e6a2      	b.n	8013ff0 <__gethex+0x114>
 80142aa:	4290      	cmp	r0, r2
 80142ac:	f842 3c04 	str.w	r3, [r2, #-4]
 80142b0:	d8d6      	bhi.n	8014260 <__gethex+0x384>
 80142b2:	68a2      	ldr	r2, [r4, #8]
 80142b4:	4593      	cmp	fp, r2
 80142b6:	db17      	blt.n	80142e8 <__gethex+0x40c>
 80142b8:	6861      	ldr	r1, [r4, #4]
 80142ba:	4648      	mov	r0, r9
 80142bc:	3101      	adds	r1, #1
 80142be:	f000 f90f 	bl	80144e0 <_Balloc>
 80142c2:	4682      	mov	sl, r0
 80142c4:	b918      	cbnz	r0, 80142ce <__gethex+0x3f2>
 80142c6:	4b1b      	ldr	r3, [pc, #108]	; (8014334 <__gethex+0x458>)
 80142c8:	4602      	mov	r2, r0
 80142ca:	2184      	movs	r1, #132	; 0x84
 80142cc:	e6b3      	b.n	8014036 <__gethex+0x15a>
 80142ce:	6922      	ldr	r2, [r4, #16]
 80142d0:	3202      	adds	r2, #2
 80142d2:	f104 010c 	add.w	r1, r4, #12
 80142d6:	0092      	lsls	r2, r2, #2
 80142d8:	300c      	adds	r0, #12
 80142da:	f7fe feba 	bl	8013052 <memcpy>
 80142de:	4621      	mov	r1, r4
 80142e0:	4648      	mov	r0, r9
 80142e2:	f000 f93d 	bl	8014560 <_Bfree>
 80142e6:	4654      	mov	r4, sl
 80142e8:	6922      	ldr	r2, [r4, #16]
 80142ea:	1c51      	adds	r1, r2, #1
 80142ec:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80142f0:	6121      	str	r1, [r4, #16]
 80142f2:	2101      	movs	r1, #1
 80142f4:	6151      	str	r1, [r2, #20]
 80142f6:	e7bc      	b.n	8014272 <__gethex+0x396>
 80142f8:	6921      	ldr	r1, [r4, #16]
 80142fa:	4559      	cmp	r1, fp
 80142fc:	dd0b      	ble.n	8014316 <__gethex+0x43a>
 80142fe:	2101      	movs	r1, #1
 8014300:	4620      	mov	r0, r4
 8014302:	f7ff fd83 	bl	8013e0c <rshift>
 8014306:	68bb      	ldr	r3, [r7, #8]
 8014308:	3601      	adds	r6, #1
 801430a:	42b3      	cmp	r3, r6
 801430c:	f6ff aedb 	blt.w	80140c6 <__gethex+0x1ea>
 8014310:	f04f 0801 	mov.w	r8, #1
 8014314:	e7c2      	b.n	801429c <__gethex+0x3c0>
 8014316:	f015 051f 	ands.w	r5, r5, #31
 801431a:	d0f9      	beq.n	8014310 <__gethex+0x434>
 801431c:	9b01      	ldr	r3, [sp, #4]
 801431e:	441a      	add	r2, r3
 8014320:	f1c5 0520 	rsb	r5, r5, #32
 8014324:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8014328:	f000 f9cc 	bl	80146c4 <__hi0bits>
 801432c:	42a8      	cmp	r0, r5
 801432e:	dbe6      	blt.n	80142fe <__gethex+0x422>
 8014330:	e7ee      	b.n	8014310 <__gethex+0x434>
 8014332:	bf00      	nop
 8014334:	08016aef 	.word	0x08016aef

08014338 <L_shift>:
 8014338:	f1c2 0208 	rsb	r2, r2, #8
 801433c:	0092      	lsls	r2, r2, #2
 801433e:	b570      	push	{r4, r5, r6, lr}
 8014340:	f1c2 0620 	rsb	r6, r2, #32
 8014344:	6843      	ldr	r3, [r0, #4]
 8014346:	6804      	ldr	r4, [r0, #0]
 8014348:	fa03 f506 	lsl.w	r5, r3, r6
 801434c:	432c      	orrs	r4, r5
 801434e:	40d3      	lsrs	r3, r2
 8014350:	6004      	str	r4, [r0, #0]
 8014352:	f840 3f04 	str.w	r3, [r0, #4]!
 8014356:	4288      	cmp	r0, r1
 8014358:	d3f4      	bcc.n	8014344 <L_shift+0xc>
 801435a:	bd70      	pop	{r4, r5, r6, pc}

0801435c <__match>:
 801435c:	b530      	push	{r4, r5, lr}
 801435e:	6803      	ldr	r3, [r0, #0]
 8014360:	3301      	adds	r3, #1
 8014362:	f811 4b01 	ldrb.w	r4, [r1], #1
 8014366:	b914      	cbnz	r4, 801436e <__match+0x12>
 8014368:	6003      	str	r3, [r0, #0]
 801436a:	2001      	movs	r0, #1
 801436c:	bd30      	pop	{r4, r5, pc}
 801436e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014372:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8014376:	2d19      	cmp	r5, #25
 8014378:	bf98      	it	ls
 801437a:	3220      	addls	r2, #32
 801437c:	42a2      	cmp	r2, r4
 801437e:	d0f0      	beq.n	8014362 <__match+0x6>
 8014380:	2000      	movs	r0, #0
 8014382:	e7f3      	b.n	801436c <__match+0x10>

08014384 <__hexnan>:
 8014384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014388:	680b      	ldr	r3, [r1, #0]
 801438a:	6801      	ldr	r1, [r0, #0]
 801438c:	115e      	asrs	r6, r3, #5
 801438e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8014392:	f013 031f 	ands.w	r3, r3, #31
 8014396:	b087      	sub	sp, #28
 8014398:	bf18      	it	ne
 801439a:	3604      	addne	r6, #4
 801439c:	2500      	movs	r5, #0
 801439e:	1f37      	subs	r7, r6, #4
 80143a0:	4682      	mov	sl, r0
 80143a2:	4690      	mov	r8, r2
 80143a4:	9301      	str	r3, [sp, #4]
 80143a6:	f846 5c04 	str.w	r5, [r6, #-4]
 80143aa:	46b9      	mov	r9, r7
 80143ac:	463c      	mov	r4, r7
 80143ae:	9502      	str	r5, [sp, #8]
 80143b0:	46ab      	mov	fp, r5
 80143b2:	784a      	ldrb	r2, [r1, #1]
 80143b4:	1c4b      	adds	r3, r1, #1
 80143b6:	9303      	str	r3, [sp, #12]
 80143b8:	b342      	cbz	r2, 801440c <__hexnan+0x88>
 80143ba:	4610      	mov	r0, r2
 80143bc:	9105      	str	r1, [sp, #20]
 80143be:	9204      	str	r2, [sp, #16]
 80143c0:	f7ff fd76 	bl	8013eb0 <__hexdig_fun>
 80143c4:	2800      	cmp	r0, #0
 80143c6:	d14f      	bne.n	8014468 <__hexnan+0xe4>
 80143c8:	9a04      	ldr	r2, [sp, #16]
 80143ca:	9905      	ldr	r1, [sp, #20]
 80143cc:	2a20      	cmp	r2, #32
 80143ce:	d818      	bhi.n	8014402 <__hexnan+0x7e>
 80143d0:	9b02      	ldr	r3, [sp, #8]
 80143d2:	459b      	cmp	fp, r3
 80143d4:	dd13      	ble.n	80143fe <__hexnan+0x7a>
 80143d6:	454c      	cmp	r4, r9
 80143d8:	d206      	bcs.n	80143e8 <__hexnan+0x64>
 80143da:	2d07      	cmp	r5, #7
 80143dc:	dc04      	bgt.n	80143e8 <__hexnan+0x64>
 80143de:	462a      	mov	r2, r5
 80143e0:	4649      	mov	r1, r9
 80143e2:	4620      	mov	r0, r4
 80143e4:	f7ff ffa8 	bl	8014338 <L_shift>
 80143e8:	4544      	cmp	r4, r8
 80143ea:	d950      	bls.n	801448e <__hexnan+0x10a>
 80143ec:	2300      	movs	r3, #0
 80143ee:	f1a4 0904 	sub.w	r9, r4, #4
 80143f2:	f844 3c04 	str.w	r3, [r4, #-4]
 80143f6:	f8cd b008 	str.w	fp, [sp, #8]
 80143fa:	464c      	mov	r4, r9
 80143fc:	461d      	mov	r5, r3
 80143fe:	9903      	ldr	r1, [sp, #12]
 8014400:	e7d7      	b.n	80143b2 <__hexnan+0x2e>
 8014402:	2a29      	cmp	r2, #41	; 0x29
 8014404:	d155      	bne.n	80144b2 <__hexnan+0x12e>
 8014406:	3102      	adds	r1, #2
 8014408:	f8ca 1000 	str.w	r1, [sl]
 801440c:	f1bb 0f00 	cmp.w	fp, #0
 8014410:	d04f      	beq.n	80144b2 <__hexnan+0x12e>
 8014412:	454c      	cmp	r4, r9
 8014414:	d206      	bcs.n	8014424 <__hexnan+0xa0>
 8014416:	2d07      	cmp	r5, #7
 8014418:	dc04      	bgt.n	8014424 <__hexnan+0xa0>
 801441a:	462a      	mov	r2, r5
 801441c:	4649      	mov	r1, r9
 801441e:	4620      	mov	r0, r4
 8014420:	f7ff ff8a 	bl	8014338 <L_shift>
 8014424:	4544      	cmp	r4, r8
 8014426:	d934      	bls.n	8014492 <__hexnan+0x10e>
 8014428:	f1a8 0204 	sub.w	r2, r8, #4
 801442c:	4623      	mov	r3, r4
 801442e:	f853 1b04 	ldr.w	r1, [r3], #4
 8014432:	f842 1f04 	str.w	r1, [r2, #4]!
 8014436:	429f      	cmp	r7, r3
 8014438:	d2f9      	bcs.n	801442e <__hexnan+0xaa>
 801443a:	1b3b      	subs	r3, r7, r4
 801443c:	f023 0303 	bic.w	r3, r3, #3
 8014440:	3304      	adds	r3, #4
 8014442:	3e03      	subs	r6, #3
 8014444:	3401      	adds	r4, #1
 8014446:	42a6      	cmp	r6, r4
 8014448:	bf38      	it	cc
 801444a:	2304      	movcc	r3, #4
 801444c:	4443      	add	r3, r8
 801444e:	2200      	movs	r2, #0
 8014450:	f843 2b04 	str.w	r2, [r3], #4
 8014454:	429f      	cmp	r7, r3
 8014456:	d2fb      	bcs.n	8014450 <__hexnan+0xcc>
 8014458:	683b      	ldr	r3, [r7, #0]
 801445a:	b91b      	cbnz	r3, 8014464 <__hexnan+0xe0>
 801445c:	4547      	cmp	r7, r8
 801445e:	d126      	bne.n	80144ae <__hexnan+0x12a>
 8014460:	2301      	movs	r3, #1
 8014462:	603b      	str	r3, [r7, #0]
 8014464:	2005      	movs	r0, #5
 8014466:	e025      	b.n	80144b4 <__hexnan+0x130>
 8014468:	3501      	adds	r5, #1
 801446a:	2d08      	cmp	r5, #8
 801446c:	f10b 0b01 	add.w	fp, fp, #1
 8014470:	dd06      	ble.n	8014480 <__hexnan+0xfc>
 8014472:	4544      	cmp	r4, r8
 8014474:	d9c3      	bls.n	80143fe <__hexnan+0x7a>
 8014476:	2300      	movs	r3, #0
 8014478:	f844 3c04 	str.w	r3, [r4, #-4]
 801447c:	2501      	movs	r5, #1
 801447e:	3c04      	subs	r4, #4
 8014480:	6822      	ldr	r2, [r4, #0]
 8014482:	f000 000f 	and.w	r0, r0, #15
 8014486:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 801448a:	6020      	str	r0, [r4, #0]
 801448c:	e7b7      	b.n	80143fe <__hexnan+0x7a>
 801448e:	2508      	movs	r5, #8
 8014490:	e7b5      	b.n	80143fe <__hexnan+0x7a>
 8014492:	9b01      	ldr	r3, [sp, #4]
 8014494:	2b00      	cmp	r3, #0
 8014496:	d0df      	beq.n	8014458 <__hexnan+0xd4>
 8014498:	f1c3 0320 	rsb	r3, r3, #32
 801449c:	f04f 32ff 	mov.w	r2, #4294967295
 80144a0:	40da      	lsrs	r2, r3
 80144a2:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80144a6:	4013      	ands	r3, r2
 80144a8:	f846 3c04 	str.w	r3, [r6, #-4]
 80144ac:	e7d4      	b.n	8014458 <__hexnan+0xd4>
 80144ae:	3f04      	subs	r7, #4
 80144b0:	e7d2      	b.n	8014458 <__hexnan+0xd4>
 80144b2:	2004      	movs	r0, #4
 80144b4:	b007      	add	sp, #28
 80144b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080144ba <__ascii_mbtowc>:
 80144ba:	b082      	sub	sp, #8
 80144bc:	b901      	cbnz	r1, 80144c0 <__ascii_mbtowc+0x6>
 80144be:	a901      	add	r1, sp, #4
 80144c0:	b142      	cbz	r2, 80144d4 <__ascii_mbtowc+0x1a>
 80144c2:	b14b      	cbz	r3, 80144d8 <__ascii_mbtowc+0x1e>
 80144c4:	7813      	ldrb	r3, [r2, #0]
 80144c6:	600b      	str	r3, [r1, #0]
 80144c8:	7812      	ldrb	r2, [r2, #0]
 80144ca:	1e10      	subs	r0, r2, #0
 80144cc:	bf18      	it	ne
 80144ce:	2001      	movne	r0, #1
 80144d0:	b002      	add	sp, #8
 80144d2:	4770      	bx	lr
 80144d4:	4610      	mov	r0, r2
 80144d6:	e7fb      	b.n	80144d0 <__ascii_mbtowc+0x16>
 80144d8:	f06f 0001 	mvn.w	r0, #1
 80144dc:	e7f8      	b.n	80144d0 <__ascii_mbtowc+0x16>
	...

080144e0 <_Balloc>:
 80144e0:	b570      	push	{r4, r5, r6, lr}
 80144e2:	69c6      	ldr	r6, [r0, #28]
 80144e4:	4604      	mov	r4, r0
 80144e6:	460d      	mov	r5, r1
 80144e8:	b976      	cbnz	r6, 8014508 <_Balloc+0x28>
 80144ea:	2010      	movs	r0, #16
 80144ec:	f7fc ff38 	bl	8011360 <malloc>
 80144f0:	4602      	mov	r2, r0
 80144f2:	61e0      	str	r0, [r4, #28]
 80144f4:	b920      	cbnz	r0, 8014500 <_Balloc+0x20>
 80144f6:	4b18      	ldr	r3, [pc, #96]	; (8014558 <_Balloc+0x78>)
 80144f8:	4818      	ldr	r0, [pc, #96]	; (801455c <_Balloc+0x7c>)
 80144fa:	216b      	movs	r1, #107	; 0x6b
 80144fc:	f001 fc24 	bl	8015d48 <__assert_func>
 8014500:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8014504:	6006      	str	r6, [r0, #0]
 8014506:	60c6      	str	r6, [r0, #12]
 8014508:	69e6      	ldr	r6, [r4, #28]
 801450a:	68f3      	ldr	r3, [r6, #12]
 801450c:	b183      	cbz	r3, 8014530 <_Balloc+0x50>
 801450e:	69e3      	ldr	r3, [r4, #28]
 8014510:	68db      	ldr	r3, [r3, #12]
 8014512:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8014516:	b9b8      	cbnz	r0, 8014548 <_Balloc+0x68>
 8014518:	2101      	movs	r1, #1
 801451a:	fa01 f605 	lsl.w	r6, r1, r5
 801451e:	1d72      	adds	r2, r6, #5
 8014520:	0092      	lsls	r2, r2, #2
 8014522:	4620      	mov	r0, r4
 8014524:	f001 fc2e 	bl	8015d84 <_calloc_r>
 8014528:	b160      	cbz	r0, 8014544 <_Balloc+0x64>
 801452a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 801452e:	e00e      	b.n	801454e <_Balloc+0x6e>
 8014530:	2221      	movs	r2, #33	; 0x21
 8014532:	2104      	movs	r1, #4
 8014534:	4620      	mov	r0, r4
 8014536:	f001 fc25 	bl	8015d84 <_calloc_r>
 801453a:	69e3      	ldr	r3, [r4, #28]
 801453c:	60f0      	str	r0, [r6, #12]
 801453e:	68db      	ldr	r3, [r3, #12]
 8014540:	2b00      	cmp	r3, #0
 8014542:	d1e4      	bne.n	801450e <_Balloc+0x2e>
 8014544:	2000      	movs	r0, #0
 8014546:	bd70      	pop	{r4, r5, r6, pc}
 8014548:	6802      	ldr	r2, [r0, #0]
 801454a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 801454e:	2300      	movs	r3, #0
 8014550:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8014554:	e7f7      	b.n	8014546 <_Balloc+0x66>
 8014556:	bf00      	nop
 8014558:	08016a80 	.word	0x08016a80
 801455c:	08016b60 	.word	0x08016b60

08014560 <_Bfree>:
 8014560:	b570      	push	{r4, r5, r6, lr}
 8014562:	69c6      	ldr	r6, [r0, #28]
 8014564:	4605      	mov	r5, r0
 8014566:	460c      	mov	r4, r1
 8014568:	b976      	cbnz	r6, 8014588 <_Bfree+0x28>
 801456a:	2010      	movs	r0, #16
 801456c:	f7fc fef8 	bl	8011360 <malloc>
 8014570:	4602      	mov	r2, r0
 8014572:	61e8      	str	r0, [r5, #28]
 8014574:	b920      	cbnz	r0, 8014580 <_Bfree+0x20>
 8014576:	4b09      	ldr	r3, [pc, #36]	; (801459c <_Bfree+0x3c>)
 8014578:	4809      	ldr	r0, [pc, #36]	; (80145a0 <_Bfree+0x40>)
 801457a:	218f      	movs	r1, #143	; 0x8f
 801457c:	f001 fbe4 	bl	8015d48 <__assert_func>
 8014580:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8014584:	6006      	str	r6, [r0, #0]
 8014586:	60c6      	str	r6, [r0, #12]
 8014588:	b13c      	cbz	r4, 801459a <_Bfree+0x3a>
 801458a:	69eb      	ldr	r3, [r5, #28]
 801458c:	6862      	ldr	r2, [r4, #4]
 801458e:	68db      	ldr	r3, [r3, #12]
 8014590:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8014594:	6021      	str	r1, [r4, #0]
 8014596:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 801459a:	bd70      	pop	{r4, r5, r6, pc}
 801459c:	08016a80 	.word	0x08016a80
 80145a0:	08016b60 	.word	0x08016b60

080145a4 <__multadd>:
 80145a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80145a8:	690d      	ldr	r5, [r1, #16]
 80145aa:	4607      	mov	r7, r0
 80145ac:	460c      	mov	r4, r1
 80145ae:	461e      	mov	r6, r3
 80145b0:	f101 0c14 	add.w	ip, r1, #20
 80145b4:	2000      	movs	r0, #0
 80145b6:	f8dc 3000 	ldr.w	r3, [ip]
 80145ba:	b299      	uxth	r1, r3
 80145bc:	fb02 6101 	mla	r1, r2, r1, r6
 80145c0:	0c1e      	lsrs	r6, r3, #16
 80145c2:	0c0b      	lsrs	r3, r1, #16
 80145c4:	fb02 3306 	mla	r3, r2, r6, r3
 80145c8:	b289      	uxth	r1, r1
 80145ca:	3001      	adds	r0, #1
 80145cc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80145d0:	4285      	cmp	r5, r0
 80145d2:	f84c 1b04 	str.w	r1, [ip], #4
 80145d6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80145da:	dcec      	bgt.n	80145b6 <__multadd+0x12>
 80145dc:	b30e      	cbz	r6, 8014622 <__multadd+0x7e>
 80145de:	68a3      	ldr	r3, [r4, #8]
 80145e0:	42ab      	cmp	r3, r5
 80145e2:	dc19      	bgt.n	8014618 <__multadd+0x74>
 80145e4:	6861      	ldr	r1, [r4, #4]
 80145e6:	4638      	mov	r0, r7
 80145e8:	3101      	adds	r1, #1
 80145ea:	f7ff ff79 	bl	80144e0 <_Balloc>
 80145ee:	4680      	mov	r8, r0
 80145f0:	b928      	cbnz	r0, 80145fe <__multadd+0x5a>
 80145f2:	4602      	mov	r2, r0
 80145f4:	4b0c      	ldr	r3, [pc, #48]	; (8014628 <__multadd+0x84>)
 80145f6:	480d      	ldr	r0, [pc, #52]	; (801462c <__multadd+0x88>)
 80145f8:	21ba      	movs	r1, #186	; 0xba
 80145fa:	f001 fba5 	bl	8015d48 <__assert_func>
 80145fe:	6922      	ldr	r2, [r4, #16]
 8014600:	3202      	adds	r2, #2
 8014602:	f104 010c 	add.w	r1, r4, #12
 8014606:	0092      	lsls	r2, r2, #2
 8014608:	300c      	adds	r0, #12
 801460a:	f7fe fd22 	bl	8013052 <memcpy>
 801460e:	4621      	mov	r1, r4
 8014610:	4638      	mov	r0, r7
 8014612:	f7ff ffa5 	bl	8014560 <_Bfree>
 8014616:	4644      	mov	r4, r8
 8014618:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801461c:	3501      	adds	r5, #1
 801461e:	615e      	str	r6, [r3, #20]
 8014620:	6125      	str	r5, [r4, #16]
 8014622:	4620      	mov	r0, r4
 8014624:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014628:	08016aef 	.word	0x08016aef
 801462c:	08016b60 	.word	0x08016b60

08014630 <__s2b>:
 8014630:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014634:	460c      	mov	r4, r1
 8014636:	4615      	mov	r5, r2
 8014638:	461f      	mov	r7, r3
 801463a:	2209      	movs	r2, #9
 801463c:	3308      	adds	r3, #8
 801463e:	4606      	mov	r6, r0
 8014640:	fb93 f3f2 	sdiv	r3, r3, r2
 8014644:	2100      	movs	r1, #0
 8014646:	2201      	movs	r2, #1
 8014648:	429a      	cmp	r2, r3
 801464a:	db09      	blt.n	8014660 <__s2b+0x30>
 801464c:	4630      	mov	r0, r6
 801464e:	f7ff ff47 	bl	80144e0 <_Balloc>
 8014652:	b940      	cbnz	r0, 8014666 <__s2b+0x36>
 8014654:	4602      	mov	r2, r0
 8014656:	4b19      	ldr	r3, [pc, #100]	; (80146bc <__s2b+0x8c>)
 8014658:	4819      	ldr	r0, [pc, #100]	; (80146c0 <__s2b+0x90>)
 801465a:	21d3      	movs	r1, #211	; 0xd3
 801465c:	f001 fb74 	bl	8015d48 <__assert_func>
 8014660:	0052      	lsls	r2, r2, #1
 8014662:	3101      	adds	r1, #1
 8014664:	e7f0      	b.n	8014648 <__s2b+0x18>
 8014666:	9b08      	ldr	r3, [sp, #32]
 8014668:	6143      	str	r3, [r0, #20]
 801466a:	2d09      	cmp	r5, #9
 801466c:	f04f 0301 	mov.w	r3, #1
 8014670:	6103      	str	r3, [r0, #16]
 8014672:	dd16      	ble.n	80146a2 <__s2b+0x72>
 8014674:	f104 0909 	add.w	r9, r4, #9
 8014678:	46c8      	mov	r8, r9
 801467a:	442c      	add	r4, r5
 801467c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8014680:	4601      	mov	r1, r0
 8014682:	3b30      	subs	r3, #48	; 0x30
 8014684:	220a      	movs	r2, #10
 8014686:	4630      	mov	r0, r6
 8014688:	f7ff ff8c 	bl	80145a4 <__multadd>
 801468c:	45a0      	cmp	r8, r4
 801468e:	d1f5      	bne.n	801467c <__s2b+0x4c>
 8014690:	f1a5 0408 	sub.w	r4, r5, #8
 8014694:	444c      	add	r4, r9
 8014696:	1b2d      	subs	r5, r5, r4
 8014698:	1963      	adds	r3, r4, r5
 801469a:	42bb      	cmp	r3, r7
 801469c:	db04      	blt.n	80146a8 <__s2b+0x78>
 801469e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80146a2:	340a      	adds	r4, #10
 80146a4:	2509      	movs	r5, #9
 80146a6:	e7f6      	b.n	8014696 <__s2b+0x66>
 80146a8:	f814 3b01 	ldrb.w	r3, [r4], #1
 80146ac:	4601      	mov	r1, r0
 80146ae:	3b30      	subs	r3, #48	; 0x30
 80146b0:	220a      	movs	r2, #10
 80146b2:	4630      	mov	r0, r6
 80146b4:	f7ff ff76 	bl	80145a4 <__multadd>
 80146b8:	e7ee      	b.n	8014698 <__s2b+0x68>
 80146ba:	bf00      	nop
 80146bc:	08016aef 	.word	0x08016aef
 80146c0:	08016b60 	.word	0x08016b60

080146c4 <__hi0bits>:
 80146c4:	0c03      	lsrs	r3, r0, #16
 80146c6:	041b      	lsls	r3, r3, #16
 80146c8:	b9d3      	cbnz	r3, 8014700 <__hi0bits+0x3c>
 80146ca:	0400      	lsls	r0, r0, #16
 80146cc:	2310      	movs	r3, #16
 80146ce:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80146d2:	bf04      	itt	eq
 80146d4:	0200      	lsleq	r0, r0, #8
 80146d6:	3308      	addeq	r3, #8
 80146d8:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80146dc:	bf04      	itt	eq
 80146de:	0100      	lsleq	r0, r0, #4
 80146e0:	3304      	addeq	r3, #4
 80146e2:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80146e6:	bf04      	itt	eq
 80146e8:	0080      	lsleq	r0, r0, #2
 80146ea:	3302      	addeq	r3, #2
 80146ec:	2800      	cmp	r0, #0
 80146ee:	db05      	blt.n	80146fc <__hi0bits+0x38>
 80146f0:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80146f4:	f103 0301 	add.w	r3, r3, #1
 80146f8:	bf08      	it	eq
 80146fa:	2320      	moveq	r3, #32
 80146fc:	4618      	mov	r0, r3
 80146fe:	4770      	bx	lr
 8014700:	2300      	movs	r3, #0
 8014702:	e7e4      	b.n	80146ce <__hi0bits+0xa>

08014704 <__lo0bits>:
 8014704:	6803      	ldr	r3, [r0, #0]
 8014706:	f013 0207 	ands.w	r2, r3, #7
 801470a:	d00c      	beq.n	8014726 <__lo0bits+0x22>
 801470c:	07d9      	lsls	r1, r3, #31
 801470e:	d422      	bmi.n	8014756 <__lo0bits+0x52>
 8014710:	079a      	lsls	r2, r3, #30
 8014712:	bf49      	itett	mi
 8014714:	085b      	lsrmi	r3, r3, #1
 8014716:	089b      	lsrpl	r3, r3, #2
 8014718:	6003      	strmi	r3, [r0, #0]
 801471a:	2201      	movmi	r2, #1
 801471c:	bf5c      	itt	pl
 801471e:	6003      	strpl	r3, [r0, #0]
 8014720:	2202      	movpl	r2, #2
 8014722:	4610      	mov	r0, r2
 8014724:	4770      	bx	lr
 8014726:	b299      	uxth	r1, r3
 8014728:	b909      	cbnz	r1, 801472e <__lo0bits+0x2a>
 801472a:	0c1b      	lsrs	r3, r3, #16
 801472c:	2210      	movs	r2, #16
 801472e:	b2d9      	uxtb	r1, r3
 8014730:	b909      	cbnz	r1, 8014736 <__lo0bits+0x32>
 8014732:	3208      	adds	r2, #8
 8014734:	0a1b      	lsrs	r3, r3, #8
 8014736:	0719      	lsls	r1, r3, #28
 8014738:	bf04      	itt	eq
 801473a:	091b      	lsreq	r3, r3, #4
 801473c:	3204      	addeq	r2, #4
 801473e:	0799      	lsls	r1, r3, #30
 8014740:	bf04      	itt	eq
 8014742:	089b      	lsreq	r3, r3, #2
 8014744:	3202      	addeq	r2, #2
 8014746:	07d9      	lsls	r1, r3, #31
 8014748:	d403      	bmi.n	8014752 <__lo0bits+0x4e>
 801474a:	085b      	lsrs	r3, r3, #1
 801474c:	f102 0201 	add.w	r2, r2, #1
 8014750:	d003      	beq.n	801475a <__lo0bits+0x56>
 8014752:	6003      	str	r3, [r0, #0]
 8014754:	e7e5      	b.n	8014722 <__lo0bits+0x1e>
 8014756:	2200      	movs	r2, #0
 8014758:	e7e3      	b.n	8014722 <__lo0bits+0x1e>
 801475a:	2220      	movs	r2, #32
 801475c:	e7e1      	b.n	8014722 <__lo0bits+0x1e>
	...

08014760 <__i2b>:
 8014760:	b510      	push	{r4, lr}
 8014762:	460c      	mov	r4, r1
 8014764:	2101      	movs	r1, #1
 8014766:	f7ff febb 	bl	80144e0 <_Balloc>
 801476a:	4602      	mov	r2, r0
 801476c:	b928      	cbnz	r0, 801477a <__i2b+0x1a>
 801476e:	4b05      	ldr	r3, [pc, #20]	; (8014784 <__i2b+0x24>)
 8014770:	4805      	ldr	r0, [pc, #20]	; (8014788 <__i2b+0x28>)
 8014772:	f240 1145 	movw	r1, #325	; 0x145
 8014776:	f001 fae7 	bl	8015d48 <__assert_func>
 801477a:	2301      	movs	r3, #1
 801477c:	6144      	str	r4, [r0, #20]
 801477e:	6103      	str	r3, [r0, #16]
 8014780:	bd10      	pop	{r4, pc}
 8014782:	bf00      	nop
 8014784:	08016aef 	.word	0x08016aef
 8014788:	08016b60 	.word	0x08016b60

0801478c <__multiply>:
 801478c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014790:	4691      	mov	r9, r2
 8014792:	690a      	ldr	r2, [r1, #16]
 8014794:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8014798:	429a      	cmp	r2, r3
 801479a:	bfb8      	it	lt
 801479c:	460b      	movlt	r3, r1
 801479e:	460c      	mov	r4, r1
 80147a0:	bfbc      	itt	lt
 80147a2:	464c      	movlt	r4, r9
 80147a4:	4699      	movlt	r9, r3
 80147a6:	6927      	ldr	r7, [r4, #16]
 80147a8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80147ac:	68a3      	ldr	r3, [r4, #8]
 80147ae:	6861      	ldr	r1, [r4, #4]
 80147b0:	eb07 060a 	add.w	r6, r7, sl
 80147b4:	42b3      	cmp	r3, r6
 80147b6:	b085      	sub	sp, #20
 80147b8:	bfb8      	it	lt
 80147ba:	3101      	addlt	r1, #1
 80147bc:	f7ff fe90 	bl	80144e0 <_Balloc>
 80147c0:	b930      	cbnz	r0, 80147d0 <__multiply+0x44>
 80147c2:	4602      	mov	r2, r0
 80147c4:	4b44      	ldr	r3, [pc, #272]	; (80148d8 <__multiply+0x14c>)
 80147c6:	4845      	ldr	r0, [pc, #276]	; (80148dc <__multiply+0x150>)
 80147c8:	f44f 71b1 	mov.w	r1, #354	; 0x162
 80147cc:	f001 fabc 	bl	8015d48 <__assert_func>
 80147d0:	f100 0514 	add.w	r5, r0, #20
 80147d4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80147d8:	462b      	mov	r3, r5
 80147da:	2200      	movs	r2, #0
 80147dc:	4543      	cmp	r3, r8
 80147de:	d321      	bcc.n	8014824 <__multiply+0x98>
 80147e0:	f104 0314 	add.w	r3, r4, #20
 80147e4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80147e8:	f109 0314 	add.w	r3, r9, #20
 80147ec:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80147f0:	9202      	str	r2, [sp, #8]
 80147f2:	1b3a      	subs	r2, r7, r4
 80147f4:	3a15      	subs	r2, #21
 80147f6:	f022 0203 	bic.w	r2, r2, #3
 80147fa:	3204      	adds	r2, #4
 80147fc:	f104 0115 	add.w	r1, r4, #21
 8014800:	428f      	cmp	r7, r1
 8014802:	bf38      	it	cc
 8014804:	2204      	movcc	r2, #4
 8014806:	9201      	str	r2, [sp, #4]
 8014808:	9a02      	ldr	r2, [sp, #8]
 801480a:	9303      	str	r3, [sp, #12]
 801480c:	429a      	cmp	r2, r3
 801480e:	d80c      	bhi.n	801482a <__multiply+0x9e>
 8014810:	2e00      	cmp	r6, #0
 8014812:	dd03      	ble.n	801481c <__multiply+0x90>
 8014814:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8014818:	2b00      	cmp	r3, #0
 801481a:	d05b      	beq.n	80148d4 <__multiply+0x148>
 801481c:	6106      	str	r6, [r0, #16]
 801481e:	b005      	add	sp, #20
 8014820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014824:	f843 2b04 	str.w	r2, [r3], #4
 8014828:	e7d8      	b.n	80147dc <__multiply+0x50>
 801482a:	f8b3 a000 	ldrh.w	sl, [r3]
 801482e:	f1ba 0f00 	cmp.w	sl, #0
 8014832:	d024      	beq.n	801487e <__multiply+0xf2>
 8014834:	f104 0e14 	add.w	lr, r4, #20
 8014838:	46a9      	mov	r9, r5
 801483a:	f04f 0c00 	mov.w	ip, #0
 801483e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8014842:	f8d9 1000 	ldr.w	r1, [r9]
 8014846:	fa1f fb82 	uxth.w	fp, r2
 801484a:	b289      	uxth	r1, r1
 801484c:	fb0a 110b 	mla	r1, sl, fp, r1
 8014850:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8014854:	f8d9 2000 	ldr.w	r2, [r9]
 8014858:	4461      	add	r1, ip
 801485a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801485e:	fb0a c20b 	mla	r2, sl, fp, ip
 8014862:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8014866:	b289      	uxth	r1, r1
 8014868:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 801486c:	4577      	cmp	r7, lr
 801486e:	f849 1b04 	str.w	r1, [r9], #4
 8014872:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8014876:	d8e2      	bhi.n	801483e <__multiply+0xb2>
 8014878:	9a01      	ldr	r2, [sp, #4]
 801487a:	f845 c002 	str.w	ip, [r5, r2]
 801487e:	9a03      	ldr	r2, [sp, #12]
 8014880:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8014884:	3304      	adds	r3, #4
 8014886:	f1b9 0f00 	cmp.w	r9, #0
 801488a:	d021      	beq.n	80148d0 <__multiply+0x144>
 801488c:	6829      	ldr	r1, [r5, #0]
 801488e:	f104 0c14 	add.w	ip, r4, #20
 8014892:	46ae      	mov	lr, r5
 8014894:	f04f 0a00 	mov.w	sl, #0
 8014898:	f8bc b000 	ldrh.w	fp, [ip]
 801489c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80148a0:	fb09 220b 	mla	r2, r9, fp, r2
 80148a4:	4452      	add	r2, sl
 80148a6:	b289      	uxth	r1, r1
 80148a8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80148ac:	f84e 1b04 	str.w	r1, [lr], #4
 80148b0:	f85c 1b04 	ldr.w	r1, [ip], #4
 80148b4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80148b8:	f8be 1000 	ldrh.w	r1, [lr]
 80148bc:	fb09 110a 	mla	r1, r9, sl, r1
 80148c0:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80148c4:	4567      	cmp	r7, ip
 80148c6:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80148ca:	d8e5      	bhi.n	8014898 <__multiply+0x10c>
 80148cc:	9a01      	ldr	r2, [sp, #4]
 80148ce:	50a9      	str	r1, [r5, r2]
 80148d0:	3504      	adds	r5, #4
 80148d2:	e799      	b.n	8014808 <__multiply+0x7c>
 80148d4:	3e01      	subs	r6, #1
 80148d6:	e79b      	b.n	8014810 <__multiply+0x84>
 80148d8:	08016aef 	.word	0x08016aef
 80148dc:	08016b60 	.word	0x08016b60

080148e0 <__pow5mult>:
 80148e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80148e4:	4615      	mov	r5, r2
 80148e6:	f012 0203 	ands.w	r2, r2, #3
 80148ea:	4606      	mov	r6, r0
 80148ec:	460f      	mov	r7, r1
 80148ee:	d007      	beq.n	8014900 <__pow5mult+0x20>
 80148f0:	4c25      	ldr	r4, [pc, #148]	; (8014988 <__pow5mult+0xa8>)
 80148f2:	3a01      	subs	r2, #1
 80148f4:	2300      	movs	r3, #0
 80148f6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80148fa:	f7ff fe53 	bl	80145a4 <__multadd>
 80148fe:	4607      	mov	r7, r0
 8014900:	10ad      	asrs	r5, r5, #2
 8014902:	d03d      	beq.n	8014980 <__pow5mult+0xa0>
 8014904:	69f4      	ldr	r4, [r6, #28]
 8014906:	b97c      	cbnz	r4, 8014928 <__pow5mult+0x48>
 8014908:	2010      	movs	r0, #16
 801490a:	f7fc fd29 	bl	8011360 <malloc>
 801490e:	4602      	mov	r2, r0
 8014910:	61f0      	str	r0, [r6, #28]
 8014912:	b928      	cbnz	r0, 8014920 <__pow5mult+0x40>
 8014914:	4b1d      	ldr	r3, [pc, #116]	; (801498c <__pow5mult+0xac>)
 8014916:	481e      	ldr	r0, [pc, #120]	; (8014990 <__pow5mult+0xb0>)
 8014918:	f240 11b3 	movw	r1, #435	; 0x1b3
 801491c:	f001 fa14 	bl	8015d48 <__assert_func>
 8014920:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8014924:	6004      	str	r4, [r0, #0]
 8014926:	60c4      	str	r4, [r0, #12]
 8014928:	f8d6 801c 	ldr.w	r8, [r6, #28]
 801492c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8014930:	b94c      	cbnz	r4, 8014946 <__pow5mult+0x66>
 8014932:	f240 2171 	movw	r1, #625	; 0x271
 8014936:	4630      	mov	r0, r6
 8014938:	f7ff ff12 	bl	8014760 <__i2b>
 801493c:	2300      	movs	r3, #0
 801493e:	f8c8 0008 	str.w	r0, [r8, #8]
 8014942:	4604      	mov	r4, r0
 8014944:	6003      	str	r3, [r0, #0]
 8014946:	f04f 0900 	mov.w	r9, #0
 801494a:	07eb      	lsls	r3, r5, #31
 801494c:	d50a      	bpl.n	8014964 <__pow5mult+0x84>
 801494e:	4639      	mov	r1, r7
 8014950:	4622      	mov	r2, r4
 8014952:	4630      	mov	r0, r6
 8014954:	f7ff ff1a 	bl	801478c <__multiply>
 8014958:	4639      	mov	r1, r7
 801495a:	4680      	mov	r8, r0
 801495c:	4630      	mov	r0, r6
 801495e:	f7ff fdff 	bl	8014560 <_Bfree>
 8014962:	4647      	mov	r7, r8
 8014964:	106d      	asrs	r5, r5, #1
 8014966:	d00b      	beq.n	8014980 <__pow5mult+0xa0>
 8014968:	6820      	ldr	r0, [r4, #0]
 801496a:	b938      	cbnz	r0, 801497c <__pow5mult+0x9c>
 801496c:	4622      	mov	r2, r4
 801496e:	4621      	mov	r1, r4
 8014970:	4630      	mov	r0, r6
 8014972:	f7ff ff0b 	bl	801478c <__multiply>
 8014976:	6020      	str	r0, [r4, #0]
 8014978:	f8c0 9000 	str.w	r9, [r0]
 801497c:	4604      	mov	r4, r0
 801497e:	e7e4      	b.n	801494a <__pow5mult+0x6a>
 8014980:	4638      	mov	r0, r7
 8014982:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014986:	bf00      	nop
 8014988:	08016cb0 	.word	0x08016cb0
 801498c:	08016a80 	.word	0x08016a80
 8014990:	08016b60 	.word	0x08016b60

08014994 <__lshift>:
 8014994:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014998:	460c      	mov	r4, r1
 801499a:	6849      	ldr	r1, [r1, #4]
 801499c:	6923      	ldr	r3, [r4, #16]
 801499e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80149a2:	68a3      	ldr	r3, [r4, #8]
 80149a4:	4607      	mov	r7, r0
 80149a6:	4691      	mov	r9, r2
 80149a8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80149ac:	f108 0601 	add.w	r6, r8, #1
 80149b0:	42b3      	cmp	r3, r6
 80149b2:	db0b      	blt.n	80149cc <__lshift+0x38>
 80149b4:	4638      	mov	r0, r7
 80149b6:	f7ff fd93 	bl	80144e0 <_Balloc>
 80149ba:	4605      	mov	r5, r0
 80149bc:	b948      	cbnz	r0, 80149d2 <__lshift+0x3e>
 80149be:	4602      	mov	r2, r0
 80149c0:	4b28      	ldr	r3, [pc, #160]	; (8014a64 <__lshift+0xd0>)
 80149c2:	4829      	ldr	r0, [pc, #164]	; (8014a68 <__lshift+0xd4>)
 80149c4:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80149c8:	f001 f9be 	bl	8015d48 <__assert_func>
 80149cc:	3101      	adds	r1, #1
 80149ce:	005b      	lsls	r3, r3, #1
 80149d0:	e7ee      	b.n	80149b0 <__lshift+0x1c>
 80149d2:	2300      	movs	r3, #0
 80149d4:	f100 0114 	add.w	r1, r0, #20
 80149d8:	f100 0210 	add.w	r2, r0, #16
 80149dc:	4618      	mov	r0, r3
 80149de:	4553      	cmp	r3, sl
 80149e0:	db33      	blt.n	8014a4a <__lshift+0xb6>
 80149e2:	6920      	ldr	r0, [r4, #16]
 80149e4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80149e8:	f104 0314 	add.w	r3, r4, #20
 80149ec:	f019 091f 	ands.w	r9, r9, #31
 80149f0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80149f4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80149f8:	d02b      	beq.n	8014a52 <__lshift+0xbe>
 80149fa:	f1c9 0e20 	rsb	lr, r9, #32
 80149fe:	468a      	mov	sl, r1
 8014a00:	2200      	movs	r2, #0
 8014a02:	6818      	ldr	r0, [r3, #0]
 8014a04:	fa00 f009 	lsl.w	r0, r0, r9
 8014a08:	4310      	orrs	r0, r2
 8014a0a:	f84a 0b04 	str.w	r0, [sl], #4
 8014a0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8014a12:	459c      	cmp	ip, r3
 8014a14:	fa22 f20e 	lsr.w	r2, r2, lr
 8014a18:	d8f3      	bhi.n	8014a02 <__lshift+0x6e>
 8014a1a:	ebac 0304 	sub.w	r3, ip, r4
 8014a1e:	3b15      	subs	r3, #21
 8014a20:	f023 0303 	bic.w	r3, r3, #3
 8014a24:	3304      	adds	r3, #4
 8014a26:	f104 0015 	add.w	r0, r4, #21
 8014a2a:	4584      	cmp	ip, r0
 8014a2c:	bf38      	it	cc
 8014a2e:	2304      	movcc	r3, #4
 8014a30:	50ca      	str	r2, [r1, r3]
 8014a32:	b10a      	cbz	r2, 8014a38 <__lshift+0xa4>
 8014a34:	f108 0602 	add.w	r6, r8, #2
 8014a38:	3e01      	subs	r6, #1
 8014a3a:	4638      	mov	r0, r7
 8014a3c:	612e      	str	r6, [r5, #16]
 8014a3e:	4621      	mov	r1, r4
 8014a40:	f7ff fd8e 	bl	8014560 <_Bfree>
 8014a44:	4628      	mov	r0, r5
 8014a46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014a4a:	f842 0f04 	str.w	r0, [r2, #4]!
 8014a4e:	3301      	adds	r3, #1
 8014a50:	e7c5      	b.n	80149de <__lshift+0x4a>
 8014a52:	3904      	subs	r1, #4
 8014a54:	f853 2b04 	ldr.w	r2, [r3], #4
 8014a58:	f841 2f04 	str.w	r2, [r1, #4]!
 8014a5c:	459c      	cmp	ip, r3
 8014a5e:	d8f9      	bhi.n	8014a54 <__lshift+0xc0>
 8014a60:	e7ea      	b.n	8014a38 <__lshift+0xa4>
 8014a62:	bf00      	nop
 8014a64:	08016aef 	.word	0x08016aef
 8014a68:	08016b60 	.word	0x08016b60

08014a6c <__mcmp>:
 8014a6c:	b530      	push	{r4, r5, lr}
 8014a6e:	6902      	ldr	r2, [r0, #16]
 8014a70:	690c      	ldr	r4, [r1, #16]
 8014a72:	1b12      	subs	r2, r2, r4
 8014a74:	d10e      	bne.n	8014a94 <__mcmp+0x28>
 8014a76:	f100 0314 	add.w	r3, r0, #20
 8014a7a:	3114      	adds	r1, #20
 8014a7c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8014a80:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8014a84:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8014a88:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8014a8c:	42a5      	cmp	r5, r4
 8014a8e:	d003      	beq.n	8014a98 <__mcmp+0x2c>
 8014a90:	d305      	bcc.n	8014a9e <__mcmp+0x32>
 8014a92:	2201      	movs	r2, #1
 8014a94:	4610      	mov	r0, r2
 8014a96:	bd30      	pop	{r4, r5, pc}
 8014a98:	4283      	cmp	r3, r0
 8014a9a:	d3f3      	bcc.n	8014a84 <__mcmp+0x18>
 8014a9c:	e7fa      	b.n	8014a94 <__mcmp+0x28>
 8014a9e:	f04f 32ff 	mov.w	r2, #4294967295
 8014aa2:	e7f7      	b.n	8014a94 <__mcmp+0x28>

08014aa4 <__mdiff>:
 8014aa4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014aa8:	460c      	mov	r4, r1
 8014aaa:	4606      	mov	r6, r0
 8014aac:	4611      	mov	r1, r2
 8014aae:	4620      	mov	r0, r4
 8014ab0:	4690      	mov	r8, r2
 8014ab2:	f7ff ffdb 	bl	8014a6c <__mcmp>
 8014ab6:	1e05      	subs	r5, r0, #0
 8014ab8:	d110      	bne.n	8014adc <__mdiff+0x38>
 8014aba:	4629      	mov	r1, r5
 8014abc:	4630      	mov	r0, r6
 8014abe:	f7ff fd0f 	bl	80144e0 <_Balloc>
 8014ac2:	b930      	cbnz	r0, 8014ad2 <__mdiff+0x2e>
 8014ac4:	4b3a      	ldr	r3, [pc, #232]	; (8014bb0 <__mdiff+0x10c>)
 8014ac6:	4602      	mov	r2, r0
 8014ac8:	f240 2137 	movw	r1, #567	; 0x237
 8014acc:	4839      	ldr	r0, [pc, #228]	; (8014bb4 <__mdiff+0x110>)
 8014ace:	f001 f93b 	bl	8015d48 <__assert_func>
 8014ad2:	2301      	movs	r3, #1
 8014ad4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8014ad8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014adc:	bfa4      	itt	ge
 8014ade:	4643      	movge	r3, r8
 8014ae0:	46a0      	movge	r8, r4
 8014ae2:	4630      	mov	r0, r6
 8014ae4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8014ae8:	bfa6      	itte	ge
 8014aea:	461c      	movge	r4, r3
 8014aec:	2500      	movge	r5, #0
 8014aee:	2501      	movlt	r5, #1
 8014af0:	f7ff fcf6 	bl	80144e0 <_Balloc>
 8014af4:	b920      	cbnz	r0, 8014b00 <__mdiff+0x5c>
 8014af6:	4b2e      	ldr	r3, [pc, #184]	; (8014bb0 <__mdiff+0x10c>)
 8014af8:	4602      	mov	r2, r0
 8014afa:	f240 2145 	movw	r1, #581	; 0x245
 8014afe:	e7e5      	b.n	8014acc <__mdiff+0x28>
 8014b00:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8014b04:	6926      	ldr	r6, [r4, #16]
 8014b06:	60c5      	str	r5, [r0, #12]
 8014b08:	f104 0914 	add.w	r9, r4, #20
 8014b0c:	f108 0514 	add.w	r5, r8, #20
 8014b10:	f100 0e14 	add.w	lr, r0, #20
 8014b14:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8014b18:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8014b1c:	f108 0210 	add.w	r2, r8, #16
 8014b20:	46f2      	mov	sl, lr
 8014b22:	2100      	movs	r1, #0
 8014b24:	f859 3b04 	ldr.w	r3, [r9], #4
 8014b28:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8014b2c:	fa11 f88b 	uxtah	r8, r1, fp
 8014b30:	b299      	uxth	r1, r3
 8014b32:	0c1b      	lsrs	r3, r3, #16
 8014b34:	eba8 0801 	sub.w	r8, r8, r1
 8014b38:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8014b3c:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8014b40:	fa1f f888 	uxth.w	r8, r8
 8014b44:	1419      	asrs	r1, r3, #16
 8014b46:	454e      	cmp	r6, r9
 8014b48:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8014b4c:	f84a 3b04 	str.w	r3, [sl], #4
 8014b50:	d8e8      	bhi.n	8014b24 <__mdiff+0x80>
 8014b52:	1b33      	subs	r3, r6, r4
 8014b54:	3b15      	subs	r3, #21
 8014b56:	f023 0303 	bic.w	r3, r3, #3
 8014b5a:	3304      	adds	r3, #4
 8014b5c:	3415      	adds	r4, #21
 8014b5e:	42a6      	cmp	r6, r4
 8014b60:	bf38      	it	cc
 8014b62:	2304      	movcc	r3, #4
 8014b64:	441d      	add	r5, r3
 8014b66:	4473      	add	r3, lr
 8014b68:	469e      	mov	lr, r3
 8014b6a:	462e      	mov	r6, r5
 8014b6c:	4566      	cmp	r6, ip
 8014b6e:	d30e      	bcc.n	8014b8e <__mdiff+0xea>
 8014b70:	f10c 0203 	add.w	r2, ip, #3
 8014b74:	1b52      	subs	r2, r2, r5
 8014b76:	f022 0203 	bic.w	r2, r2, #3
 8014b7a:	3d03      	subs	r5, #3
 8014b7c:	45ac      	cmp	ip, r5
 8014b7e:	bf38      	it	cc
 8014b80:	2200      	movcc	r2, #0
 8014b82:	4413      	add	r3, r2
 8014b84:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8014b88:	b17a      	cbz	r2, 8014baa <__mdiff+0x106>
 8014b8a:	6107      	str	r7, [r0, #16]
 8014b8c:	e7a4      	b.n	8014ad8 <__mdiff+0x34>
 8014b8e:	f856 8b04 	ldr.w	r8, [r6], #4
 8014b92:	fa11 f288 	uxtah	r2, r1, r8
 8014b96:	1414      	asrs	r4, r2, #16
 8014b98:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8014b9c:	b292      	uxth	r2, r2
 8014b9e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8014ba2:	f84e 2b04 	str.w	r2, [lr], #4
 8014ba6:	1421      	asrs	r1, r4, #16
 8014ba8:	e7e0      	b.n	8014b6c <__mdiff+0xc8>
 8014baa:	3f01      	subs	r7, #1
 8014bac:	e7ea      	b.n	8014b84 <__mdiff+0xe0>
 8014bae:	bf00      	nop
 8014bb0:	08016aef 	.word	0x08016aef
 8014bb4:	08016b60 	.word	0x08016b60

08014bb8 <__ulp>:
 8014bb8:	b082      	sub	sp, #8
 8014bba:	ed8d 0b00 	vstr	d0, [sp]
 8014bbe:	9a01      	ldr	r2, [sp, #4]
 8014bc0:	4b0f      	ldr	r3, [pc, #60]	; (8014c00 <__ulp+0x48>)
 8014bc2:	4013      	ands	r3, r2
 8014bc4:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8014bc8:	2b00      	cmp	r3, #0
 8014bca:	dc08      	bgt.n	8014bde <__ulp+0x26>
 8014bcc:	425b      	negs	r3, r3
 8014bce:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8014bd2:	ea4f 5223 	mov.w	r2, r3, asr #20
 8014bd6:	da04      	bge.n	8014be2 <__ulp+0x2a>
 8014bd8:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8014bdc:	4113      	asrs	r3, r2
 8014bde:	2200      	movs	r2, #0
 8014be0:	e008      	b.n	8014bf4 <__ulp+0x3c>
 8014be2:	f1a2 0314 	sub.w	r3, r2, #20
 8014be6:	2b1e      	cmp	r3, #30
 8014be8:	bfda      	itte	le
 8014bea:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8014bee:	40da      	lsrle	r2, r3
 8014bf0:	2201      	movgt	r2, #1
 8014bf2:	2300      	movs	r3, #0
 8014bf4:	4619      	mov	r1, r3
 8014bf6:	4610      	mov	r0, r2
 8014bf8:	ec41 0b10 	vmov	d0, r0, r1
 8014bfc:	b002      	add	sp, #8
 8014bfe:	4770      	bx	lr
 8014c00:	7ff00000 	.word	0x7ff00000

08014c04 <__b2d>:
 8014c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014c08:	6906      	ldr	r6, [r0, #16]
 8014c0a:	f100 0814 	add.w	r8, r0, #20
 8014c0e:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8014c12:	1f37      	subs	r7, r6, #4
 8014c14:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8014c18:	4610      	mov	r0, r2
 8014c1a:	f7ff fd53 	bl	80146c4 <__hi0bits>
 8014c1e:	f1c0 0320 	rsb	r3, r0, #32
 8014c22:	280a      	cmp	r0, #10
 8014c24:	600b      	str	r3, [r1, #0]
 8014c26:	491b      	ldr	r1, [pc, #108]	; (8014c94 <__b2d+0x90>)
 8014c28:	dc15      	bgt.n	8014c56 <__b2d+0x52>
 8014c2a:	f1c0 0c0b 	rsb	ip, r0, #11
 8014c2e:	fa22 f30c 	lsr.w	r3, r2, ip
 8014c32:	45b8      	cmp	r8, r7
 8014c34:	ea43 0501 	orr.w	r5, r3, r1
 8014c38:	bf34      	ite	cc
 8014c3a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8014c3e:	2300      	movcs	r3, #0
 8014c40:	3015      	adds	r0, #21
 8014c42:	fa02 f000 	lsl.w	r0, r2, r0
 8014c46:	fa23 f30c 	lsr.w	r3, r3, ip
 8014c4a:	4303      	orrs	r3, r0
 8014c4c:	461c      	mov	r4, r3
 8014c4e:	ec45 4b10 	vmov	d0, r4, r5
 8014c52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014c56:	45b8      	cmp	r8, r7
 8014c58:	bf3a      	itte	cc
 8014c5a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8014c5e:	f1a6 0708 	subcc.w	r7, r6, #8
 8014c62:	2300      	movcs	r3, #0
 8014c64:	380b      	subs	r0, #11
 8014c66:	d012      	beq.n	8014c8e <__b2d+0x8a>
 8014c68:	f1c0 0120 	rsb	r1, r0, #32
 8014c6c:	fa23 f401 	lsr.w	r4, r3, r1
 8014c70:	4082      	lsls	r2, r0
 8014c72:	4322      	orrs	r2, r4
 8014c74:	4547      	cmp	r7, r8
 8014c76:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 8014c7a:	bf8c      	ite	hi
 8014c7c:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8014c80:	2200      	movls	r2, #0
 8014c82:	4083      	lsls	r3, r0
 8014c84:	40ca      	lsrs	r2, r1
 8014c86:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8014c8a:	4313      	orrs	r3, r2
 8014c8c:	e7de      	b.n	8014c4c <__b2d+0x48>
 8014c8e:	ea42 0501 	orr.w	r5, r2, r1
 8014c92:	e7db      	b.n	8014c4c <__b2d+0x48>
 8014c94:	3ff00000 	.word	0x3ff00000

08014c98 <__d2b>:
 8014c98:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014c9c:	460f      	mov	r7, r1
 8014c9e:	2101      	movs	r1, #1
 8014ca0:	ec59 8b10 	vmov	r8, r9, d0
 8014ca4:	4616      	mov	r6, r2
 8014ca6:	f7ff fc1b 	bl	80144e0 <_Balloc>
 8014caa:	4604      	mov	r4, r0
 8014cac:	b930      	cbnz	r0, 8014cbc <__d2b+0x24>
 8014cae:	4602      	mov	r2, r0
 8014cb0:	4b24      	ldr	r3, [pc, #144]	; (8014d44 <__d2b+0xac>)
 8014cb2:	4825      	ldr	r0, [pc, #148]	; (8014d48 <__d2b+0xb0>)
 8014cb4:	f240 310f 	movw	r1, #783	; 0x30f
 8014cb8:	f001 f846 	bl	8015d48 <__assert_func>
 8014cbc:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8014cc0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8014cc4:	bb2d      	cbnz	r5, 8014d12 <__d2b+0x7a>
 8014cc6:	9301      	str	r3, [sp, #4]
 8014cc8:	f1b8 0300 	subs.w	r3, r8, #0
 8014ccc:	d026      	beq.n	8014d1c <__d2b+0x84>
 8014cce:	4668      	mov	r0, sp
 8014cd0:	9300      	str	r3, [sp, #0]
 8014cd2:	f7ff fd17 	bl	8014704 <__lo0bits>
 8014cd6:	e9dd 1200 	ldrd	r1, r2, [sp]
 8014cda:	b1e8      	cbz	r0, 8014d18 <__d2b+0x80>
 8014cdc:	f1c0 0320 	rsb	r3, r0, #32
 8014ce0:	fa02 f303 	lsl.w	r3, r2, r3
 8014ce4:	430b      	orrs	r3, r1
 8014ce6:	40c2      	lsrs	r2, r0
 8014ce8:	6163      	str	r3, [r4, #20]
 8014cea:	9201      	str	r2, [sp, #4]
 8014cec:	9b01      	ldr	r3, [sp, #4]
 8014cee:	61a3      	str	r3, [r4, #24]
 8014cf0:	2b00      	cmp	r3, #0
 8014cf2:	bf14      	ite	ne
 8014cf4:	2202      	movne	r2, #2
 8014cf6:	2201      	moveq	r2, #1
 8014cf8:	6122      	str	r2, [r4, #16]
 8014cfa:	b1bd      	cbz	r5, 8014d2c <__d2b+0x94>
 8014cfc:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8014d00:	4405      	add	r5, r0
 8014d02:	603d      	str	r5, [r7, #0]
 8014d04:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8014d08:	6030      	str	r0, [r6, #0]
 8014d0a:	4620      	mov	r0, r4
 8014d0c:	b003      	add	sp, #12
 8014d0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014d12:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8014d16:	e7d6      	b.n	8014cc6 <__d2b+0x2e>
 8014d18:	6161      	str	r1, [r4, #20]
 8014d1a:	e7e7      	b.n	8014cec <__d2b+0x54>
 8014d1c:	a801      	add	r0, sp, #4
 8014d1e:	f7ff fcf1 	bl	8014704 <__lo0bits>
 8014d22:	9b01      	ldr	r3, [sp, #4]
 8014d24:	6163      	str	r3, [r4, #20]
 8014d26:	3020      	adds	r0, #32
 8014d28:	2201      	movs	r2, #1
 8014d2a:	e7e5      	b.n	8014cf8 <__d2b+0x60>
 8014d2c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8014d30:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8014d34:	6038      	str	r0, [r7, #0]
 8014d36:	6918      	ldr	r0, [r3, #16]
 8014d38:	f7ff fcc4 	bl	80146c4 <__hi0bits>
 8014d3c:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8014d40:	e7e2      	b.n	8014d08 <__d2b+0x70>
 8014d42:	bf00      	nop
 8014d44:	08016aef 	.word	0x08016aef
 8014d48:	08016b60 	.word	0x08016b60

08014d4c <__ratio>:
 8014d4c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d50:	4688      	mov	r8, r1
 8014d52:	4669      	mov	r1, sp
 8014d54:	4681      	mov	r9, r0
 8014d56:	f7ff ff55 	bl	8014c04 <__b2d>
 8014d5a:	a901      	add	r1, sp, #4
 8014d5c:	4640      	mov	r0, r8
 8014d5e:	ec55 4b10 	vmov	r4, r5, d0
 8014d62:	f7ff ff4f 	bl	8014c04 <__b2d>
 8014d66:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8014d6a:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8014d6e:	eba3 0c02 	sub.w	ip, r3, r2
 8014d72:	e9dd 3200 	ldrd	r3, r2, [sp]
 8014d76:	1a9b      	subs	r3, r3, r2
 8014d78:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8014d7c:	ec51 0b10 	vmov	r0, r1, d0
 8014d80:	2b00      	cmp	r3, #0
 8014d82:	bfd6      	itet	le
 8014d84:	460a      	movle	r2, r1
 8014d86:	462a      	movgt	r2, r5
 8014d88:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8014d8c:	468b      	mov	fp, r1
 8014d8e:	462f      	mov	r7, r5
 8014d90:	bfd4      	ite	le
 8014d92:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8014d96:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8014d9a:	4620      	mov	r0, r4
 8014d9c:	ee10 2a10 	vmov	r2, s0
 8014da0:	465b      	mov	r3, fp
 8014da2:	4639      	mov	r1, r7
 8014da4:	f7eb fd62 	bl	800086c <__aeabi_ddiv>
 8014da8:	ec41 0b10 	vmov	d0, r0, r1
 8014dac:	b003      	add	sp, #12
 8014dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014db2 <__copybits>:
 8014db2:	3901      	subs	r1, #1
 8014db4:	b570      	push	{r4, r5, r6, lr}
 8014db6:	1149      	asrs	r1, r1, #5
 8014db8:	6914      	ldr	r4, [r2, #16]
 8014dba:	3101      	adds	r1, #1
 8014dbc:	f102 0314 	add.w	r3, r2, #20
 8014dc0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8014dc4:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8014dc8:	1f05      	subs	r5, r0, #4
 8014dca:	42a3      	cmp	r3, r4
 8014dcc:	d30c      	bcc.n	8014de8 <__copybits+0x36>
 8014dce:	1aa3      	subs	r3, r4, r2
 8014dd0:	3b11      	subs	r3, #17
 8014dd2:	f023 0303 	bic.w	r3, r3, #3
 8014dd6:	3211      	adds	r2, #17
 8014dd8:	42a2      	cmp	r2, r4
 8014dda:	bf88      	it	hi
 8014ddc:	2300      	movhi	r3, #0
 8014dde:	4418      	add	r0, r3
 8014de0:	2300      	movs	r3, #0
 8014de2:	4288      	cmp	r0, r1
 8014de4:	d305      	bcc.n	8014df2 <__copybits+0x40>
 8014de6:	bd70      	pop	{r4, r5, r6, pc}
 8014de8:	f853 6b04 	ldr.w	r6, [r3], #4
 8014dec:	f845 6f04 	str.w	r6, [r5, #4]!
 8014df0:	e7eb      	b.n	8014dca <__copybits+0x18>
 8014df2:	f840 3b04 	str.w	r3, [r0], #4
 8014df6:	e7f4      	b.n	8014de2 <__copybits+0x30>

08014df8 <__any_on>:
 8014df8:	f100 0214 	add.w	r2, r0, #20
 8014dfc:	6900      	ldr	r0, [r0, #16]
 8014dfe:	114b      	asrs	r3, r1, #5
 8014e00:	4298      	cmp	r0, r3
 8014e02:	b510      	push	{r4, lr}
 8014e04:	db11      	blt.n	8014e2a <__any_on+0x32>
 8014e06:	dd0a      	ble.n	8014e1e <__any_on+0x26>
 8014e08:	f011 011f 	ands.w	r1, r1, #31
 8014e0c:	d007      	beq.n	8014e1e <__any_on+0x26>
 8014e0e:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8014e12:	fa24 f001 	lsr.w	r0, r4, r1
 8014e16:	fa00 f101 	lsl.w	r1, r0, r1
 8014e1a:	428c      	cmp	r4, r1
 8014e1c:	d10b      	bne.n	8014e36 <__any_on+0x3e>
 8014e1e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014e22:	4293      	cmp	r3, r2
 8014e24:	d803      	bhi.n	8014e2e <__any_on+0x36>
 8014e26:	2000      	movs	r0, #0
 8014e28:	bd10      	pop	{r4, pc}
 8014e2a:	4603      	mov	r3, r0
 8014e2c:	e7f7      	b.n	8014e1e <__any_on+0x26>
 8014e2e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8014e32:	2900      	cmp	r1, #0
 8014e34:	d0f5      	beq.n	8014e22 <__any_on+0x2a>
 8014e36:	2001      	movs	r0, #1
 8014e38:	e7f6      	b.n	8014e28 <__any_on+0x30>

08014e3a <_malloc_usable_size_r>:
 8014e3a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8014e3e:	1f18      	subs	r0, r3, #4
 8014e40:	2b00      	cmp	r3, #0
 8014e42:	bfbc      	itt	lt
 8014e44:	580b      	ldrlt	r3, [r1, r0]
 8014e46:	18c0      	addlt	r0, r0, r3
 8014e48:	4770      	bx	lr

08014e4a <__ascii_wctomb>:
 8014e4a:	b149      	cbz	r1, 8014e60 <__ascii_wctomb+0x16>
 8014e4c:	2aff      	cmp	r2, #255	; 0xff
 8014e4e:	bf85      	ittet	hi
 8014e50:	238a      	movhi	r3, #138	; 0x8a
 8014e52:	6003      	strhi	r3, [r0, #0]
 8014e54:	700a      	strbls	r2, [r1, #0]
 8014e56:	f04f 30ff 	movhi.w	r0, #4294967295
 8014e5a:	bf98      	it	ls
 8014e5c:	2001      	movls	r0, #1
 8014e5e:	4770      	bx	lr
 8014e60:	4608      	mov	r0, r1
 8014e62:	4770      	bx	lr

08014e64 <__ssputs_r>:
 8014e64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014e68:	688e      	ldr	r6, [r1, #8]
 8014e6a:	461f      	mov	r7, r3
 8014e6c:	42be      	cmp	r6, r7
 8014e6e:	680b      	ldr	r3, [r1, #0]
 8014e70:	4682      	mov	sl, r0
 8014e72:	460c      	mov	r4, r1
 8014e74:	4690      	mov	r8, r2
 8014e76:	d82c      	bhi.n	8014ed2 <__ssputs_r+0x6e>
 8014e78:	898a      	ldrh	r2, [r1, #12]
 8014e7a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8014e7e:	d026      	beq.n	8014ece <__ssputs_r+0x6a>
 8014e80:	6965      	ldr	r5, [r4, #20]
 8014e82:	6909      	ldr	r1, [r1, #16]
 8014e84:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014e88:	eba3 0901 	sub.w	r9, r3, r1
 8014e8c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8014e90:	1c7b      	adds	r3, r7, #1
 8014e92:	444b      	add	r3, r9
 8014e94:	106d      	asrs	r5, r5, #1
 8014e96:	429d      	cmp	r5, r3
 8014e98:	bf38      	it	cc
 8014e9a:	461d      	movcc	r5, r3
 8014e9c:	0553      	lsls	r3, r2, #21
 8014e9e:	d527      	bpl.n	8014ef0 <__ssputs_r+0x8c>
 8014ea0:	4629      	mov	r1, r5
 8014ea2:	f7fc fa8d 	bl	80113c0 <_malloc_r>
 8014ea6:	4606      	mov	r6, r0
 8014ea8:	b360      	cbz	r0, 8014f04 <__ssputs_r+0xa0>
 8014eaa:	6921      	ldr	r1, [r4, #16]
 8014eac:	464a      	mov	r2, r9
 8014eae:	f7fe f8d0 	bl	8013052 <memcpy>
 8014eb2:	89a3      	ldrh	r3, [r4, #12]
 8014eb4:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8014eb8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8014ebc:	81a3      	strh	r3, [r4, #12]
 8014ebe:	6126      	str	r6, [r4, #16]
 8014ec0:	6165      	str	r5, [r4, #20]
 8014ec2:	444e      	add	r6, r9
 8014ec4:	eba5 0509 	sub.w	r5, r5, r9
 8014ec8:	6026      	str	r6, [r4, #0]
 8014eca:	60a5      	str	r5, [r4, #8]
 8014ecc:	463e      	mov	r6, r7
 8014ece:	42be      	cmp	r6, r7
 8014ed0:	d900      	bls.n	8014ed4 <__ssputs_r+0x70>
 8014ed2:	463e      	mov	r6, r7
 8014ed4:	6820      	ldr	r0, [r4, #0]
 8014ed6:	4632      	mov	r2, r6
 8014ed8:	4641      	mov	r1, r8
 8014eda:	f7fd ff95 	bl	8012e08 <memmove>
 8014ede:	68a3      	ldr	r3, [r4, #8]
 8014ee0:	1b9b      	subs	r3, r3, r6
 8014ee2:	60a3      	str	r3, [r4, #8]
 8014ee4:	6823      	ldr	r3, [r4, #0]
 8014ee6:	4433      	add	r3, r6
 8014ee8:	6023      	str	r3, [r4, #0]
 8014eea:	2000      	movs	r0, #0
 8014eec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014ef0:	462a      	mov	r2, r5
 8014ef2:	f7fc faf9 	bl	80114e8 <_realloc_r>
 8014ef6:	4606      	mov	r6, r0
 8014ef8:	2800      	cmp	r0, #0
 8014efa:	d1e0      	bne.n	8014ebe <__ssputs_r+0x5a>
 8014efc:	6921      	ldr	r1, [r4, #16]
 8014efe:	4650      	mov	r0, sl
 8014f00:	f7fe ff38 	bl	8013d74 <_free_r>
 8014f04:	230c      	movs	r3, #12
 8014f06:	f8ca 3000 	str.w	r3, [sl]
 8014f0a:	89a3      	ldrh	r3, [r4, #12]
 8014f0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8014f10:	81a3      	strh	r3, [r4, #12]
 8014f12:	f04f 30ff 	mov.w	r0, #4294967295
 8014f16:	e7e9      	b.n	8014eec <__ssputs_r+0x88>

08014f18 <_svfiprintf_r>:
 8014f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f1c:	4698      	mov	r8, r3
 8014f1e:	898b      	ldrh	r3, [r1, #12]
 8014f20:	061b      	lsls	r3, r3, #24
 8014f22:	b09d      	sub	sp, #116	; 0x74
 8014f24:	4607      	mov	r7, r0
 8014f26:	460d      	mov	r5, r1
 8014f28:	4614      	mov	r4, r2
 8014f2a:	d50e      	bpl.n	8014f4a <_svfiprintf_r+0x32>
 8014f2c:	690b      	ldr	r3, [r1, #16]
 8014f2e:	b963      	cbnz	r3, 8014f4a <_svfiprintf_r+0x32>
 8014f30:	2140      	movs	r1, #64	; 0x40
 8014f32:	f7fc fa45 	bl	80113c0 <_malloc_r>
 8014f36:	6028      	str	r0, [r5, #0]
 8014f38:	6128      	str	r0, [r5, #16]
 8014f3a:	b920      	cbnz	r0, 8014f46 <_svfiprintf_r+0x2e>
 8014f3c:	230c      	movs	r3, #12
 8014f3e:	603b      	str	r3, [r7, #0]
 8014f40:	f04f 30ff 	mov.w	r0, #4294967295
 8014f44:	e0d0      	b.n	80150e8 <_svfiprintf_r+0x1d0>
 8014f46:	2340      	movs	r3, #64	; 0x40
 8014f48:	616b      	str	r3, [r5, #20]
 8014f4a:	2300      	movs	r3, #0
 8014f4c:	9309      	str	r3, [sp, #36]	; 0x24
 8014f4e:	2320      	movs	r3, #32
 8014f50:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8014f54:	f8cd 800c 	str.w	r8, [sp, #12]
 8014f58:	2330      	movs	r3, #48	; 0x30
 8014f5a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8015100 <_svfiprintf_r+0x1e8>
 8014f5e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8014f62:	f04f 0901 	mov.w	r9, #1
 8014f66:	4623      	mov	r3, r4
 8014f68:	469a      	mov	sl, r3
 8014f6a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014f6e:	b10a      	cbz	r2, 8014f74 <_svfiprintf_r+0x5c>
 8014f70:	2a25      	cmp	r2, #37	; 0x25
 8014f72:	d1f9      	bne.n	8014f68 <_svfiprintf_r+0x50>
 8014f74:	ebba 0b04 	subs.w	fp, sl, r4
 8014f78:	d00b      	beq.n	8014f92 <_svfiprintf_r+0x7a>
 8014f7a:	465b      	mov	r3, fp
 8014f7c:	4622      	mov	r2, r4
 8014f7e:	4629      	mov	r1, r5
 8014f80:	4638      	mov	r0, r7
 8014f82:	f7ff ff6f 	bl	8014e64 <__ssputs_r>
 8014f86:	3001      	adds	r0, #1
 8014f88:	f000 80a9 	beq.w	80150de <_svfiprintf_r+0x1c6>
 8014f8c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014f8e:	445a      	add	r2, fp
 8014f90:	9209      	str	r2, [sp, #36]	; 0x24
 8014f92:	f89a 3000 	ldrb.w	r3, [sl]
 8014f96:	2b00      	cmp	r3, #0
 8014f98:	f000 80a1 	beq.w	80150de <_svfiprintf_r+0x1c6>
 8014f9c:	2300      	movs	r3, #0
 8014f9e:	f04f 32ff 	mov.w	r2, #4294967295
 8014fa2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8014fa6:	f10a 0a01 	add.w	sl, sl, #1
 8014faa:	9304      	str	r3, [sp, #16]
 8014fac:	9307      	str	r3, [sp, #28]
 8014fae:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8014fb2:	931a      	str	r3, [sp, #104]	; 0x68
 8014fb4:	4654      	mov	r4, sl
 8014fb6:	2205      	movs	r2, #5
 8014fb8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8014fbc:	4850      	ldr	r0, [pc, #320]	; (8015100 <_svfiprintf_r+0x1e8>)
 8014fbe:	f7eb f917 	bl	80001f0 <memchr>
 8014fc2:	9a04      	ldr	r2, [sp, #16]
 8014fc4:	b9d8      	cbnz	r0, 8014ffe <_svfiprintf_r+0xe6>
 8014fc6:	06d0      	lsls	r0, r2, #27
 8014fc8:	bf44      	itt	mi
 8014fca:	2320      	movmi	r3, #32
 8014fcc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8014fd0:	0711      	lsls	r1, r2, #28
 8014fd2:	bf44      	itt	mi
 8014fd4:	232b      	movmi	r3, #43	; 0x2b
 8014fd6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8014fda:	f89a 3000 	ldrb.w	r3, [sl]
 8014fde:	2b2a      	cmp	r3, #42	; 0x2a
 8014fe0:	d015      	beq.n	801500e <_svfiprintf_r+0xf6>
 8014fe2:	9a07      	ldr	r2, [sp, #28]
 8014fe4:	4654      	mov	r4, sl
 8014fe6:	2000      	movs	r0, #0
 8014fe8:	f04f 0c0a 	mov.w	ip, #10
 8014fec:	4621      	mov	r1, r4
 8014fee:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014ff2:	3b30      	subs	r3, #48	; 0x30
 8014ff4:	2b09      	cmp	r3, #9
 8014ff6:	d94d      	bls.n	8015094 <_svfiprintf_r+0x17c>
 8014ff8:	b1b0      	cbz	r0, 8015028 <_svfiprintf_r+0x110>
 8014ffa:	9207      	str	r2, [sp, #28]
 8014ffc:	e014      	b.n	8015028 <_svfiprintf_r+0x110>
 8014ffe:	eba0 0308 	sub.w	r3, r0, r8
 8015002:	fa09 f303 	lsl.w	r3, r9, r3
 8015006:	4313      	orrs	r3, r2
 8015008:	9304      	str	r3, [sp, #16]
 801500a:	46a2      	mov	sl, r4
 801500c:	e7d2      	b.n	8014fb4 <_svfiprintf_r+0x9c>
 801500e:	9b03      	ldr	r3, [sp, #12]
 8015010:	1d19      	adds	r1, r3, #4
 8015012:	681b      	ldr	r3, [r3, #0]
 8015014:	9103      	str	r1, [sp, #12]
 8015016:	2b00      	cmp	r3, #0
 8015018:	bfbb      	ittet	lt
 801501a:	425b      	neglt	r3, r3
 801501c:	f042 0202 	orrlt.w	r2, r2, #2
 8015020:	9307      	strge	r3, [sp, #28]
 8015022:	9307      	strlt	r3, [sp, #28]
 8015024:	bfb8      	it	lt
 8015026:	9204      	strlt	r2, [sp, #16]
 8015028:	7823      	ldrb	r3, [r4, #0]
 801502a:	2b2e      	cmp	r3, #46	; 0x2e
 801502c:	d10c      	bne.n	8015048 <_svfiprintf_r+0x130>
 801502e:	7863      	ldrb	r3, [r4, #1]
 8015030:	2b2a      	cmp	r3, #42	; 0x2a
 8015032:	d134      	bne.n	801509e <_svfiprintf_r+0x186>
 8015034:	9b03      	ldr	r3, [sp, #12]
 8015036:	1d1a      	adds	r2, r3, #4
 8015038:	681b      	ldr	r3, [r3, #0]
 801503a:	9203      	str	r2, [sp, #12]
 801503c:	2b00      	cmp	r3, #0
 801503e:	bfb8      	it	lt
 8015040:	f04f 33ff 	movlt.w	r3, #4294967295
 8015044:	3402      	adds	r4, #2
 8015046:	9305      	str	r3, [sp, #20]
 8015048:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8015110 <_svfiprintf_r+0x1f8>
 801504c:	7821      	ldrb	r1, [r4, #0]
 801504e:	2203      	movs	r2, #3
 8015050:	4650      	mov	r0, sl
 8015052:	f7eb f8cd 	bl	80001f0 <memchr>
 8015056:	b138      	cbz	r0, 8015068 <_svfiprintf_r+0x150>
 8015058:	9b04      	ldr	r3, [sp, #16]
 801505a:	eba0 000a 	sub.w	r0, r0, sl
 801505e:	2240      	movs	r2, #64	; 0x40
 8015060:	4082      	lsls	r2, r0
 8015062:	4313      	orrs	r3, r2
 8015064:	3401      	adds	r4, #1
 8015066:	9304      	str	r3, [sp, #16]
 8015068:	f814 1b01 	ldrb.w	r1, [r4], #1
 801506c:	4825      	ldr	r0, [pc, #148]	; (8015104 <_svfiprintf_r+0x1ec>)
 801506e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8015072:	2206      	movs	r2, #6
 8015074:	f7eb f8bc 	bl	80001f0 <memchr>
 8015078:	2800      	cmp	r0, #0
 801507a:	d038      	beq.n	80150ee <_svfiprintf_r+0x1d6>
 801507c:	4b22      	ldr	r3, [pc, #136]	; (8015108 <_svfiprintf_r+0x1f0>)
 801507e:	bb1b      	cbnz	r3, 80150c8 <_svfiprintf_r+0x1b0>
 8015080:	9b03      	ldr	r3, [sp, #12]
 8015082:	3307      	adds	r3, #7
 8015084:	f023 0307 	bic.w	r3, r3, #7
 8015088:	3308      	adds	r3, #8
 801508a:	9303      	str	r3, [sp, #12]
 801508c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801508e:	4433      	add	r3, r6
 8015090:	9309      	str	r3, [sp, #36]	; 0x24
 8015092:	e768      	b.n	8014f66 <_svfiprintf_r+0x4e>
 8015094:	fb0c 3202 	mla	r2, ip, r2, r3
 8015098:	460c      	mov	r4, r1
 801509a:	2001      	movs	r0, #1
 801509c:	e7a6      	b.n	8014fec <_svfiprintf_r+0xd4>
 801509e:	2300      	movs	r3, #0
 80150a0:	3401      	adds	r4, #1
 80150a2:	9305      	str	r3, [sp, #20]
 80150a4:	4619      	mov	r1, r3
 80150a6:	f04f 0c0a 	mov.w	ip, #10
 80150aa:	4620      	mov	r0, r4
 80150ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 80150b0:	3a30      	subs	r2, #48	; 0x30
 80150b2:	2a09      	cmp	r2, #9
 80150b4:	d903      	bls.n	80150be <_svfiprintf_r+0x1a6>
 80150b6:	2b00      	cmp	r3, #0
 80150b8:	d0c6      	beq.n	8015048 <_svfiprintf_r+0x130>
 80150ba:	9105      	str	r1, [sp, #20]
 80150bc:	e7c4      	b.n	8015048 <_svfiprintf_r+0x130>
 80150be:	fb0c 2101 	mla	r1, ip, r1, r2
 80150c2:	4604      	mov	r4, r0
 80150c4:	2301      	movs	r3, #1
 80150c6:	e7f0      	b.n	80150aa <_svfiprintf_r+0x192>
 80150c8:	ab03      	add	r3, sp, #12
 80150ca:	9300      	str	r3, [sp, #0]
 80150cc:	462a      	mov	r2, r5
 80150ce:	4b0f      	ldr	r3, [pc, #60]	; (801510c <_svfiprintf_r+0x1f4>)
 80150d0:	a904      	add	r1, sp, #16
 80150d2:	4638      	mov	r0, r7
 80150d4:	f7fd f8f0 	bl	80122b8 <_printf_float>
 80150d8:	1c42      	adds	r2, r0, #1
 80150da:	4606      	mov	r6, r0
 80150dc:	d1d6      	bne.n	801508c <_svfiprintf_r+0x174>
 80150de:	89ab      	ldrh	r3, [r5, #12]
 80150e0:	065b      	lsls	r3, r3, #25
 80150e2:	f53f af2d 	bmi.w	8014f40 <_svfiprintf_r+0x28>
 80150e6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80150e8:	b01d      	add	sp, #116	; 0x74
 80150ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80150ee:	ab03      	add	r3, sp, #12
 80150f0:	9300      	str	r3, [sp, #0]
 80150f2:	462a      	mov	r2, r5
 80150f4:	4b05      	ldr	r3, [pc, #20]	; (801510c <_svfiprintf_r+0x1f4>)
 80150f6:	a904      	add	r1, sp, #16
 80150f8:	4638      	mov	r0, r7
 80150fa:	f7fd fb81 	bl	8012800 <_printf_i>
 80150fe:	e7eb      	b.n	80150d8 <_svfiprintf_r+0x1c0>
 8015100:	08016cbc 	.word	0x08016cbc
 8015104:	08016cc6 	.word	0x08016cc6
 8015108:	080122b9 	.word	0x080122b9
 801510c:	08014e65 	.word	0x08014e65
 8015110:	08016cc2 	.word	0x08016cc2

08015114 <_sungetc_r>:
 8015114:	b538      	push	{r3, r4, r5, lr}
 8015116:	1c4b      	adds	r3, r1, #1
 8015118:	4614      	mov	r4, r2
 801511a:	d103      	bne.n	8015124 <_sungetc_r+0x10>
 801511c:	f04f 35ff 	mov.w	r5, #4294967295
 8015120:	4628      	mov	r0, r5
 8015122:	bd38      	pop	{r3, r4, r5, pc}
 8015124:	8993      	ldrh	r3, [r2, #12]
 8015126:	f023 0320 	bic.w	r3, r3, #32
 801512a:	8193      	strh	r3, [r2, #12]
 801512c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801512e:	6852      	ldr	r2, [r2, #4]
 8015130:	b2cd      	uxtb	r5, r1
 8015132:	b18b      	cbz	r3, 8015158 <_sungetc_r+0x44>
 8015134:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8015136:	4293      	cmp	r3, r2
 8015138:	dd08      	ble.n	801514c <_sungetc_r+0x38>
 801513a:	6823      	ldr	r3, [r4, #0]
 801513c:	1e5a      	subs	r2, r3, #1
 801513e:	6022      	str	r2, [r4, #0]
 8015140:	f803 5c01 	strb.w	r5, [r3, #-1]
 8015144:	6863      	ldr	r3, [r4, #4]
 8015146:	3301      	adds	r3, #1
 8015148:	6063      	str	r3, [r4, #4]
 801514a:	e7e9      	b.n	8015120 <_sungetc_r+0xc>
 801514c:	4621      	mov	r1, r4
 801514e:	f000 fd2c 	bl	8015baa <__submore>
 8015152:	2800      	cmp	r0, #0
 8015154:	d0f1      	beq.n	801513a <_sungetc_r+0x26>
 8015156:	e7e1      	b.n	801511c <_sungetc_r+0x8>
 8015158:	6921      	ldr	r1, [r4, #16]
 801515a:	6823      	ldr	r3, [r4, #0]
 801515c:	b151      	cbz	r1, 8015174 <_sungetc_r+0x60>
 801515e:	4299      	cmp	r1, r3
 8015160:	d208      	bcs.n	8015174 <_sungetc_r+0x60>
 8015162:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8015166:	42a9      	cmp	r1, r5
 8015168:	d104      	bne.n	8015174 <_sungetc_r+0x60>
 801516a:	3b01      	subs	r3, #1
 801516c:	3201      	adds	r2, #1
 801516e:	6023      	str	r3, [r4, #0]
 8015170:	6062      	str	r2, [r4, #4]
 8015172:	e7d5      	b.n	8015120 <_sungetc_r+0xc>
 8015174:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8015178:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801517c:	6363      	str	r3, [r4, #52]	; 0x34
 801517e:	2303      	movs	r3, #3
 8015180:	63a3      	str	r3, [r4, #56]	; 0x38
 8015182:	4623      	mov	r3, r4
 8015184:	f803 5f46 	strb.w	r5, [r3, #70]!
 8015188:	6023      	str	r3, [r4, #0]
 801518a:	2301      	movs	r3, #1
 801518c:	e7dc      	b.n	8015148 <_sungetc_r+0x34>

0801518e <__ssrefill_r>:
 801518e:	b510      	push	{r4, lr}
 8015190:	460c      	mov	r4, r1
 8015192:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8015194:	b169      	cbz	r1, 80151b2 <__ssrefill_r+0x24>
 8015196:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801519a:	4299      	cmp	r1, r3
 801519c:	d001      	beq.n	80151a2 <__ssrefill_r+0x14>
 801519e:	f7fe fde9 	bl	8013d74 <_free_r>
 80151a2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80151a4:	6063      	str	r3, [r4, #4]
 80151a6:	2000      	movs	r0, #0
 80151a8:	6360      	str	r0, [r4, #52]	; 0x34
 80151aa:	b113      	cbz	r3, 80151b2 <__ssrefill_r+0x24>
 80151ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80151ae:	6023      	str	r3, [r4, #0]
 80151b0:	bd10      	pop	{r4, pc}
 80151b2:	6923      	ldr	r3, [r4, #16]
 80151b4:	6023      	str	r3, [r4, #0]
 80151b6:	2300      	movs	r3, #0
 80151b8:	6063      	str	r3, [r4, #4]
 80151ba:	89a3      	ldrh	r3, [r4, #12]
 80151bc:	f043 0320 	orr.w	r3, r3, #32
 80151c0:	81a3      	strh	r3, [r4, #12]
 80151c2:	f04f 30ff 	mov.w	r0, #4294967295
 80151c6:	e7f3      	b.n	80151b0 <__ssrefill_r+0x22>

080151c8 <__ssvfiscanf_r>:
 80151c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80151cc:	460c      	mov	r4, r1
 80151ce:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 80151d2:	2100      	movs	r1, #0
 80151d4:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 80151d8:	49a6      	ldr	r1, [pc, #664]	; (8015474 <__ssvfiscanf_r+0x2ac>)
 80151da:	91a0      	str	r1, [sp, #640]	; 0x280
 80151dc:	f10d 0804 	add.w	r8, sp, #4
 80151e0:	49a5      	ldr	r1, [pc, #660]	; (8015478 <__ssvfiscanf_r+0x2b0>)
 80151e2:	4fa6      	ldr	r7, [pc, #664]	; (801547c <__ssvfiscanf_r+0x2b4>)
 80151e4:	f8df 9298 	ldr.w	r9, [pc, #664]	; 8015480 <__ssvfiscanf_r+0x2b8>
 80151e8:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 80151ec:	4606      	mov	r6, r0
 80151ee:	91a1      	str	r1, [sp, #644]	; 0x284
 80151f0:	9300      	str	r3, [sp, #0]
 80151f2:	7813      	ldrb	r3, [r2, #0]
 80151f4:	2b00      	cmp	r3, #0
 80151f6:	f000 815a 	beq.w	80154ae <__ssvfiscanf_r+0x2e6>
 80151fa:	5cf9      	ldrb	r1, [r7, r3]
 80151fc:	f011 0108 	ands.w	r1, r1, #8
 8015200:	f102 0501 	add.w	r5, r2, #1
 8015204:	d019      	beq.n	801523a <__ssvfiscanf_r+0x72>
 8015206:	6863      	ldr	r3, [r4, #4]
 8015208:	2b00      	cmp	r3, #0
 801520a:	dd0f      	ble.n	801522c <__ssvfiscanf_r+0x64>
 801520c:	6823      	ldr	r3, [r4, #0]
 801520e:	781a      	ldrb	r2, [r3, #0]
 8015210:	5cba      	ldrb	r2, [r7, r2]
 8015212:	0712      	lsls	r2, r2, #28
 8015214:	d401      	bmi.n	801521a <__ssvfiscanf_r+0x52>
 8015216:	462a      	mov	r2, r5
 8015218:	e7eb      	b.n	80151f2 <__ssvfiscanf_r+0x2a>
 801521a:	9a45      	ldr	r2, [sp, #276]	; 0x114
 801521c:	3201      	adds	r2, #1
 801521e:	9245      	str	r2, [sp, #276]	; 0x114
 8015220:	6862      	ldr	r2, [r4, #4]
 8015222:	3301      	adds	r3, #1
 8015224:	3a01      	subs	r2, #1
 8015226:	6062      	str	r2, [r4, #4]
 8015228:	6023      	str	r3, [r4, #0]
 801522a:	e7ec      	b.n	8015206 <__ssvfiscanf_r+0x3e>
 801522c:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 801522e:	4621      	mov	r1, r4
 8015230:	4630      	mov	r0, r6
 8015232:	4798      	blx	r3
 8015234:	2800      	cmp	r0, #0
 8015236:	d0e9      	beq.n	801520c <__ssvfiscanf_r+0x44>
 8015238:	e7ed      	b.n	8015216 <__ssvfiscanf_r+0x4e>
 801523a:	2b25      	cmp	r3, #37	; 0x25
 801523c:	d012      	beq.n	8015264 <__ssvfiscanf_r+0x9c>
 801523e:	469a      	mov	sl, r3
 8015240:	6863      	ldr	r3, [r4, #4]
 8015242:	2b00      	cmp	r3, #0
 8015244:	f340 8091 	ble.w	801536a <__ssvfiscanf_r+0x1a2>
 8015248:	6822      	ldr	r2, [r4, #0]
 801524a:	7813      	ldrb	r3, [r2, #0]
 801524c:	4553      	cmp	r3, sl
 801524e:	f040 812e 	bne.w	80154ae <__ssvfiscanf_r+0x2e6>
 8015252:	6863      	ldr	r3, [r4, #4]
 8015254:	3b01      	subs	r3, #1
 8015256:	6063      	str	r3, [r4, #4]
 8015258:	9b45      	ldr	r3, [sp, #276]	; 0x114
 801525a:	3201      	adds	r2, #1
 801525c:	3301      	adds	r3, #1
 801525e:	6022      	str	r2, [r4, #0]
 8015260:	9345      	str	r3, [sp, #276]	; 0x114
 8015262:	e7d8      	b.n	8015216 <__ssvfiscanf_r+0x4e>
 8015264:	9141      	str	r1, [sp, #260]	; 0x104
 8015266:	9143      	str	r1, [sp, #268]	; 0x10c
 8015268:	7853      	ldrb	r3, [r2, #1]
 801526a:	2b2a      	cmp	r3, #42	; 0x2a
 801526c:	bf02      	ittt	eq
 801526e:	2310      	moveq	r3, #16
 8015270:	1c95      	addeq	r5, r2, #2
 8015272:	9341      	streq	r3, [sp, #260]	; 0x104
 8015274:	220a      	movs	r2, #10
 8015276:	46aa      	mov	sl, r5
 8015278:	f81a 1b01 	ldrb.w	r1, [sl], #1
 801527c:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8015280:	2b09      	cmp	r3, #9
 8015282:	d91c      	bls.n	80152be <__ssvfiscanf_r+0xf6>
 8015284:	487e      	ldr	r0, [pc, #504]	; (8015480 <__ssvfiscanf_r+0x2b8>)
 8015286:	2203      	movs	r2, #3
 8015288:	f7ea ffb2 	bl	80001f0 <memchr>
 801528c:	b138      	cbz	r0, 801529e <__ssvfiscanf_r+0xd6>
 801528e:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8015290:	eba0 0009 	sub.w	r0, r0, r9
 8015294:	2301      	movs	r3, #1
 8015296:	4083      	lsls	r3, r0
 8015298:	4313      	orrs	r3, r2
 801529a:	9341      	str	r3, [sp, #260]	; 0x104
 801529c:	4655      	mov	r5, sl
 801529e:	f815 3b01 	ldrb.w	r3, [r5], #1
 80152a2:	2b78      	cmp	r3, #120	; 0x78
 80152a4:	d806      	bhi.n	80152b4 <__ssvfiscanf_r+0xec>
 80152a6:	2b57      	cmp	r3, #87	; 0x57
 80152a8:	d810      	bhi.n	80152cc <__ssvfiscanf_r+0x104>
 80152aa:	2b25      	cmp	r3, #37	; 0x25
 80152ac:	d0c7      	beq.n	801523e <__ssvfiscanf_r+0x76>
 80152ae:	d857      	bhi.n	8015360 <__ssvfiscanf_r+0x198>
 80152b0:	2b00      	cmp	r3, #0
 80152b2:	d065      	beq.n	8015380 <__ssvfiscanf_r+0x1b8>
 80152b4:	2303      	movs	r3, #3
 80152b6:	9347      	str	r3, [sp, #284]	; 0x11c
 80152b8:	230a      	movs	r3, #10
 80152ba:	9342      	str	r3, [sp, #264]	; 0x108
 80152bc:	e076      	b.n	80153ac <__ssvfiscanf_r+0x1e4>
 80152be:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 80152c0:	fb02 1103 	mla	r1, r2, r3, r1
 80152c4:	3930      	subs	r1, #48	; 0x30
 80152c6:	9143      	str	r1, [sp, #268]	; 0x10c
 80152c8:	4655      	mov	r5, sl
 80152ca:	e7d4      	b.n	8015276 <__ssvfiscanf_r+0xae>
 80152cc:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 80152d0:	2a20      	cmp	r2, #32
 80152d2:	d8ef      	bhi.n	80152b4 <__ssvfiscanf_r+0xec>
 80152d4:	a101      	add	r1, pc, #4	; (adr r1, 80152dc <__ssvfiscanf_r+0x114>)
 80152d6:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80152da:	bf00      	nop
 80152dc:	0801538f 	.word	0x0801538f
 80152e0:	080152b5 	.word	0x080152b5
 80152e4:	080152b5 	.word	0x080152b5
 80152e8:	080153ed 	.word	0x080153ed
 80152ec:	080152b5 	.word	0x080152b5
 80152f0:	080152b5 	.word	0x080152b5
 80152f4:	080152b5 	.word	0x080152b5
 80152f8:	080152b5 	.word	0x080152b5
 80152fc:	080152b5 	.word	0x080152b5
 8015300:	080152b5 	.word	0x080152b5
 8015304:	080152b5 	.word	0x080152b5
 8015308:	08015403 	.word	0x08015403
 801530c:	080153e9 	.word	0x080153e9
 8015310:	08015367 	.word	0x08015367
 8015314:	08015367 	.word	0x08015367
 8015318:	08015367 	.word	0x08015367
 801531c:	080152b5 	.word	0x080152b5
 8015320:	080153a5 	.word	0x080153a5
 8015324:	080152b5 	.word	0x080152b5
 8015328:	080152b5 	.word	0x080152b5
 801532c:	080152b5 	.word	0x080152b5
 8015330:	080152b5 	.word	0x080152b5
 8015334:	08015413 	.word	0x08015413
 8015338:	080153e1 	.word	0x080153e1
 801533c:	08015387 	.word	0x08015387
 8015340:	080152b5 	.word	0x080152b5
 8015344:	080152b5 	.word	0x080152b5
 8015348:	0801540f 	.word	0x0801540f
 801534c:	080152b5 	.word	0x080152b5
 8015350:	080153e9 	.word	0x080153e9
 8015354:	080152b5 	.word	0x080152b5
 8015358:	080152b5 	.word	0x080152b5
 801535c:	0801538f 	.word	0x0801538f
 8015360:	3b45      	subs	r3, #69	; 0x45
 8015362:	2b02      	cmp	r3, #2
 8015364:	d8a6      	bhi.n	80152b4 <__ssvfiscanf_r+0xec>
 8015366:	2305      	movs	r3, #5
 8015368:	e01f      	b.n	80153aa <__ssvfiscanf_r+0x1e2>
 801536a:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 801536c:	4621      	mov	r1, r4
 801536e:	4630      	mov	r0, r6
 8015370:	4798      	blx	r3
 8015372:	2800      	cmp	r0, #0
 8015374:	f43f af68 	beq.w	8015248 <__ssvfiscanf_r+0x80>
 8015378:	9844      	ldr	r0, [sp, #272]	; 0x110
 801537a:	2800      	cmp	r0, #0
 801537c:	f040 808d 	bne.w	801549a <__ssvfiscanf_r+0x2d2>
 8015380:	f04f 30ff 	mov.w	r0, #4294967295
 8015384:	e08f      	b.n	80154a6 <__ssvfiscanf_r+0x2de>
 8015386:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8015388:	f042 0220 	orr.w	r2, r2, #32
 801538c:	9241      	str	r2, [sp, #260]	; 0x104
 801538e:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8015390:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8015394:	9241      	str	r2, [sp, #260]	; 0x104
 8015396:	2210      	movs	r2, #16
 8015398:	2b6f      	cmp	r3, #111	; 0x6f
 801539a:	9242      	str	r2, [sp, #264]	; 0x108
 801539c:	bf34      	ite	cc
 801539e:	2303      	movcc	r3, #3
 80153a0:	2304      	movcs	r3, #4
 80153a2:	e002      	b.n	80153aa <__ssvfiscanf_r+0x1e2>
 80153a4:	2300      	movs	r3, #0
 80153a6:	9342      	str	r3, [sp, #264]	; 0x108
 80153a8:	2303      	movs	r3, #3
 80153aa:	9347      	str	r3, [sp, #284]	; 0x11c
 80153ac:	6863      	ldr	r3, [r4, #4]
 80153ae:	2b00      	cmp	r3, #0
 80153b0:	dd3d      	ble.n	801542e <__ssvfiscanf_r+0x266>
 80153b2:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80153b4:	0659      	lsls	r1, r3, #25
 80153b6:	d404      	bmi.n	80153c2 <__ssvfiscanf_r+0x1fa>
 80153b8:	6823      	ldr	r3, [r4, #0]
 80153ba:	781a      	ldrb	r2, [r3, #0]
 80153bc:	5cba      	ldrb	r2, [r7, r2]
 80153be:	0712      	lsls	r2, r2, #28
 80153c0:	d43c      	bmi.n	801543c <__ssvfiscanf_r+0x274>
 80153c2:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 80153c4:	2b02      	cmp	r3, #2
 80153c6:	dc4b      	bgt.n	8015460 <__ssvfiscanf_r+0x298>
 80153c8:	466b      	mov	r3, sp
 80153ca:	4622      	mov	r2, r4
 80153cc:	a941      	add	r1, sp, #260	; 0x104
 80153ce:	4630      	mov	r0, r6
 80153d0:	f000 f9b6 	bl	8015740 <_scanf_chars>
 80153d4:	2801      	cmp	r0, #1
 80153d6:	d06a      	beq.n	80154ae <__ssvfiscanf_r+0x2e6>
 80153d8:	2802      	cmp	r0, #2
 80153da:	f47f af1c 	bne.w	8015216 <__ssvfiscanf_r+0x4e>
 80153de:	e7cb      	b.n	8015378 <__ssvfiscanf_r+0x1b0>
 80153e0:	2308      	movs	r3, #8
 80153e2:	9342      	str	r3, [sp, #264]	; 0x108
 80153e4:	2304      	movs	r3, #4
 80153e6:	e7e0      	b.n	80153aa <__ssvfiscanf_r+0x1e2>
 80153e8:	220a      	movs	r2, #10
 80153ea:	e7d5      	b.n	8015398 <__ssvfiscanf_r+0x1d0>
 80153ec:	4629      	mov	r1, r5
 80153ee:	4640      	mov	r0, r8
 80153f0:	f000 fba2 	bl	8015b38 <__sccl>
 80153f4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80153f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80153fa:	9341      	str	r3, [sp, #260]	; 0x104
 80153fc:	4605      	mov	r5, r0
 80153fe:	2301      	movs	r3, #1
 8015400:	e7d3      	b.n	80153aa <__ssvfiscanf_r+0x1e2>
 8015402:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8015404:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8015408:	9341      	str	r3, [sp, #260]	; 0x104
 801540a:	2300      	movs	r3, #0
 801540c:	e7cd      	b.n	80153aa <__ssvfiscanf_r+0x1e2>
 801540e:	2302      	movs	r3, #2
 8015410:	e7cb      	b.n	80153aa <__ssvfiscanf_r+0x1e2>
 8015412:	9841      	ldr	r0, [sp, #260]	; 0x104
 8015414:	06c3      	lsls	r3, r0, #27
 8015416:	f53f aefe 	bmi.w	8015216 <__ssvfiscanf_r+0x4e>
 801541a:	9b00      	ldr	r3, [sp, #0]
 801541c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 801541e:	1d19      	adds	r1, r3, #4
 8015420:	9100      	str	r1, [sp, #0]
 8015422:	681b      	ldr	r3, [r3, #0]
 8015424:	07c0      	lsls	r0, r0, #31
 8015426:	bf4c      	ite	mi
 8015428:	801a      	strhmi	r2, [r3, #0]
 801542a:	601a      	strpl	r2, [r3, #0]
 801542c:	e6f3      	b.n	8015216 <__ssvfiscanf_r+0x4e>
 801542e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8015430:	4621      	mov	r1, r4
 8015432:	4630      	mov	r0, r6
 8015434:	4798      	blx	r3
 8015436:	2800      	cmp	r0, #0
 8015438:	d0bb      	beq.n	80153b2 <__ssvfiscanf_r+0x1ea>
 801543a:	e79d      	b.n	8015378 <__ssvfiscanf_r+0x1b0>
 801543c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 801543e:	3201      	adds	r2, #1
 8015440:	9245      	str	r2, [sp, #276]	; 0x114
 8015442:	6862      	ldr	r2, [r4, #4]
 8015444:	3a01      	subs	r2, #1
 8015446:	2a00      	cmp	r2, #0
 8015448:	6062      	str	r2, [r4, #4]
 801544a:	dd02      	ble.n	8015452 <__ssvfiscanf_r+0x28a>
 801544c:	3301      	adds	r3, #1
 801544e:	6023      	str	r3, [r4, #0]
 8015450:	e7b2      	b.n	80153b8 <__ssvfiscanf_r+0x1f0>
 8015452:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8015454:	4621      	mov	r1, r4
 8015456:	4630      	mov	r0, r6
 8015458:	4798      	blx	r3
 801545a:	2800      	cmp	r0, #0
 801545c:	d0ac      	beq.n	80153b8 <__ssvfiscanf_r+0x1f0>
 801545e:	e78b      	b.n	8015378 <__ssvfiscanf_r+0x1b0>
 8015460:	2b04      	cmp	r3, #4
 8015462:	dc0f      	bgt.n	8015484 <__ssvfiscanf_r+0x2bc>
 8015464:	466b      	mov	r3, sp
 8015466:	4622      	mov	r2, r4
 8015468:	a941      	add	r1, sp, #260	; 0x104
 801546a:	4630      	mov	r0, r6
 801546c:	f000 f9c2 	bl	80157f4 <_scanf_i>
 8015470:	e7b0      	b.n	80153d4 <__ssvfiscanf_r+0x20c>
 8015472:	bf00      	nop
 8015474:	08015115 	.word	0x08015115
 8015478:	0801518f 	.word	0x0801518f
 801547c:	08016939 	.word	0x08016939
 8015480:	08016cc2 	.word	0x08016cc2
 8015484:	4b0b      	ldr	r3, [pc, #44]	; (80154b4 <__ssvfiscanf_r+0x2ec>)
 8015486:	2b00      	cmp	r3, #0
 8015488:	f43f aec5 	beq.w	8015216 <__ssvfiscanf_r+0x4e>
 801548c:	466b      	mov	r3, sp
 801548e:	4622      	mov	r2, r4
 8015490:	a941      	add	r1, sp, #260	; 0x104
 8015492:	4630      	mov	r0, r6
 8015494:	f3af 8000 	nop.w
 8015498:	e79c      	b.n	80153d4 <__ssvfiscanf_r+0x20c>
 801549a:	89a3      	ldrh	r3, [r4, #12]
 801549c:	f013 0f40 	tst.w	r3, #64	; 0x40
 80154a0:	bf18      	it	ne
 80154a2:	f04f 30ff 	movne.w	r0, #4294967295
 80154a6:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 80154aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80154ae:	9844      	ldr	r0, [sp, #272]	; 0x110
 80154b0:	e7f9      	b.n	80154a6 <__ssvfiscanf_r+0x2de>
 80154b2:	bf00      	nop
 80154b4:	00000000 	.word	0x00000000

080154b8 <__sfputc_r>:
 80154b8:	6893      	ldr	r3, [r2, #8]
 80154ba:	3b01      	subs	r3, #1
 80154bc:	2b00      	cmp	r3, #0
 80154be:	b410      	push	{r4}
 80154c0:	6093      	str	r3, [r2, #8]
 80154c2:	da08      	bge.n	80154d6 <__sfputc_r+0x1e>
 80154c4:	6994      	ldr	r4, [r2, #24]
 80154c6:	42a3      	cmp	r3, r4
 80154c8:	db01      	blt.n	80154ce <__sfputc_r+0x16>
 80154ca:	290a      	cmp	r1, #10
 80154cc:	d103      	bne.n	80154d6 <__sfputc_r+0x1e>
 80154ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80154d2:	f000 bba4 	b.w	8015c1e <__swbuf_r>
 80154d6:	6813      	ldr	r3, [r2, #0]
 80154d8:	1c58      	adds	r0, r3, #1
 80154da:	6010      	str	r0, [r2, #0]
 80154dc:	7019      	strb	r1, [r3, #0]
 80154de:	4608      	mov	r0, r1
 80154e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80154e4:	4770      	bx	lr

080154e6 <__sfputs_r>:
 80154e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80154e8:	4606      	mov	r6, r0
 80154ea:	460f      	mov	r7, r1
 80154ec:	4614      	mov	r4, r2
 80154ee:	18d5      	adds	r5, r2, r3
 80154f0:	42ac      	cmp	r4, r5
 80154f2:	d101      	bne.n	80154f8 <__sfputs_r+0x12>
 80154f4:	2000      	movs	r0, #0
 80154f6:	e007      	b.n	8015508 <__sfputs_r+0x22>
 80154f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80154fc:	463a      	mov	r2, r7
 80154fe:	4630      	mov	r0, r6
 8015500:	f7ff ffda 	bl	80154b8 <__sfputc_r>
 8015504:	1c43      	adds	r3, r0, #1
 8015506:	d1f3      	bne.n	80154f0 <__sfputs_r+0xa>
 8015508:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801550c <_vfiprintf_r>:
 801550c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015510:	460d      	mov	r5, r1
 8015512:	b09d      	sub	sp, #116	; 0x74
 8015514:	4614      	mov	r4, r2
 8015516:	4698      	mov	r8, r3
 8015518:	4606      	mov	r6, r0
 801551a:	b118      	cbz	r0, 8015524 <_vfiprintf_r+0x18>
 801551c:	6a03      	ldr	r3, [r0, #32]
 801551e:	b90b      	cbnz	r3, 8015524 <_vfiprintf_r+0x18>
 8015520:	f7fd fb1c 	bl	8012b5c <__sinit>
 8015524:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8015526:	07d9      	lsls	r1, r3, #31
 8015528:	d405      	bmi.n	8015536 <_vfiprintf_r+0x2a>
 801552a:	89ab      	ldrh	r3, [r5, #12]
 801552c:	059a      	lsls	r2, r3, #22
 801552e:	d402      	bmi.n	8015536 <_vfiprintf_r+0x2a>
 8015530:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8015532:	f7fd fd84 	bl	801303e <__retarget_lock_acquire_recursive>
 8015536:	89ab      	ldrh	r3, [r5, #12]
 8015538:	071b      	lsls	r3, r3, #28
 801553a:	d501      	bpl.n	8015540 <_vfiprintf_r+0x34>
 801553c:	692b      	ldr	r3, [r5, #16]
 801553e:	b99b      	cbnz	r3, 8015568 <_vfiprintf_r+0x5c>
 8015540:	4629      	mov	r1, r5
 8015542:	4630      	mov	r0, r6
 8015544:	f000 fba8 	bl	8015c98 <__swsetup_r>
 8015548:	b170      	cbz	r0, 8015568 <_vfiprintf_r+0x5c>
 801554a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801554c:	07dc      	lsls	r4, r3, #31
 801554e:	d504      	bpl.n	801555a <_vfiprintf_r+0x4e>
 8015550:	f04f 30ff 	mov.w	r0, #4294967295
 8015554:	b01d      	add	sp, #116	; 0x74
 8015556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801555a:	89ab      	ldrh	r3, [r5, #12]
 801555c:	0598      	lsls	r0, r3, #22
 801555e:	d4f7      	bmi.n	8015550 <_vfiprintf_r+0x44>
 8015560:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8015562:	f7fd fd6d 	bl	8013040 <__retarget_lock_release_recursive>
 8015566:	e7f3      	b.n	8015550 <_vfiprintf_r+0x44>
 8015568:	2300      	movs	r3, #0
 801556a:	9309      	str	r3, [sp, #36]	; 0x24
 801556c:	2320      	movs	r3, #32
 801556e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8015572:	f8cd 800c 	str.w	r8, [sp, #12]
 8015576:	2330      	movs	r3, #48	; 0x30
 8015578:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 801572c <_vfiprintf_r+0x220>
 801557c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8015580:	f04f 0901 	mov.w	r9, #1
 8015584:	4623      	mov	r3, r4
 8015586:	469a      	mov	sl, r3
 8015588:	f813 2b01 	ldrb.w	r2, [r3], #1
 801558c:	b10a      	cbz	r2, 8015592 <_vfiprintf_r+0x86>
 801558e:	2a25      	cmp	r2, #37	; 0x25
 8015590:	d1f9      	bne.n	8015586 <_vfiprintf_r+0x7a>
 8015592:	ebba 0b04 	subs.w	fp, sl, r4
 8015596:	d00b      	beq.n	80155b0 <_vfiprintf_r+0xa4>
 8015598:	465b      	mov	r3, fp
 801559a:	4622      	mov	r2, r4
 801559c:	4629      	mov	r1, r5
 801559e:	4630      	mov	r0, r6
 80155a0:	f7ff ffa1 	bl	80154e6 <__sfputs_r>
 80155a4:	3001      	adds	r0, #1
 80155a6:	f000 80a9 	beq.w	80156fc <_vfiprintf_r+0x1f0>
 80155aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80155ac:	445a      	add	r2, fp
 80155ae:	9209      	str	r2, [sp, #36]	; 0x24
 80155b0:	f89a 3000 	ldrb.w	r3, [sl]
 80155b4:	2b00      	cmp	r3, #0
 80155b6:	f000 80a1 	beq.w	80156fc <_vfiprintf_r+0x1f0>
 80155ba:	2300      	movs	r3, #0
 80155bc:	f04f 32ff 	mov.w	r2, #4294967295
 80155c0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80155c4:	f10a 0a01 	add.w	sl, sl, #1
 80155c8:	9304      	str	r3, [sp, #16]
 80155ca:	9307      	str	r3, [sp, #28]
 80155cc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80155d0:	931a      	str	r3, [sp, #104]	; 0x68
 80155d2:	4654      	mov	r4, sl
 80155d4:	2205      	movs	r2, #5
 80155d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80155da:	4854      	ldr	r0, [pc, #336]	; (801572c <_vfiprintf_r+0x220>)
 80155dc:	f7ea fe08 	bl	80001f0 <memchr>
 80155e0:	9a04      	ldr	r2, [sp, #16]
 80155e2:	b9d8      	cbnz	r0, 801561c <_vfiprintf_r+0x110>
 80155e4:	06d1      	lsls	r1, r2, #27
 80155e6:	bf44      	itt	mi
 80155e8:	2320      	movmi	r3, #32
 80155ea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80155ee:	0713      	lsls	r3, r2, #28
 80155f0:	bf44      	itt	mi
 80155f2:	232b      	movmi	r3, #43	; 0x2b
 80155f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80155f8:	f89a 3000 	ldrb.w	r3, [sl]
 80155fc:	2b2a      	cmp	r3, #42	; 0x2a
 80155fe:	d015      	beq.n	801562c <_vfiprintf_r+0x120>
 8015600:	9a07      	ldr	r2, [sp, #28]
 8015602:	4654      	mov	r4, sl
 8015604:	2000      	movs	r0, #0
 8015606:	f04f 0c0a 	mov.w	ip, #10
 801560a:	4621      	mov	r1, r4
 801560c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8015610:	3b30      	subs	r3, #48	; 0x30
 8015612:	2b09      	cmp	r3, #9
 8015614:	d94d      	bls.n	80156b2 <_vfiprintf_r+0x1a6>
 8015616:	b1b0      	cbz	r0, 8015646 <_vfiprintf_r+0x13a>
 8015618:	9207      	str	r2, [sp, #28]
 801561a:	e014      	b.n	8015646 <_vfiprintf_r+0x13a>
 801561c:	eba0 0308 	sub.w	r3, r0, r8
 8015620:	fa09 f303 	lsl.w	r3, r9, r3
 8015624:	4313      	orrs	r3, r2
 8015626:	9304      	str	r3, [sp, #16]
 8015628:	46a2      	mov	sl, r4
 801562a:	e7d2      	b.n	80155d2 <_vfiprintf_r+0xc6>
 801562c:	9b03      	ldr	r3, [sp, #12]
 801562e:	1d19      	adds	r1, r3, #4
 8015630:	681b      	ldr	r3, [r3, #0]
 8015632:	9103      	str	r1, [sp, #12]
 8015634:	2b00      	cmp	r3, #0
 8015636:	bfbb      	ittet	lt
 8015638:	425b      	neglt	r3, r3
 801563a:	f042 0202 	orrlt.w	r2, r2, #2
 801563e:	9307      	strge	r3, [sp, #28]
 8015640:	9307      	strlt	r3, [sp, #28]
 8015642:	bfb8      	it	lt
 8015644:	9204      	strlt	r2, [sp, #16]
 8015646:	7823      	ldrb	r3, [r4, #0]
 8015648:	2b2e      	cmp	r3, #46	; 0x2e
 801564a:	d10c      	bne.n	8015666 <_vfiprintf_r+0x15a>
 801564c:	7863      	ldrb	r3, [r4, #1]
 801564e:	2b2a      	cmp	r3, #42	; 0x2a
 8015650:	d134      	bne.n	80156bc <_vfiprintf_r+0x1b0>
 8015652:	9b03      	ldr	r3, [sp, #12]
 8015654:	1d1a      	adds	r2, r3, #4
 8015656:	681b      	ldr	r3, [r3, #0]
 8015658:	9203      	str	r2, [sp, #12]
 801565a:	2b00      	cmp	r3, #0
 801565c:	bfb8      	it	lt
 801565e:	f04f 33ff 	movlt.w	r3, #4294967295
 8015662:	3402      	adds	r4, #2
 8015664:	9305      	str	r3, [sp, #20]
 8015666:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 801573c <_vfiprintf_r+0x230>
 801566a:	7821      	ldrb	r1, [r4, #0]
 801566c:	2203      	movs	r2, #3
 801566e:	4650      	mov	r0, sl
 8015670:	f7ea fdbe 	bl	80001f0 <memchr>
 8015674:	b138      	cbz	r0, 8015686 <_vfiprintf_r+0x17a>
 8015676:	9b04      	ldr	r3, [sp, #16]
 8015678:	eba0 000a 	sub.w	r0, r0, sl
 801567c:	2240      	movs	r2, #64	; 0x40
 801567e:	4082      	lsls	r2, r0
 8015680:	4313      	orrs	r3, r2
 8015682:	3401      	adds	r4, #1
 8015684:	9304      	str	r3, [sp, #16]
 8015686:	f814 1b01 	ldrb.w	r1, [r4], #1
 801568a:	4829      	ldr	r0, [pc, #164]	; (8015730 <_vfiprintf_r+0x224>)
 801568c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8015690:	2206      	movs	r2, #6
 8015692:	f7ea fdad 	bl	80001f0 <memchr>
 8015696:	2800      	cmp	r0, #0
 8015698:	d03f      	beq.n	801571a <_vfiprintf_r+0x20e>
 801569a:	4b26      	ldr	r3, [pc, #152]	; (8015734 <_vfiprintf_r+0x228>)
 801569c:	bb1b      	cbnz	r3, 80156e6 <_vfiprintf_r+0x1da>
 801569e:	9b03      	ldr	r3, [sp, #12]
 80156a0:	3307      	adds	r3, #7
 80156a2:	f023 0307 	bic.w	r3, r3, #7
 80156a6:	3308      	adds	r3, #8
 80156a8:	9303      	str	r3, [sp, #12]
 80156aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156ac:	443b      	add	r3, r7
 80156ae:	9309      	str	r3, [sp, #36]	; 0x24
 80156b0:	e768      	b.n	8015584 <_vfiprintf_r+0x78>
 80156b2:	fb0c 3202 	mla	r2, ip, r2, r3
 80156b6:	460c      	mov	r4, r1
 80156b8:	2001      	movs	r0, #1
 80156ba:	e7a6      	b.n	801560a <_vfiprintf_r+0xfe>
 80156bc:	2300      	movs	r3, #0
 80156be:	3401      	adds	r4, #1
 80156c0:	9305      	str	r3, [sp, #20]
 80156c2:	4619      	mov	r1, r3
 80156c4:	f04f 0c0a 	mov.w	ip, #10
 80156c8:	4620      	mov	r0, r4
 80156ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 80156ce:	3a30      	subs	r2, #48	; 0x30
 80156d0:	2a09      	cmp	r2, #9
 80156d2:	d903      	bls.n	80156dc <_vfiprintf_r+0x1d0>
 80156d4:	2b00      	cmp	r3, #0
 80156d6:	d0c6      	beq.n	8015666 <_vfiprintf_r+0x15a>
 80156d8:	9105      	str	r1, [sp, #20]
 80156da:	e7c4      	b.n	8015666 <_vfiprintf_r+0x15a>
 80156dc:	fb0c 2101 	mla	r1, ip, r1, r2
 80156e0:	4604      	mov	r4, r0
 80156e2:	2301      	movs	r3, #1
 80156e4:	e7f0      	b.n	80156c8 <_vfiprintf_r+0x1bc>
 80156e6:	ab03      	add	r3, sp, #12
 80156e8:	9300      	str	r3, [sp, #0]
 80156ea:	462a      	mov	r2, r5
 80156ec:	4b12      	ldr	r3, [pc, #72]	; (8015738 <_vfiprintf_r+0x22c>)
 80156ee:	a904      	add	r1, sp, #16
 80156f0:	4630      	mov	r0, r6
 80156f2:	f7fc fde1 	bl	80122b8 <_printf_float>
 80156f6:	4607      	mov	r7, r0
 80156f8:	1c78      	adds	r0, r7, #1
 80156fa:	d1d6      	bne.n	80156aa <_vfiprintf_r+0x19e>
 80156fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80156fe:	07d9      	lsls	r1, r3, #31
 8015700:	d405      	bmi.n	801570e <_vfiprintf_r+0x202>
 8015702:	89ab      	ldrh	r3, [r5, #12]
 8015704:	059a      	lsls	r2, r3, #22
 8015706:	d402      	bmi.n	801570e <_vfiprintf_r+0x202>
 8015708:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801570a:	f7fd fc99 	bl	8013040 <__retarget_lock_release_recursive>
 801570e:	89ab      	ldrh	r3, [r5, #12]
 8015710:	065b      	lsls	r3, r3, #25
 8015712:	f53f af1d 	bmi.w	8015550 <_vfiprintf_r+0x44>
 8015716:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015718:	e71c      	b.n	8015554 <_vfiprintf_r+0x48>
 801571a:	ab03      	add	r3, sp, #12
 801571c:	9300      	str	r3, [sp, #0]
 801571e:	462a      	mov	r2, r5
 8015720:	4b05      	ldr	r3, [pc, #20]	; (8015738 <_vfiprintf_r+0x22c>)
 8015722:	a904      	add	r1, sp, #16
 8015724:	4630      	mov	r0, r6
 8015726:	f7fd f86b 	bl	8012800 <_printf_i>
 801572a:	e7e4      	b.n	80156f6 <_vfiprintf_r+0x1ea>
 801572c:	08016cbc 	.word	0x08016cbc
 8015730:	08016cc6 	.word	0x08016cc6
 8015734:	080122b9 	.word	0x080122b9
 8015738:	080154e7 	.word	0x080154e7
 801573c:	08016cc2 	.word	0x08016cc2

08015740 <_scanf_chars>:
 8015740:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015744:	4615      	mov	r5, r2
 8015746:	688a      	ldr	r2, [r1, #8]
 8015748:	4680      	mov	r8, r0
 801574a:	460c      	mov	r4, r1
 801574c:	b932      	cbnz	r2, 801575c <_scanf_chars+0x1c>
 801574e:	698a      	ldr	r2, [r1, #24]
 8015750:	2a00      	cmp	r2, #0
 8015752:	bf0c      	ite	eq
 8015754:	2201      	moveq	r2, #1
 8015756:	f04f 32ff 	movne.w	r2, #4294967295
 801575a:	608a      	str	r2, [r1, #8]
 801575c:	6822      	ldr	r2, [r4, #0]
 801575e:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80157f0 <_scanf_chars+0xb0>
 8015762:	06d1      	lsls	r1, r2, #27
 8015764:	bf5f      	itttt	pl
 8015766:	681a      	ldrpl	r2, [r3, #0]
 8015768:	1d11      	addpl	r1, r2, #4
 801576a:	6019      	strpl	r1, [r3, #0]
 801576c:	6816      	ldrpl	r6, [r2, #0]
 801576e:	2700      	movs	r7, #0
 8015770:	69a0      	ldr	r0, [r4, #24]
 8015772:	b188      	cbz	r0, 8015798 <_scanf_chars+0x58>
 8015774:	2801      	cmp	r0, #1
 8015776:	d107      	bne.n	8015788 <_scanf_chars+0x48>
 8015778:	682a      	ldr	r2, [r5, #0]
 801577a:	7811      	ldrb	r1, [r2, #0]
 801577c:	6962      	ldr	r2, [r4, #20]
 801577e:	5c52      	ldrb	r2, [r2, r1]
 8015780:	b952      	cbnz	r2, 8015798 <_scanf_chars+0x58>
 8015782:	2f00      	cmp	r7, #0
 8015784:	d031      	beq.n	80157ea <_scanf_chars+0xaa>
 8015786:	e022      	b.n	80157ce <_scanf_chars+0x8e>
 8015788:	2802      	cmp	r0, #2
 801578a:	d120      	bne.n	80157ce <_scanf_chars+0x8e>
 801578c:	682b      	ldr	r3, [r5, #0]
 801578e:	781b      	ldrb	r3, [r3, #0]
 8015790:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015794:	071b      	lsls	r3, r3, #28
 8015796:	d41a      	bmi.n	80157ce <_scanf_chars+0x8e>
 8015798:	6823      	ldr	r3, [r4, #0]
 801579a:	06da      	lsls	r2, r3, #27
 801579c:	bf5e      	ittt	pl
 801579e:	682b      	ldrpl	r3, [r5, #0]
 80157a0:	781b      	ldrbpl	r3, [r3, #0]
 80157a2:	f806 3b01 	strbpl.w	r3, [r6], #1
 80157a6:	682a      	ldr	r2, [r5, #0]
 80157a8:	686b      	ldr	r3, [r5, #4]
 80157aa:	3201      	adds	r2, #1
 80157ac:	602a      	str	r2, [r5, #0]
 80157ae:	68a2      	ldr	r2, [r4, #8]
 80157b0:	3b01      	subs	r3, #1
 80157b2:	3a01      	subs	r2, #1
 80157b4:	606b      	str	r3, [r5, #4]
 80157b6:	3701      	adds	r7, #1
 80157b8:	60a2      	str	r2, [r4, #8]
 80157ba:	b142      	cbz	r2, 80157ce <_scanf_chars+0x8e>
 80157bc:	2b00      	cmp	r3, #0
 80157be:	dcd7      	bgt.n	8015770 <_scanf_chars+0x30>
 80157c0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80157c4:	4629      	mov	r1, r5
 80157c6:	4640      	mov	r0, r8
 80157c8:	4798      	blx	r3
 80157ca:	2800      	cmp	r0, #0
 80157cc:	d0d0      	beq.n	8015770 <_scanf_chars+0x30>
 80157ce:	6823      	ldr	r3, [r4, #0]
 80157d0:	f013 0310 	ands.w	r3, r3, #16
 80157d4:	d105      	bne.n	80157e2 <_scanf_chars+0xa2>
 80157d6:	68e2      	ldr	r2, [r4, #12]
 80157d8:	3201      	adds	r2, #1
 80157da:	60e2      	str	r2, [r4, #12]
 80157dc:	69a2      	ldr	r2, [r4, #24]
 80157de:	b102      	cbz	r2, 80157e2 <_scanf_chars+0xa2>
 80157e0:	7033      	strb	r3, [r6, #0]
 80157e2:	6923      	ldr	r3, [r4, #16]
 80157e4:	443b      	add	r3, r7
 80157e6:	6123      	str	r3, [r4, #16]
 80157e8:	2000      	movs	r0, #0
 80157ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80157ee:	bf00      	nop
 80157f0:	08016939 	.word	0x08016939

080157f4 <_scanf_i>:
 80157f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157f8:	4698      	mov	r8, r3
 80157fa:	4b74      	ldr	r3, [pc, #464]	; (80159cc <_scanf_i+0x1d8>)
 80157fc:	460c      	mov	r4, r1
 80157fe:	4682      	mov	sl, r0
 8015800:	4616      	mov	r6, r2
 8015802:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8015806:	b087      	sub	sp, #28
 8015808:	ab03      	add	r3, sp, #12
 801580a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 801580e:	4b70      	ldr	r3, [pc, #448]	; (80159d0 <_scanf_i+0x1dc>)
 8015810:	69a1      	ldr	r1, [r4, #24]
 8015812:	4a70      	ldr	r2, [pc, #448]	; (80159d4 <_scanf_i+0x1e0>)
 8015814:	2903      	cmp	r1, #3
 8015816:	bf18      	it	ne
 8015818:	461a      	movne	r2, r3
 801581a:	68a3      	ldr	r3, [r4, #8]
 801581c:	9201      	str	r2, [sp, #4]
 801581e:	1e5a      	subs	r2, r3, #1
 8015820:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8015824:	bf88      	it	hi
 8015826:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 801582a:	4627      	mov	r7, r4
 801582c:	bf82      	ittt	hi
 801582e:	eb03 0905 	addhi.w	r9, r3, r5
 8015832:	f240 135d 	movwhi	r3, #349	; 0x15d
 8015836:	60a3      	strhi	r3, [r4, #8]
 8015838:	f857 3b1c 	ldr.w	r3, [r7], #28
 801583c:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 8015840:	bf98      	it	ls
 8015842:	f04f 0900 	movls.w	r9, #0
 8015846:	6023      	str	r3, [r4, #0]
 8015848:	463d      	mov	r5, r7
 801584a:	f04f 0b00 	mov.w	fp, #0
 801584e:	6831      	ldr	r1, [r6, #0]
 8015850:	ab03      	add	r3, sp, #12
 8015852:	7809      	ldrb	r1, [r1, #0]
 8015854:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8015858:	2202      	movs	r2, #2
 801585a:	f7ea fcc9 	bl	80001f0 <memchr>
 801585e:	b328      	cbz	r0, 80158ac <_scanf_i+0xb8>
 8015860:	f1bb 0f01 	cmp.w	fp, #1
 8015864:	d159      	bne.n	801591a <_scanf_i+0x126>
 8015866:	6862      	ldr	r2, [r4, #4]
 8015868:	b92a      	cbnz	r2, 8015876 <_scanf_i+0x82>
 801586a:	6822      	ldr	r2, [r4, #0]
 801586c:	2308      	movs	r3, #8
 801586e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8015872:	6063      	str	r3, [r4, #4]
 8015874:	6022      	str	r2, [r4, #0]
 8015876:	6822      	ldr	r2, [r4, #0]
 8015878:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 801587c:	6022      	str	r2, [r4, #0]
 801587e:	68a2      	ldr	r2, [r4, #8]
 8015880:	1e51      	subs	r1, r2, #1
 8015882:	60a1      	str	r1, [r4, #8]
 8015884:	b192      	cbz	r2, 80158ac <_scanf_i+0xb8>
 8015886:	6832      	ldr	r2, [r6, #0]
 8015888:	1c51      	adds	r1, r2, #1
 801588a:	6031      	str	r1, [r6, #0]
 801588c:	7812      	ldrb	r2, [r2, #0]
 801588e:	f805 2b01 	strb.w	r2, [r5], #1
 8015892:	6872      	ldr	r2, [r6, #4]
 8015894:	3a01      	subs	r2, #1
 8015896:	2a00      	cmp	r2, #0
 8015898:	6072      	str	r2, [r6, #4]
 801589a:	dc07      	bgt.n	80158ac <_scanf_i+0xb8>
 801589c:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 80158a0:	4631      	mov	r1, r6
 80158a2:	4650      	mov	r0, sl
 80158a4:	4790      	blx	r2
 80158a6:	2800      	cmp	r0, #0
 80158a8:	f040 8085 	bne.w	80159b6 <_scanf_i+0x1c2>
 80158ac:	f10b 0b01 	add.w	fp, fp, #1
 80158b0:	f1bb 0f03 	cmp.w	fp, #3
 80158b4:	d1cb      	bne.n	801584e <_scanf_i+0x5a>
 80158b6:	6863      	ldr	r3, [r4, #4]
 80158b8:	b90b      	cbnz	r3, 80158be <_scanf_i+0xca>
 80158ba:	230a      	movs	r3, #10
 80158bc:	6063      	str	r3, [r4, #4]
 80158be:	6863      	ldr	r3, [r4, #4]
 80158c0:	4945      	ldr	r1, [pc, #276]	; (80159d8 <_scanf_i+0x1e4>)
 80158c2:	6960      	ldr	r0, [r4, #20]
 80158c4:	1ac9      	subs	r1, r1, r3
 80158c6:	f000 f937 	bl	8015b38 <__sccl>
 80158ca:	f04f 0b00 	mov.w	fp, #0
 80158ce:	68a3      	ldr	r3, [r4, #8]
 80158d0:	6822      	ldr	r2, [r4, #0]
 80158d2:	2b00      	cmp	r3, #0
 80158d4:	d03d      	beq.n	8015952 <_scanf_i+0x15e>
 80158d6:	6831      	ldr	r1, [r6, #0]
 80158d8:	6960      	ldr	r0, [r4, #20]
 80158da:	f891 c000 	ldrb.w	ip, [r1]
 80158de:	f810 000c 	ldrb.w	r0, [r0, ip]
 80158e2:	2800      	cmp	r0, #0
 80158e4:	d035      	beq.n	8015952 <_scanf_i+0x15e>
 80158e6:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 80158ea:	d124      	bne.n	8015936 <_scanf_i+0x142>
 80158ec:	0510      	lsls	r0, r2, #20
 80158ee:	d522      	bpl.n	8015936 <_scanf_i+0x142>
 80158f0:	f10b 0b01 	add.w	fp, fp, #1
 80158f4:	f1b9 0f00 	cmp.w	r9, #0
 80158f8:	d003      	beq.n	8015902 <_scanf_i+0x10e>
 80158fa:	3301      	adds	r3, #1
 80158fc:	f109 39ff 	add.w	r9, r9, #4294967295
 8015900:	60a3      	str	r3, [r4, #8]
 8015902:	6873      	ldr	r3, [r6, #4]
 8015904:	3b01      	subs	r3, #1
 8015906:	2b00      	cmp	r3, #0
 8015908:	6073      	str	r3, [r6, #4]
 801590a:	dd1b      	ble.n	8015944 <_scanf_i+0x150>
 801590c:	6833      	ldr	r3, [r6, #0]
 801590e:	3301      	adds	r3, #1
 8015910:	6033      	str	r3, [r6, #0]
 8015912:	68a3      	ldr	r3, [r4, #8]
 8015914:	3b01      	subs	r3, #1
 8015916:	60a3      	str	r3, [r4, #8]
 8015918:	e7d9      	b.n	80158ce <_scanf_i+0xda>
 801591a:	f1bb 0f02 	cmp.w	fp, #2
 801591e:	d1ae      	bne.n	801587e <_scanf_i+0x8a>
 8015920:	6822      	ldr	r2, [r4, #0]
 8015922:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 8015926:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801592a:	d1bf      	bne.n	80158ac <_scanf_i+0xb8>
 801592c:	2310      	movs	r3, #16
 801592e:	6063      	str	r3, [r4, #4]
 8015930:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8015934:	e7a2      	b.n	801587c <_scanf_i+0x88>
 8015936:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 801593a:	6022      	str	r2, [r4, #0]
 801593c:	780b      	ldrb	r3, [r1, #0]
 801593e:	f805 3b01 	strb.w	r3, [r5], #1
 8015942:	e7de      	b.n	8015902 <_scanf_i+0x10e>
 8015944:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8015948:	4631      	mov	r1, r6
 801594a:	4650      	mov	r0, sl
 801594c:	4798      	blx	r3
 801594e:	2800      	cmp	r0, #0
 8015950:	d0df      	beq.n	8015912 <_scanf_i+0x11e>
 8015952:	6823      	ldr	r3, [r4, #0]
 8015954:	05d9      	lsls	r1, r3, #23
 8015956:	d50d      	bpl.n	8015974 <_scanf_i+0x180>
 8015958:	42bd      	cmp	r5, r7
 801595a:	d909      	bls.n	8015970 <_scanf_i+0x17c>
 801595c:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8015960:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8015964:	4632      	mov	r2, r6
 8015966:	4650      	mov	r0, sl
 8015968:	4798      	blx	r3
 801596a:	f105 39ff 	add.w	r9, r5, #4294967295
 801596e:	464d      	mov	r5, r9
 8015970:	42bd      	cmp	r5, r7
 8015972:	d028      	beq.n	80159c6 <_scanf_i+0x1d2>
 8015974:	6822      	ldr	r2, [r4, #0]
 8015976:	f012 0210 	ands.w	r2, r2, #16
 801597a:	d113      	bne.n	80159a4 <_scanf_i+0x1b0>
 801597c:	702a      	strb	r2, [r5, #0]
 801597e:	6863      	ldr	r3, [r4, #4]
 8015980:	9e01      	ldr	r6, [sp, #4]
 8015982:	4639      	mov	r1, r7
 8015984:	4650      	mov	r0, sl
 8015986:	47b0      	blx	r6
 8015988:	f8d8 3000 	ldr.w	r3, [r8]
 801598c:	6821      	ldr	r1, [r4, #0]
 801598e:	1d1a      	adds	r2, r3, #4
 8015990:	f8c8 2000 	str.w	r2, [r8]
 8015994:	f011 0f20 	tst.w	r1, #32
 8015998:	681b      	ldr	r3, [r3, #0]
 801599a:	d00f      	beq.n	80159bc <_scanf_i+0x1c8>
 801599c:	6018      	str	r0, [r3, #0]
 801599e:	68e3      	ldr	r3, [r4, #12]
 80159a0:	3301      	adds	r3, #1
 80159a2:	60e3      	str	r3, [r4, #12]
 80159a4:	6923      	ldr	r3, [r4, #16]
 80159a6:	1bed      	subs	r5, r5, r7
 80159a8:	445d      	add	r5, fp
 80159aa:	442b      	add	r3, r5
 80159ac:	6123      	str	r3, [r4, #16]
 80159ae:	2000      	movs	r0, #0
 80159b0:	b007      	add	sp, #28
 80159b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159b6:	f04f 0b00 	mov.w	fp, #0
 80159ba:	e7ca      	b.n	8015952 <_scanf_i+0x15e>
 80159bc:	07ca      	lsls	r2, r1, #31
 80159be:	bf4c      	ite	mi
 80159c0:	8018      	strhmi	r0, [r3, #0]
 80159c2:	6018      	strpl	r0, [r3, #0]
 80159c4:	e7eb      	b.n	801599e <_scanf_i+0x1aa>
 80159c6:	2001      	movs	r0, #1
 80159c8:	e7f2      	b.n	80159b0 <_scanf_i+0x1bc>
 80159ca:	bf00      	nop
 80159cc:	0801677c 	.word	0x0801677c
 80159d0:	08015f9d 	.word	0x08015f9d
 80159d4:	08015eb5 	.word	0x08015eb5
 80159d8:	08016cdd 	.word	0x08016cdd

080159dc <__sflush_r>:
 80159dc:	898a      	ldrh	r2, [r1, #12]
 80159de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80159e2:	4605      	mov	r5, r0
 80159e4:	0710      	lsls	r0, r2, #28
 80159e6:	460c      	mov	r4, r1
 80159e8:	d458      	bmi.n	8015a9c <__sflush_r+0xc0>
 80159ea:	684b      	ldr	r3, [r1, #4]
 80159ec:	2b00      	cmp	r3, #0
 80159ee:	dc05      	bgt.n	80159fc <__sflush_r+0x20>
 80159f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80159f2:	2b00      	cmp	r3, #0
 80159f4:	dc02      	bgt.n	80159fc <__sflush_r+0x20>
 80159f6:	2000      	movs	r0, #0
 80159f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80159fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80159fe:	2e00      	cmp	r6, #0
 8015a00:	d0f9      	beq.n	80159f6 <__sflush_r+0x1a>
 8015a02:	2300      	movs	r3, #0
 8015a04:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8015a08:	682f      	ldr	r7, [r5, #0]
 8015a0a:	6a21      	ldr	r1, [r4, #32]
 8015a0c:	602b      	str	r3, [r5, #0]
 8015a0e:	d032      	beq.n	8015a76 <__sflush_r+0x9a>
 8015a10:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8015a12:	89a3      	ldrh	r3, [r4, #12]
 8015a14:	075a      	lsls	r2, r3, #29
 8015a16:	d505      	bpl.n	8015a24 <__sflush_r+0x48>
 8015a18:	6863      	ldr	r3, [r4, #4]
 8015a1a:	1ac0      	subs	r0, r0, r3
 8015a1c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8015a1e:	b10b      	cbz	r3, 8015a24 <__sflush_r+0x48>
 8015a20:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8015a22:	1ac0      	subs	r0, r0, r3
 8015a24:	2300      	movs	r3, #0
 8015a26:	4602      	mov	r2, r0
 8015a28:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8015a2a:	6a21      	ldr	r1, [r4, #32]
 8015a2c:	4628      	mov	r0, r5
 8015a2e:	47b0      	blx	r6
 8015a30:	1c43      	adds	r3, r0, #1
 8015a32:	89a3      	ldrh	r3, [r4, #12]
 8015a34:	d106      	bne.n	8015a44 <__sflush_r+0x68>
 8015a36:	6829      	ldr	r1, [r5, #0]
 8015a38:	291d      	cmp	r1, #29
 8015a3a:	d82b      	bhi.n	8015a94 <__sflush_r+0xb8>
 8015a3c:	4a29      	ldr	r2, [pc, #164]	; (8015ae4 <__sflush_r+0x108>)
 8015a3e:	410a      	asrs	r2, r1
 8015a40:	07d6      	lsls	r6, r2, #31
 8015a42:	d427      	bmi.n	8015a94 <__sflush_r+0xb8>
 8015a44:	2200      	movs	r2, #0
 8015a46:	6062      	str	r2, [r4, #4]
 8015a48:	04d9      	lsls	r1, r3, #19
 8015a4a:	6922      	ldr	r2, [r4, #16]
 8015a4c:	6022      	str	r2, [r4, #0]
 8015a4e:	d504      	bpl.n	8015a5a <__sflush_r+0x7e>
 8015a50:	1c42      	adds	r2, r0, #1
 8015a52:	d101      	bne.n	8015a58 <__sflush_r+0x7c>
 8015a54:	682b      	ldr	r3, [r5, #0]
 8015a56:	b903      	cbnz	r3, 8015a5a <__sflush_r+0x7e>
 8015a58:	6560      	str	r0, [r4, #84]	; 0x54
 8015a5a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8015a5c:	602f      	str	r7, [r5, #0]
 8015a5e:	2900      	cmp	r1, #0
 8015a60:	d0c9      	beq.n	80159f6 <__sflush_r+0x1a>
 8015a62:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8015a66:	4299      	cmp	r1, r3
 8015a68:	d002      	beq.n	8015a70 <__sflush_r+0x94>
 8015a6a:	4628      	mov	r0, r5
 8015a6c:	f7fe f982 	bl	8013d74 <_free_r>
 8015a70:	2000      	movs	r0, #0
 8015a72:	6360      	str	r0, [r4, #52]	; 0x34
 8015a74:	e7c0      	b.n	80159f8 <__sflush_r+0x1c>
 8015a76:	2301      	movs	r3, #1
 8015a78:	4628      	mov	r0, r5
 8015a7a:	47b0      	blx	r6
 8015a7c:	1c41      	adds	r1, r0, #1
 8015a7e:	d1c8      	bne.n	8015a12 <__sflush_r+0x36>
 8015a80:	682b      	ldr	r3, [r5, #0]
 8015a82:	2b00      	cmp	r3, #0
 8015a84:	d0c5      	beq.n	8015a12 <__sflush_r+0x36>
 8015a86:	2b1d      	cmp	r3, #29
 8015a88:	d001      	beq.n	8015a8e <__sflush_r+0xb2>
 8015a8a:	2b16      	cmp	r3, #22
 8015a8c:	d101      	bne.n	8015a92 <__sflush_r+0xb6>
 8015a8e:	602f      	str	r7, [r5, #0]
 8015a90:	e7b1      	b.n	80159f6 <__sflush_r+0x1a>
 8015a92:	89a3      	ldrh	r3, [r4, #12]
 8015a94:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8015a98:	81a3      	strh	r3, [r4, #12]
 8015a9a:	e7ad      	b.n	80159f8 <__sflush_r+0x1c>
 8015a9c:	690f      	ldr	r7, [r1, #16]
 8015a9e:	2f00      	cmp	r7, #0
 8015aa0:	d0a9      	beq.n	80159f6 <__sflush_r+0x1a>
 8015aa2:	0793      	lsls	r3, r2, #30
 8015aa4:	680e      	ldr	r6, [r1, #0]
 8015aa6:	bf08      	it	eq
 8015aa8:	694b      	ldreq	r3, [r1, #20]
 8015aaa:	600f      	str	r7, [r1, #0]
 8015aac:	bf18      	it	ne
 8015aae:	2300      	movne	r3, #0
 8015ab0:	eba6 0807 	sub.w	r8, r6, r7
 8015ab4:	608b      	str	r3, [r1, #8]
 8015ab6:	f1b8 0f00 	cmp.w	r8, #0
 8015aba:	dd9c      	ble.n	80159f6 <__sflush_r+0x1a>
 8015abc:	6a21      	ldr	r1, [r4, #32]
 8015abe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8015ac0:	4643      	mov	r3, r8
 8015ac2:	463a      	mov	r2, r7
 8015ac4:	4628      	mov	r0, r5
 8015ac6:	47b0      	blx	r6
 8015ac8:	2800      	cmp	r0, #0
 8015aca:	dc06      	bgt.n	8015ada <__sflush_r+0xfe>
 8015acc:	89a3      	ldrh	r3, [r4, #12]
 8015ace:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8015ad2:	81a3      	strh	r3, [r4, #12]
 8015ad4:	f04f 30ff 	mov.w	r0, #4294967295
 8015ad8:	e78e      	b.n	80159f8 <__sflush_r+0x1c>
 8015ada:	4407      	add	r7, r0
 8015adc:	eba8 0800 	sub.w	r8, r8, r0
 8015ae0:	e7e9      	b.n	8015ab6 <__sflush_r+0xda>
 8015ae2:	bf00      	nop
 8015ae4:	dfbffffe 	.word	0xdfbffffe

08015ae8 <_fflush_r>:
 8015ae8:	b538      	push	{r3, r4, r5, lr}
 8015aea:	690b      	ldr	r3, [r1, #16]
 8015aec:	4605      	mov	r5, r0
 8015aee:	460c      	mov	r4, r1
 8015af0:	b913      	cbnz	r3, 8015af8 <_fflush_r+0x10>
 8015af2:	2500      	movs	r5, #0
 8015af4:	4628      	mov	r0, r5
 8015af6:	bd38      	pop	{r3, r4, r5, pc}
 8015af8:	b118      	cbz	r0, 8015b02 <_fflush_r+0x1a>
 8015afa:	6a03      	ldr	r3, [r0, #32]
 8015afc:	b90b      	cbnz	r3, 8015b02 <_fflush_r+0x1a>
 8015afe:	f7fd f82d 	bl	8012b5c <__sinit>
 8015b02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8015b06:	2b00      	cmp	r3, #0
 8015b08:	d0f3      	beq.n	8015af2 <_fflush_r+0xa>
 8015b0a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8015b0c:	07d0      	lsls	r0, r2, #31
 8015b0e:	d404      	bmi.n	8015b1a <_fflush_r+0x32>
 8015b10:	0599      	lsls	r1, r3, #22
 8015b12:	d402      	bmi.n	8015b1a <_fflush_r+0x32>
 8015b14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8015b16:	f7fd fa92 	bl	801303e <__retarget_lock_acquire_recursive>
 8015b1a:	4628      	mov	r0, r5
 8015b1c:	4621      	mov	r1, r4
 8015b1e:	f7ff ff5d 	bl	80159dc <__sflush_r>
 8015b22:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8015b24:	07da      	lsls	r2, r3, #31
 8015b26:	4605      	mov	r5, r0
 8015b28:	d4e4      	bmi.n	8015af4 <_fflush_r+0xc>
 8015b2a:	89a3      	ldrh	r3, [r4, #12]
 8015b2c:	059b      	lsls	r3, r3, #22
 8015b2e:	d4e1      	bmi.n	8015af4 <_fflush_r+0xc>
 8015b30:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8015b32:	f7fd fa85 	bl	8013040 <__retarget_lock_release_recursive>
 8015b36:	e7dd      	b.n	8015af4 <_fflush_r+0xc>

08015b38 <__sccl>:
 8015b38:	b570      	push	{r4, r5, r6, lr}
 8015b3a:	780b      	ldrb	r3, [r1, #0]
 8015b3c:	4604      	mov	r4, r0
 8015b3e:	2b5e      	cmp	r3, #94	; 0x5e
 8015b40:	bf0b      	itete	eq
 8015b42:	784b      	ldrbeq	r3, [r1, #1]
 8015b44:	1c4a      	addne	r2, r1, #1
 8015b46:	1c8a      	addeq	r2, r1, #2
 8015b48:	2100      	movne	r1, #0
 8015b4a:	bf08      	it	eq
 8015b4c:	2101      	moveq	r1, #1
 8015b4e:	3801      	subs	r0, #1
 8015b50:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8015b54:	f800 1f01 	strb.w	r1, [r0, #1]!
 8015b58:	42a8      	cmp	r0, r5
 8015b5a:	d1fb      	bne.n	8015b54 <__sccl+0x1c>
 8015b5c:	b90b      	cbnz	r3, 8015b62 <__sccl+0x2a>
 8015b5e:	1e50      	subs	r0, r2, #1
 8015b60:	bd70      	pop	{r4, r5, r6, pc}
 8015b62:	f081 0101 	eor.w	r1, r1, #1
 8015b66:	54e1      	strb	r1, [r4, r3]
 8015b68:	4610      	mov	r0, r2
 8015b6a:	4602      	mov	r2, r0
 8015b6c:	f812 5b01 	ldrb.w	r5, [r2], #1
 8015b70:	2d2d      	cmp	r5, #45	; 0x2d
 8015b72:	d005      	beq.n	8015b80 <__sccl+0x48>
 8015b74:	2d5d      	cmp	r5, #93	; 0x5d
 8015b76:	d016      	beq.n	8015ba6 <__sccl+0x6e>
 8015b78:	2d00      	cmp	r5, #0
 8015b7a:	d0f1      	beq.n	8015b60 <__sccl+0x28>
 8015b7c:	462b      	mov	r3, r5
 8015b7e:	e7f2      	b.n	8015b66 <__sccl+0x2e>
 8015b80:	7846      	ldrb	r6, [r0, #1]
 8015b82:	2e5d      	cmp	r6, #93	; 0x5d
 8015b84:	d0fa      	beq.n	8015b7c <__sccl+0x44>
 8015b86:	42b3      	cmp	r3, r6
 8015b88:	dcf8      	bgt.n	8015b7c <__sccl+0x44>
 8015b8a:	3002      	adds	r0, #2
 8015b8c:	461a      	mov	r2, r3
 8015b8e:	3201      	adds	r2, #1
 8015b90:	4296      	cmp	r6, r2
 8015b92:	54a1      	strb	r1, [r4, r2]
 8015b94:	dcfb      	bgt.n	8015b8e <__sccl+0x56>
 8015b96:	1af2      	subs	r2, r6, r3
 8015b98:	3a01      	subs	r2, #1
 8015b9a:	1c5d      	adds	r5, r3, #1
 8015b9c:	42b3      	cmp	r3, r6
 8015b9e:	bfa8      	it	ge
 8015ba0:	2200      	movge	r2, #0
 8015ba2:	18ab      	adds	r3, r5, r2
 8015ba4:	e7e1      	b.n	8015b6a <__sccl+0x32>
 8015ba6:	4610      	mov	r0, r2
 8015ba8:	e7da      	b.n	8015b60 <__sccl+0x28>

08015baa <__submore>:
 8015baa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015bae:	460c      	mov	r4, r1
 8015bb0:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8015bb2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8015bb6:	4299      	cmp	r1, r3
 8015bb8:	d11d      	bne.n	8015bf6 <__submore+0x4c>
 8015bba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8015bbe:	f7fb fbff 	bl	80113c0 <_malloc_r>
 8015bc2:	b918      	cbnz	r0, 8015bcc <__submore+0x22>
 8015bc4:	f04f 30ff 	mov.w	r0, #4294967295
 8015bc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015bcc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8015bd0:	63a3      	str	r3, [r4, #56]	; 0x38
 8015bd2:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8015bd6:	6360      	str	r0, [r4, #52]	; 0x34
 8015bd8:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 8015bdc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8015be0:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 8015be4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8015be8:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 8015bec:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 8015bf0:	6020      	str	r0, [r4, #0]
 8015bf2:	2000      	movs	r0, #0
 8015bf4:	e7e8      	b.n	8015bc8 <__submore+0x1e>
 8015bf6:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8015bf8:	0077      	lsls	r7, r6, #1
 8015bfa:	463a      	mov	r2, r7
 8015bfc:	f7fb fc74 	bl	80114e8 <_realloc_r>
 8015c00:	4605      	mov	r5, r0
 8015c02:	2800      	cmp	r0, #0
 8015c04:	d0de      	beq.n	8015bc4 <__submore+0x1a>
 8015c06:	eb00 0806 	add.w	r8, r0, r6
 8015c0a:	4601      	mov	r1, r0
 8015c0c:	4632      	mov	r2, r6
 8015c0e:	4640      	mov	r0, r8
 8015c10:	f7fd fa1f 	bl	8013052 <memcpy>
 8015c14:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 8015c18:	f8c4 8000 	str.w	r8, [r4]
 8015c1c:	e7e9      	b.n	8015bf2 <__submore+0x48>

08015c1e <__swbuf_r>:
 8015c1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c20:	460e      	mov	r6, r1
 8015c22:	4614      	mov	r4, r2
 8015c24:	4605      	mov	r5, r0
 8015c26:	b118      	cbz	r0, 8015c30 <__swbuf_r+0x12>
 8015c28:	6a03      	ldr	r3, [r0, #32]
 8015c2a:	b90b      	cbnz	r3, 8015c30 <__swbuf_r+0x12>
 8015c2c:	f7fc ff96 	bl	8012b5c <__sinit>
 8015c30:	69a3      	ldr	r3, [r4, #24]
 8015c32:	60a3      	str	r3, [r4, #8]
 8015c34:	89a3      	ldrh	r3, [r4, #12]
 8015c36:	071a      	lsls	r2, r3, #28
 8015c38:	d525      	bpl.n	8015c86 <__swbuf_r+0x68>
 8015c3a:	6923      	ldr	r3, [r4, #16]
 8015c3c:	b31b      	cbz	r3, 8015c86 <__swbuf_r+0x68>
 8015c3e:	6823      	ldr	r3, [r4, #0]
 8015c40:	6922      	ldr	r2, [r4, #16]
 8015c42:	1a98      	subs	r0, r3, r2
 8015c44:	6963      	ldr	r3, [r4, #20]
 8015c46:	b2f6      	uxtb	r6, r6
 8015c48:	4283      	cmp	r3, r0
 8015c4a:	4637      	mov	r7, r6
 8015c4c:	dc04      	bgt.n	8015c58 <__swbuf_r+0x3a>
 8015c4e:	4621      	mov	r1, r4
 8015c50:	4628      	mov	r0, r5
 8015c52:	f7ff ff49 	bl	8015ae8 <_fflush_r>
 8015c56:	b9e0      	cbnz	r0, 8015c92 <__swbuf_r+0x74>
 8015c58:	68a3      	ldr	r3, [r4, #8]
 8015c5a:	3b01      	subs	r3, #1
 8015c5c:	60a3      	str	r3, [r4, #8]
 8015c5e:	6823      	ldr	r3, [r4, #0]
 8015c60:	1c5a      	adds	r2, r3, #1
 8015c62:	6022      	str	r2, [r4, #0]
 8015c64:	701e      	strb	r6, [r3, #0]
 8015c66:	6962      	ldr	r2, [r4, #20]
 8015c68:	1c43      	adds	r3, r0, #1
 8015c6a:	429a      	cmp	r2, r3
 8015c6c:	d004      	beq.n	8015c78 <__swbuf_r+0x5a>
 8015c6e:	89a3      	ldrh	r3, [r4, #12]
 8015c70:	07db      	lsls	r3, r3, #31
 8015c72:	d506      	bpl.n	8015c82 <__swbuf_r+0x64>
 8015c74:	2e0a      	cmp	r6, #10
 8015c76:	d104      	bne.n	8015c82 <__swbuf_r+0x64>
 8015c78:	4621      	mov	r1, r4
 8015c7a:	4628      	mov	r0, r5
 8015c7c:	f7ff ff34 	bl	8015ae8 <_fflush_r>
 8015c80:	b938      	cbnz	r0, 8015c92 <__swbuf_r+0x74>
 8015c82:	4638      	mov	r0, r7
 8015c84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015c86:	4621      	mov	r1, r4
 8015c88:	4628      	mov	r0, r5
 8015c8a:	f000 f805 	bl	8015c98 <__swsetup_r>
 8015c8e:	2800      	cmp	r0, #0
 8015c90:	d0d5      	beq.n	8015c3e <__swbuf_r+0x20>
 8015c92:	f04f 37ff 	mov.w	r7, #4294967295
 8015c96:	e7f4      	b.n	8015c82 <__swbuf_r+0x64>

08015c98 <__swsetup_r>:
 8015c98:	b538      	push	{r3, r4, r5, lr}
 8015c9a:	4b2a      	ldr	r3, [pc, #168]	; (8015d44 <__swsetup_r+0xac>)
 8015c9c:	4605      	mov	r5, r0
 8015c9e:	6818      	ldr	r0, [r3, #0]
 8015ca0:	460c      	mov	r4, r1
 8015ca2:	b118      	cbz	r0, 8015cac <__swsetup_r+0x14>
 8015ca4:	6a03      	ldr	r3, [r0, #32]
 8015ca6:	b90b      	cbnz	r3, 8015cac <__swsetup_r+0x14>
 8015ca8:	f7fc ff58 	bl	8012b5c <__sinit>
 8015cac:	89a3      	ldrh	r3, [r4, #12]
 8015cae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8015cb2:	0718      	lsls	r0, r3, #28
 8015cb4:	d422      	bmi.n	8015cfc <__swsetup_r+0x64>
 8015cb6:	06d9      	lsls	r1, r3, #27
 8015cb8:	d407      	bmi.n	8015cca <__swsetup_r+0x32>
 8015cba:	2309      	movs	r3, #9
 8015cbc:	602b      	str	r3, [r5, #0]
 8015cbe:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8015cc2:	81a3      	strh	r3, [r4, #12]
 8015cc4:	f04f 30ff 	mov.w	r0, #4294967295
 8015cc8:	e034      	b.n	8015d34 <__swsetup_r+0x9c>
 8015cca:	0758      	lsls	r0, r3, #29
 8015ccc:	d512      	bpl.n	8015cf4 <__swsetup_r+0x5c>
 8015cce:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8015cd0:	b141      	cbz	r1, 8015ce4 <__swsetup_r+0x4c>
 8015cd2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8015cd6:	4299      	cmp	r1, r3
 8015cd8:	d002      	beq.n	8015ce0 <__swsetup_r+0x48>
 8015cda:	4628      	mov	r0, r5
 8015cdc:	f7fe f84a 	bl	8013d74 <_free_r>
 8015ce0:	2300      	movs	r3, #0
 8015ce2:	6363      	str	r3, [r4, #52]	; 0x34
 8015ce4:	89a3      	ldrh	r3, [r4, #12]
 8015ce6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8015cea:	81a3      	strh	r3, [r4, #12]
 8015cec:	2300      	movs	r3, #0
 8015cee:	6063      	str	r3, [r4, #4]
 8015cf0:	6923      	ldr	r3, [r4, #16]
 8015cf2:	6023      	str	r3, [r4, #0]
 8015cf4:	89a3      	ldrh	r3, [r4, #12]
 8015cf6:	f043 0308 	orr.w	r3, r3, #8
 8015cfa:	81a3      	strh	r3, [r4, #12]
 8015cfc:	6923      	ldr	r3, [r4, #16]
 8015cfe:	b94b      	cbnz	r3, 8015d14 <__swsetup_r+0x7c>
 8015d00:	89a3      	ldrh	r3, [r4, #12]
 8015d02:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8015d06:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8015d0a:	d003      	beq.n	8015d14 <__swsetup_r+0x7c>
 8015d0c:	4621      	mov	r1, r4
 8015d0e:	4628      	mov	r0, r5
 8015d10:	f000 f96c 	bl	8015fec <__smakebuf_r>
 8015d14:	89a0      	ldrh	r0, [r4, #12]
 8015d16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8015d1a:	f010 0301 	ands.w	r3, r0, #1
 8015d1e:	d00a      	beq.n	8015d36 <__swsetup_r+0x9e>
 8015d20:	2300      	movs	r3, #0
 8015d22:	60a3      	str	r3, [r4, #8]
 8015d24:	6963      	ldr	r3, [r4, #20]
 8015d26:	425b      	negs	r3, r3
 8015d28:	61a3      	str	r3, [r4, #24]
 8015d2a:	6923      	ldr	r3, [r4, #16]
 8015d2c:	b943      	cbnz	r3, 8015d40 <__swsetup_r+0xa8>
 8015d2e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8015d32:	d1c4      	bne.n	8015cbe <__swsetup_r+0x26>
 8015d34:	bd38      	pop	{r3, r4, r5, pc}
 8015d36:	0781      	lsls	r1, r0, #30
 8015d38:	bf58      	it	pl
 8015d3a:	6963      	ldrpl	r3, [r4, #20]
 8015d3c:	60a3      	str	r3, [r4, #8]
 8015d3e:	e7f4      	b.n	8015d2a <__swsetup_r+0x92>
 8015d40:	2000      	movs	r0, #0
 8015d42:	e7f7      	b.n	8015d34 <__swsetup_r+0x9c>
 8015d44:	20000228 	.word	0x20000228

08015d48 <__assert_func>:
 8015d48:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015d4a:	4614      	mov	r4, r2
 8015d4c:	461a      	mov	r2, r3
 8015d4e:	4b09      	ldr	r3, [pc, #36]	; (8015d74 <__assert_func+0x2c>)
 8015d50:	681b      	ldr	r3, [r3, #0]
 8015d52:	4605      	mov	r5, r0
 8015d54:	68d8      	ldr	r0, [r3, #12]
 8015d56:	b14c      	cbz	r4, 8015d6c <__assert_func+0x24>
 8015d58:	4b07      	ldr	r3, [pc, #28]	; (8015d78 <__assert_func+0x30>)
 8015d5a:	9100      	str	r1, [sp, #0]
 8015d5c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8015d60:	4906      	ldr	r1, [pc, #24]	; (8015d7c <__assert_func+0x34>)
 8015d62:	462b      	mov	r3, r5
 8015d64:	f7fc ff12 	bl	8012b8c <fiprintf>
 8015d68:	f7fb faf2 	bl	8011350 <abort>
 8015d6c:	4b04      	ldr	r3, [pc, #16]	; (8015d80 <__assert_func+0x38>)
 8015d6e:	461c      	mov	r4, r3
 8015d70:	e7f3      	b.n	8015d5a <__assert_func+0x12>
 8015d72:	bf00      	nop
 8015d74:	20000228 	.word	0x20000228
 8015d78:	08016ce8 	.word	0x08016ce8
 8015d7c:	08016cf5 	.word	0x08016cf5
 8015d80:	08016d23 	.word	0x08016d23

08015d84 <_calloc_r>:
 8015d84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015d86:	fba1 2402 	umull	r2, r4, r1, r2
 8015d8a:	b94c      	cbnz	r4, 8015da0 <_calloc_r+0x1c>
 8015d8c:	4611      	mov	r1, r2
 8015d8e:	9201      	str	r2, [sp, #4]
 8015d90:	f7fb fb16 	bl	80113c0 <_malloc_r>
 8015d94:	9a01      	ldr	r2, [sp, #4]
 8015d96:	4605      	mov	r5, r0
 8015d98:	b930      	cbnz	r0, 8015da8 <_calloc_r+0x24>
 8015d9a:	4628      	mov	r0, r5
 8015d9c:	b003      	add	sp, #12
 8015d9e:	bd30      	pop	{r4, r5, pc}
 8015da0:	220c      	movs	r2, #12
 8015da2:	6002      	str	r2, [r0, #0]
 8015da4:	2500      	movs	r5, #0
 8015da6:	e7f8      	b.n	8015d9a <_calloc_r+0x16>
 8015da8:	4621      	mov	r1, r4
 8015daa:	f7fd f847 	bl	8012e3c <memset>
 8015dae:	e7f4      	b.n	8015d9a <_calloc_r+0x16>

08015db0 <_strtol_l.constprop.0>:
 8015db0:	2b01      	cmp	r3, #1
 8015db2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015db6:	d001      	beq.n	8015dbc <_strtol_l.constprop.0+0xc>
 8015db8:	2b24      	cmp	r3, #36	; 0x24
 8015dba:	d906      	bls.n	8015dca <_strtol_l.constprop.0+0x1a>
 8015dbc:	f7fd f914 	bl	8012fe8 <__errno>
 8015dc0:	2316      	movs	r3, #22
 8015dc2:	6003      	str	r3, [r0, #0]
 8015dc4:	2000      	movs	r0, #0
 8015dc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015dca:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8015eb0 <_strtol_l.constprop.0+0x100>
 8015dce:	460d      	mov	r5, r1
 8015dd0:	462e      	mov	r6, r5
 8015dd2:	f815 4b01 	ldrb.w	r4, [r5], #1
 8015dd6:	f81c 7004 	ldrb.w	r7, [ip, r4]
 8015dda:	f017 0708 	ands.w	r7, r7, #8
 8015dde:	d1f7      	bne.n	8015dd0 <_strtol_l.constprop.0+0x20>
 8015de0:	2c2d      	cmp	r4, #45	; 0x2d
 8015de2:	d132      	bne.n	8015e4a <_strtol_l.constprop.0+0x9a>
 8015de4:	782c      	ldrb	r4, [r5, #0]
 8015de6:	2701      	movs	r7, #1
 8015de8:	1cb5      	adds	r5, r6, #2
 8015dea:	2b00      	cmp	r3, #0
 8015dec:	d05b      	beq.n	8015ea6 <_strtol_l.constprop.0+0xf6>
 8015dee:	2b10      	cmp	r3, #16
 8015df0:	d109      	bne.n	8015e06 <_strtol_l.constprop.0+0x56>
 8015df2:	2c30      	cmp	r4, #48	; 0x30
 8015df4:	d107      	bne.n	8015e06 <_strtol_l.constprop.0+0x56>
 8015df6:	782c      	ldrb	r4, [r5, #0]
 8015df8:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8015dfc:	2c58      	cmp	r4, #88	; 0x58
 8015dfe:	d14d      	bne.n	8015e9c <_strtol_l.constprop.0+0xec>
 8015e00:	786c      	ldrb	r4, [r5, #1]
 8015e02:	2310      	movs	r3, #16
 8015e04:	3502      	adds	r5, #2
 8015e06:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8015e0a:	f108 38ff 	add.w	r8, r8, #4294967295
 8015e0e:	f04f 0e00 	mov.w	lr, #0
 8015e12:	fbb8 f9f3 	udiv	r9, r8, r3
 8015e16:	4676      	mov	r6, lr
 8015e18:	fb03 8a19 	mls	sl, r3, r9, r8
 8015e1c:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8015e20:	f1bc 0f09 	cmp.w	ip, #9
 8015e24:	d816      	bhi.n	8015e54 <_strtol_l.constprop.0+0xa4>
 8015e26:	4664      	mov	r4, ip
 8015e28:	42a3      	cmp	r3, r4
 8015e2a:	dd24      	ble.n	8015e76 <_strtol_l.constprop.0+0xc6>
 8015e2c:	f1be 3fff 	cmp.w	lr, #4294967295
 8015e30:	d008      	beq.n	8015e44 <_strtol_l.constprop.0+0x94>
 8015e32:	45b1      	cmp	r9, r6
 8015e34:	d31c      	bcc.n	8015e70 <_strtol_l.constprop.0+0xc0>
 8015e36:	d101      	bne.n	8015e3c <_strtol_l.constprop.0+0x8c>
 8015e38:	45a2      	cmp	sl, r4
 8015e3a:	db19      	blt.n	8015e70 <_strtol_l.constprop.0+0xc0>
 8015e3c:	fb06 4603 	mla	r6, r6, r3, r4
 8015e40:	f04f 0e01 	mov.w	lr, #1
 8015e44:	f815 4b01 	ldrb.w	r4, [r5], #1
 8015e48:	e7e8      	b.n	8015e1c <_strtol_l.constprop.0+0x6c>
 8015e4a:	2c2b      	cmp	r4, #43	; 0x2b
 8015e4c:	bf04      	itt	eq
 8015e4e:	782c      	ldrbeq	r4, [r5, #0]
 8015e50:	1cb5      	addeq	r5, r6, #2
 8015e52:	e7ca      	b.n	8015dea <_strtol_l.constprop.0+0x3a>
 8015e54:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8015e58:	f1bc 0f19 	cmp.w	ip, #25
 8015e5c:	d801      	bhi.n	8015e62 <_strtol_l.constprop.0+0xb2>
 8015e5e:	3c37      	subs	r4, #55	; 0x37
 8015e60:	e7e2      	b.n	8015e28 <_strtol_l.constprop.0+0x78>
 8015e62:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8015e66:	f1bc 0f19 	cmp.w	ip, #25
 8015e6a:	d804      	bhi.n	8015e76 <_strtol_l.constprop.0+0xc6>
 8015e6c:	3c57      	subs	r4, #87	; 0x57
 8015e6e:	e7db      	b.n	8015e28 <_strtol_l.constprop.0+0x78>
 8015e70:	f04f 3eff 	mov.w	lr, #4294967295
 8015e74:	e7e6      	b.n	8015e44 <_strtol_l.constprop.0+0x94>
 8015e76:	f1be 3fff 	cmp.w	lr, #4294967295
 8015e7a:	d105      	bne.n	8015e88 <_strtol_l.constprop.0+0xd8>
 8015e7c:	2322      	movs	r3, #34	; 0x22
 8015e7e:	6003      	str	r3, [r0, #0]
 8015e80:	4646      	mov	r6, r8
 8015e82:	b942      	cbnz	r2, 8015e96 <_strtol_l.constprop.0+0xe6>
 8015e84:	4630      	mov	r0, r6
 8015e86:	e79e      	b.n	8015dc6 <_strtol_l.constprop.0+0x16>
 8015e88:	b107      	cbz	r7, 8015e8c <_strtol_l.constprop.0+0xdc>
 8015e8a:	4276      	negs	r6, r6
 8015e8c:	2a00      	cmp	r2, #0
 8015e8e:	d0f9      	beq.n	8015e84 <_strtol_l.constprop.0+0xd4>
 8015e90:	f1be 0f00 	cmp.w	lr, #0
 8015e94:	d000      	beq.n	8015e98 <_strtol_l.constprop.0+0xe8>
 8015e96:	1e69      	subs	r1, r5, #1
 8015e98:	6011      	str	r1, [r2, #0]
 8015e9a:	e7f3      	b.n	8015e84 <_strtol_l.constprop.0+0xd4>
 8015e9c:	2430      	movs	r4, #48	; 0x30
 8015e9e:	2b00      	cmp	r3, #0
 8015ea0:	d1b1      	bne.n	8015e06 <_strtol_l.constprop.0+0x56>
 8015ea2:	2308      	movs	r3, #8
 8015ea4:	e7af      	b.n	8015e06 <_strtol_l.constprop.0+0x56>
 8015ea6:	2c30      	cmp	r4, #48	; 0x30
 8015ea8:	d0a5      	beq.n	8015df6 <_strtol_l.constprop.0+0x46>
 8015eaa:	230a      	movs	r3, #10
 8015eac:	e7ab      	b.n	8015e06 <_strtol_l.constprop.0+0x56>
 8015eae:	bf00      	nop
 8015eb0:	08016939 	.word	0x08016939

08015eb4 <_strtol_r>:
 8015eb4:	f7ff bf7c 	b.w	8015db0 <_strtol_l.constprop.0>

08015eb8 <_strtoul_l.constprop.0>:
 8015eb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015ebc:	4f36      	ldr	r7, [pc, #216]	; (8015f98 <_strtoul_l.constprop.0+0xe0>)
 8015ebe:	4686      	mov	lr, r0
 8015ec0:	460d      	mov	r5, r1
 8015ec2:	4628      	mov	r0, r5
 8015ec4:	f815 4b01 	ldrb.w	r4, [r5], #1
 8015ec8:	5d3e      	ldrb	r6, [r7, r4]
 8015eca:	f016 0608 	ands.w	r6, r6, #8
 8015ece:	d1f8      	bne.n	8015ec2 <_strtoul_l.constprop.0+0xa>
 8015ed0:	2c2d      	cmp	r4, #45	; 0x2d
 8015ed2:	d130      	bne.n	8015f36 <_strtoul_l.constprop.0+0x7e>
 8015ed4:	782c      	ldrb	r4, [r5, #0]
 8015ed6:	2601      	movs	r6, #1
 8015ed8:	1c85      	adds	r5, r0, #2
 8015eda:	2b00      	cmp	r3, #0
 8015edc:	d057      	beq.n	8015f8e <_strtoul_l.constprop.0+0xd6>
 8015ede:	2b10      	cmp	r3, #16
 8015ee0:	d109      	bne.n	8015ef6 <_strtoul_l.constprop.0+0x3e>
 8015ee2:	2c30      	cmp	r4, #48	; 0x30
 8015ee4:	d107      	bne.n	8015ef6 <_strtoul_l.constprop.0+0x3e>
 8015ee6:	7828      	ldrb	r0, [r5, #0]
 8015ee8:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8015eec:	2858      	cmp	r0, #88	; 0x58
 8015eee:	d149      	bne.n	8015f84 <_strtoul_l.constprop.0+0xcc>
 8015ef0:	786c      	ldrb	r4, [r5, #1]
 8015ef2:	2310      	movs	r3, #16
 8015ef4:	3502      	adds	r5, #2
 8015ef6:	f04f 38ff 	mov.w	r8, #4294967295
 8015efa:	2700      	movs	r7, #0
 8015efc:	fbb8 f8f3 	udiv	r8, r8, r3
 8015f00:	fb03 f908 	mul.w	r9, r3, r8
 8015f04:	ea6f 0909 	mvn.w	r9, r9
 8015f08:	4638      	mov	r0, r7
 8015f0a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8015f0e:	f1bc 0f09 	cmp.w	ip, #9
 8015f12:	d815      	bhi.n	8015f40 <_strtoul_l.constprop.0+0x88>
 8015f14:	4664      	mov	r4, ip
 8015f16:	42a3      	cmp	r3, r4
 8015f18:	dd23      	ble.n	8015f62 <_strtoul_l.constprop.0+0xaa>
 8015f1a:	f1b7 3fff 	cmp.w	r7, #4294967295
 8015f1e:	d007      	beq.n	8015f30 <_strtoul_l.constprop.0+0x78>
 8015f20:	4580      	cmp	r8, r0
 8015f22:	d31b      	bcc.n	8015f5c <_strtoul_l.constprop.0+0xa4>
 8015f24:	d101      	bne.n	8015f2a <_strtoul_l.constprop.0+0x72>
 8015f26:	45a1      	cmp	r9, r4
 8015f28:	db18      	blt.n	8015f5c <_strtoul_l.constprop.0+0xa4>
 8015f2a:	fb00 4003 	mla	r0, r0, r3, r4
 8015f2e:	2701      	movs	r7, #1
 8015f30:	f815 4b01 	ldrb.w	r4, [r5], #1
 8015f34:	e7e9      	b.n	8015f0a <_strtoul_l.constprop.0+0x52>
 8015f36:	2c2b      	cmp	r4, #43	; 0x2b
 8015f38:	bf04      	itt	eq
 8015f3a:	782c      	ldrbeq	r4, [r5, #0]
 8015f3c:	1c85      	addeq	r5, r0, #2
 8015f3e:	e7cc      	b.n	8015eda <_strtoul_l.constprop.0+0x22>
 8015f40:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8015f44:	f1bc 0f19 	cmp.w	ip, #25
 8015f48:	d801      	bhi.n	8015f4e <_strtoul_l.constprop.0+0x96>
 8015f4a:	3c37      	subs	r4, #55	; 0x37
 8015f4c:	e7e3      	b.n	8015f16 <_strtoul_l.constprop.0+0x5e>
 8015f4e:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8015f52:	f1bc 0f19 	cmp.w	ip, #25
 8015f56:	d804      	bhi.n	8015f62 <_strtoul_l.constprop.0+0xaa>
 8015f58:	3c57      	subs	r4, #87	; 0x57
 8015f5a:	e7dc      	b.n	8015f16 <_strtoul_l.constprop.0+0x5e>
 8015f5c:	f04f 37ff 	mov.w	r7, #4294967295
 8015f60:	e7e6      	b.n	8015f30 <_strtoul_l.constprop.0+0x78>
 8015f62:	1c7b      	adds	r3, r7, #1
 8015f64:	d106      	bne.n	8015f74 <_strtoul_l.constprop.0+0xbc>
 8015f66:	2322      	movs	r3, #34	; 0x22
 8015f68:	f8ce 3000 	str.w	r3, [lr]
 8015f6c:	4638      	mov	r0, r7
 8015f6e:	b932      	cbnz	r2, 8015f7e <_strtoul_l.constprop.0+0xc6>
 8015f70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015f74:	b106      	cbz	r6, 8015f78 <_strtoul_l.constprop.0+0xc0>
 8015f76:	4240      	negs	r0, r0
 8015f78:	2a00      	cmp	r2, #0
 8015f7a:	d0f9      	beq.n	8015f70 <_strtoul_l.constprop.0+0xb8>
 8015f7c:	b107      	cbz	r7, 8015f80 <_strtoul_l.constprop.0+0xc8>
 8015f7e:	1e69      	subs	r1, r5, #1
 8015f80:	6011      	str	r1, [r2, #0]
 8015f82:	e7f5      	b.n	8015f70 <_strtoul_l.constprop.0+0xb8>
 8015f84:	2430      	movs	r4, #48	; 0x30
 8015f86:	2b00      	cmp	r3, #0
 8015f88:	d1b5      	bne.n	8015ef6 <_strtoul_l.constprop.0+0x3e>
 8015f8a:	2308      	movs	r3, #8
 8015f8c:	e7b3      	b.n	8015ef6 <_strtoul_l.constprop.0+0x3e>
 8015f8e:	2c30      	cmp	r4, #48	; 0x30
 8015f90:	d0a9      	beq.n	8015ee6 <_strtoul_l.constprop.0+0x2e>
 8015f92:	230a      	movs	r3, #10
 8015f94:	e7af      	b.n	8015ef6 <_strtoul_l.constprop.0+0x3e>
 8015f96:	bf00      	nop
 8015f98:	08016939 	.word	0x08016939

08015f9c <_strtoul_r>:
 8015f9c:	f7ff bf8c 	b.w	8015eb8 <_strtoul_l.constprop.0>

08015fa0 <__swhatbuf_r>:
 8015fa0:	b570      	push	{r4, r5, r6, lr}
 8015fa2:	460c      	mov	r4, r1
 8015fa4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8015fa8:	2900      	cmp	r1, #0
 8015faa:	b096      	sub	sp, #88	; 0x58
 8015fac:	4615      	mov	r5, r2
 8015fae:	461e      	mov	r6, r3
 8015fb0:	da0d      	bge.n	8015fce <__swhatbuf_r+0x2e>
 8015fb2:	89a3      	ldrh	r3, [r4, #12]
 8015fb4:	f013 0f80 	tst.w	r3, #128	; 0x80
 8015fb8:	f04f 0100 	mov.w	r1, #0
 8015fbc:	bf0c      	ite	eq
 8015fbe:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8015fc2:	2340      	movne	r3, #64	; 0x40
 8015fc4:	2000      	movs	r0, #0
 8015fc6:	6031      	str	r1, [r6, #0]
 8015fc8:	602b      	str	r3, [r5, #0]
 8015fca:	b016      	add	sp, #88	; 0x58
 8015fcc:	bd70      	pop	{r4, r5, r6, pc}
 8015fce:	466a      	mov	r2, sp
 8015fd0:	f000 f848 	bl	8016064 <_fstat_r>
 8015fd4:	2800      	cmp	r0, #0
 8015fd6:	dbec      	blt.n	8015fb2 <__swhatbuf_r+0x12>
 8015fd8:	9901      	ldr	r1, [sp, #4]
 8015fda:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8015fde:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8015fe2:	4259      	negs	r1, r3
 8015fe4:	4159      	adcs	r1, r3
 8015fe6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8015fea:	e7eb      	b.n	8015fc4 <__swhatbuf_r+0x24>

08015fec <__smakebuf_r>:
 8015fec:	898b      	ldrh	r3, [r1, #12]
 8015fee:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015ff0:	079d      	lsls	r5, r3, #30
 8015ff2:	4606      	mov	r6, r0
 8015ff4:	460c      	mov	r4, r1
 8015ff6:	d507      	bpl.n	8016008 <__smakebuf_r+0x1c>
 8015ff8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8015ffc:	6023      	str	r3, [r4, #0]
 8015ffe:	6123      	str	r3, [r4, #16]
 8016000:	2301      	movs	r3, #1
 8016002:	6163      	str	r3, [r4, #20]
 8016004:	b002      	add	sp, #8
 8016006:	bd70      	pop	{r4, r5, r6, pc}
 8016008:	ab01      	add	r3, sp, #4
 801600a:	466a      	mov	r2, sp
 801600c:	f7ff ffc8 	bl	8015fa0 <__swhatbuf_r>
 8016010:	9900      	ldr	r1, [sp, #0]
 8016012:	4605      	mov	r5, r0
 8016014:	4630      	mov	r0, r6
 8016016:	f7fb f9d3 	bl	80113c0 <_malloc_r>
 801601a:	b948      	cbnz	r0, 8016030 <__smakebuf_r+0x44>
 801601c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8016020:	059a      	lsls	r2, r3, #22
 8016022:	d4ef      	bmi.n	8016004 <__smakebuf_r+0x18>
 8016024:	f023 0303 	bic.w	r3, r3, #3
 8016028:	f043 0302 	orr.w	r3, r3, #2
 801602c:	81a3      	strh	r3, [r4, #12]
 801602e:	e7e3      	b.n	8015ff8 <__smakebuf_r+0xc>
 8016030:	89a3      	ldrh	r3, [r4, #12]
 8016032:	6020      	str	r0, [r4, #0]
 8016034:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8016038:	81a3      	strh	r3, [r4, #12]
 801603a:	9b00      	ldr	r3, [sp, #0]
 801603c:	6163      	str	r3, [r4, #20]
 801603e:	9b01      	ldr	r3, [sp, #4]
 8016040:	6120      	str	r0, [r4, #16]
 8016042:	b15b      	cbz	r3, 801605c <__smakebuf_r+0x70>
 8016044:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8016048:	4630      	mov	r0, r6
 801604a:	f000 f81d 	bl	8016088 <_isatty_r>
 801604e:	b128      	cbz	r0, 801605c <__smakebuf_r+0x70>
 8016050:	89a3      	ldrh	r3, [r4, #12]
 8016052:	f023 0303 	bic.w	r3, r3, #3
 8016056:	f043 0301 	orr.w	r3, r3, #1
 801605a:	81a3      	strh	r3, [r4, #12]
 801605c:	89a3      	ldrh	r3, [r4, #12]
 801605e:	431d      	orrs	r5, r3
 8016060:	81a5      	strh	r5, [r4, #12]
 8016062:	e7cf      	b.n	8016004 <__smakebuf_r+0x18>

08016064 <_fstat_r>:
 8016064:	b538      	push	{r3, r4, r5, lr}
 8016066:	4d07      	ldr	r5, [pc, #28]	; (8016084 <_fstat_r+0x20>)
 8016068:	2300      	movs	r3, #0
 801606a:	4604      	mov	r4, r0
 801606c:	4608      	mov	r0, r1
 801606e:	4611      	mov	r1, r2
 8016070:	602b      	str	r3, [r5, #0]
 8016072:	f7f6 f848 	bl	800c106 <_fstat>
 8016076:	1c43      	adds	r3, r0, #1
 8016078:	d102      	bne.n	8016080 <_fstat_r+0x1c>
 801607a:	682b      	ldr	r3, [r5, #0]
 801607c:	b103      	cbz	r3, 8016080 <_fstat_r+0x1c>
 801607e:	6023      	str	r3, [r4, #0]
 8016080:	bd38      	pop	{r3, r4, r5, pc}
 8016082:	bf00      	nop
 8016084:	20003114 	.word	0x20003114

08016088 <_isatty_r>:
 8016088:	b538      	push	{r3, r4, r5, lr}
 801608a:	4d06      	ldr	r5, [pc, #24]	; (80160a4 <_isatty_r+0x1c>)
 801608c:	2300      	movs	r3, #0
 801608e:	4604      	mov	r4, r0
 8016090:	4608      	mov	r0, r1
 8016092:	602b      	str	r3, [r5, #0]
 8016094:	f7f6 f847 	bl	800c126 <_isatty>
 8016098:	1c43      	adds	r3, r0, #1
 801609a:	d102      	bne.n	80160a2 <_isatty_r+0x1a>
 801609c:	682b      	ldr	r3, [r5, #0]
 801609e:	b103      	cbz	r3, 80160a2 <_isatty_r+0x1a>
 80160a0:	6023      	str	r3, [r4, #0]
 80160a2:	bd38      	pop	{r3, r4, r5, pc}
 80160a4:	20003114 	.word	0x20003114

080160a8 <_init>:
 80160a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80160aa:	bf00      	nop
 80160ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80160ae:	bc08      	pop	{r3}
 80160b0:	469e      	mov	lr, r3
 80160b2:	4770      	bx	lr

080160b4 <_fini>:
 80160b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80160b6:	bf00      	nop
 80160b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80160ba:	bc08      	pop	{r3}
 80160bc:	469e      	mov	lr, r3
 80160be:	4770      	bx	lr
